{"version":3,"file":"main.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCA3E,MAAMI,EAAkB,CAC9BC,QAAS,CAAC,UAAW,8BACrBC,QAAS,CAAC,UAAW,8BACrBC,cAAe,CAAC,gBAAiB,oCACjCC,KAAM,CAAC,OAAQ,2BACfC,SAAU,CAAC,WAAY,+BACvBC,YAAa,CAAC,eAAgB,mCAC9BC,YAAa,CAAC,eAAgB,mCAC9BC,YAAa,CAAC,eAAgB,mCAC9BC,YAAa,CAAC,eAAgB,mCAC9BC,YAAa,CAAC,eAAgB,mCAC9BC,WAAY,CAAC,aAAc,iCAC3BC,SAAU,CAAC,WAAY,+BACvBC,cAAe,CAAC,gBAAiB,oCACjCC,UAAW,CAAC,YAAa,gCACzBC,UAAW,CAAC,YAAa,gCACzBC,UAAW,CAAC,YAAa,gCACzBC,SAAU,CAAC,WAAY,+BACvBC,MAAO,CAAC,QAAS,4BACjBC,WAAY,CAAC,aAAc,iCAC3BC,QAAS,CAAC,UAAW,8BACrBC,YAAa,CAAC,cAAe,kCAC7BC,QAAS,CAAC,UAAW,+BAGTC,EAAkB,CAC9B,YACA,mBACA,gBACA,WACA,oBCrBYC,EAAiBC,OAAQC,OAAMC,OAAMC,YAAWC,KAC5D,MAAOC,EAAUC,EAAgBC,SAAoBC,EAAkBP,EAAMC,GACzEE,SAA0BA,EAAmBC,GACjD,MAAMI,QAAcC,EAAmBT,EAAMC,EAAMI,EAAgBD,EAAUE,EAAYJ,GACzFQ,EAAmBF,EAAOJ,EAAUE,EAAU,EAElCC,EAAoBR,MAAOC,EAAMC,KAC7C,MAAMG,QAAiBO,SAASV,EAAKW,MAC/BP,QAAuBM,SAASX,EAAK,GAAGa,WAE9C,MAAO,CAACT,EAAUC,EADCA,EAAeS,MACU,EAEhCL,EAAqBV,MAAOC,EAAMC,EAAMI,EAAgBD,EAAUE,EAAYJ,KAC1F,MAAMa,QAAmBC,QAAQC,uBAAuBX,KAAe,EACjEY,QAAoBP,SAAST,EAASiB,gBAAiB,EAEvDC,SADoBC,EAAejB,IACNkB,OAAS,EACtCC,OAvBwBxB,OAAOC,EAAMC,EAAMI,KACjD,MAAMmB,EAAavB,EAAKwB,QAAQC,KAAO,EACjCC,EAAwC,QAArB1B,EAAK2B,QAAQC,KAChCC,EAAsB9B,EAAK,GAAG+B,eAAeC,QAAOpB,GAAQA,GAAQP,EAAeO,OAAMU,OAAS,EACxG,OAAOE,IAAeG,GAAoBG,EAAmB,EAmBjCG,CAAgBjC,EAAMC,EAAMI,GACxD,MAAO,CAACU,EAAYG,EAAaE,EAAgBG,EAAa,EAwBlDW,EAAwBnC,MAAOoC,EAASC,EAAiBC,EAAOC,EAAkBC,EAAaC,EAAcC,UAC5G,IAAKC,SAAUC,IAC3B,MAAMC,EAd0B,EAACD,EAASR,EAASU,EAAcC,EAAOC,EAAQN,IAC1EN,EAAQa,QAAO,CAACJ,EAASK,EAAQC,KACvC,MAAMC,EAAON,EAAaI,EAAQR,GAOlC,MAAO,IAAIG,EANQ,CAACK,GAAS,CAC5BG,MAAO,YAAYD,WAAcL,YAAgBC,4BAAiCE,IAClFI,SAAU,KACTV,EAAQ,CAACW,MAAO,GAAGL,KAAS,GAGE,GAC9B,CAAC,GAIaM,CAAmBZ,EAASR,EAASG,EAAkBC,EAAaC,EAAcC,GAClG,IAAIe,OAAO,CACVnB,MAAOA,EACPO,QAASA,GACPR,GAAiBqB,QAAO,EAAI,IAEpBpC,EAAiBtB,MAAOE,IAChBA,EAAKwB,SAAW,IACjBO,QAAO0B,IACzB,MAAMC,EAAaD,EAAOE,OAAOC,KAAKF,aAAc,EAC9CG,EAAmBJ,EAAOE,OAAOC,KAAKC,mBAAoB,EAChE,SAAKH,IAAcG,EACZ,KACF,GAiDMC,EAAsB,CAACC,EAAWC,EAAUC,EAAWC,EAAOC,EAAIC,IAEvEL,EAAUhC,QAAOsC,IACvB,MAAOC,EAAGC,GAAK,CAACJ,EAAKE,EAASG,EAAGJ,EAAKC,EAASI,GAK/C,OAJWC,KAAKC,KAAKD,KAAKE,IAAIN,EAAE,GAAKI,KAAKE,IAAIL,EAAE,IACZP,EACNK,EAASQ,SAAWZ,EACxBC,EAAQD,CACuBa,IAiD9CC,EAAmBjF,MAAOkF,EAAiBC,KACvD,MACOzD,SAAiBiB,QAAQyC,IAAIF,EAAgBG,KAAIC,GADnCtF,OAAOsF,EAAgBH,UAA6BlE,QAAQsE,SAASC,YAAY,gBAAiB,CAACC,UAAWH,EAAgB5D,QAAS,CAACyD,KACnFO,CAAaJ,EAAgBH,MACvG,OAAOzD,GAqDKf,EAAqBX,MAAOS,EAAOJ,EAAUE,KACzD,MAAOS,EAAYG,EAAaE,EAAgBG,GAAiBf,EACjE,GAAIO,EACH2E,EAAetF,EAAUW,QACnB,GAAKA,IAAcG,GAAgBE,EAGnC,GAAKL,GAAeG,IAAgBE,IAAkBG,EAGjDR,GAAeG,GAAgBE,GAAmBG,GAC7DnB,EAASuF,aAJmE,CAC5E,MAAMC,EAAiBtF,EAAWmB,QAAQoE,MAAKnC,GAAUA,EAAOoC,QAAU1F,EAASQ,OACnF8E,EAAetF,EAAUwF,EAC1B,KAN0D,CACzD,MAAMA,EAAiBtF,EAAWmB,QAAQoE,MAAKnC,GAAUA,EAAOoC,QAAU1F,EAASQ,OACnF8E,EAAetF,EAAUwF,EAC1B,CAKA,EAEYF,EAAiB3F,MAAOK,EAAUsD,KAC9C,MAAMqC,EAAiB,CAACpI,IAAK,uBAAwBqI,KAAMC,MAAMC,oBAAoBC,IAAK7C,MAAO,CAAClD,EAASQ,OACrGwF,EAAiB,IAAI1C,EAAO2C,QAASN,GAC3CrC,EAAO4C,OAAO,CAAC,QAAWF,GAAe,ECzLnC,MCsCDG,EAAoBxG,MAAOc,EAAW2F,EAAW1F,EAAO2F,KAC7D,MAAMC,EAAQ,CACbC,MAAO,CAAEC,KAAK,gBACd9F,MAAO,CAAE8F,KAAK,iBAETC,OF1ByB9G,OAAO+G,EAAepF,EAAMqF,EAAUlG,EAAW2F,EAAWC,UAuIzD1G,OAAOc,EAAW2F,KACpD,MAAM5E,QAAejB,SAASE,IACxB,SAACiE,GAAYkC,OAAOC,MAAMC,KAChCC,SAASC,WAAWC,KAAK,CACxBC,UAAS,EACTC,cAAc,EACd7F,KAAME,EAAOkB,MAAS,EAAE0D,EAAU1B,EAClC0C,IAAK,QACLC,UAAS,EACTrE,MAAO,aACPqB,EAAG7C,EAAO6C,EACVC,EAAG9C,EAAO8C,EACVgD,oBAAoB,IAErBV,OAAOW,OAAOC,UAAS,EApJjBC,CAAoBhH,EAAW2F,GACrC,MAAMsB,EAAoBtB,EAC1B,IAAIuB,EAAqB,EACzB,MAiBMlB,QAAiBM,SAASC,WAAWC,KAC1C,CACC3F,KEGsI,EFFtIqF,SEEyI,EFDzI5D,KAAM2D,EACN1D,MAAO,SAER,CACCiE,KAzBoBtH,MAAOqH,IAC5B,KAAOA,EAAWY,UAAU,OACrBb,SAASc,KAAK,KACpB,MAAMC,EAAM,IAAIC,IAAI1B,EAAY2B,OAAQhB,GAClCtC,EAAWkC,OAAOE,KAAKmB,iBAAiB,CAAC,CAAEH,QAAQ,CAAEI,YAAY,IAAQ,GAC3EP,IAAuBjD,IAC1BiD,EAAqBjD,EAEpBsC,EAAWjE,KADR2B,EAAWgD,EACI,uBAEAhB,EAEnBM,EAAWmB,OACXnB,EAAWhE,MAAQ,GAAG0B,OAExB,KAaD,OAAI+B,EAAS2B,WAAaT,EAAqBD,OAC9C,EAEOjB,CACR,EEVuB4B,CAAiB,+FAAgG,EAAG,EAAG5H,EAAW2F,EAAWC,GAC9JiC,QAAuBvB,SAASwB,QAAQ,CAAClE,EAAGoC,EAASpC,EAAGC,EAAGmC,EAASnC,GAAIgC,EAAMC,MAAMC,UAtEhE7G,OAAO2G,EAAOkC,EAAmBC,KAC3D,MAAMC,OAhCiB/I,OAAO6I,EAAmBC,KAC1C,CACNlC,MAAO,CACN,YAAeV,MAAM8C,oBAAoBC,MACzC,MAAS,EACT,MAASH,GAEV/H,MAAO,CACN,2BAA4B8H,KAwBRK,CAAgBL,EAAmBC,GACzD,OAAOK,YAAYJ,EAASpC,EAAK,EAoEqEyC,CAAmBzC,EAAO5F,EAAMsI,OAAOC,WAAWC,OAAQ7C,EAAY8C,SAASC,YApFzJzJ,OAAOc,IAC5B,CACN4I,IAAK1J,MAAOuE,EAASgC,EAAOK,KAgBF5G,OAAOuE,EAAUgC,EAAQK,EAAO+C,KAC3D,MAAMC,EAAQ,OACRlD,QAAoB9F,SAAS+I,IACnC,IAAIE,UACFlG,SACCmG,KAAK,+CAA+CF,KACpDG,MAAM,KACNC,QAAQ,GACRC,WAAWvD,GACXwD,cACAC,mBAAmB,MACpBxG,SACCmG,KAAK,8CAA8CF,KACnDG,MAAM,KACNE,WAAWvD,GACXwD,cACAE,OAAO,KACPJ,QAAQ,GACRG,mBAAmB,MACpBxG,SACCmG,KAAK,+CAA+CF,KACpDG,MAAM,KACNC,QAAQ,GACRC,WAAWvD,GACXwD,cACDG,MAAK,EAxCLC,CAAoB/F,EAAUgC,EAAQK,EAAO9F,SACvCsG,SAASc,KAAK,KAAI,EAEzBqC,KAAMvK,MAAOuE,EAAUqC,KAqDO5G,OAAOuE,EAAUqC,MAEhD,IAAIiD,UACFW,YACCC,GAAG7D,GACHwD,OAAO,KACRzG,SACCmG,KANmB,wBAOnBG,WAAW,CAACvF,EAAGH,EAASG,EAAGC,EAAGJ,EAASI,IACvCoF,MAAM,KACNC,QAAQ,GACTK,MAAK,EA/DLK,CAAwBnG,EAASqC,EAAK,IA6E2J+D,CAAqB7J,QAzE9Ld,OAAOe,IAC1B,CAAC6J,iBAAkB7J,IAwEgN8J,CAAmB9J,IAC7P,OAAO4H,EAAe,EAAC,ECrElB7F,EAAgBgI,IACrB,OAAQA,GACP,IAAK,iBACJ,MAAO,+CAER,IAAK,kBACJ,MAAO,4CAET,EAEKC,EAAuB/K,MAAOoB,EAAc4J,EAAgB1F,EAAgB2F,EAAUC,KAC3F,MAAOxG,EAAGC,SAAWwG,EAAmB/J,EAAc4J,EAAgBE,GAChEE,EAAc,CAAC,EAAK1G,EAAG,EAAKC,EAAG,OAAU,CAAC,OAAU,GAAI,IAAO,IAAK,YAAe,MAClF0G,SAAwB9F,GAAOC,YAAY,wBAAyB4F,IACpEzH,SAAgBsB,EAAiB,CAACK,QA9CdtF,OAAOsL,EAAYC,KACvC,CACN1E,KAAM,WACNzD,KAAM,4CACN2C,OAAQuF,EACRhF,QAAS,CAAC,CAAC1I,IAAK,gBAAiBqI,KAAM,EAAG1C,MAAO,sDACjD,kCAAmCgI,EACnC,sBAAsB,EACtB,4BAA6B,CAAC,YAAa,YAC3C,sBAAuB,QACvB,4BAA4B,EAC5BC,UAAU,IAmCqDC,CAAoBR,EAAUI,EAAeK,WC9CvE1L,OAAOoE,EAAOM,EAAGC,EAAGgH,EAAuBC,EAAeC,EAA4BC,KAC5H,MAAMC,EAA4BC,MAAMvB,GAAG,2BAA4BwB,IACtE,MAAM1H,EAAW0H,EAAazC,SACxB0C,EAAa3H,EAASV,OAAOsI,OAAOpG,SAAU,EAC9CqG,EAAqB7H,EAASV,OAAOsI,OAAOE,YAAc,EAChE,IAAKH,GAAcE,ED0CkC,EC1CE,OAAO,EAC9D,MAAMrG,EAASuG,aAAa/H,EAASV,MAAMsI,MAAMpG,QACjD,GAAI4F,EAAsBY,SAASxG,EAAOc,OAAkC,OAAzB8E,EAAgC,CAClF,MAAMa,EAAiB,oBAAsBjI,EAASkI,GAChDC,EAAwBzF,OAAOE,KAAKwF,gBAAgBH,GAAgBtB,UAE1E,KADyBY,EAAsBc,aAAaF,GAAuB/K,KAAO,GACnE,OAAO,EAE9BkL,YAAW,KACVtH,GAAOC,YAAY,4BAA6BjB,EAAS1D,KAAI,GAC3D,IACJ,UAIwCb,OAAOgL,EAAgBe,KAChE,MAAMe,EAA+Bd,MAAMvB,GAAG,sBAAsB,CAAC9G,EAAQoJ,KACxEpJ,EAAO9C,MAAQmK,EAAenK,OACjCmL,MAAMgB,IAAI,yBAA0BjB,GACpCC,MAAMgB,IAAI,qBAAsBF,GACjC,GACA,EARKG,CAA2BpB,EAA4BE,EAAyB,ED6BhFmB,CAAwB,EAAIxI,EAAGC,EAAG,CAAC,YAAa,EAAGhB,EAAQuH,EAAS,EAErE,EAAsBlL,MAAO0E,EAAGC,EAAGoF,EAAOnD,KAC1CA,GASJ,IAAIiD,UACFlG,SACCmG,KAAK,sCACLC,MAAMA,GACNC,QAAQ,GACRmD,SAASvG,GACVyD,QAdF,IAAIR,UACFlG,SACCmG,KAAK,sCACLC,MAAMA,GACNC,QAAQ,GACRC,WAAW,CAAC,EAAKvF,EAAG,EAAKC,IAC1B0F,MASH,EA4BKc,EAAqBnL,MAAOoB,EAAc4J,EAAgBoC,KAC/D,MAAM7I,QAAiB3D,SAASQ,GAIhC,aAHM,EAAoBmD,EAASG,EAAGH,EAASI,EAAG,GAAG,QHmJpB3E,OAAO0E,EAAGC,EAAGkC,EAAMiF,KACpD,MACMuB,EADwBpG,OAAOC,MAAMjD,UAAUhC,QAAOsC,GAAYA,EAASV,MAAMsI,QACtClK,QAAOsC,IACvD,MAAM+I,EAAahB,aAAa/H,EAASV,MAAMsI,MAAMpG,QAAQc,KAC7D,OAAKA,EAGGtC,EAASV,MAAMsI,MAAME,YAAciB,GAAczG,EAFjDtC,EAASV,MAAMsI,MAAME,UAG7B,IAGKkB,EApIgC,EAACC,EAAmB1B,IACnD0B,EAAkBvL,QAAOsC,IAC/B,MAAMiI,EAAiB,oBAAsBjI,EAASkI,GAChDW,EAAoBnG,OAAOE,KAAKwF,gBAAgBH,IAAiBtB,WAAa,IAAIuC,IAAI,MAC5F,OAAO3B,EAAsBc,aAAaQ,GAAmBzL,KAAO,KAgIxC+L,CADJ1J,EAAoBqJ,EAAoBpG,OAAOC,MAAMC,KAAKxF,KAAMsF,OAAOC,MAAMC,KAAKpC,SAAU,GAAIL,EAAGC,GACrDmH,GACvEyB,EAAqBlI,KAAId,IAAagB,GAAOC,YAAY,4BAA6BjB,EAAS1D,KAAI,GAAE,EG9J/F8M,CAAmBpJ,EAASG,EAAGH,EAASI,EAAG,WAAYyI,GAC7DpC,EAAepF,SACR,CAACrB,EAASG,EAAGH,EAASI,EAAC,EE7EzB,EAAgBmG,IACrB,OAAQA,GACP,IAAK,cACJ,MAAO,kDAER,IAAK,kBACJ,MAAO,iDAET,EAuDK,EAAgB9K,MAAO4N,EAAYC,EAAeC,KACvD,MAAMhM,QAAaK,EAAsB,CAAC,cAAe,mBAAoB,CAACY,MAAO,IAAKC,OAAQ,KAAM,oCAAqC,EAAc,GAAI,IACzJ+K,QAAoBnN,SAASgN,GACnC,GAAkB,mBAAd9L,EAAKyB,MAzFmBvD,OAAO+N,EAAaF,EAAeC,KAC/D,MAAMjM,EAASmM,KAAKC,KAAKC,QAAQC,SAC1BC,EAAwBC,QA8ERrO,OAAO4G,EAAOkH,IAI9B,CAFwBlH,EAAM4C,SAASzI,MAAMW,QAAQO,QAAO0B,GAAUA,EAAOE,MAAM,YAAYyK,SAASC,UAAY,GAAK5K,EAAOE,MAAM,YAAYyK,SAASC,WAAaT,IAClJlH,EAAM4C,SAASzI,MAAMW,QAAQO,QAAO0B,GAAUA,EAAOE,MAAM,YAAYyK,SAASC,UAAYT,KAjF5DU,CAAgB3M,EAAQiM,GAC/EW,OAQoBzO,OAAO+N,EAAaF,EAAeO,EAAwBC,KAC5DN,EAAYhN,MAAMsI,OAAOqF,UAAUb,GAAec,IAC3E,IACIC,EADAC,EAAM,GAENC,EAAkB,EACtB,IAAK,IAAI3L,EAAI,EAAGA,EAAIkL,EAAqB9M,OAAQ4B,IAChD2L,EAAkBT,EAAqBlL,GAAGU,MAAM,YAAYyK,SAASS,UACrEH,QAAoBb,EAAYhN,MAAMiO,gBAAgBnB,GAClDe,EAAYK,MAAQH,EAAkB,IAAID,EAAIK,KAAKb,EAAqBlL,IAE7E,OAAOiL,EAAuBe,OAAON,GAAKxJ,KAAI1B,GAAUA,EAAO8I,IAAE,EAlBhC2C,CAAmBrB,EAAaF,EAAeO,EAAwBC,GACxGI,EAAmBpJ,IAAIE,GAAOC,YAAY,wBAAyB3D,EAAOd,MAAO0N,EAAmBtL,IAAG,EAsFtGkM,CAAqBtB,EAAaF,EAAeC,OAC3C,IAAkB,eAAdhM,EAAKyB,MAIf,OAAO,EAJgC,CACvC,MAAM+L,OA3DoBtP,OAAO+N,IAClC,MAAMP,EAAoBvG,OAAOC,MAAMjD,UAAUhC,QAAOsC,GAAYA,EAASV,MAAMsI,MAAME,WAAa,IAChGkD,EAA2BvL,EAAoBwJ,EAAmBvG,OAAOC,MAAMC,KAAKxF,KAAMsF,OAAOC,MAAMC,KAAKpC,SAAU,IAAKgJ,EAAYrJ,EAAGqJ,EAAYpJ,GAC5J,IAAI6K,EACAC,EAAc,GAClB,IAAK,IAAItM,EAAI,EAAGA,EAAIoM,EAAyBhO,OAAQ4B,IACpDqM,QAAmB5O,SAAS2O,EAAyBpM,GAAGU,MAAMsI,MAAMpG,QACpE0J,EAAYP,KAAKM,GAElB,YAE4BxP,OAAO0P,EAAOH,KAC1C,MAAMI,EAAkBJ,EAAyBK,MAAK,CAACpL,EAAGC,KACzD,MAAMoL,EAAQvD,aAAa9H,EAAEX,MAAMsI,MAAMpG,QACnC+J,EAAQxD,aAAa7H,EAAEZ,MAAMsI,MAAMpG,QACzC,OAAO8J,EAAMhJ,KAAKkJ,cAAcD,EAAMjJ,KAAI,IAErCmJ,EAAqBN,EAAMrK,KAAI,CAACnF,EAAMiD,KAC3C,MAAM8M,EAAgBhJ,OAAOC,MAAMU,QAAQ9B,MAAKc,GAASA,EAAM7F,MAAMF,MAAQX,EAAKgQ,OAAOrP,QAAOgG,MAAQ,UAExG,MAAO,CAAC/E,KAAM,QAASuB,MADLnD,EAAK2G,KAAO,SAAWoJ,EACF,IACrCL,MAAK,CAACpL,EAAGC,IAAMD,EAAEnB,MAAM0M,cAActL,EAAEpB,SAa1C,OAAOsM,SAZavI,SAAS+I,KAC5B,CACCC,OAAQJ,GACP,CACD1N,MAAO,4BACPoB,OAAQ,IAAIzD,KAAWoQ,QAAQC,OAAOrQ,GAAOsQ,GAAGC,cAAcC,KAAK,UAAS,EAC5EC,QAAS,CACR3N,MAAO,QACPC,OAAQ,WAIoBoN,OAAOO,SAAQ,GAAK,EAzBtCC,CAAqBnB,EAAaF,EAAwB,EAkDvCsB,CAAoB9C,GAtF9B/N,OAAO+N,EAAaF,EAAeC,EAAawB,MAE5CxB,EADPwB,EAAiBzL,MAAMsI,MAAME,gBA8DpBrM,OAAO+N,EAAaF,EAAeR,KAC/D,IACIuB,EADAC,EAAM,GAENiC,EAAoB,EACxB,IAAK,IAAI3N,EAAI,EAAGA,EAAIkK,EAAmB9L,OAAQ4B,IAC9C2N,EAAoBzD,EAAmBlK,GAAGU,MAAMsI,MAAME,WACtDuC,QAAoBb,EAAYhN,MAAMiO,gBAAgBnB,GAClDe,EAAYK,MAAQ5B,EAAmBlK,GAAGU,MAAMsI,MAAME,WAAa,IAAIwC,EAAIK,KAAK7B,EAAmBlK,IAExG,OAAO0L,GAtEoDkC,CAAqBhD,EAAaF,EAAe,CAACyB,IAAqB,CAACA,IACjHjK,KAAId,GAAYgB,GAAOC,YAAY,4BAA6BjB,EAAS1D,OAAK,EAoF/FmQ,CAAejD,EAAaF,EAAeC,EAAawB,EACzD,CAEA,GCjGK2B,EAAoBjR,MAAOC,IAChC,MAAMiR,QAAuBC,EAAkBlR,EAAK,GAAGc,MAAM6F,OACvDwK,QAAuBC,EAAkBpR,EAAK,GAAGqR,cAAe,EACtE,OAAKF,EACWF,EAAetE,aAAawE,GAC7BzP,KAAOuP,EAAevP,KAFT,CAESA,EAEhCwP,EAAoBnR,MAAOuR,IAChC,MAAMrN,EAAW+C,OAAOC,MAAMC,KAAKxF,KACnC,IAAI6P,EAAM,IAAI/D,IACVgE,EAAW,GACf,IAAK,IAAItO,EAAI,EAAGA,EAAIoO,EAASvO,OAAQG,IACpC,IAAK,IAAIuO,EAAI,EAAGA,EAAIH,EAASxO,MAAO2O,IACnCD,GAAYF,EAAS7M,EAAIR,EAASf,GAAGwO,WAAa,KAAOJ,EAAS5M,EAAIT,EAASwN,GAAGC,WAClFH,EAAII,IAAIH,GAGV,OAAOD,GAKFH,EAAoBrR,MAAOsR,IAChC,MAAMO,EAAgB,oBAAsBP,EAC5C,OAAOrK,OAAOE,KAAKwF,gBAAgBkF,GAAe3G,WA2B7C4G,EAAyB9R,MAAO+R,EAASC,EAAWC,EAAkBC,EAAYC,EAAcC,EAAcC,KAClHL,EAAUzL,OAAO,CAAC,oBAAqB0L,EAAmBC,IACtDG,EAAe,GAAKD,UACjBhL,SAASc,KAAK,KACpBoK,EAAaH,SACP/K,SAASc,KAAK,KACyB,OAAzCiK,EAAapR,MAAMsI,OAAOkJ,OAAO5Q,MAAiBwQ,EAAapP,OAAS,GAAKoP,EAAapP,OAAS,GACtGoP,EAAapR,MAAMwF,OAAO,CAAC,qBAAsBzI,OAAO0U,KAAKC,OAAOC,MAAMC,YAAYN,EAAe,KAEtGF,EAAa5L,OAAO,CAAC,MAAS4L,EAAapP,MAAQ,EAAG,OAAUoP,EAAapP,MAAQ,KAEtFoP,EAAa5L,OAAO,CAAC,cAAewL,GAAQ,EAExCa,EAAuB5S,MAAOe,EAAO8R,EAAaV,EAAcH,EAAWC,KAChF,MAAMa,GAAwB/R,EAAMsI,OAAOC,WAAWyJ,GAAGxP,MAAQsP,GAAe9R,EAAMsI,OAAOC,WAAWyJ,GAAGC,IAAO,IAC5GX,EAAevU,OAAO0U,KAAKC,OAAOC,MAAMC,YAAYhC,QAAQwB,EAAapR,MAAMsI,OAAOkJ,OAAO5Q,MACnG,IAAIyQ,GAAe,EACf,IAAMU,GAAuBA,EAAsB,GACtDhB,EAAuB/Q,EAAM8C,MAAM,YAAYoP,aAAaC,KAAMlB,EAAWC,EAAkB,IAAKE,EAAcC,EAAcC,GACtH,IAAMS,GAAuBA,EAAsB,IAC7DV,EAAeC,EAAe,EAC9BP,EAAuB/Q,EAAM8C,MAAM,YAAYoP,aAAaE,KAAMnB,EAAWC,EAAkB,GAAKE,EAAcC,EAAcC,IACtH,IAAMS,GAAuBA,GAAuB,IAC9DV,EAAeC,EAAe,EAC9BP,EAAuB/Q,EAAM8C,MAAM,YAAYoP,aAAaG,KAAMpB,EAAWC,EAAkB,IAAKE,EAAcC,EAAcC,GACjI,EAEKC,EAAetS,MAAOmS,KAC3B,IAAItI,UACFlG,SACCmG,KAAKqI,EAAapR,MAAM8C,MAAM,YAAYoP,aAAaI,eACvDpJ,WAAWkI,GACZ9H,MAAK,ECpFKiJ,EAAqB,CACjCC,YAAc,wEACdC,aAAe,4DACfC,gBAAiB,kCACjBC,WAAc,gCACdC,cAAgB,qBAChBC,UAAc,WACdC,oBAAoB,CAAC,yBAA0B,iBAAkB,sBAAuB,yBAA0B,MAAO,SACzHC,YAAc,CAAC,aAAc,aAAc,gBAC3CC,WAAc,4BACdC,YAAc,uCACdC,YAAc,CAAC,MAAO,MAAO,QAAS,OAAQ,QAC9CC,YAAc,4CAGFC,EACU,CACrBC,aAAgB,CAAC,kBAAmB,cAAe,kBACnDC,gBAAkB,CAAC,cAAe,eAAgB,sCAClDC,QAAY,CAAC,cAAe,eAAgB,aAC5CC,SAAa,CAAC,oBAAqB,gCAAiC,0BACpEC,iBAAmB,CAAC,WAAY,cAAe,aAAc,sBAC7DC,QAAY,CAAC,MAAO,eAAgB,WAAY,iCAChDC,mBAAoB,CAAC,WAAY,cAAe,aAChDC,WAAc,CAAC,YAAa,kBAAmB,eAKpCC,EAAyB,CACrCC,WAAc,CAAC,eAAgB,eAAgB,gBAAiB,aAAc,cAC9EC,iBAAkB,qCAClBf,WAAc,0BACdgB,aAAgB,CAAC,aAAc,cAC/BC,WAAc,CAAC,eAAgB,eAAgB,kBCvB1CC,EAAiBjV,MAAOkV,EAAOC,EAAY5U,EAAY6U,KAC5D,MAAMC,QAAyB,EAAoBH,GAC7CI,QAA0B,EAAqBD,EAAkBH,EAAMK,YACvEC,QAAiBC,EAAiBP,EAAOC,EAAYG,EAAmBF,GAC9E,aAAa7U,EAAWmV,wBAAwB,OAAQ,CAACF,GAAS,EAsF7D,EAAsBxV,MAAOE,GACjBA,GAAM2D,OAEP3D,EAAK2D,MAAM,aAET3D,EAAK2D,MAAM,YAAY8R,eAElCzV,EAAK2D,MAAM,YAAY8R,eALR,GAOjBC,EAAoB,CAAC1S,EAAQ2S,IACpBA,EAAO/P,MAAKoP,GAASA,EAAMrO,KAAKiP,eAAiB5S,EAAO4S,gBACzDC,IAWRN,EAAmBzV,MAAOkV,EAAOC,EAAYG,EAAmBF,KACrE,MAAOY,EAAOC,QAxGWjW,OAAOkV,EAAOC,IAChB,gBAAnBA,EAAWrT,MAAwC,eAAdoT,EAAMrO,KACvC,CAAC,EAAG,CAAC,aAAc,YACG,mBAAnBsO,EAAWrT,MAA2C,eAAdoT,EAAMrO,KACjD,CAAC,EAAG,CAAC,aAAc,YAEnB,CAACqO,EAAM7L,OAAO2M,MAAOd,EAAM7L,OAAO4M,OAAOC,OAkGnBC,CAAkBjB,EAAOC,GACvD,OAAOhM,YAAYiN,UAAUlB,EAAMmB,UAAS,IAAS,CACpD,2DAA4DlB,EAAWtU,KACvE,iDAAkDqU,EAAMrO,KACxD,iDAAkDqO,EAAMrU,KACxD,2CAA4C,QAC5C,iDAAkDuU,EAClD,gCAAiCE,EACjC,sBAAuBW,EACvB,eAAgBD,EAChB,0BAA2B,UACzB,CAACM,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,GAAK,EAEnE,EAAuBzW,MAAO0W,EAAYnB,KAC/C,MAAMhP,EAASmQ,EAAWnV,OAAS,EAC/BmV,EAAa,kFACb,iFACJ,MAAkB,YAAdnB,EACIhP,EAAS,oFAEVA,GAmBFnG,EAAqBJ,MAAOK,IACjC,MAAM8U,QAAmBvU,SAASP,EAASwD,MAAM8S,SAASxC,qBAAqByC,sBACzEC,EAAQxW,EAASwD,MAAM8S,SAASxC,qBAAqB2C,WAC3DC,EAAsB5B,EAAY0B,EAAK,EAOlCE,EAAwB/W,MAAOmV,EAAY0B,KAChD,MAAM9N,EAAUoM,EAAWtR,MAAM8S,SAASxC,qBAAqB0B,OAAOxQ,KAAI,CAAC6P,EAAO/R,IAC7EA,GAAK0T,EACD,CAAChQ,KAAMqO,EAAMrO,KAAMmQ,WAAW,GAE9B9B,UAGiBC,EAAW5O,OAAO,CAC3C,6CAA8CwC,GAC9C,EAEI,EAA0B/I,MAAOe,EAAOb,KAC7C,MAAMwB,OA7JsB1B,OAAOe,EAAOb,KAC1C,MAAM+W,EAAkB/W,EAAKmJ,OAAO6N,WAAWC,eAAiBjX,EAAK2D,MAAMuT,eAAeD,cACpFE,EAAgD,YAA/BnX,EAAKmJ,OAAOkM,WAAWzT,KAC9C,OAAImV,IAAoBI,EAChB,OAAOpW,QAAQC,uBAAuBH,SA2DxBf,OAAOE,IACTA,EAAKwB,SAAW,IACjBO,QAAO0B,IACzB,MAAMC,EAAaD,EAAOE,OAAOC,KAAKF,aAAc,EAC9CG,EAAmBJ,EAAOE,OAAOC,KAAKC,mBAAoB,EAChE,SAAKH,IAAcG,EACZ,KACF,GAhEO,CAAe7D,IAAS,EAAC,EAuJhB,CAAqBa,EAAOb,GAC9CwB,EAAQH,OAAS,GAAGG,EAAQ2D,KAAI1B,GAnBd3D,OAAOK,EAAUsD,KACvC,MAAMqC,EAAiB,CAACpI,IAAK,uBAAwBqI,KAAMC,MAAMC,oBAAoBC,IAAK7C,MAAO,CAAClD,EAASQ,OACrGwF,EAAiB,IAAI1C,EAAO2C,QAASN,GAC3CrC,EAAO4C,OAAO,CAAC,QAAWF,GAAe,EAgBK,CAAenG,EAAMyD,IAAO,EC1KrE2T,EAAmB,CAACpU,EAAQxB,IACZA,EAAQoE,MAAKnC,GAAUA,EAAOkD,MAAQ3D,IACvCE,KCMf,EAAiBpD,MAAOuX,EAAWhX,EAAYiX,KACpD,MAAMC,QAAmB7W,SAAS2W,EAAU1W,MACtCwU,QAAyB,EAAoBoC,GAC7CnC,QAA0B,GAAqBD,EAAkBkC,EAAUhC,YAC3EC,QAAiBkC,GAAYF,EAAUC,EAAYF,EAAWjC,GACpE,aAAa/U,EAAWmV,wBAAwB,OAAQ,CAACF,GAAS,EAsB7DmC,EAAqB3X,MAAO4X,EAAsB1X,EAAMK,KAC7D,MAAMsX,OAfkB7X,OAAO4X,IAC/B,MAAME,EAAcF,EAAqBvS,KAAI0S,GAAaA,EAAUhS,SAAQiS,WAC5E,aAAa7V,EAAsB2V,EAAa,CAAC/U,MAAO,IAAKC,OAAQ,KAAM,EAAE0Q,WAAYuE,EAAkB,GAAI,GAAIL,EAAoB,EAa9GM,CAAiBN,GACpCO,OAZmBnY,OAAO6X,EAAYtX,EAAYqX,EAAsB1X,KAC9E,MAAMkY,QAAqBC,EAAgBR,EAAYtX,EAAYqX,EAAsB1X,GACnFiY,QAAoBhW,EAAsBiW,EAAc,CAACrV,MAAO,IAAKC,OAAQ,KAAM,EAAEgR,YAAasE,EAAmB,GAAI,IAE/H,MAAO,CAAC/U,MAAO,EAAE0Q,YAAYtD,QAAQwH,EAAY5U,OAAS,EAAC,EAQjCgV,CAAkBV,EAAYtX,EAAYqX,EAAsB1X,GACpFsY,OAPmBxY,OAAO6X,EAAYD,EAAsBO,KAClE,MAAOM,EAAcC,SAAoBC,EAAgBd,EAAYD,EAAsBO,GAC3F,aAAaS,EAAeH,EAAc,EAAEvE,YAAa,EAAmBwE,EAAU,EAK5DG,CAAkBhB,EAAYD,EAAsBO,EAAY5U,OAC1F,MAAO,CAACsU,EAAWtU,MAAO4U,EAAY5U,MAAOiV,EAAYjV,MAAK,EAmBzD0U,EAAmB,CAAC/U,EAAQR,IACnBA,EAASoD,MAAK5F,GAAQA,EAAK6F,QAAU7C,IACtCE,KAoER0V,EAAoB9Y,MAAO+Y,GACzBA,EAAO1T,KAAItE,IAEjB,MACMiY,EADiBjY,EAAM2O,MAAMzN,QAAO/B,GAAqB,SAAbA,EAAK4B,MAAmB5B,EAAKmJ,OAAO2M,MAAQ,GAAK9V,EAAKmJ,OAAO2M,OAAS,IACrF/S,QAAO,CAAC4S,EAAQX,KAClD,MAAM+D,EA9BsB,EAAClY,EAAOb,KACtC,MAAMgZ,EAAoBC,EAAqBpY,EAAMsI,OAAOwM,QACtD5P,EAAO/F,EAAKmJ,OAAO+P,YAAYnT,KACrC,IAAIgT,EAAsB,GACtB1B,EAAY,CAAC,EACjB,IAAK,IAAIpU,EAAIjD,EAAKmJ,OAAO2M,MAAO7S,GAAK,EAAGA,IAC3B,UAAR8C,GAA4B,UAARA,EACnB9C,GAAKjD,EAAKmJ,OAAO2M,QACpBuB,EAAY8B,EAAatY,EAAOb,EAAMA,EAAKmJ,OAAO2M,OAClDiD,EAAoB/J,KAAKqI,IAER,QAARtR,EACN9C,GAAKpC,EAAMsI,OAAOwM,OAAOyD,KAAKtD,QACjCuB,EAAY8B,EAAatY,EAAOb,EAAMa,EAAMsI,OAAOwM,OAAOyD,KAAKtD,OAC/DiD,EAAoB/J,KAAKqI,IAGtBpU,GAAK+V,IACR3B,EAAY8B,EAAatY,EAAOb,EAAMiD,GACtC8V,EAAoB/J,KAAKqI,IAI5B,OAAO0B,GAOuBM,CAAuBxY,EAAOmU,GAC1D,MAAO,IAAIW,KAAWoD,EAAmB,GACvC,IACH,MAAO,CAAClT,OAAQhF,EAAMyY,eAAe3S,KAAMzD,KAAMrC,EAAMyY,eAAezH,QAAQ0H,IAAK5D,OAAQmD,EAAW,IAGlGG,EAAwBtD,IAC7B,IACIxS,EADAwL,EAAM,GAEV,IAAK,IAAI1L,EAAI,EAAGA,GAAK,EAAGA,IACvBE,EAAQ,QAAUF,EACd0S,EAAOxS,GAAO2P,IAAM,GAAGnE,EAAIK,KAAK/L,GAErC,OAAOyB,KAAKoO,OAAOnE,EAAG,EAEjB,EAAoB/D,IACzB,OAAQA,GACP,KAAK,EAAEgJ,YAAY,GAClB,MAAO,wEAER,KAAK,EAAEA,YAAY,GAClB,MAAO,yEAER,KAAK,EAAEA,YAAY,GAClB,MAAO,yEAET,EAEKuE,EAAkBrY,MAAO6X,EAAYtX,EAAYqX,EAAsB1X,KAC5E,MAAMwZ,EAAiB,EAAIxZ,EAAK2D,OAAO8S,UAAUrD,oBAAoBqG,WAAa,EAE5EC,EADYhC,EAAqB9R,MAAKiS,GAAaA,EAAUhS,QAAU8R,EAAWtU,QACvDsS,OAAOxQ,KAAI6P,GAASA,EAAMc,QAAO/T,QAAO+T,GAASA,GAAS0D,IACrFG,EAAc,IAAIpM,IAAImM,GAC5B,OAAOE,MAAMC,KAAKF,GAAa7B,WAAW3S,KAAI2Q,GAAS,EAAE/B,YAAY+B,EAAQ,IAAE,EAE1EsC,EAAqBxN,IAC1B,OAAQA,GACP,KAAK,EAAEmJ,YAAY,GAClB,MAAO,yDAER,KAAK,EAAEA,YAAY,GAClB,MAAO,yDAER,KAAK,EAAEA,YAAY,GAClB,MAAO,oDAER,KAAK,EAAEA,YAAY,GAClB,MAAO,kDAER,KAAK,EAAEA,YAAY,GAClB,MAAO,uDAET,EAEK+F,EAAgBha,SACdgO,KAAKiM,MAAMhY,QAAOgM,GAAQA,EAAK8J,YAAW9V,QAAOgM,GAChDhH,OAAOC,MAAMU,OAAO9B,MAAKc,GAASA,EAAM7F,MAAMF,MAAQoN,EAAK8J,UAAUlX,SAC1EwE,KAAI4I,GAAQA,EAAK8J,YAEfmC,EAAkBla,MAAME,EAAM8V,KACrB9V,EAAK2D,OAAO8S,UAAUrD,oBAAoBqG,WAAa,GACtD3D,EAEV,EAAiBhW,MAAOE,IACTA,EAAKwB,SAAW,IACjBO,QAAO0B,IACzB,MAAMC,EAAaD,EAAOE,OAAOC,KAAKF,aAAc,EAC9CG,EAAmBJ,EAAOE,OAAOC,KAAKC,mBAAoB,EAChE,SAAKH,IAAcG,EACZ,KACF,GAED,EAAsB/D,MAAOE,GACjBA,GAAM2D,OAEP3D,EAAK2D,MAAM,aAET3D,EAAK2D,MAAM,YAAY8R,eAElCzV,EAAK2D,MAAM,YAAY8R,eALR,GAOjBiD,EAAiB5Y,MAAOyY,EAAcvE,EAAa0B,EAAmB8C,KAC3E,MAAMyB,EAAgB1B,EAAaT,WAC7BoC,EAAkBD,EAAc9U,KAAInC,IAIlC,CAACpB,KAAM,QAASuB,MADT,uBAFDqV,EAAW5S,MAAKoP,GAASA,EAAMrO,MAAQ3D,IAClCE,kDACqEF,QAexF,MAAO,CAACK,MAAO4W,SAZK/S,SAAS+I,KAC5B,CACCC,OAAQgK,GACP,CACD9X,MAAO4R,EACPxQ,OAAQ,IAAIzD,KAAJ,EACRyQ,QAAS,CACR3N,MAAO,OACPC,OAAQ,WAI0BoN,OAAOO,SAAQ,IAAM,EAErDgI,EAAkB3Y,MAAO6X,EAAYD,EAAsByC,KAChE,MACMxE,EADY+B,EAAqB9R,MAAKiS,GAAaA,EAAUhS,QAAU8R,EAAWtU,QAC/DsS,OAAO5T,QAAOiT,GAASA,EAAMc,OAASqE,IAAmB,EAAExG,oBAAoBtH,SAAS2I,EAAMrO,QAGvH,MAAO,CAFOgP,EAAOxQ,KAAI6P,GAASA,EAAMrO,OAC1BgP,EAAOxQ,KAAI6P,IAAkB,CAACrO,KAAMqO,EAAMrO,KAAMzD,KAAM8R,EAAM9R,SACtD,EAEfiW,EAAe,CAACtY,EAAOb,EAAMiD,KAClC,MAAM0D,EAAO3G,EAAK2G,KACZmP,EAAQ7S,EACRmX,EAAKvZ,EAAMsI,OAAOC,WAAWiR,QAC7BC,EAAUzZ,EAAMsI,OAAOC,WAAWmR,aAClCC,EAzMgB,EAAC3Z,EAAOb,EAAMsa,KACpC,MAAMG,EAA2C,QAA1Bza,EAAKmJ,OAAOuR,WAC7BC,EAA0C,QAA1B3a,EAAKmJ,OAAOuR,WAClC,OAAKD,GAAmBE,EAEbF,EACHG,SAAS/Z,EAAMsI,OAAOqF,UAAU8L,GAAS7L,KAAOmM,SAAS/Z,EAAMsI,OAAO0R,QAAQC,KAAKC,QAChFJ,EACHC,SAAS/Z,EAAMsI,OAAOqF,UAAU8L,GAAS7L,KAAOmM,SAAS/Z,EAAMsI,OAAO0R,QAAQG,KAAKD,aADpF,EAHC,CAKR,EAgMoBE,CAAepa,EAAOb,EAAMsa,GAMhD,MAAO,CAAC3T,OAAMmP,QAAOsE,KAAIE,UAASE,cAAaU,KALlCra,EAAMsI,OAAOC,WAAW8R,KAKgBhY,KAJxClD,EAAK6V,IAIyClV,KAH9CX,EAAKW,KAG+C0U,WAF9CrV,EAAKmJ,OAAOkM,WAAWzT,KAEmCwJ,WAD1DvK,EAAMF,KAC8D,EAElF,EAAoB,CAACqC,EAAQR,IACpBA,EAASoD,MAAK5F,GAAQA,EAAK2G,MAAQ3D,IACpCE,KAERiY,GAAiBrb,MAAOE,IAC7B,MAAM2V,EAAS3V,EAAK2D,OAAO8S,UAAUrD,oBAAoBuC,QAAU,GACnE,GAAIA,EAAOtU,OAAS,EAEnB,OADAgP,GAAGC,cAAcC,KAAK,EAAE+C,eACjB,EAER,MAAM8H,EAAe,IAAI7N,IAAIoI,GACvB0F,EAAYzB,MAAMC,KAAKuB,GACvBtG,EAAauG,EAAUlW,KAAI6P,GAASA,EAAMrO,OAAMmR,WAChDwD,QAAoBrZ,EAAsB6S,EAAY,CAACjS,MAAO,IAAKC,OAAQ,QAAS,EAAEyQ,gBAAiB,EAAmB,GAAI,GAAI8H,GACxI,OAAOA,EAAUzV,MAAKoP,GAASA,EAAMrO,MAAQ2U,EAAYjY,OAAK,EAEzDmU,GAAc1X,MAAOwX,EAAUC,EAAYF,EAAWjC,IACpDnM,YAAYiN,UAAUqB,EAAWpB,UAAS,IAAS,CACzDN,IAAKyB,EAASzB,IACd,6CAA8CyB,EAAS3W,KACvD,8CAA+C0W,EAC/C,gCAAiCjC,EACjC,iBAAkB,OAClB,qBAAsBiC,EAAUmD,YAChC,0BAA2B,SAC3B,iBAAkBnD,EAAU+C,GAC5B,sBAAuB,QACrB,CAAChE,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,IAE9DgF,GAAwBzb,MAAOE,IACpC,MAAMwb,EAAOxb,EAAKmJ,OAAOsS,YAAYpY,MAK/BqY,EAJS1b,EAAK2D,MAAM8S,SAASrD,mBAAmBuC,OAAO5S,QAAO,CAAC4S,EAAQX,IAErE,IAAIW,EADO,SAAWX,EAAMrO,KAAO,EAAE+M,UAAYsB,EAAMc,QAE5D,IAAIgC,WACkB/U,QAAO,CAAC4Y,EAAOH,IAChCG,EAAQH,GACb,IACGI,EAAeJ,EAAKK,UACzBL,EAAK/K,QAAQ,WAAa,EAC1B+K,EAAKM,YAAY,WAAa,IAC1B,GAEL,OADsBN,EAAKO,QAAQH,EAAc,IAC1B,sBAAwB,EAAEnI,cAAgB,UAAYiI,EAAY,iBAEpF,GAAuB5b,MAAO0W,EAAYnB,KAC/C,MAAMhP,EAASmQ,EAAWnV,OAAS,EAC/BmV,EAAa,gFACb,+EACJ,MAAkB,YAAdnB,EACIhP,EAAS,kFAEVA,GA+DF,GAAiBvG,MAAOK,EAAUsD,KACvC,MAAMqC,EAAiB,CAACpI,IAAK,uBAAwBqI,KAAMC,MAAMC,oBAAoBC,IAAK7C,MAAO,CAAClD,EAASQ,OACrGwF,EAAiB,IAAI1C,EAAO2C,QAASN,GAC3CrC,EAAO4C,OAAO,CAAC,QAAWF,GAAe,EAEpC6V,GAAqBlc,MAAOE,EAAMqX,KACvCvL,MAAMmQ,KAAK,oBAAoB,CAACC,EAASrP,KACxC,GAAI7M,EAAKW,MAAQub,EAAQvb,KAAM,OAAO,EACtCkM,EAAOsP,iBAAkB,EACzBtP,EAAOuP,kBAAmB,EAC1BvP,EAAOwP,cAAe,EACtBxP,EAAOyP,UAAYjF,EAAUvB,MAC7BjJ,EAAO1D,OAAO+R,KAAKqB,iBAAmBlF,EAAU6D,OAChD,EAOIsB,GAAqB1c,MAAOuX,EAAWhX,EAAYiX,KACxD,MAAOnX,SAAkB,EAAekX,EAAWhX,EAAYiX,GAC/D,GAAwBjX,EAAYF,EAAQ,EAEvCsc,GAAqB3c,MAAOE,IACjC,MAAMwb,EAAOxb,EAAKmJ,OAAOsS,YAAYpY,MAC/BuY,EAAeJ,EAAKK,UACzBL,EAAK/K,QAAQ,WAAa,EAC1B+K,EAAKM,YAAY,WAAa,IAC1B,GACCY,EAAa,sBAAwB,EAAEjJ,cAAgB,uBACvDkJ,EAAcnB,EAAKO,QAAQH,EAAcc,GAC/C1c,EAAKqG,OAAO,CACX,2CAA4C,GAC5C,8CAA+C,EAC/C,2BAA4BsW,GAC5B,EAoBI,GAAwB7c,MAAOE,EAAM6I,KAC1C,MAAO+T,EAAclB,GAAa7S,EAC5BgU,QAAoB7c,EAAKqG,OAAO,CACrC,8CAA+CuW,EAC/C,2CAA4ClB,IAEvCoB,QAA2BvB,GAAsBsB,SACjDA,EAAYxW,OAAO,CACxB,2BAA4ByW,GAC5B,EAEI,GAA0Bhd,MAAOe,EAAOb,KAC7C,MAAMwB,OAxVsB1B,OAAOe,EAAOb,KAC1C,MAAM+W,EAAkB/W,EAAKmJ,OAAO6N,WAAWC,eAAiBjX,EAAK2D,MAAMuT,eAAeD,cACpFE,EAAgD,YAA/BnX,EAAKmJ,OAAOkM,WAAWzT,KAC9C,OAAImV,IAAoBI,EAChB,OAAOpW,QAAQC,uBAAuBH,UAEjC,EAAeb,IAAS,EAAC,EAkVhB,CAAqBa,EAAOb,GAC9CwB,EAAQH,OAAS,GAAGG,EAAQ2D,KAAI1B,GAAU,GAAezD,EAAMyD,IAAO,EAErEsZ,GAAiBjd,MAAOE,EAAMkC,EAASwV,KAC5C,MAAOsF,EAAUlH,EAAOmH,GAAa/a,EAC/Bgb,OAzB4Bpd,OAAOE,EAAM8V,UAC3BkE,EAAgBha,EAAM8V,GAC9B,IACXzF,GAAGC,cAAcC,KAAK,EAAE8C,cACjB,GAqBmB8J,CAA2Bnd,EAAM8V,GAC5D,GAAIoH,EAAc,OAAO,EACzB,MAAO5B,EAAasB,EAAcQ,QAxITtd,OAAOkd,EAAUtF,EAAsB1X,EAAM8V,EAAOmH,KAC7E,MAAMI,EAAM3F,EAAqB9R,MAAKyX,GAAOA,EAAIxX,QAAUmX,IACrD3F,EAAYrX,EAAK2D,OAAO8S,UAAUrD,oBAAoBuC,QAAU,GAChEiH,QAAqB5C,EAAgBha,EAAM8V,GAC3CwF,EAAc,CAAC+B,EAAI1H,OAAO/P,MAAKoP,GAASA,EAAMrO,MAAQsW,GAAajI,EAAMc,OAASA,KAExF,MAAO,CAACwF,EAAasB,EADA,IAAIvF,KAAciE,GACQ,EAkISgC,CAAkBN,EAAUtF,EAAsB1X,EAAM8V,EAAOmH,GAEvH,MAvCsBnd,OAAOwb,EAAatb,EAAM4c,EAAcQ,WACrCpd,EAAKqG,OAAO,CACpC,2CAA4C+W,EAC5C,8CAA+CR,IAFhD,MAIME,QAA2BvB,GAAsBvb,SAC9BA,EAAKqG,OAAO,CACpC,2BAA4ByW,GAC5B,EA8BDS,CAAejC,EAAatb,EAAM4c,EAAcQ,GACzC9B,GC5cF,GAAYxb,MAAOkV,EAAOwI,EAAOnd,EAAY2C,KXwMhBlD,OAAO+I,EAASxI,KAClD,MAAOF,EAAUF,GAAY4I,EAsDS/I,OAAOe,EAAOb,KACpD,MAAMwB,OAzO6B1B,OAAOe,EAAOb,KACjD,MAAMyd,EAAazd,EAAKmJ,OAAO6N,YAAYC,gBAAiB,EACtDyG,EAAc1d,EAAK2D,OAAOuT,gBAAgBD,gBAAiB,EAC3DF,EAAkB0G,GAAcC,EAChCvG,EAAgD,YAA/BnX,EAAKmJ,OAAOkM,WAAWzT,KAC9C,OAAImV,IAAoBI,EAChB,OAAOpW,QAAQC,uBAAuBH,UAEjCO,EAAepB,IAAS,EAAC,EAiOhB2d,CAAqB9c,EAAOb,GAC9CwB,EAAQH,OAAS,GAAGG,EAAQ2D,KAAI1B,GAAUgC,EAAezF,EAAMyD,IAAO,EAvD1Ema,CAAwBvd,EAAYF,GACpC,MAAMkE,QAAiB3D,SAAST,EAASiB,gBAAiB,EACtDmD,GAAUA,EAASwZ,UAAU,cAAe,CAACC,MAAM,GAAK,EW1M5DC,OADsB,GAAmB/I,EAAOwI,EAAOnd,EAAY2C,GACtC3C,EAAU,EAElC,GAAqBP,MAAOkV,EAAOwI,EAAOnd,EAAY2C,KAC3D,MAAO7C,SAAkB,GAAe6U,EAAOwI,EAAOnd,EAAY2C,GAElE,MAAO,CAAC7C,QADeY,QAAQid,gBAAgB7d,EAAU6U,GAC/B,EAErB,GAAiBlV,MAAOkV,EAAOwI,EAAOnd,EAAY2C,KACvD,MAAMmS,OXoD4BrV,OAAOE,GACxBA,GAAM2D,OAEP3D,EAAK2D,MAAM,aAET3D,EAAK2D,MAAM,YAAY8R,eAElCzV,EAAK2D,MAAM,YAAY8R,eALR,GWtDSwI,CAAoBjJ,GAC7CI,OXiJ6BtV,OAAO0W,EAAY0H,EAAU7I,KAChE,MAAMhP,EAASmQ,EAAWnV,OAAS,EAC/BmV,EAAa,+CAA+C0H,mBAC5D,8CAA8CA,mBAClD,MAAkB,YAAd7I,EACIhP,EAAS,gDAAgD6X,oBAE1D7X,GWxJyB8X,CAAqBhJ,EAAkB,yBAA0BH,EAAMK,YACvGlF,QAAQC,IAAI,oCACZD,QAAQC,IAAIgF,GACZ,MAAME,QAAiB,GAAiBN,EAAOwI,EAAOpI,EAAmBpS,GAGzE,OAFAmN,QAAQC,IAAI,YACZD,QAAQC,IAAIkF,SACCjV,EAAWmV,wBAAwB,OAAQ,CAACF,GAAS,EAuB7D,GAAoB,CAACtS,EAAQ2S,IAC9B3S,GAAU,EAAE2R,WAAW,IAAM3R,GAAU,EAAE2R,WAAW,GAChD,sDAEOgB,EAAO/P,MAAKoP,GAASA,EAAMrO,KAAKiP,eAAiB5S,EAAO4S,gBACzDC,IAgBT,GAAmB/V,MAAOkV,EAAOwI,EAAOpI,EAAmBpS,KAChE,MAAOob,EAAQrI,EAAQ/V,EAAM2G,EAAM0X,EAAMzc,SAAc0c,GAAqBtJ,EAAOwI,EAAOxa,GAC1F,OAAOiG,YAAYiN,UAAUlW,EAAKmW,UAAS,IAAS,CACnDxP,KAAMA,EACN,uDAAwD6W,EAAM7W,KAC9D,uDAAwD6W,EAAM7c,KAC9D,mDAAoDX,EAAK2G,KACzD,mDAAoD3G,EAAKW,KACzD,gCAAiCyU,EACjC,wBAAyBgJ,EACzB,wBAAyBZ,EAAMjR,GAC/B,sBAAuB3K,EACvB,sBAAuBmU,EACvB,0BAA2BsI,GACzB,CAACjI,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,GAAK,EAEnE+H,GAAuBxe,MAAOkV,EAAOwI,EAAOxa,KACjD,MAAMob,OAjDsBte,OAAOkD,GAC/BA,GAAU,EAAE2R,WAAW,GACnB,EACG3R,GAAU,EAAE2R,WAAW,GAC1B,EACG3R,GAAU,EAAE2R,WAAW,GAC1B,EAEA,EAyCa4J,CAAqBvb,GACpCwb,EAAS1Q,KAAK0B,MAAM5J,MAAK5F,GAAQA,EAAK2G,MAAQ,EAAEiO,mBAChDmB,EAAS/S,GAAU,EAAE2R,WAAW,GAAK,CAAC,aAAc,eAAiB6J,EAAOrV,OAAO4M,OAAOC,MAChG7F,QAAQC,IAAI,+BACZD,QAAQC,IAAI2F,GACZ,MAAM/V,EAAOgD,GAAU,EAAE2R,WAAW,IAAM3R,GAAU,EAAE2R,WAAW,GAAK6J,EAASxJ,EAI/E,MAAO,CAACoJ,EAAQrI,EAAQ/V,EAHXA,EAAK2G,MAAQ,EAAEiO,iBAAmB4I,EAAM7W,KAAOqO,EAAMrO,KACrD3D,GAAU,EAAE2R,WAAW,IAAM3R,GAAU,EAAE2R,WAAW,GAAK,KAAO,SAChE3R,GAAU,EAAE2R,WAAW,IAAM3R,GAAU,EAAE2R,WAAW,GAAK,KAAO,UAC/B,EC5EzC,GAAgB/J,IACrB,OAAQA,GACP,IAAK,OACJ,MAAO,2DAER,IAAK,gBACJ,MAAO,6DAER,IAAK,iBACJ,MAAO,sDAET,EAoBK6T,GAA6B3e,MAAO4G,KACzC,IAAIiD,UACFlG,SACCmG,KAAK,+DACLC,MAAM,KACNC,QAAQ,GACRmD,SAASvG,GACTsD,cACDG,MAAK,EAqBFuU,GAAoB5e,MAAOiL,EAAU4T,KAC1C,MAAMrH,QAAiB5W,SAASqK,GAChCuM,EAASjR,OAAO,CAAC,oBAAqBiR,EAASnO,OAAOyV,KAAKvb,MAAQsb,GAAS,ECjEhEE,GAAS,CACrBC,aZ6C2B,CAC3BC,cA7BqBjf,OAAQC,OAAME,WAAUD,OAAMa,YAC7Bb,EAAKwB,QAAQwd,MAAKvb,GAAUA,EAAO2C,QAAQ4Y,MAAKC,GAC9D5gB,EAAyB,QAAEgO,SAAS4S,EAAO5b,MAAMuS,gBACpDvX,EAAyB,QAAEgO,SAAS4S,EAAO5b,MAAMuS,gBACjDvX,EAA0B,SAAEgO,SAAS4S,EAAO5b,MAAMuS,gBAClDvX,EAA4B,WAAEgO,SAAS4S,EAAO5b,MAAMuS,gBACpDvX,EAA2B,UAAEgO,SAAS4S,EAAO5b,MAAMuS,gBACnDvX,EAA0B,SAAEgO,SAAS4S,EAAO5b,MAAMuS,gBAClDvX,EAAyB,QAAEgO,SAAS4S,EAAO5b,MAAMuS,qBAEnC3V,EAASif,YAAYC,WAAY,IAoBpDC,MA9Catf,OAAQC,OAAME,WAAUD,OAAMa,QAAO6F,YAClD,MACMrC,QAAiB3D,SAASX,EAAK,GAAGmB,oBAClCme,cAAcC,qBAAqBjb,EAAUqC,GAAO,GAC1D,MAAMM,QAActG,SAAS2D,EAAS2L,OAAOrP,MACvC4F,EAAYxG,EAAK,GAAGC,KAAKmJ,OAAOxH,OAAO0B,MACvCkc,EAAY3F,MAAMC,KAAK7S,EAAMwY,YAAY9X,OAAO+X,UAEhDC,QArBP5f,eAAyC6f,EAAgB3Y,EAAOT,EAAWqZ,EAASC,GACnF,MAAMC,ODiIyBhgB,OAAO4H,EAAQ1D,EAAUC,EAAWsC,EAAWpC,EAAIC,IAC3EsD,EAAO3F,QAAO2E,IACpB,MAAMqZ,EAAsBrZ,EAAMlC,EAAIR,EAAW,EAC3Cgc,EAAsBtZ,EAAMjC,EAAIT,EAAW,EACjD,IAAIic,EAAwB,GAE5B,IAAK,IAAIhd,EAAI,EAAGA,GAAmB,EAAdyD,EAAM7D,MAAY,EAAGI,IACzC,IAAK,IAAIuO,EAAI,EAAGA,GAAmB,EAAd9K,EAAM7D,MAAa,EAAG2O,IAC1CyO,EAAsBjR,KAAK,CAACxK,EAAGub,EAAsB/b,EAAW,EAAIf,EAAGwB,EAAGub,EAAsBhc,EAAW,EAAIwN,IAIjH,MAAM0O,EAAOD,EAAsB9a,KAAIgb,GAASA,EAAM3b,IAChD4b,EAAOH,EAAsB9a,KAAIgb,GAASA,EAAM1b,IAChD4b,EAAO3b,KAAKoO,OAAOoN,GACnBI,EAAO5b,KAAKoO,OAAOsN,GAWzB,OAVwBH,EAAsBle,QAAOwe,GAAUA,EAAO/b,GAAK6b,GAAQE,EAAO9b,GAAK6b,IAEhDve,QAAOoe,IACrD,MAAOK,EAAIC,GAAM,CAACN,EAAM3b,EAAG2b,EAAM1b,GAC3BH,EAAIH,EAAKqc,EACTjc,EAAIH,EAAKqc,EAEf,OADU/b,KAAKC,KAAKD,KAAKE,IAAIN,EAAE,GAAKI,KAAKE,IAAIL,EAAE,IACpCP,GAAYuC,EAAYtC,KAGN5C,OAAS,KC3JTqf,CAAiBf,EAAgB3Y,EAAMC,KAAKxF,KAAMuF,EAAMC,KAAKpC,SAAU0B,EAAWqZ,EAASC,GAC1H,IAAKC,EAAkB,OAAO,EAC9B,MAAMa,QAIP7gB,eAA+C6f,EAAgBiB,GAC9D,OAAOjB,EAAe5d,QAAO2E,GAEU,GADtBA,EAAM7F,MAAMggB,SACbC,SAPwBC,IASzC,CATyCA,CAAgCjB,GACxE,OAAKa,IAAkC,CAExC,CAeiCK,CAA0BzB,EAAWvY,EAAOT,EAAWlC,EAASG,EAAGH,EAASI,GAC5G,IAAKib,EAAmB,OAAO,EAE/B,MAAMuB,QAiBPnhB,eAA+Byf,EAAW2B,GACzC,IAAIC,EAAW,GACXxgB,EAAO,GACX,IAAK,IAAIsC,EAAE,EAAGA,EAAIsc,EAAUle,OAAQ4B,IACnCkN,QAAQC,IAAI,gBACZD,QAAQC,IAAImP,EAAUtc,IACtBtC,EAAO4e,EAAUtc,GAAGpC,MAAMF,MACA,GAArBugB,IAAuD,GAA7B3B,EAAUtc,GAAGme,cACjB,GAAtBF,GAAwD,GAA5B3B,EAAUtc,GAAGme,eAC7CtT,KAAKuT,OAAOC,gBAAgBC,UAAW,CAACC,WAAY,iBAAkB7gB,SACtEwgB,EAASnS,KAAKrO,IAGhB,OAAOwgB,CACR,CA/BgCM,CAAgB/B,EAAmBhZ,EAAM4C,SAAS8X,mBAC3E/c,EAASgC,OAAO,CACrB,6CAA8C4a,GAC9C,GYdDS,OCYqB,CACrB,gBATuB5hB,OAAQ6hB,UAAS9gB,QAAO6F,QAAOmR,YAAW7X,OAAMD,OAAM6hB,QAAO3hB,eACpF,GAA6D,SAAzDF,EAAK,GAAG8hB,WAAW,GAAGhhB,MAAMsI,OAAO2Y,QAAQlgB,KAAKyB,MAAkB,CACrE,MAAM4B,OAtBoBnF,OAAO+F,IAC3B,CACNc,KAAM,mCACNzD,KAAM,iDACN2C,OAAQA,EACRO,QAAS,CAAC,CAAC1I,IAAK,+CAAgDqI,KAAMC,MAAMC,oBAAoB8b,OAAQ1e,MAAO,CAAC,KAAM,SAAY,KAClI,sBAAuB,WACvB,4BAA4B,EAC5B,4BAA6B,CAAC,YAAa,WAAY,YAAa,UACpE,sBAAsB,EACtBiI,UAAU,IAYe0W,CAAoBjiB,EAAK,GAAGC,KAAKW,YACpDI,QAAQsE,SAASC,YAAY,gBAAiB,CAAEC,UAAWxF,EAAK,GAAG8hB,WAAW,GAAGhhB,MAAMF,KAAMa,QAAS,CAACyD,UAVzFnF,OAAO+O,IACM/C,MAAMmQ,KAAK,uBAAuB,CAACgG,EAAYC,KAChF,MACMC,EAAkBC,OADF,EAAIvT,EAAY,IACU,aAChDqT,EAAWlM,MAAQ,CAACmM,EAAe,GACnC,EAMME,CAActiB,EAAK,GAAGqO,SAASS,UACtC,IDRAyT,aXmG2B,CAC3B,gBAVuBxiB,OAAQ6hB,UAAS9gB,QAAO6F,QAAOmR,YAAW7X,OAAMD,OAAM6hB,QAAO3hB,eACpF,GAAmB,SAAfF,EAAK,GAAGwH,KAAuC,eAArBxH,EAAK,GAAGwiB,eFqEHziB,OAAOe,IACtCA,EAAMW,QAAQoE,MAAKnC,GAAyB,iBAAfA,EAAOkD,QAA0B9F,EAAMW,QAAQoE,MAAKnC,GAAyB,iBAAfA,EAAOkD,OAAyBjB,QAAO,EErE/H8c,CAAqB3hB,OACrB,CACN,MAAM4hB,OAhGiB3iB,OAAOc,EAAW2F,EAAW1F,EAAO2F,KAC5D,MAAMiC,QAAuBnC,EAAkB1F,EA+FqB,KA/FCC,EAAO2F,GAE5E,OADqBO,OAAOC,MAAMwY,YAAY9X,OAAO3J,IAAI0K,GACrC9H,MA6FY+hB,CAAiB3iB,EAAK,GAAGa,UAAW,EAAMC,EAAO6F,QAlBtD5G,OAAO2iB,EAAkBE,KACpD,MAAMC,QAAsBliB,SAASiiB,QFsFC7iB,OAAO+iB,EAAaliB,KAC1D,IAAImiB,EAAsCD,EAAYlf,MAAM,YAAY,uBAAuBof,aAAe,GAC9GD,EAAoC9T,KAAKrO,SACnCkiB,EAAYxc,OAAO,CAAC,iBAAkB,CAAC,qBAAsB,CAAC0c,YAAaD,MACjF,MAAMhiB,EAAa+hB,EAAYrhB,QAAQoE,MAAKnC,GAAyB,iBAAfA,EAAOkD,aACvD7F,EAAWuF,OAAO,CACvB,YAAa,CAAC,gBAAmB,CAAC,YAAa,cAC/C,EE5FK2c,CAAwBJ,EAAeH,QA9BxB3iB,OAAOe,EAAO4hB,KAClB3U,KAAKiM,MAAMnU,MAAKmI,GAAQA,EAAKxB,IAAMuB,KAAKmV,SAAQC,eAE1D7d,GAAOC,YAAY,mCAAoCzE,EAAO4hB,GAErE,MAAMU,EAAkCrX,MAAMvB,GAAG,eAAe,CAAC8G,EAAUxE,EAAQ2D,KAClF,GAAIa,EAAS1Q,MAAQ8hB,EAAkB,CACtC3W,MAAMgB,IAAI,iBAAkBqW,GAC5B,MAAMriB,EAAcD,EAAMW,QAAQoE,MAAKnC,GAAyB,iBAAfA,EAAOkD,OACxD,IAAK7F,EAAY,OAAO,EACxBA,EAAW4E,QACZ,IACA,EAmBK0d,CAAcR,EAAeH,EAAgB,EAgB5CY,CAAoBZ,EAAkB/b,EAAM4C,SAASzI,MAAMF,KAClE,IW/FA2iB,SVwFuB,CACvB,gBAzBuBxjB,OAAQ6hB,UAAS9gB,QAAO6F,QAAOmR,YAAW7X,OAAMD,OAAM6hB,QAAO3hB,eACpF,GAAmB,SAAfF,EAAK,GAAGwH,KAAuC,eAArBxH,EAAK,GAAGwiB,WAErC,SAboBziB,OAAOiL,IAE5B,GAAkB,0BADC9I,EAAsB,CAAC,iBAAkB,mBAAoB,CAACY,MAAO,IAAKC,OAAQ,KAAM,gCAAiCF,EAAc,GAAI,KACrJS,MAA4B,CACpC,MAAM1B,EAASmM,KAAKC,KAAKC,QAAQC,QAGjC,aAFMlJ,EAAiB,CAACpD,EAAO2H,SAASzI,MAAMF,WA1DrBb,OAAOsL,IAC1B,CACNzE,KAAM,WACNzD,KAAM,4CACNqgB,SAAU,CAACC,OAAQ,KACnB3d,OAAQuF,EACRhF,QAAS,CACR,CAAC1I,IAAK,gBAAiBqI,KAAMC,MAAMC,oBAAoB8b,OAAQ1e,MAAO,CAAC,MACvE,CAAC3F,IAAK,mBAAoBqI,KAAMC,MAAMC,oBAAoB8b,OAAQ1e,MAAO,CAAC,KAC1E,CAAC3F,IAAK,wBAAyBqI,KAAMC,MAAMC,oBAAoB8b,OAAQ1e,MAAO,CAAC,OAEhF,sBAAuB,QACvB,4BAA4B,EAC5B,4BAA6B,CAAC,YAAa,YAC3C,sBAAsB,EACtBiI,UAAU,IA2CiDmY,CAAmB1Y,UACxE,EAAoB,EAAG,EAAGpJ,EAAO2H,SAASzG,MAAOlB,IAChD,CACR,CACA,OAAO,GAIqB+hB,CAAc1jB,EAAKW,MAC3B,OAAO,OACpB,GAAmB,SAAfZ,EAAK,GAAGwH,KAAuC,qBAArBxH,EAAK,GAAGwiB,UAAkC,CAC9E,MAAMnR,EAAa,oBAAsBrR,EAAK,GAAGqR,WAC3ClE,EAAoBnG,OAAOE,KAAKwF,gBAAgB2E,GAAYpG,UAC5DF,EAAiBjK,EAAMW,QAAQoE,MAAKnC,GAAyB,qBAAfA,EAAOkD,aACrDkE,EAAqB9K,EAAK,GAAGmB,aAAc4J,EAAgBpE,EAAM4C,SAASzI,MAAMF,KAAMX,EAAKW,KAAMuM,EACxG,KAAO,IAAe,OAAXnN,EAAK,GAIf,OAAO,EAJsB,CAC7B,MAAM4jB,EAAU5jB,EAAKA,EAAKsB,OAAS,SAC7BgE,GAAOC,YAAY,wBAAyBqe,EAAQC,OAAOjgB,MAAMyK,SAASkV,SAASjY,QAC1F,CAEA,IU7EAwY,YRyF0B,CAC1B,gBARuB/jB,OAAQC,OAAMC,OAAMC,eAC3C,MAAMyN,EAAa3N,EAAK,GAAGa,UACrB+M,EAAgB5N,EAAK,GAAGc,MAAMsI,OAAOC,WAAWmR,aAChD3M,EAAc7N,EAAK,GAAGoM,WAAa,EAAI,EAAIpM,EAAK,GAAGoM,WACzD,EAAcuB,EAAYC,EAAeC,EAAW,GQrFpDkW,YEX0B,CAC1BC,KARYjkB,OAAQE,OAAMC,WAAUF,WACnBC,EAAKwB,QAAQoE,MAAKnC,GAAUA,EAAO2C,QAAQR,MAAKqZ,GAAU5gB,EAAyB,QAAEgO,SAAS4S,EAAO5b,MAAMuS,qBAE3H3V,EAASif,YAAYC,WAAY,EAClC,GFeApM,aPmE2B,CAC3BiR,cA7DqBlkB,OAAQC,OAAMC,WACbA,EAAKmJ,OAAO8a,eAAiBrkB,EAAgByM,SAASrM,EAAK2G,MACjFwJ,QAAQC,UAAUW,EAAkBhR,MAC/BC,EAAKmJ,OAAO8a,qBAAuBlT,EAAkBhR,IAAS,OAClE+L,MAAMmQ,KAAK,sBAAuBxY,IACjCA,EAAOiC,QAAO,GAEhB,EAuDAwe,2BArDkCpkB,OAAQe,QAAOd,OAAMC,OAAMC,WAAUyG,YACvE,GAAIzG,EAAS4hB,WAAWpgB,KAAO,EAAG,OAAO,EACzC,MAAMqQ,QAAkBpR,SAASG,EAAM2O,MAAM5J,MAAK5F,GAAqB,SAAbA,EAAK2G,OAAiBhG,MAC1EwjB,EAAgBrS,EAAU3I,OAAOyV,KAAKvb,MACtC0O,EAAmBD,EAAU3I,OAAOyV,KAAK9L,IACzCb,QAAqBvR,SAASgG,EAAM4C,SAAS3I,MAC7CyjB,EAAWnkB,EAASokB,WAAWD,SAC/BH,EAAgBjkB,EAAKmJ,OAAO8a,eAAiBrkB,EAAgByM,SAASrM,EAAK2G,MAC7Eyd,EAAW,GAEWtkB,OAAOe,EAAOujB,EAAUtS,EAAWqS,EAAepS,EAAkBkS,EAAehkB,EAAUgS,EAAclS,KACrI,MAAMukB,QAAuBvT,EAAkBhR,GACzC4S,OA5Bc7S,OAAMskB,EAAUG,EAAYvS,EAAYiS,IACrDA,EAAgBvf,KAAK8f,MAAMJ,EAAWG,EAAavS,GAAcoS,EA2B9CK,CAAaL,EAAUD,EAAeG,EAAgBL,GAChFhkB,EAASokB,WAAWD,SAAWzR,EAC/BD,EAAqB7R,EAAO8R,EAAaV,EAAcH,EAAWC,EAAgB,EANhE2S,CAAmB7jB,EAAOujB,EAAUtS,EAAWqS,EAAepS,EAAkBkS,EAAehkB,EAAUgS,EAAclS,EAAI,GOvB7IkU,qBLsMmC,CACnCpU,eA3MsBC,MAAO6kB,IAC7B,EAAWA,EAAMzkB,EAAkB,EA2MnCkf,MAhCatf,OAAQe,QAAOd,OAAMC,OAAM0G,QAAOzG,eAC/C,MAAM2B,EAAO5B,EAAK2D,OAAO8S,UAAUxC,sBAAsBrS,MAAQ,QACjE,GAAY,SAARA,EAAiB,OAAO,EAC5B,MAAMvB,SAAoBK,SAASX,EAAK,GAAGa,YAAYC,MACjDyW,QAAiB5W,SAASV,EAAKW,OAC9B0W,EAAWvC,EAAY8P,EAAoBjP,QAhF3B7V,OAAOE,EAAM4B,KACpC,MAAMkT,EAAa,IAAI,EAAgC,WAAM,EAAuBlT,IAAO8N,OACrF2H,EAAYvC,EAAW3P,KAAI,CAACwB,EAAM1D,KAChC,CAAC,KAAQ0D,EAAM4F,GAAItJ,MACxBlB,QAAOiT,GAAShV,EAAK2D,MAAM8S,SAASxC,qBAAqB0B,OAAOX,EAAMzI,IAAIuK,YACvEnB,EAAS0B,EAAUlS,KAAI6P,GAASlH,KAAK0B,MAAM5J,MAAK5F,GAAQA,EAAK2G,KAAKiP,eAAiBZ,EAAMrO,KAAKiP,kBAEpG,MAAO,CAACyB,EAAWvC,EADQa,EAAOxQ,KAAI6P,GAASA,EAAMrO,OACFgP,EAAM,EAyESkP,CAAgBvN,EAAU1V,GACtFoB,QAAef,EAAsB2iB,EAAoB,CAAC/hB,MAAmC,IAA5B+hB,EAAmBvjB,OAAcyB,OAAQ,QDzKjG,0BCyKwH4S,EAAmB,GAAI,GAAIC,GAjMjJ7V,OAAOkV,EAAOC,EAAY5U,EAAY6U,KACvD,MAAMrM,OAGoB/I,OAAOkV,EAAOC,EAAY5U,EAAY6U,KAChE,MAAO/U,SAAkB4U,EAAeC,EAAOC,EAAY5U,EAAY6U,GAEvE,MAAO,CAAC/U,QADeY,QAAQid,gBAAgB7d,EAAU6U,GAC/B,EANJ8P,CAAmB9P,EAAOC,EAAY5U,EAAY6U,GA0J7CpV,OAAO+I,EAASxI,KAC3C,MAAOF,EAAUF,GAAY4I,EAC7B,EAAwBxI,EAAYF,GACpC,MAAMkE,QAAiB3D,SAAST,EAASiB,gBAAiB,EACtDmD,GAAUA,EAASwZ,UAAU,cAAe,CAACC,MAAM,GAAK,EA7J5D,CAAoBjV,EAASxI,EAAU,EAkMvC0kB,CAFcpP,EAAO/P,MAAKoP,GAASA,EAAMrO,MAAQ3D,EAAOK,QAEvCiU,EAAUjX,EADPyU,EAAWrE,QAAQzN,EAAOK,OACI,EAwBlD2hB,SAtBgBllB,MAAOe,EAAO8jB,KAC9B,IAAKA,EAAKM,OAAQ,OAAO,EAOCnlB,OAAOolB,IACjCA,EAAYC,SAAQlQ,IACnB,MACM5O,EADS4O,EAAWtR,MAAM8S,SAASxC,qBAAqB0B,OACxCxQ,KAAI6P,IACzBA,EAAM8B,WAAY,EACX9B,KAERC,EAAW5O,OAAO,CAAC,6CAA8CA,GAAO,GACxE,EAVD+e,CAJoBvkB,EAAM2O,MAAMzN,QAAO/B,GAEvB,UADFA,EAAK2D,OAAO8S,UAAUxC,sBAAsBrS,MAAQ,WAGpC,GKxL9ByjB,qBJmBmC,CACnCjG,MAbatf,OAAQE,OAAMC,WAAUF,OAAM2G,YAC3C,MAAM4e,QARSxX,KAAKC,KAAKC,QAAQC,QACnBpN,MAAMW,QAAQO,QAAO0B,IAClC,MAAM8hB,EAAkBlnB,EAA0B,SAAEgO,SAAS5I,EAAOkD,KAAKiP,eACnE4P,EAAwB/hB,EAAO2C,QAAQR,MAAKqZ,GAAU5gB,EAA0B,SAAEgO,SAAS4S,EAAO5b,MAAMuS,iBAC9G,OAAO2P,GAAmBC,KAK3B,GAAIF,EAAcjkB,OAAS,EAAG,CAC7B,MAAMokB,OArBgB3lB,OAAO0B,IAC9B,MAAMU,OATYpC,OAAO0B,GAClBA,EAAQuB,QAAO,CAAC2iB,EAAKjiB,EAAQR,KAClC,MAAM0iB,EAAkBD,EAAI9f,MAAK5C,GAAUA,EAAO2D,MAAQlD,EAAOkD,OAE3D3D,EAAS,CAAC2D,KADHgf,EAAkBliB,EAAOkD,KAAO,IAAM1D,EAAIQ,EAAOkD,KAClCzD,KAAMO,EAAOP,KAAMvC,KAAM8C,EAAO9C,MAC5D,MAAO,IAAI+kB,EAAK1iB,EAAM,GACrB,IAGmB4iB,CAAWpkB,GAC3BqkB,EAAc3jB,EAAQiD,KAAInC,GAAUA,EAAO2D,OAC3Cmf,QAAmB7jB,EAAsB4jB,EAAa,CAAChjB,MAAO,IAAKC,OAAQ,QObnE,4BPa0FsU,EAAkB,GAAI,GAAIlV,GAClI,OAAOA,EAAQ0D,MAAKnC,GAAUA,EAAOkD,MAAQmf,EAAWziB,OAAK,EAiBjC0iB,CAAgBT,QT0IjBxlB,OAAOkmB,SAA6BjlB,QAAQsE,SAASC,YAAY,eAAgB,CAAC0gB,WAAYA,ISzIlHC,CAAaR,EAAa9kB,KACjC,GASAoe,cAPqBjf,OAAQE,OAAMC,WAAUF,WAC3BC,EAAKwB,QAAQoE,MAAKnC,GAAUA,EAAO2C,QAAQR,MAAKqZ,GAAU5gB,EAA0B,SAAEgO,SAAS4S,EAAO5b,MAAMuS,qBAC/G3V,EAASif,YAAYC,WAAY,KIfhD/L,mBH6biC,CACjC,KAtIYtT,OAAQC,OAAMC,WAC1B,MAAM8lB,QAAmB7jB,EAAsB,EAAE2R,YAAa,CAAC/Q,MAAO,IAAKC,OAAQ,QAAS,EAAE+Q,WAAY,EAAkB,GAAI,IAC1HxT,SAAoBK,SAASX,EAAK,GAAGa,YAAYC,MACjDyW,QAAiB5W,SAASV,EAAKW,MACjCmlB,EAAWziB,OAAS,EAAEuQ,YAAY,GAjVtB9T,OAAOE,EAAMK,KAE7B,QA4V+BP,OAAOE,IACtC,GAAwD,GAApDA,EAAK2D,MAAM8S,SAASrD,mBAAmBqG,UAE1C,OADApJ,GAAGC,cAAcC,KAAK,EAAE8C,cACjB,CACR,EAjW2B6S,CAAwBlmB,GACjC,OAAO,EACzB,MAAM6I,OAqDoB/I,OAAOE,EAAMK,KACvC,MAAMwY,QAAeiB,IACfpC,QAA6BkB,EAAkBC,GAErD,MAAO,OADepB,EAAmBC,EAAsB1X,EAAMK,GACpDqX,EAAoB,EAzDfyO,CAAmBnmB,EAAMK,GAiWrBP,OAAOE,EAAM6I,EAASxI,KAChD,MAAO6B,EAASwV,GAAwB7O,GACjCwO,SAAmB0F,GAAe/c,EAAMkC,EAASwV,GAC5B,YAAxBL,EAAUhC,YAA0BmH,GAAmBnF,EAAWhX,EAAYL,EAAI,EAnWtFomB,CAAmBpmB,EAAM6I,EAASxI,EAAU,EA8U3CgmB,CAAS/O,EAAUjX,GACTylB,EAAWziB,OAAS,EAAEuQ,YAAY,GA7U5B9T,OAAOE,EAAMK,KAC9B,MAAMwI,OASoB/I,OAAOE,EAAMK,KACvC,MAAMgX,QAAkB8D,GAAenb,IAChCG,SAAkB,EAAekX,EAAWhX,EAAYL,GAG/D,aAFMgc,GAAmB7b,EAAUkX,GAE5B,CAAClX,QADeY,QAAQid,gBAAgB7d,EAAUH,GAC/B,EAdJ,CAAmBA,EAAMK,GAkWpBP,OAAO+I,EAASxI,KAC3C,MAAOF,EAAUF,GAAY4I,EAC7B,GAAwBxI,EAAYF,GACpC,MAAMkE,QAAiB3D,SAAST,EAASiB,gBAAiB,EACtDmD,GAAUA,EAASwZ,UAAU,cAAe,CAACC,MAAM,GAAK,EArW5D,CAAoBjV,EAASxI,EAAU,EA4UtC,CAAUiX,EAAUjX,GACVylB,EAAWziB,OAAS,EAAEuQ,YAAY,IAI1B9T,OAAOE,EAAMK,KAChCoc,GAAmBzc,GACnB,MAAMsmB,EAAYjmB,EAAWmP,MAAMzN,QAAO/B,GAAQA,EAAK2D,OAAO8S,UAAUrD,oBAAoBmT,WAAY,IACxGD,EAAUnhB,KAAInF,GAAQA,EAAK0F,UAAQ,EANlC8gB,CAAYlP,EAAUjX,EACvB,EA6HA,eAtbsBP,OAAQC,OAAMC,OAAMC,eAC1C,MAAOE,EAAUC,EAAgBC,QAyERP,OAAOC,EAAMC,KACtC,MAAMG,QAAiBO,SAASV,EAAKW,MAC/BP,QAAuBM,SAASX,EAAK,GAAGa,WAE9C,MAAO,CAACT,EAAUC,EADCA,EAAeS,MACU,EA7ES,CAAkBd,EAAMC,QAgVnDF,OAAOK,IACjC,MAAMmX,QAAiB5W,SAASP,EAASwD,MAAM8S,SAASrD,mBAAmBmT,UACrE1d,OAvR0B/I,OAAOwX,EAAUnX,KACjD,MAAOsmB,EAAahN,EAAW9D,EAAQ+Q,QAdV5mB,OAAOwX,EAAUnX,KAC9C,MAAMkX,EAAYlX,EAASwD,MAAM8S,SAASrD,mBAAmBiE,UACvD1B,EAAS2B,EAAS3T,MAAM8S,SAASrD,mBAAmBuC,OACpD8D,EAAYnC,EAAS3T,MAAM8S,SAASrD,mBAAmBqG,UACvDkN,EAAYhR,EAAO/P,MAAKoP,GACtBA,EAAMc,OAASuB,EAAUvB,OAC5Bd,EAAMrO,MAAQ0Q,EAAU1Q,MACxBqO,EAAMoF,IAAM/C,EAAU+C,IACtBpF,EAAMsF,SAAWjD,EAAUiD,UAGhC,MAAO,CADa3E,EAAOlF,QAAQkW,GACdlN,EAAW9D,EAAQgR,EAAU7Q,MAAK,EAGQ8Q,CAAsBtP,EAAUnX,GAG/F,MAAO,CAFcsZ,EAAYiN,EACf/Q,EAAO5T,QAAO,CAACiT,EAAO/R,IAAMA,GAAKwjB,IACpB,EAmRTI,CAAyBvP,EAAUnX,GACzD,GAAsBmX,EAAUzO,EAAO,EAlVjC,CAAmB1I,GACzB,MAAMI,OA+DoBT,OAAOC,EAAMC,EAAMI,EAAgBD,EAAUE,EAAYJ,KACnF,MAAMa,QAAmBC,QAAQC,uBAAuBX,KAAe,EACjEY,QAAoBP,SAAST,EAASiB,gBAAiB,EAEvDC,SADoB,EAAehB,IACNkB,OAAS,EACtCC,OA3FiBxB,OAAOC,EAAMC,EAAMI,KAC1C,MAAMmB,EAAavB,EAAKwB,QAAQC,KAAO,EACjCC,EAAwC,QAArB1B,EAAK2B,QAAQC,KAChCC,EAAsB9B,EAAK,GAAG+B,eAAeC,QAAOpB,GAAQA,GAAQP,EAAeO,OAAMU,OAAS,EACxG,OAAOE,IAAeG,GAAoBG,EAAmB,EAuFjC,CAAgB9B,EAAMC,EAAMI,GACxD,MAAO,CAACU,EAAYG,EAAaE,EAAgBG,EAAa,EArE1C,CAAmBvB,EAAMC,EAAMI,EAAgBD,EAAUE,EAAYJ,GAmV/DH,OAAOS,EAAOJ,EAAUE,KAClD,MAAOS,EAAYG,EAAaE,EAAgBG,GAAiBf,EACjE,GAAIO,EACH,GAAeX,EAAUW,QACnB,GAAKA,IAAcG,GAAgBE,EAGnC,GAAKL,GAAeG,IAAgBE,IAAkBG,EAGjDR,GAAeG,GAAgBE,GAAmBG,GAC7DnB,EAASuF,aAJmE,CAC5E,MAAMC,EAAiBtF,EAAWmB,QAAQoE,MAAKnC,GAAUA,EAAOoC,QAAU1F,EAASQ,OACnF,GAAeR,EAAUwF,EAC1B,KAN0D,CACzD,MAAMA,EAAiBtF,EAAWmB,QAAQoE,MAAKnC,GAAUA,EAAOoC,QAAU1F,EAASQ,OACnF,GAAeR,EAAUwF,EAC1B,CAKA,EA9VA,CAAmBpF,EAAOJ,EAAUE,EAAU,EAmb9C,gBApEuBP,OAAQE,WAC/B,MAAMqX,EAAYrX,EAAK2D,OAAO8S,UAAUrD,oBAAoBiE,YAAa,EACzE,IAAKA,EAAW,OAAO,EACvB2E,GAAmBhc,EAAMqX,EAAS,GG9XlCyP,WIKyB,CACzB/C,KAdY,CAACljB,EAAO8jB,KACpB,MAAMoC,EAAclmB,EAAMW,QAAQO,QAAO0B,GAAyB,gBAAfA,EAAOkD,OACtDge,EAAKqC,IAAM,GAAKD,EAAY1lB,OAAS,GACxC0lB,EAAY5hB,KAAI1B,IACf,MAAMwjB,EATkB,CAACC,IAC3B,MAAMC,EAAe/a,aAAa8a,GAElC,OADoB9a,aAAa+a,EAAanX,OAAOrP,MAClCwI,OAAOU,MAAMud,KAAK,gBAAgBC,OAM3BC,CAAmB7jB,EAAOoC,QAC5C7F,EAtBW,EAAC6iB,EAAa0E,KACjC,MAAMhQ,EAAanL,aAAa,yBAC1BkJ,EAAWrM,YAAYiN,UAAUqB,EAAWpB,UAAS,IAAS,CACnExP,KAAM,eACNwC,OAAQ,CACP4M,OAAQ,CACPC,MAAO,CAAC,CAAC,KAAKuR,IAAa,eAG3B,CAACnR,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,IACnE,OAAO,IAAIhE,OAAOiV,KAAKC,cAAcnS,EAAU,CAAEtF,OAAQ6S,GAAa,EAYvD6E,CAAY7mB,EAAOomB,GAE1BzW,EAAU,CAAEmX,cAAc,EAAOC,gBAAgB,EAAMC,WAAW,EAAOC,iBAAiB,EAAOC,YAAa,CADtGhnB,QAAQinB,cAAcnnB,EAAMF,MACiF2I,SAAS3I,OACpII,QAAQid,gBAAgBhe,EAAM,CAAC,EAAGwQ,EAAO,GAE3C,GJDAkE,uBF6FqC,CACrC7U,eA/FsBC,MAAO6kB,IAC7B,EAAWA,EAAI,EA+FfvF,MA1Batf,OAAQe,QAAOd,OAAMC,OAAM0G,QAAOzG,eAE/CkQ,QAAQC,IAAI,SACZ,MAAMoN,QAAc9c,SAASV,EAAKW,MAClCwP,QAAQC,IAAI,SACZD,QAAQC,IAAIoN,GAEZ,MAAOtb,EAASyT,QAhDO7V,OAAO0d,IAC9B,MAAM7H,EAAS,EAAEb,WAAW3P,KAAI6P,GAASlH,KAAK0B,MAAM5J,MAAK5F,KACnDA,EAAK2G,MACH3G,EAAK2G,KAAKiP,eAAiBZ,EAAMY,kBAEnCgP,EAAqB,EAAE9P,WAAW/S,QAAO,CAACiT,EAAO/R,EAAG0L,IAChDqG,GAASrG,EAAI,IAAM6O,EAAMrU,OAAOyV,KAAKvb,OAAS,GACjD2R,GAASrG,EAAI,IAAM6O,EAAMrU,OAAOyV,KAAKvb,OAAS,GAC9C2R,GAASrG,EAAI,IAAM6O,EAAMrU,OAAOyV,KAAKvb,OAAS,IAGrD,MAAO,CADS,IAAI,EAAEwR,gBAAiB+P,GAAoBlV,OAC1CiG,EAAM,EAqCS,CAAgB6H,GAChDrN,QAAQC,IAAI,WACZD,QAAQC,IAAIlO,GACZiO,QAAQC,IAAI,UACZD,QAAQC,IAAIuF,GACZ,MAAM3S,QAAef,EAAsBC,EAAS,CAACW,MAAwB,IAAjBX,EAAQb,OAAcyB,OAAQ,QAAS,EAAE+Q,WAAY,GAAmB,GAAI,GAAI8B,GAC5IxF,QAAQC,IAAI,UACZD,QAAQC,IAAIpN,EAAOK,OACnB,MAAM4kB,OAlFenoB,OAAOkD,EAAQ2S,IAChC3S,GAAU,EAAE2R,WAAW,IAAM3R,GAAU,EAAE2R,WAAW,GAChD7G,KAAK0B,MAAM5J,MAAK5F,GAAQA,EAAK2G,MAAQ,EAAEiO,mBAEvCe,EAAO/P,MAAKoP,GAASA,EAAMrO,MAAQ3D,IA8ElBklB,CAAcllB,EAAOK,MAAOsS,GAC/CtV,SAAoBK,SAASX,EAAK,GAAGa,YAAYC,MACvDsP,QAAQC,IAAI,cACZD,QAAQC,IAAI6X,GAEZ,GAAUA,EAAYzK,EAAOnd,EAAY2C,EAAOK,MAAK,GExFrD8kB,WDuDyB,CACzB/I,MArDatf,OAAQC,OAAMC,OAAMa,QAAO6F,YACxC,MAAM0hB,EAAgBpoB,EAAKmJ,OAAOyV,KAAKvb,MAAQ,EAAI,CAAC,OAAQ,gBAAiB,kBAAoB,CAAC,gBAAiB,kBAC7GzB,QAAaK,EAAsBmmB,EAAe,CAACvlB,MAAO,IAAKC,OAAQ,KAAM,4BAA6B,GAAc,GAAI,IAChH,QAAdlB,EAAKyB,MAoCavD,OAAOe,EAAOb,KACpC,MAAMqoB,OA5DiBvoB,OAAO+iB,IAC9B,MAAMtL,QAAmB7W,SAAS,yBAC5B4U,EAAWrM,YAAYiN,UAAUqB,EAAWpB,UAAS,IAAS,CACnExP,KAAM,gBACJ,CAACyP,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,IACnE,OAAO,IAAIhE,OAAOiV,KAAKC,cAAcnS,EAAU,CAAEtF,OAAQ6S,GAAa,EAuD/CyF,CAAgBznB,GAEjC0nB,QAAqBxnB,QAAQid,gBAAgBqK,EAAU,CAAC,EAD9C,CAAEV,cAAc,EAAOC,gBAAgB,EAAMC,WAAW,EAAOC,iBAAiB,IAbrEhoB,OAAO0E,EAAGC,EAAGoF,EAAOnD,EAAOrC,MACtD,IAAIsF,UACFlG,SACCmG,KAAK,iCACLC,MAAM,KACNC,QAAQ,GACRC,WAAW,CAACvF,EAAGH,EAASG,EAAGC,EAAGJ,EAASI,IACvC+jB,aAAa,CAAChkB,EAAG,IAAKC,EAAE,GAAI,CAACgkB,OAAO,IACpCC,QAAQrkB,EAASskB,WAClBxe,MAAK,EAOP,CAAoB,EAAG,EAAG,EAAG,QADFzJ,SAAS6nB,EAAarnB,eAEjDwd,GAAkB1e,EAAKW,KAAM,EAAC,EAzC7BioB,CAAe/nB,EAAOb,GAKEF,OAAOe,EAAOb,EAAM0G,EAAO9E,KACpD,MAAMinB,OAtCoB/oB,OAAO+iB,EAAajhB,KAC9C,MAAM2V,EAA2B,iBAAd3V,EAAKyB,YAAiC3C,SAAS,+BAAiCA,SAAS,yBAC5GyP,QAAQC,IAAImH,GACZ,MAAMjC,EAAWrM,YAAYiN,UAAUqB,EAAWpB,UAAS,IAAS,CAEpE,EAAG,CAACC,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,IACnE,OAAO,IAAIhE,OAAOiV,KAAKC,cAAcnS,EAAU,CAAEtF,OAAQ6S,GAAa,EAgC5CiG,CAAmBjoB,EAAOe,GAC9CD,EAASmM,KAAKC,KAAKC,SAASC,UAAW,EAC7C,IAAKtM,EAAQ,OAAO,EACpB,MAAM6O,EAAU,CAAEmX,cAAc,EAAOC,gBAAgB,EAAMC,WAAW,EAAOC,iBAAiB,EAAOC,YAAa,CAACpmB,EAAO2H,SAAS3I,aACvGI,QAAQid,gBAAgB6K,EAAa,CAAC,EAAGrY,GACvEiO,GAA2B9c,GAC3B+c,GAAkB1e,EAAKW,KAAM,EAAC,EAV7BooB,CAAkBloB,EAAOb,EAAM0G,EAAO9E,EACvC,IMrCYonB,GAAwBlpB,MAAOmpB,SAC9BliB,OAAOC,MAAMwO,wBAAwB,eAAgB,CAACyT,IAEvDC,GAAwBppB,MAAOqpB,IAC3C,MAAMC,QAAqBriB,OAAOC,MAAMqiB,wBAAwB,eAAgB,CAACF,IAGjF,OADApiB,OAAOW,OAAOC,WACPyhB,GAEKE,GAA4BxpB,MAAOoB,IAC/C,MAAMmD,QAAiB3D,SAASQ,KAAiB,EACjD,IAAKmD,EAAU,OAAO,EACtB,MAAMklB,QAAgCxiB,OAAOC,MAAMqiB,wBAAwB,mBAAoB,CAAChlB,EAASmH,MAGzG,OADAzE,OAAOW,OAAOC,WACP4hB,GAEKC,GAAwB1pB,MAAO2pB,EAAYC,KACvD,MAAOC,GAAgBF,EAAWjoB,QAAQO,QAAO0B,GAAUA,EAAO+H,KAAOke,IACzE,aAAaD,EAAWJ,wBAAwB,eAAgB,CAACM,EAAane,KAAI,EAGtEoe,GAAmC9pB,MAAOe,EAAO4hB,KAC7D,MAAMoH,EAAqC/d,MAAMvB,GAAG,kBAAkB,CAAC8G,EAAUxE,EAAQ2D,KACxF,GAAIa,EAAS1Q,MAAQ8hB,EAAkB,CACtC3W,MAAMgB,IAAI,iBAAkB+c,GAC5B,MAAM/oB,EAAcD,EAAMW,QAAQoE,MAAKnC,GAAyB,iBAAfA,EAAOkD,OACxD,IAAK7F,EAAY,OAAO,EACxBA,EAAW4E,QACZ,IACA,EC1BK,IAAIL,GAEXyG,MAAMmQ,KAAK,mBAAmB,KAC7B5W,GAASykB,UAAUC,eAAe,2BAClC1kB,GAAO2kB,SAAS,wBAAyB,IACzC3kB,GAAO2kB,SAAS,wBAAyB,IACzC3kB,GAAO2kB,SAAS,wBAAyB,IACzC3kB,GAAO2kB,SAAS,mCAAoC,IACpD3kB,GAAO2kB,SAAS,4BAA6B,GAA4B,IAG1Ele,MAAMvB,GAAG,uBAAuB,CAAC1J,EAAO8jB,KACvC9F,GAAO5K,qBAAqB+Q,SAASnkB,EAAO8jB,GAC5C9F,GAAOiI,WAAW/C,KAAKljB,EAAO8jB,EAAI,IAGnCsF,WAAqB,SAAI,CACrBpL,OAAM,G","sources":["webpack://CHARNAME's Bag of Macros/webpack/bootstrap","webpack://CHARNAME's Bag of Macros/webpack/runtime/define property getters","webpack://CHARNAME's Bag of Macros/webpack/runtime/hasOwnProperty shorthand","webpack://CHARNAME's Bag of Macros/./src/scripts/constants.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helper-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/aura-of-purity.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/clairvoyance.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/daylight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/hooks.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/dispel-magic.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/horde-passive.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/items.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/instrument-of-the-bards.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/protection-from-poison.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/ring-of-spell-storing.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/staff-of-swarming-insects.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/wand-of-fear.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/blight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/fey-ancestry.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/spells.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/class/bard/song-of-rest.js","webpack://CHARNAME's Bag of Macros/./src/scripts/socket-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export const conditionLabels = {\r\n\tblinded: [\"blinded\", \"convenient effect: blinded\"],\r\n\tcharmed: [\"charmed\", \"convenient effect: charmed\"],\r\n\tconcentrating: [\"concentrating\", \"convenient effect: concentrating\"],\r\n\tdead: [\"dead\", \"convenient effect: dead\"],\r\n\tdeafened: [\"deafened\", \"convenient effect: deafened\"],\r\n\texhaustion1: [\"exhaustion 1\", \"convenient effect: exhaustion 1\"],\r\n\texhaustion2: [\"exhaustion 2\", \"convenient effect: exhaustion 2\"],\r\n\texhaustion3: [\"exhaustion 3\", \"convenient effect: exhaustion 3\"],\r\n\texhaustion4: [\"exhaustion 4\", \"convenient effect: exhaustion 4\"],\r\n\texhaustion5: [\"exhaustion 5\", \"convenient effect: exhaustion 5\"],\r\n\tfrightened: [\"frightened\", \"convenient effect: frightened\"],\r\n\tgrappled: [\"grappled\", \"convenient effect: grappled\"],\r\n\tincapacitated: [\"incapacitated\", \"convenient effect: incapacitated\"],\r\n\tinvisible: [\"invisible\", \"convenient effect: invisible\"],\r\n\tparalyzed: [\"paralyzed\", \"convenient effect: paralyzed\"],\r\n\tpetrified: [\"petrified\", \"convenient effect: petrified\"],\r\n\tpoisoned: [\"poisoned\", \"convenient effect: poisoned\"],\r\n\tprone: [\"prone\", \"convenient effect: prone\"],\r\n\trestrained: [\"restrained\", \"convenient effect: restrained\"],\r\n\tstunned: [\"stunned\", \"convenient effect: stunned\"],\r\n\tunconscious: [\"unconscious\", \"convenient effect: unconscious\"],\r\n\twounded: [\"wounded\", \"convenient effect: wounded\"]\r\n}\r\n\r\nexport const cloudSpellNames = [\r\n\t\"Cloudkill\",\r\n\t\"Incendiary Cloud\",\r\n\t\"Insect Plague\",\r\n\t\"Moonbeam\",\r\n\t\"Spirit Guardians\"\r\n]","import {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nexport const deleteTempItem = async ({args, item, workflow}, setDeleteItemFlags) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tif (setDeleteItemFlags) await setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nexport const getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nexport const getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nexport const getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst hasSysConc = item.system.components?.concentration ?? false\r\n\tconst hasMidiConc = item.flags?.midiProperties?.concentration ?? false\r\n\tconst isConcentration = hasSysConc || hasMidiConc\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nexport const getDialogueButtons = (resolve, choices, getIconPaths, width, height, iconData) => {\t\r\n\treturn choices.reduce((buttons, choice, i) => {\r\n\t\tconst icon = getIconPaths(choice, iconData)\r\n\t\tconst newButton = {[choice]: {\r\n\t\t\tlabel: `<img src=${icon} width=${width} height=${height} style=\"border:0px\"><br>${choice}`,\r\n\t\t\tcallback: () => {\r\n\t\t\t\tresolve({value: `${choice}`})\r\n\t\t\t}\r\n\t\t}}\r\n\t\treturn {...buttons, ...newButton}\r\n\t}, {})\r\n}\r\nexport const getDialogueButtonType = async (choices, dialogueOptions, title, getIconPathsFunc, buttonWidth, buttonHeight, iconData) => { \r\n\treturn await (new Promise( (resolve) => {\t\r\n\t\tconst buttons = getDialogueButtons(resolve, choices, getIconPathsFunc, buttonWidth, buttonHeight, iconData)\t\t\r\n\t\tnew Dialog({\r\n\t\t\ttitle: title,\r\n\t\t\tbuttons: buttons\r\n\t\t}, dialogueOptions).render(true)\r\n}))}\r\nexport const getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nexport const getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nexport const getSpawnLocation = async (spawnIconPath, size, interval, tokenUuid, itemRange, originToken) => {\r\n\tawait setCrosshairConfigs(tokenUuid, itemRange)\r\n\tconst distanceAvailable = itemRange\r\n\tlet crosshairsDistance = 0\r\n\tconst checkDistance = async (crosshairs) => {\r\n\t\twhile (crosshairs.inFlight) {\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t\tconst ray = new Ray(originToken.center, crosshairs)\r\n\t\t\tconst distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0]\r\n\t\t\tif (crosshairsDistance !== distance) {\r\n\t\t\t\tcrosshairsDistance = distance;\r\n\t\t\t\tif (distance > distanceAvailable) {\r\n\t\t\t\t\tcrosshairs.icon = 'icons/svg/hazard.svg';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcrosshairs.icon = spawnIconPath\r\n\t\t\t\t}\r\n\t\t\t\tcrosshairs.draw();\r\n\t\t\t\tcrosshairs.label = `${distance} ft`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst location = await warpgate.crosshairs.show(\r\n\t\t{\r\n\t\t\tsize: size,\r\n\t\t\tinterval: interval,\r\n\t\t\ticon: spawnIconPath,\r\n\t\t\tlabel: '0 ft.',\r\n\t\t},\r\n\t\t{\r\n\t\t\tshow: checkDistance\r\n\t\t},\r\n\t)\r\n\tif (location.cancelled || crosshairsDistance > distanceAvailable) {\r\n\t\treturn\r\n\t} else {\r\n\t\treturn location\r\n\t}\r\n}\r\nexport const getTemplatesInRange = (templates, gridSize, gridScale, range, x1, y1) => {\r\n\t//gets templates where center of template within range of a cast template\r\n\treturn templates.filter(template => {\r\n\t\tconst [a, b] = [x1 - template.x, y1 - template.y]\r\n\t\tconst c  = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\tconst templateCentersDistance = c / gridSize\t\r\n\t\tconst templateRangeModified = template.distance / gridScale\t\r\n\t\tconst itemRangeModified = range / gridScale\t\t\r\n\t\treturn templateCentersDistance < templateRangeModified + itemRangeModified\r\n\t})\r\n}\r\nexport const getTemplatesWithOverlap = (eligibleTemplates, itemTemplatePositions) => {\r\n\treturn eligibleTemplates.filter(template => {\r\n\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\tconst templatePositions = canvas.grid.highlightLayers[gridTemplateId]?.positions ?? new Set(\"-1\")\r\n\t\treturn itemTemplatePositions.intersection(templatePositions).size > 0\r\n\t})\r\n}\r\nexport const getTokensInRange = async (tokens, gridSize, gridScale, itemRange, x1, y1) => {\r\n\treturn tokens.filter(token => {\r\n\t\tconst tokenTopLeftCenterX = token.x + gridSize / 2\r\n\t\tconst tokenTopLeftCenterY = token.y + gridSize / 2\r\n\t\tlet tokenGridBorderCoords = []\r\n\t\t\r\n\t\tfor (let i = 0; i <= token.width * 2 - 1; i++) {\r\n\t\t\tfor (let j = 0; j <= token.width * 2  - 1; j++) {\r\n\t\t\t\ttokenGridBorderCoords.push({x: tokenTopLeftCenterX + gridSize / 2 * i, y: tokenTopLeftCenterY + gridSize / 2 * j})\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst xArr = tokenGridBorderCoords.map(coord => coord.x)\r\n\t\tconst yArr = tokenGridBorderCoords.map(coord => coord.y)\r\n\t\tconst maxX = Math.max(...xArr)\r\n\t\tconst maxY = Math.max(...yArr)\r\n\t\tconst tokenGridCoords = tokenGridBorderCoords.filter(coords => coords.x != maxX && coords.y != maxY)\r\n\t\t\r\n\t\tconst tokenGridCoordsInRange = tokenGridCoords.filter(coord => {\r\n\t\t\tconst [x2, y2] = [coord.x, coord.y]\r\n\t\t\tconst a = x1 - x2\r\n\t\t\tconst b = y1 - y2\r\n\t\t\tconst c = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\t\treturn c / gridSize <= itemRange / gridScale\r\n\t\t})\r\n\t\t\r\n\t\treturn tokenGridCoordsInRange.length > 0\r\n\t})\r\n}\r\nexport const getUpdatedMacroNames = async (macroNames, flagName, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + `,[postRollFinished]function.CHARNAME.macros.${flagName}.deleteTempItem` \r\n\t\t\t: `[postRollFinished]function.CHARNAME.macros.${flagName}.deleteTempItem`\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + `,[postActiveEffects]function.CHARNAME.macros.${flagName}.setReactionHook`\r\n\t} \r\n\treturn update\r\n}\r\nexport const removeEffect = async (effectUuid) => {return await MidiQOL.socket().executeAsGM(\"removeEffect\", {effectUuid: effectUuid})}\r\nexport const setActiveEffects = async (tokenActorUuids, effectData) => {\r\n\tconst createEffect = async (tokenActorUuid, effectData) => {return await MidiQOL.socket().executeAsGM(\"createEffects\", {actorUuid: tokenActorUuid, effects: [effectData]})}\r\n\tconst [effects] = await Promise.all(tokenActorUuids.map(tokenActorUuid => createEffect(tokenActorUuid, effectData)))\r\n\treturn effects\r\n}\r\nexport const setActorConcDeletion = async (actor) => {\r\n\tif (actor.effects.find(effect => effect.name == \"Concentrating\")) actor.effects.find(effect => effect.name == \"Concentrating\").delete()\r\n} \r\nexport const setActorConcRemoveUuids = async (originActor, uuid) => {\r\n\tlet originActorConcentrationRemoveUuids = originActor.flags[\"midi-qol\"][\"concentration-data\"]?.removeUuids || []\r\n\toriginActorConcentrationRemoveUuids.push(uuid)\t\r\n\tawait originActor.update({\"flags.midi-qol\": {\"concentration-data\": {removeUuids: originActorConcentrationRemoveUuids}}})\r\n\tconst concEffect = originActor.effects.find(effect => effect.name == \"Concentrating\")\r\n\tawait concEffect.update({\r\n\t\t\"flags.dae\": {\"specialDuration\": [\"shortRest\", \"longRest\"]}\r\n\t})\r\n}\r\nexport const setActorReagentCost = async (actorUuid, itemUuid) => {\r\n\tconst actor = await fromUuid(actorUuid)\r\n\tconst item = await fromUuid(itemUuid)\t\r\n\tif (settings.reagentsConsume = \"money\")  {\r\n\t\t//set this to pull from the lower denominations first\r\n\t\tconst newMoney = actor.system.currency.gp - item.system.materials.cost\r\n\t\tif (newMoney < 0) return false\r\n\t\tactor.update({\"system.currency.gp\": newMoney})\r\n\t} else if (settings.reagentsConsume = \"supply\") {\r\n\t\tconst newSupply = item.system.materials.supply - 1\r\n\t\tif (newSupply < 0) return false\r\n\t\titem.update({\"system.materials.supply\": newSupply})\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n\treturn true\r\n}\r\nexport const setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nexport const setCrosshairConfigs = async (tokenUuid, itemRange) => {\r\n\tconst target = await fromUuid(tokenUuid)\r\n\tconst {distance} = canvas.scene.grid\r\n\twarpgate.crosshairs.show({\r\n\t\tlockSize:true,\r\n\t\tlockPosition: true,\r\n\t\tsize: target.width + (2*itemRange/distance),\r\n\t\ttag: 'range',\r\n\t\tdrawIcon:false,\r\n\t\tlabel: 'Valid Area',\r\n\t\tx: target.x,\r\n\t\ty: target.y,\r\n\t\trememberControlled: true\r\n\t})\t\r\n\tcanvas.tokens.activate()\r\n}\r\nexport const setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nexport const setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nexport const setTemplateDispels = async (x, y, name, itemTemplatePositions) => {\r\n\tconst dnd5eFlaggedTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e)\r\n\tconst potentialTemplates = dnd5eFlaggedTemplates.filter(template => {\r\n\t\tconst originName = fromUuidSync(template.flags.dnd5e.origin).name\r\n\t\tif (!name) {\r\n\t\t\treturn template.flags.dnd5e.spellLevel\r\n\t\t} else {\r\n\t\t\treturn template.flags.dnd5e.spellLevel && originName == name\t\r\n\t\t}\r\n\t})\r\n\tconst templatesInRange = getTemplatesInRange(potentialTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 60, x, y)\r\n\tconst templatesWithOverlap = getTemplatesWithOverlap(templatesInRange, itemTemplatePositions)\r\n\ttemplatesWithOverlap.map(template => {socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)})\r\n}\r\nexport const updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {getTokensInRange} from \"../../helper-functions.js\"\r\n\r\nasync function getEligibleTokenDocuments(tokenDocuments, scene, itemRange, originX, originY) {\r\n\tconst tokenDocsInRange = await getTokensInRange(tokenDocuments, scene.grid.size, scene.grid.distance, itemRange, originX, originY)\r\n\tif (!tokenDocsInRange) return false\r\n\tconst templateNonEffectedTokens = await getNonTemplateEffectedTokenDocs(tokenDocsInRange)\r\n\tif (!templateNonEffectedTokens) return false\r\n\treturn templateNonEffectedTokens\r\n}\r\nasync function getNonTemplateEffectedTokenDocs(tokenDocuments, itemEffectName) {\r\n\treturn tokenDocuments.filter(token => {\r\n\t\tconst effects = token.actor.statuses\r\n\t\treturn effects.has(itemEffectName) == false\r\n\t})\r\n}\r\nconst onUse = async ({args, workflow, item, actor, token}) => {\r\n\tconst itemEffectName = \"Convenient Effect: Aura of Purity\"\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\tconst scene = await fromUuid(template.parent.uuid)\r\n\tconst itemRange = args[0].item.system.target.value\r\n\tconst tokenDocs = Array.from(scene.collections.tokens.values())\r\n\t\r\n\tconst eligibleTokenDocs = await getEligibleTokenDocuments(tokenDocs, scene, itemRange, template.x, template.y)\r\n\tif (!eligibleTokenDocs) return false\r\n\r\n\tconst tokenEffectUuids = await setTokenEffects(eligibleTokenDocs, token.document.disposition)\r\n\tawait template.update({\r\n\t\t\"flags.castData.auraOfPurity.tokensEffected\": tokenEffectUuids\r\n\t})\r\n}\r\nconst preTargetSave = async ({args, workflow, item, actor}) => {\r\n\tconst itemHasEffect = item.effects.some(effect => effect.changes.some(change => {\r\n\t\treturn conditionLabels[\"blinded\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"charmed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"deafened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"frightened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"paralyzed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"stunned\"].includes(change.value.toLowerCase())\r\n\t}))\r\n\tif (itemHasEffect) workflow.saveDetails.advantage = true\r\n}\r\nasync function setTokenEffects(tokenDocs, casterDisposition) {\r\n\tlet effected = []\r\n\tlet uuid = \"\"\r\n\tfor (let i=0; i < tokenDocs.length; i++) {\r\n\t\tconsole.log(\"tokenDocs[i]\")\r\n\t\tconsole.log(tokenDocs[i])\r\n\t\tuuid = tokenDocs[i].actor.uuid\r\n\t\tif ((casterDisposition == 1 && tokenDocs[i].disposition != -1)\r\n\t\t\t|| (casterDisposition == -1  && tokenDocs[i].disposition != 1)) {\r\n\t\t\tgame.dfreds.effectInterface.addEffect( {effectName: 'Aura of Purity', uuid} )\r\n\t\t\teffected.push(uuid)\r\n\t\t}\r\n\t}\r\n\treturn effected\r\n}\r\n\r\nexport const auraOfPurity = {\r\n\tpreTargetSave,\r\n\tonUse\r\n}","import {getSpawnLocation, setActorConcDeletion, setActorConcRemoveUuids} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getSpawnUpdates = async (originActorSenses, originTokenSight) => {\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"alpha\": 0,\r\n\t\t\t\"sight\": originTokenSight\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"system.attributes.senses\": originActorSenses\r\n\t\t}\r\n\t}\r\n}\r\nconst getTokenSpawnIds = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawnedTokenId = await setSpawnedTokenId(tokenUuid, itemRange, actor, originToken)\r\n\tconst spawnedToken = canvas.scene.collections.tokens.get(spawnedTokenId)\r\n\treturn spawnedToken.uuid\r\n}\r\nconst getWarpgateCallbacks = async (tokenUuid) => {\r\n\treturn {\r\n\t\tpre: async (template,update,token) => {\r\n\t\t\tsetEffectsSequencer(template, update, token, tokenUuid)\r\n\t\t\tawait warpgate.wait(2650)\r\n\t\t},\r\n\t\tpost: async (template, token) => {\r\n\t\t\tsetPostEffectsSequencer(template,token)\r\n\t\t}\r\n\t}\r\n}\r\nconst getWarpgateOptions = async (actor) => {\r\n\treturn {controllingActor: actor}\r\n}\r\nconst getWarpgateUpdates = async (spawn, originActorSenses, originTokenSight) => {\r\n\tconst updates = await getSpawnUpdates(originActorSenses, originTokenSight)\r\n\treturn mergeObject(updates, spawn)\r\n}\r\nconst setEffectsSequencer = async (template, update, token, originTokenUuid) => {\r\n\tconst color = \"blue\"\r\n\tconst originToken = await fromUuid(originTokenUuid)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.intro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.loop.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.outro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\t\r\n}\r\nconst setHookMacros = async (actor, spawnedTokenUuid) => {\r\n\tconst userIsGM = game.users.find(user => user.id == game.userId).isTheGM\r\n\tif (!userIsGM) {\r\n\t\tawait socket.executeAsGM(\"setDeleteSummonConcentrationHook\", actor, spawnedTokenUuid)\r\n\t}\r\n\tconst deleteSummonConcentrationHookId = Hooks.on(\"deleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", deleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\r\n}\r\nconst setPostEffectsSequencer = async (template, token) => {\r\n\tconst sequencerPath = \"jb2a.impact.009.blue\"\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.fadeIn(250)\t\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\t\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t.play()\r\n\t\r\n}\r\nconst setPostSpawnEffects = async (spawnedTokenUuid, originTokenActorUuid) => {\r\n\tconst fromUuidActor = await fromUuid(originTokenActorUuid)\r\n\tawait setActorConcRemoveUuids(fromUuidActor, spawnedTokenUuid)\r\n\tawait setHookMacros(fromUuidActor, spawnedTokenUuid)\t\r\n}\r\nconst setSpawnedTokenId = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawn = {\r\n\t\ttoken: { name:\"Clairvoyance\"},\r\n\t\tactor: { name:\"Clairvoyance\"}\r\n\t}\r\n\tconst location = await getSpawnLocation(\"modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_Grey_Sphere_400x400.webm\", 1, 4, tokenUuid, itemRange, originToken)\r\n\tconst spawnedTokenId = await warpgate.spawnAt({x: location.x, y: location.y}, spawn.token.name, await getWarpgateUpdates(spawn, actor.system.attributes.senses, originToken.document.sight), await getWarpgateCallbacks(tokenUuid), await getWarpgateOptions(actor))\r\n\treturn spawnedTokenId[0]\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tawait setActorConcDeletion(actor)\r\n\t} else {\t\r\n\t\tconst spawnedTokenUuid = await getTokenSpawnIds(args[0].tokenUuid, 5280, actor, token)\t\t\r\n\t\tawait setPostSpawnEffects(spawnedTokenUuid, token.document.actor.uuid)\t\r\n\t}\r\n}\r\n\r\nexport const clairvoyance = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getDialogueButtonType, setActiveEffects, setTemplateDispels} from \"../../helper-functions.js\"\r\nimport {setAreaEffectDeleteHook} from \"../../hooks.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getEffectOriginData = async (originUuid, lightId) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\torigin: originUuid,\r\n\t\tchanges: [{key: \"macro.execute\", mode: 0, value: \"function.CHARNAME.macros.daylight.setSpellEffects\"}],\r\n\t\t\"flags.castData.daylight.lightId\": lightId,\r\n\t\t\"flags.dae.showIcon\": false,\t\t\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": true,\t\t\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectTokenData = async (originUuid) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\tduration: {rounds: 600},\r\n\t\torigin: originUuid,\r\n\t\tchanges: [\r\n\t\t\t{key: `ATL.light.dim`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [120]},\r\n\t\t\t{key: `ATL.light.bright`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [60]},\r\n\t\t\t{key: `ATL.light.attenuation`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [.35]}\r\n\t\t],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": false,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.showIcon\": true,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area of Effect\":\r\n\t\t\treturn \"icons/magic/air/weather-clouds-sunlight.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/air/weather-sunlight-sky.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst setAreaChoiceEffects = async (templateUuid, templateEffect, tokenActorUuid, itemUuid, positions) => {\r\n\tconst [x, y] = await setTemplateEffects(templateUuid, templateEffect, positions)\r\n\tconst lightParams = {\"x\": x, \"y\": y, \"config\": {\"bright\": 60, \"dim\": 120, \"attenuation\": .4}}\r\n\tconst [sanitizedLight] = await socket.executeAsGM(\"setAmbientLightCreate\", lightParams)\r\n\tconst [effect] = await setActiveEffects([tokenActorUuid], await getEffectOriginData(itemUuid, sanitizedLight._id))\t\r\n\tawait setAreaEffectDeleteHook(60, x, y, [\"Darkness\"], 9, effect, positions)\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token) => {\r\n\tif (!token) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation({\"x\": x, \"y\": y})\r\n\t\t\t.play()\t\t\t\t\r\n\t} else {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.attachTo(token)\r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst setInitChoice = async (itemUuid)  => {\r\n\tconst type = await getDialogueButtonType([\"Area of Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Daylight?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tconst target = game.user.targets.first()\r\n\t\tawait setActiveEffects([target.document.actor.uuid], await getEffectTokenData(itemUuid))\r\n\t\tawait setEffectsSequencer(0, 0, target.document.width, target)\r\n\t\treturn false\t\t\t\r\n\t}\t\r\n\treturn true\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tconst isAreaChoice = await setInitChoice(item.uuid)\r\n\t\tif (!isAreaChoice) return false\r\n\t} else if (args[0].tag == \"OnUse\" && args[0].macroPass == \"postActiveEffects\") {\r\n\t\tconst templateId = \"MeasuredTemplate.\" + args[0].templateId \r\n\t\tconst templatePositions = canvas.grid.highlightLayers[templateId].positions\r\n\t\tconst templateEffect = actor.effects.find(effect => effect.name == \"Daylight Template\")\r\n\t\tawait setAreaChoiceEffects(args[0].templateUuid, templateEffect, token.document.actor.uuid, item.uuid, templatePositions)\r\n\t} else if (args[0] == \"off\")  {\r\n\t\tconst lastArg = args[args.length - 1]\r\n\t\tawait socket.executeAsGM(\"setAmbientLightDelete\", lastArg.efData.flags.castData.daylight.lightId)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setTemplateEffects = async (templateUuid, templateEffect, templatePositions) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tawait setEffectsSequencer(template.x, template.y, 7, false)\r\n\tawait setTemplateDispels(template.x, template.y, \"Darkness\", templatePositions)\r\n\ttemplateEffect.delete()\r\n\treturn [template.x, template.y]\r\n}\r\n\r\nexport const daylight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getTemplatesInRange, getTemplatesWithOverlap} from \"./helper-functions.js\"\r\nimport {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const setAreaEffectDeleteHook = async (range, x, y, ineligibleEffectNames, minSpellLevel, originTemplateActiveEffect, itemTemplatePositions) => {\r\n\tconst setAreaEffectDeleteHookId = Hooks.on(\"refreshMeasuredTemplate\", (templateData) => {\r\n\t\tconst template = templateData.document\t\t\r\n\t\tconst originFlag = template.flags?.dnd5e?.origin ?? false\r\n\t\tconst templateSpellLevel = template.flags?.dnd5e?.spellLevel ?? 0\r\n\t\tif (!originFlag || templateSpellLevel > minSpellLevel) return false\t\t\r\n\t\tconst origin = fromUuidSync(template.flags.dnd5e.origin)\r\n\t\tif (ineligibleEffectNames.includes(origin.name) || ineligibleEffectNames == \"all\") {\t\r\n\t\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\t\tconst gridTemplatePositions = canvas.grid.highlightLayers[gridTemplateId].positions\t\r\n\t\t\tconst templatesOverlap = itemTemplatePositions.intersection(gridTemplatePositions).size > 0 \r\n\t\t\tif (!templatesOverlap) return false\r\n\t\t\t//waiting for potential concentration effects to cycle through\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsocket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)\r\n\t\t\t}, 200)\t\t\t\t\r\n\t\t}\r\n\t})\r\n\tawait setAreaEffectDeleteHookOff(originTemplateActiveEffect, setAreaEffectDeleteHookId)\r\n}\r\nexport const setAreaEffectDeleteHookOff = async (templateEffect, setAreaEffectDeleteHookId) => {\r\n\tconst setAreaEffectDeleteHookOffId = Hooks.on(\"deleteActiveEffect\", (effect, config) => {\t\t\t\r\n\t\tif (effect.uuid == templateEffect.uuid) {\r\n\t\t\tHooks.off(\"createMeasuredTemplate\", setAreaEffectDeleteHookId)\r\n\t\t\tHooks.off(\"deleteActiveEffect\", setAreaEffectDeleteHookOffId)\r\n\t\t}\r\n\t})\r\n}","import {getDialogueButtonType, getTemplatesInRange} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst deleteEffectsOnToken = async (casterToken, dispelAbility, dispelLevel) => {\r\n\tconst target = game.user.targets.first()\t\r\n\tconst [effectsLTE2DispelLevel, effectsGTDispelLevel] = await getTokenEffects(target, dispelLevel)\r\n\tconst effectsIdsToDelete = await getEffectsToDelete(casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel)\r\n\teffectsIdsToDelete.map(socket.executeAsGM(\"setActiveEffectDelete\", target.actor, effectsIdsToDelete[i]))\r\n}\r\nconst deleteTemplate = async (casterToken, dispelAbility, dispelLevel, selectedTemplate) => {\r\n\tconst spellLevel = selectedTemplate.flags.dnd5e.spellLevel\r\n\tconst templatesToDelete = dispelLevel < spellLevel ? await getTemplatesToDelete(casterToken, dispelAbility, [selectedTemplate]) : [selectedTemplate]\r\n\ttemplatesToDelete.map(template => socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid))\r\n}\r\nconst getEffectsToDelete = async (casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel) => {\r\n\tconst casterAbilityMod = casterToken.actor.system.abilities[dispelAbility].mod\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet effectCastLevel = 0\r\n\tfor (let i = 0; i < effectsGTDispelLevel.length; i++) {\r\n\t\teffectCastLevel = effectsGTDispelLevel[i].flags[\"midi-qol\"].castData.castLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > effectCastLevel + 10) arr.push(effectsGTDispelLevel[i])\t\t\r\n\t}\r\n\treturn effectsLTE2DispelLevel.concat(arr).map(effect => effect.id)\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area Effect\":\r\n\t\t\treturn \"icons/magic/air/air-burst-spiral-blue-gray.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/nature/plant-sprout-hand-blue.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelectedTemplate = async (casterToken) => {\r\n\tconst eligibleTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e.spellLevel > 0)\r\n\tconst inRangeEligibleTemplates = getTemplatesInRange(eligibleTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 120, casterToken.x, casterToken.y)\t\r\n\tlet originItem\r\n\tlet originItems = []\r\n\tfor (let i = 0; i < inRangeEligibleTemplates.length; i++) {\r\n\t\toriginItem = await fromUuid(inRangeEligibleTemplates[i].flags.dnd5e.origin)\r\n\t\toriginItems.push(originItem)\r\n\t}\r\n\treturn await getTemplateSelection(originItems, inRangeEligibleTemplates)\r\n}\r\nconst getTemplateSelection = async (items, inRangeEligibleTemplates) => {\r\n\tconst sortedTemplates = inRangeEligibleTemplates.sort((a, b) => {\r\n\t\tconst aOrig = fromUuidSync(a.flags.dnd5e.origin)\t\r\n\t\tconst bOrig = fromUuidSync(b.flags.dnd5e.origin)\r\n\t\treturn aOrig.name.localeCompare(bOrig.name)\r\n\t})\r\n\tconst templateSelections = items.map((item, i) => {\r\n\t\tconst itemOwnerName = canvas.scene.tokens?.find(token => token.actor.uuid == item.parent.uuid)?.name ?? \"unknown\"\r\n\t\tconst itemLabel = item.name + \" from \" + itemOwnerName\t\r\n\t\treturn {type: 'radio', label: itemLabel}\r\n\t}).sort((a, b) => a.label.localeCompare(b.label))\t\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: templateSelections\r\n\t\t},{\r\n\t\t\ttitle: \"Which template to dispel?\",\r\n\t\t\trender: (...args) => { console.log(...args); ui.notifications.info(\"render!\")},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100px\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn sortedTemplates[choices.inputs.indexOf(true)]\r\n}\r\nconst getTemplatesToDelete = async (casterToken, dispelAbility, potentialTemplates) => {\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet templateCastLevel = 0\r\n\tfor (let i = 0; i < potentialTemplates.length; i++) {\r\n\t\ttemplateCastLevel = potentialTemplates[i].flags.dnd5e.spellLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > potentialTemplates[i].flags.dnd5e.spellLevel + 10) arr.push(potentialTemplates[i])\t\t\r\n\t}\t\r\n\treturn arr\r\n}\r\nconst getTokenEffects = async (token, dispelLevel) => {\r\n\t//get two groups, 1: effects w/ spell levels lesser than or equal to the casted spell level of dispel magic; and 2: the same with greater than that level\r\n\tconst effectsLTE2DispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > 0 && effect.flags[\"midi-qol\"].castData.baseLevel <= dispelLevel)\r\n\tconst effectsGTDispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > dispelLevel)\r\n\treturn [effectsLTE2DispelLevel, effectsGTDispelLevel]\r\n} \r\nconst setInitChoice = async (casterUuid, dispelAbility, dispelLevel)  => {\r\n\tconst type = await getDialogueButtonType([\"Area Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Dispel Magic?\", getIconPaths, 60, 60)\r\n\tconst casterToken = await fromUuid(casterUuid)\t\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tdeleteEffectsOnToken(casterToken, dispelAbility, dispelLevel)\t\r\n\t} else if (type.value == \"Area Effect\") {\r\n\t\tconst selectedTemplate = await getSelectedTemplate(casterToken)\r\n\t\tdeleteTemplate(casterToken, dispelAbility, dispelLevel, selectedTemplate)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setSpellEffects = async ({args, item, workflow}) => {\r\n\tconst casterUuid = args[0].tokenUuid\r\n\tconst dispelAbility = args[0].actor.system.attributes.spellcasting\r\n\tconst dispelLevel = args[0].spellLevel < 3 ? 3 : args[0].spellLevel\r\n\tsetInitChoice(casterUuid, dispelAbility, dispelLevel)\r\n}\r\n\r\nexport const dispelMagic = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {cloudSpellNames} from \"../../constants.js\"\r\n\r\nconst getAoeOverlapPerc = async (args) => {\r\n\tconst creatureCoords = await getCreatureCoords(args[0].actor.token)\r\n\tconst templateCoords = await getTemplateCoords(args[0].templateId) ?? false\r\n\tif (!templateCoords) return 0\r\n\tconst overlap = creatureCoords.intersection(templateCoords)\r\n\treturn overlap.size / creatureCoords.size\r\n}\r\nconst getCreatureCoords = async (tokenDoc) => {\r\n\tconst gridSize = canvas.scene.grid.size\r\n\tlet set = new Set()\r\n\tlet position = \"\"\r\n\tfor (let i = 0; i < tokenDoc.height; i++) {\r\n\t\tfor (let j = 0; j < tokenDoc.width; j++) {\r\n\t\t\tposition = (tokenDoc.x + gridSize*i).toString() + \".\" + (tokenDoc.y + gridSize*j).toString() \r\n\t\t\tset.add(position)\r\n\t\t}\r\n\t}\r\n\treturn set\r\n}\r\nconst getNewDamage = async(hpDamage, hordeCount, multiplier, hasAreaTarget) => {\r\n\treturn hasAreaTarget ? Math.floor(hpDamage * hordeCount * multiplier) : hpDamage\r\n}\r\nconst getTemplateCoords = async (templateId) => {\r\n\tconst templateIdStr = \"MeasuredTemplate.\" + templateId\r\n\treturn canvas.grid.highlightLayers[templateIdStr].positions\r\n}\r\nconst isSaveFailure = async ({args, item}) => {\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tconsole.log(await getAoeOverlapPerc(args))\r\n\tif (!item.system.hasAreaTarget || await getAoeOverlapPerc(args) <= .666) {\r\n\t\tHooks.once(\"createActiveEffect\", (effect) => {\t\t\t\r\n\t\t\teffect.delete()\r\n\t\t})\r\n\t}\t\r\n}\r\nconst preTargetDamageApplication = async ({actor, args, item, workflow, token}) => {\r\n\tif (workflow.hitTargets.size < 1) return false\r\n\tconst hordeItem = await fromUuid(actor.items.find(item => item.name == \"Horde\").uuid)\r\n\tconst hordeItemUses = hordeItem.system.uses.value\r\n\tconst hordeItemUsesMax = hordeItem.system.uses.max\r\n\tconst liveTokenDoc = await fromUuid(token.document.uuid)\r\n\tconst hpDamage = workflow.damageItem.hpDamage\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tif (hpDamage > 0) setHpUpdateEffects(actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args)\r\n}\r\nconst setHpUpdateEffects = async (actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args) => {\r\n\tconst aoeOverlapPerc = await getAoeOverlapPerc(args)\r\n\tconst newHpDamage = await getNewDamage(hpDamage, hordeItemUses, aoeOverlapPerc, hasAreaTarget)\r\n\tworkflow.damageItem.hpDamage = newHpDamage\r\n\tsetPostDamageUpdates(actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax)\r\n}\r\nconst setLiveTokenDocUpdates = async (texture, hordeItem, hordeItemUsesMax, multiplier, liveTokenDoc, shouldReduce, tokenSizeNum) => {\r\n\t\thordeItem.update({\"system.uses.value\": hordeItemUsesMax * multiplier})\r\n\t\tif (tokenSizeNum > 2 && shouldReduce) {\r\n\t\t\tawait warpgate.wait(4000)\t\r\n\t\t\tsetSequencer(liveTokenDoc)\r\n\t\t\tawait warpgate.wait(200)\t\r\n\t\t\tif (liveTokenDoc.actor.system.traits.size != \"grg\" && liveTokenDoc.width <= 4 && liveTokenDoc.width <= 4) {\r\n\t\t\t\tliveTokenDoc.actor.update({\"system.traits.size\": Object.keys(CONFIG.DND5E.actorSizes)[tokenSizeNum - 1]})\r\n\t\t\t}\r\n\t\t\tliveTokenDoc.update({\"width\": liveTokenDoc.width - 1, \"height\": liveTokenDoc.width - 1})\t\r\n\t\t}\r\n\t\tliveTokenDoc.update({\"texture.src\": texture})\r\n}\r\nconst setPostDamageUpdates = async (actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax) => {\r\n\tconst newHealthPercentage = ((actor.system.attributes.hp.value - newHpDamage) / actor.system.attributes.hp.max) * 100\r\n\tconst tokenSizeNum = Object.keys(CONFIG.DND5E.actorSizes).indexOf(liveTokenDoc.actor.system.traits.size)\r\n\tlet shouldReduce = false\r\n\tif (75 >= newHealthPercentage && newHealthPercentage > 50) {\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img1, hordeItem, hordeItemUsesMax, .75, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (50 >= newHealthPercentage && newHealthPercentage > 25) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img2, hordeItem, hordeItemUsesMax, .50, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (25 >= newHealthPercentage && newHealthPercentage >= 0) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img3, hordeItem, hordeItemUsesMax, .25, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} \r\n}\r\nconst setSequencer = async (liveTokenDoc) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(liveTokenDoc.actor.flags[\"midi-qol\"].hordePassive.sequencerPath)\r\n\t\t\t.atLocation(liveTokenDoc)\r\n\t\t.play()\r\n}\r\n\r\nexport const hordePassive = {\r\n\tisSaveFailure,\r\n\tpreTargetDamageApplication\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const ringOfSpellStoring = {\r\n\taddSpellErr:\t\t\"Your Ring of Spell Storing doesn't have enough room left for a spell!\",\r\n\tcastSpellErr:\t\t\"Your Ring of Spell Storing doesn't have any spells on it!\",\t\r\n\tcastSpellHeader:\t\"Which spell do you wan to cast?\",\r\n\tcharHeader: \t\t\"Who is casting onto the ring?\",\r\n\tcurrSpellBank:\t\t\"Current Spell Bank\",\r\n\tdescLevel: \t\t\t\", Level \",\r\n\tcharnamesExceptions:[\"Shadowfell Vine Strike\", \"Necrotic Blast\", \"Summon Shadow Clone\", \"Animate Shadow Servant\", \"Mud\", \"Taunt\"],\r\n\tinitChoices:\t\t[\"Add Spells\", \"Cast Spell\", \"Empty Spells\"],\r\n\tinitHeader: \t\t\"What do you want to cast?\",\r\n\tlevelHeader:\t\t\"What level spell do you want to add?\",\r\n\tlevelLabels:\t\t[\"One\", \"Two\", \"Three\", \"Four\", \"Five\"],\r\n\tspellHeader:\t\t\"Which spell is being cast onto the ring?\",\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tinstrumentSpellNames: {\r\n\t\tanstruthHarp: \t\t[\"Control Weather\", \"Cure Wounds\", \"Wall of Thorns\"],\r\n\t\tcanaithMandolin: \t[\"Cure Wounds\", \"Dispel Magic\", \"Protection from Energy (Lightning)\"],\r\n\t\tcliLyre: \t\t\t[\"Stone Shape\", \"Wall of Fire\", \"Wind Wall\"],\r\n\t\tdossLute: \t\t\t[\"Animal Friendship\", \"Protection from Energy (Fire)\", \"Protection from Poison\"],\r\n\t\tfochlucanBandore: \t[\"Entangle\", \"Faerie Fire\", \"Shillelagh\", \"Speak with Animals\"],\r\n\t\tgeneric: \t\t\t[\"Fly\", \"Invisibility\", \"Levitate\", \"Protection from Evil and Good\"],\r\n\t\tmacFuirmidhCittern: [\"Barkskin\", \"Cure Wounds\", \"Fog Cloud\"],\r\n\t\tollamhHarp: \t\t[\"Confusion\", \"Control Weather\", \"Fire Storm\"]\r\n\t},\r\n\tinitHeader: \t\t\t\"Choose a spell to cast!\"\r\n}\r\n\r\nexport const staffOfSwarmingInsects = {\r\n\tallChoices: \t\t[\"Giant Insect\", \"Insect Cloud\", \"Insect Plague\", \"Melee (1h)\", \"Melee (2h)\"],\r\n\tdamageWeaponName:\t\"Staff of Swarming Insects - Damage\",\r\n\tinitHeader: \t\t\"What do you want to do?\",\r\n\tmeleeChoices: \t\t[\"Melee (1h)\", \"Melee (2h)\"],\r\n\tspellNames: \t\t[\"Giant Insect\", \"Insect Cloud\", \"Insect Plague\"]\r\n}","import {deleteTempItem as deleteItem, getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {instrumentOfTheBards as s} from \"../../strings/items.js\"\r\n\r\nconst castSpell = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst updates = await createCastWorkflow(spell, instrument, tokenActor, chosenIndex)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst [tempItem] = await createTempItem(spell, instrument, tokenActor, chosenIndex)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spell.activation)\r\n\tconst itemData = await getTempSpellItem(spell, instrument, updatedMacroNames, chosenIndex)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data, setDeleteItemFlags)\r\n}\r\nconst getCureWoundsData = async (spell, instrument) => {\r\n\tif (instrument.type == \"anstruthHarp\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [5, [\"5d8 + @mod\", \"healing\"]]\r\n\t} else if (instrument.type == \"canaithMandolin\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [3, [\"3d8 + @mod\", \"healing\"]]\r\n\t} else {\r\n\t\treturn [spell.system.level, spell.system.damage.parts]\r\n\t}\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getInstrumentSpells = async (instrument) => {\r\n\t//keeping this for reference\r\n\tswitch(instrument) {\r\n\t\tcase \"anstruthHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Control Weather\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Wall of Thorns\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"canaithMandolin\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Cure Wounds\", \r\n\t\t\t\t\"Dispel Magic\",\r\n\t\t\t\t\"Protection from Energy (Lightning)\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"cliLyre\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Stone Shape\", \r\n\t\t\t\t\"Wall of Fire\",\r\n\t\t\t\t\"Wind Wall\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"dossLute\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Animal Friendship\", \r\n\t\t\t\t\"Protection from Energy (Fire)\",\r\n\t\t\t\t\"Protection from Poison\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"fochlucanBandore\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Entangle\", \r\n\t\t\t\t\"Faerie Fire\",\r\n\t\t\t\t\"Shillelagh\",\r\n\t\t\t\t\"Speak with Animals\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"macFuirmidhCittern\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Barkskin\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Fog Cloud\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"ollamhHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Confusion\", \r\n\t\t\t\t\"Control Weather\",\r\n\t\t\t\t\"Fire Storm\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\treturn spell.img\r\n}\r\nconst getSpellsToCast = async (item, type) => {\r\n\tconst spellNames = [...s.instrumentSpellNames[\"generic\"], ...s.instrumentSpellNames[type]].sort()\r\n\tconst spellData = spellNames.map((name, i) => {\r\n\t\treturn {\"name\": name, id: i}\r\n\t}).filter(spell => item.flags.charname.instrumentOfTheBards.spells[spell.id].isCharged)\r\n\tconst spells = spellData.map(spell => game.items.find(item => item.name.toLowerCase() == spell.name.toLowerCase()))\t\r\n\tconst filteredSpellNames = spells.map(spell => spell.name)\r\n\treturn [spellData, spellNames, filteredSpellNames, spells]\r\n}\r\nconst getTempSpellItem = async (spell, instrument, updatedMacroNames, chosenIndex) => {\r\n\tconst [level, damage] = await getCureWoundsData(spell, instrument)\r\n\treturn mergeObject(duplicate(spell.toObject(false)), {\r\n\t\t\"flags.charname.instrumentOfTheBards.originInstrumentUuid\": instrument.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.originName\": spell.name,\r\n\t\t\"flags.charname.instrumentOfTheBards.originUuid\": spell.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.type\": \"spell\",\r\n\t\t\"flags.charname.instrumentOfTheBards.spellIndex\": chosenIndex,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.damage.parts\": damage,\r\n\t\t\"system.level\": level,\t\t\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.instrumentOfTheBards.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst main = async ({actor, args, token}) => {\r\n\t//\r\n}\r\nconst removeSpells = async (actor, instrument) => {\r\n\t//this erased everything on Nora lol\r\n\t\r\n\treturn Promise.all(actor.items.filter(item => {\r\n\t\tconst originName = item.flags?.charname?.instrumentOfTheBards?.originName ?? null\r\n\t\treturn instrument.spells.filter(spell => spell.name == originName).length > 0\r\n\t}).map(item => item.delete()))\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst instrument = await fromUuid(tempItem.flags.charname.instrumentOfTheBards.originInstrumentUuid)\r\n\tconst index = tempItem.flags.charname.instrumentOfTheBards.spellIndex\r\n\tupdateDeleteItemFlags(instrument, index)\r\n}\r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst updateDeleteItemFlags = async (instrument, index) => {\r\n\tconst updates = instrument.flags.charname.instrumentOfTheBards.spells.map((spell, i) => {\r\n\t\tif (i == index) {\r\n\t\t\treturn {name: spell.name, isCharged: false}\r\n\t\t} else {\r\n\t\t\treturn spell\r\n\t\t}\r\n\t})\r\n\tconst flaggedItem = await instrument.update({\r\n\t\t\"flags.charname.instrumentOfTheBards.spells\": updates\r\n\t})\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\tif (type == \"spell\") return false\t\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\t\t\r\n\tconst [spellData, spellNames, filteredSpellNames, spells] = await getSpellsToCast(liveItem, type)\r\n\tconst choice = await getDialogueButtonType(filteredSpellNames, {width: filteredSpellNames.length * 150, height: \"100%\"}, s.initHeader, getSpellIconPaths, 60, 60, spells)\r\n\tconst spell = spells.find(spell => spell.name == choice.value)\r\n\tconst chosenIndex = spellNames.indexOf(choice.value)\r\n\tcastSpell(spell, liveItem, tokenActor, chosenIndex)\t\r\n}\r\nconst onNewDay = async (actor, data) => {\r\n\tif (!data.newDay) return false\r\n\tconst instruments = actor.items.filter(item => {\r\n\t\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\t\treturn type != \"spell\"\r\n\t}) \r\n\trefreshInstruments(instruments)\r\n}\r\nconst refreshInstruments = async (instruments) => {\r\n\tinstruments.forEach(instrument => {\r\n\t\tconst spells = instrument.flags.charname.instrumentOfTheBards.spells\r\n\t\tconst update = spells.map(spell => {\r\n\t\t\tspell.isCharged = true\r\n\t\t\treturn spell\r\n\t\t})\r\n\t\tinstrument.update({\"flags.charname.instrumentOfTheBards.spells\": update})\r\n\t})\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tdeleteTempItem,\r\n\tonUse,\r\n\tonNewDay\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {protectionFromPoison as s} from \"../../strings/spells.js\"\r\nimport {getDialogueButtonType, removeEffect} from \"../../helper-functions.js\"\r\n\r\nconst getChoices = async (effects) => {\r\n\treturn effects.reduce((acc, effect, i) => {\r\n\t\t\tconst nameAlreadyUsed = acc.find(choice => choice.name == effect.name)\r\n\t\t\tconst name = nameAlreadyUsed ? effect.name + \"-\" + i : effect.name\r\n\t\t\tconst choice = {name: name, icon: effect.icon, uuid: effect.uuid}\r\n\t\t\treturn [...acc, choice]\r\n\t}, [])\r\n}\r\nconst getChosenEffect = async (effects) => {\r\n\tconst choices = await getChoices(effects)\t\t\r\n\tconst buttonNames = choices.map(choice => choice.name)\t\t\r\n\tconst initChoice = await getDialogueButtonType(buttonNames, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60, choices)\r\n\treturn choices.find(effect => effect.name == initChoice.value)\t\r\n}\r\nconst getInitIconPaths = (choice, effects) => {\r\n\tconst chosenEffect = effects.find(effect => effect.name == choice)\r\n\treturn chosenEffect.icon\r\n}\r\nconst getPoisonEffects = () => {\r\n\tconst target = game.user.targets.first()\r\n\treturn target.actor.effects.filter(effect => {\r\n\t\tconst hasPoisonedName = conditionLabels[\"poisoned\"].includes(effect.name.toLowerCase())\r\n\t\tconst hasPoisonedConditions = effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase()))\r\n\t\treturn hasPoisonedName || hasPoisonedConditions\r\n\t})\t\r\n}\r\nconst onUse = async ({item, workflow, args, token}) => {\r\n\tconst poisonEffects = await getPoisonEffects()\r\n\tif (poisonEffects.length > 0) {\r\n\t\tconst chosenEffect = await getChosenEffect(poisonEffects)\r\n\t\tawait removeEffect(chosenEffect.uuid)\t\r\n\t}\r\n}\r\nconst preTargetSave = async ({item, workflow, args}) => {\r\n\tconst hasPoison = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())))\r\n\tif (hasPoison) workflow.saveDetails.advantage = true\r\n}\r\n\r\nexport const protectionFromPoison = {\r\n\tonUse,\r\n\tpreTargetSave\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {ringOfSpellStoring as s} from \"../../strings/items.js\"\r\n\r\nconst addSpell = async (item, tokenActor) => {\r\n\tconst notification = await setAddSpellNotification(item)\r\n\tif (notification) return false\r\n\tconst updates = await getAddSpellUpdates(item, tokenActor)\r\n\tsetAddSpellUpdates(item, updates, tokenActor)\r\n}\r\nconst castSpell = async (item, tokenActor) => {\r\n\tconst updates = await createCastWorkflow(item, tokenActor)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nconst createCastWorkflow = async (item, tokenActor) => {\r\n\tconst spellData = await getSpellToCast(item)\t\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, item)\r\n\tawait setPreUseItemHooks(tempItem, spellData)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, item)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spellData, tokenActor, liveItem) => {\r\n\tconst sourceItem = await fromUuid(spellData.uuid)\t\r\n\tconst sourceMacroNames = await getSourceMacroNames(sourceItem)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spellData.activation)\r\n\tconst itemData = await getTempItem(liveItem, sourceItem, spellData, updatedMacroNames)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async ({args, item, workflow}) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tawait setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nconst getAddCharChoice = async (eligibleSpellsByChar) => {\r\n\tconst charChoices = eligibleSpellsByChar.map(character => character.origin).toSorted()\t\r\n\treturn await getDialogueButtonType(charChoices, {width: 400, height: 150}, s.charHeader, getCharIconPaths, 60, 60, eligibleSpellsByChar)\r\n}\r\nconst getAddLevelChoice = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst levelChoices = await getLevelChoices(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst levelChoice = await getDialogueButtonType(levelChoices, {width: 400, height: 150}, s.levelHeader, getLevelIconPaths, 60, 60)\r\n\t//return value as int\r\n\treturn {value: s.levelLabels.indexOf(levelChoice.value) + 1}\r\n}\r\nconst getAddSpellChoice = async (charChoice, eligibleSpellsByChar, levelChoice) => {\r\n\tconst [spellChoices, spellIcons] = await getSpellChoices(charChoice, eligibleSpellsByChar, levelChoice)\r\n\treturn await getSpellChoice(spellChoices, s.spellHeader, getSpellIconPaths, spellIcons)\t\r\n}\r\nconst getAddSpellChoices = async (eligibleSpellsByChar, item, tokenActor) => {\r\n\tconst charChoice = await getAddCharChoice(eligibleSpellsByChar)\r\n\tconst levelChoice = await getAddLevelChoice(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst spellChoice = await getAddSpellChoice(charChoice, eligibleSpellsByChar, levelChoice.value)\r\n\treturn [charChoice.value, levelChoice.value, spellChoice.value]\r\n}\r\nconst getAddSpellUpdates = async (item, tokenActor) => {\r\n\tconst actors = await getLiveActors()\r\n\tconst eligibleSpellsByChar = await getEligibleSpells(actors)\t\r\n\tconst choices = await getAddSpellChoices(eligibleSpellsByChar, item, tokenActor)\t\r\n\treturn [choices, eligibleSpellsByChar]\r\n}\r\nconst getAttackBonus = (actor, item, ability) => {\r\n\tconst isRangedAttack = item.system.actionType == \"rsak\"\r\n\tconst isMeleeAttack = item.system.actionType == \"msak\"\r\n\tif (!isRangedAttack && !isMeleeAttack) {\r\n\t\treturn 0\r\n\t} else if (isRangedAttack) {\t\t\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.rsak.attack)\r\n\t} else if (isMeleeAttack) {\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.msak.attack)\r\n\t}\r\n}\r\nconst getCharIconPaths = (choice, iconData) => {\t\r\n\tconst match = iconData.find(item => item.origin == choice)\r\n\treturn match.icon\r\n}\r\nconst getDeleteItemFlagData = async (liveItem, tempItem) => {\r\n\tconst spellData = tempItem.flags.charname.ringOfSpellStoring.spellData\r\n\tconst spells = liveItem.flags.charname.ringOfSpellStoring.spells\t\r\n\tconst slotsUsed = liveItem.flags.charname.ringOfSpellStoring.slotsUsed\r\n\tconst usedSpell = spells.find(spell => {\r\n\t\treturn spell.level == spellData.level\r\n\t\t\t&& spell.name == spellData.name \r\n\t\t\t&& spell.dc == spellData.dc \r\n\t\t\t&& spell.ability == spellData.ability\r\n\t})\t\r\n\tconst deleteIndex = spells.indexOf(usedSpell)\r\n\treturn [deleteIndex, slotsUsed, spells, usedSpell.level]\r\n}\r\nconst getDeleteItemFlagUpdates = async (liveItem, tempItem) => {\r\n\tconst [deleteIndex, slotsUsed, spells, usedSpellLevel] = await getDeleteItemFlagData(liveItem, tempItem)\r\n\tconst newSlotsUsed = slotsUsed - usedSpellLevel\r\n\tconst newSpells = spells.filter((spell, i) => i != deleteIndex)\t\r\n\treturn [newSlotsUsed, newSpells]\r\n}\r\nconst getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nconst getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getEligibleLevelSpells = (actor, item) => {\r\n\tconst highestSpellLevel = getHighestSpellLevel(actor.system.spells)\r\n\tconst mode = item.system.preparation.mode\r\n\tlet eligibleLevelSpells = []\r\n\tlet spellData = {}\r\n\tfor (let i = item.system.level; i <= 5; i ++) {\r\n\t\tif (mode == \"atwill\" || mode == \"innate\") {\t\t\t\t\r\n\t\t\tif (i == item.system.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, item.system.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else if (mode == \"pact\") {\r\n\t\t\tif (i == actor.system.spells.pact.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, actor.system.spells.pact.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (i <= highestSpellLevel) {\r\n\t\t\t\tspellData = getSpellData(actor, item, i)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\t\t\r\n\treturn eligibleLevelSpells\r\n}\r\nconst getEligibleSpells = async (actors) => {\r\n\treturn actors.map(actor => {\r\n\r\n\t\tconst eligibleSpells = actor.items.filter(item => item.type == \"spell\" && item.system.level > 0 && item.system.level <= 5)\t\r\n\t\tconst actorSpells = eligibleSpells.reduce((spells, spell) => {\r\n\t\t\tconst eligibleLevelSpells = getEligibleLevelSpells(actor, spell)\r\n\t\t\treturn [...spells, ...eligibleLevelSpells]\r\n\t\t}, [])\r\n\t\treturn {origin: actor.prototypeToken.name, icon: actor.prototypeToken.texture.src, spells: actorSpells}\r\n\t})\r\n}\r\nconst getHighestSpellLevel = (spells) => {\r\n\tlet arr = []\r\n\tlet label\r\n\tfor (let i = 1; i <= 9; i++) {\r\n\t\tlabel = \"spell\" + i\r\n\t\tif (spells[label].max > 0) arr.push(i)\r\n\t}\r\n\treturn Math.max(...arr)\r\n}\r\nconst getInitIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.initChoices[0]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-diamond-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[1]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-pentagon-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[2]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-glowing-triangle-teal-purple.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst getLevelChoices = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst slotsRemaining = 5 - item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\r\n\tconst eligibleLevels = character.spells.map(spell => spell.level).filter(level => level <= slotsRemaining)\r\n\tconst spellLevels = new Set(eligibleLevels)\t\t\t\r\n\treturn Array.from(spellLevels).toSorted().map(level => s.levelLabels[level - 1])\r\n}\r\nconst getLevelIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.levelLabels[0]:\r\n\t\t\treturn \"icons/skills/ranged/target-bullseye-archer-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[1]:\r\n\t\t\treturn \"icons/skills/melee/weapons-crossed-daggers-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[2]:\r\n\t\t\treturn \"icons/skills/ranged/arrows-triple-yellow-red.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[3]:\r\n\t\t\treturn \"icons/skills/ranged/shuriken-thrown-yellow.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[4]:\r\n\t\t\treturn \"icons/skills/ranged/daggers-thrown-salvo-orange.webp\"\r\n\t\t\tbreak\t\t\t\t\r\n\t}\t\r\n}\r\nconst getLiveActors = async () => {\r\n\treturn game.users.filter(user => user.character).filter(user => {\r\n\t\treturn canvas.scene.tokens.find(token => token.actor.uuid == user.character.uuid)\r\n\t}).map(user => user.character)\r\n}\r\nconst getNewSlotsUsed = async(item, level) => {\r\n\tconst slots = item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\treturn slots + level\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellChoice = async (spellChoices, spellHeader, getSpellIconPaths, spellIcons) => {\r\n\tconst sortedChoices = spellChoices.toSorted()\r\n\tconst radioSelections = sortedChoices.map(choice => {\r\n\t\tconst data = spellIcons.find(spell => spell.name == choice)\r\n\t\tconst icon = data.icon\r\n\t\tconst label = `<img align=left src=${icon} width=\"15\" height=\"15\" style=\"border:0px\">${choice}`\r\n\t\treturn {type: \"radio\", label}\r\n\t})\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: radioSelections\r\n\t\t},{\r\n\t\t\ttitle: spellHeader,\r\n\t\t\trender: (...args) => {},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn {value: sortedChoices[choices.inputs.indexOf(true)]}\r\n}\r\nconst getSpellChoices = async (charChoice, eligibleSpellsByChar, levelChoiceInt) => {\t\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\t\r\n\tconst spells = character.spells.filter(spell => spell.level == levelChoiceInt && !s.charnamesExceptions.includes(spell.name))\r\n\tconst names = spells.map(spell => spell.name)\r\n\tconst icons = spells.map(spell => { return {name: spell.name, icon: spell.icon} })\r\n\treturn [names, icons]\r\n}\r\nconst getSpellData = (actor, item, i) => {\r\n\tconst name = item.name\r\n\tconst level = i\r\n\tconst dc = actor.system.attributes.spelldc\r\n\tconst ability = actor.system.attributes.spellcasting\r\n\tconst attackBonus = getAttackBonus(actor, item, ability)\r\n\tconst prof = actor.system.attributes.prof\t\r\n\tconst icon = item.img\r\n\tconst uuid = item.uuid\r\n\tconst activation = item.system.activation.type\r\n\tconst originUuid = actor.uuid\r\n\treturn {name, level, dc, ability, attackBonus, prof, icon, uuid, activation, originUuid}\r\n}\r\nconst getSpellIconPaths = (choice, iconData) => {\r\n\tconst match = iconData.find(item => item.name == choice)\r\n\treturn match.icon\t\r\n}\r\nconst getSpellToCast = async (item) => {\r\n\tconst spells = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tif (spells.length < 1) {\r\n\t\tui.notifications.info(s.castSpellErr)\r\n\t\treturn false\t\t\r\n\t}\t\r\n\tconst uniqueSpells = new Set(spells)\r\n\tconst spellsArr = Array.from(uniqueSpells)\r\n\tconst spellNames = spellsArr.map(spell => spell.name).toSorted()\r\n\tconst chosenSpell = await getDialogueButtonType(spellNames, {width: 400, height: \"100%\"}, s.castSpellHeader, getSpellIconPaths, 60, 60, spellsArr)\r\n\treturn spellsArr.find(spell => spell.name == chosenSpell.value)\r\n}\r\nconst getTempItem = async (liveItem, sourceItem, spellData, updatedMacroNames) => {\r\n\treturn mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\timg: liveItem.img,\r\n\t\t\"flags.charname.ringOfSpellStoring.ringUuid\": liveItem.uuid,\r\n\t\t\"flags.charname.ringOfSpellStoring.spellData\": spellData,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.ability\": \"none\",\r\n\t\t\"system.attackBonus\": spellData.attackBonus,\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t\t\"system.save.dc\": spellData.dc,\r\n\t\t\"system.save.scaling\": \"flat\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedDescription = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spells = item.flags.charname.ringOfSpellStoring.spells.reduce((spells, spell) => {\r\n\t\tconst newSpell = [\"<br />\" + spell.name + s.descLevel + spell.level]\r\n\t\treturn [...spells, ...newSpell]\r\n\t}, []).toSorted()\t\t\r\n\tconst newSpells = spells.reduce((descs, desc) => {\r\n\t\treturn descs + desc\r\n\t}, \"\")\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\r\n\tconst sanitizedDesc = desc.replace(spellBankStr, \"\")\t\r\n\treturn sanitizedDesc + \"<br />*******<br />\" + s.currSpellBank + \":<br />\" + newSpells + \"<br />*******\"\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.ringOfSpellStoring.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst getUpdateRingData = async (charName, eligibleSpellsByChar, item, level, spellName) => {\r\n\tconst chr = eligibleSpellsByChar.find(chr => chr.origin == charName)\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tconst newSlotsUsed = await getNewSlotsUsed(item, level)\r\n\tconst chosenSpell = [chr.spells.find(spell => spell.name == spellName && spell.level == level)]\t\t\r\n\tconst newSpellData = [...spellData, ...chosenSpell]\t\r\n\treturn [chosenSpell, newSlotsUsed, newSpellData]\r\n}\r\nconst main = async ({args, item}) => {\r\n\tconst initChoice = await getDialogueButtonType(s.initChoices, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\r\n\tif (initChoice.value == s.initChoices[0]) {\r\n\t\taddSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[1]) {\r\n\t\tcastSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[2]) {\r\n\t\tresetSpells(liveItem, tokenActor)\r\n\t}\r\n}\r\nconst resetSpells = async (item, tokenActor) => {\r\n\tsetResetSpellsDesc(item)\r\n\tconst tempItems = tokenActor.items.filter(item => item.flags?.charname?.ringOfSpellStoring?.ringUuid ?? false)\r\n\ttempItems.map(item => item.delete())\r\n}\r\nconst setAddSpellNotification = async (item) => {\r\n\tif (item.flags.charname.ringOfSpellStoring.slotsUsed == 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\t\r\n}\r\nconst setAddSpellUpdates = async (item, updates, tokenActor) => {\r\n\tconst [choices, eligibleSpellsByChar] = updates\r\n\tconst [spellData] = await updateRingItem(item, choices, eligibleSpellsByChar)\t\r\n\tif (spellData.activation == \"reaction\") setReactionUpdates(spellData, tokenActor, item)\t\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst liveItem = await fromUuid(tempItem.flags.charname.ringOfSpellStoring.ringUuid)\r\n\tconst updates = await getDeleteItemFlagUpdates(liveItem, tempItem)\r\n\tupdateDeleteItemFlags(liveItem, updates)\r\n}\r\nconst setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst setPreUseItemHooks = async (item, spellData) => {\r\n\tHooks.once(\"dnd5e.preUseItem\", (useItem, config) => {\r\n\t\tif (item.uuid != useItem.uuid) return false\t\r\n\t\tconfig.consumeResource = false\r\n\t\tconfig.consumeSpellSlot = false\r\n\t\tconfig.consumeUsage = false\r\n\t\tconfig.slotLevel = spellData.level\t\r\n\t\tconfig.system.prof._baseProficiency = spellData.prof\t\t\t\r\n\t})\t\t\r\n}\r\nconst setReactionHook = async ({item}) => {\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spellData ?? false\r\n\tif (!spellData) return false\r\n\tsetPreUseItemHooks(item, spellData)\r\n}\r\nconst setReactionUpdates = async (spellData, tokenActor, liveItem) => {\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, liveItem)\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n}\r\nconst setResetSpellsDesc = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\t\r\n\tconst updatedStr = \"<br />*******<br />\" + s.currSpellBank + \":<br /><br />*******\"\r\n\tconst updatedDesc = desc.replace(spellBankStr, updatedStr)\t\r\n\titem.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": [],\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": 0,\r\n\t\t\"system.description.value\": updatedDesc\r\n\t})\t\t\r\n}\r\nconst setRingUpdates = async (chosenSpell, item, newSlotsUsed, newSpellData) => {\r\n\tconst flagUpdate = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpellData,\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed\r\n\t})\t\r\n\tconst updatedDescription = await getUpdatedDescription(item)\t\r\n\tconst descUpdate = await item.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\r\n}\r\nconst setRingUpdatesNotification = async (item, level) => {\r\n\tconst slots = await getNewSlotsUsed(item, level)\r\n\tif (slots > 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\r\n\treturn false\r\n}\r\nconst updateDeleteItemFlags = async (item, updates) => {\r\n\tconst [newSlotsUsed, newSpells] = updates\r\n\tconst flaggedItem = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed,\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpells\r\n\t})\r\n\tconst updatedDescription = await getUpdatedDescription(flaggedItem)\t\r\n\tawait flaggedItem.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst updateRingItem = async (item, choices, eligibleSpellsByChar) => {\t\r\n\tconst [charName, level, spellName] = choices\r\n\tconst notification = await setRingUpdatesNotification(item, level)\r\n\tif (notification) return false\r\n\tconst [chosenSpell, newSlotsUsed, newSpellData] = await getUpdateRingData(charName, eligibleSpellsByChar, item, level, spellName)\r\n\tsetRingUpdates(chosenSpell, item, newSlotsUsed, newSpellData)\r\n\treturn chosenSpell\r\n}\r\n\r\nexport const ringOfSpellStoring = {\r\n\t\"main\": main,\r\n\t\"deleteTempItem\": deleteTempItem,\r\n\t\"setReactionHook\": setReactionHook\r\n}","import {deleteTempItem as deleteItem, getDialogueButtonType, getSourceMacroNames, getUpdatedMacroNames, setCastSpellUpdates} from \"../../helper-functions.js\"\r\nimport {staffOfSwarmingInsects as s} from \"../../strings/items.js\"\r\n\r\n//TODO:\r\n//make sure Insect Cloud's item deletion is working as intended\r\n\r\nconst castSpell = async (spell, staff, tokenActor, choice) => {\r\n\tconst updates = await createCastWorkflow(spell, staff, tokenActor, choice)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, staff, tokenActor, choice) => {\r\n\tconst [tempItem] = await createTempItem(spell, staff, tokenActor, choice)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, staff, tokenActor, choice) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, \"staffOfSwarmingInsects\", spell.activation)\r\n\tconsole.log(\"createTempItem updatedMacroNames\")\r\n\tconsole.log(updatedMacroNames)\r\n\tconst itemData = await getTempSpellItem(spell, staff, updatedMacroNames, choice)\r\n\tconsole.log(\"itemData\")\r\n\tconsole.log(itemData)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data)\r\n}\r\nconst getChosenItem = async (choice, spells) => {\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn game.items.find(item => item.name == s.damageWeaponName)\r\n\t} else {\r\n\t\treturn spells.find(spell => spell.name == choice)\t\t\r\n\t}\t\r\n}\r\nconst getConsumptionAmount = async (choice) => {\r\n\tif (choice == s.allChoices[0]) {\r\n\t\treturn 4\r\n\t} else if (choice == s.allChoices[1]) {\r\n\t\treturn 1\r\n\t} else if (choice == s.allChoices[2]) {\r\n\t\treturn 5\r\n\t} else {\r\n\t\treturn 0\r\n\t}\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn \"icons/weapons/staves/staff-simple-spiral-green.webp\"\r\n\t} else {\r\n\t\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\t\treturn spell.img\t\t\r\n\t}\r\n}\r\nconst getSpellsToCast = async (staff) => {\r\n\tconst spells = s.spellNames.map(spell => game.items.find(item => {\r\n\t\tif (!item.name) return false\r\n\t\treturn item.name.toLowerCase() == spell.toLowerCase()\r\n\t}))\t\r\n\tconst filteredSpellNames = s.spellNames.filter((spell, i, arr) => {\r\n\t\treturn ((spell == arr[0] && staff.system.uses.value >= 4)\r\n\t\t\t||  (spell == arr[1] && staff.system.uses.value >= 1)\r\n\t\t\t||  (spell == arr[2] && staff.system.uses.value >= 5))\r\n\t})\r\n\tconst choices = [...s.meleeChoices, ...filteredSpellNames].sort()\r\n\treturn [choices, spells]\r\n}\r\nconst getTempSpellItem = async (spell, staff, updatedMacroNames, choice) => {\r\n\tconst [amount, damage, item, name, prep, type] = await getTempSpellItemMods(spell, staff, choice)\r\n\treturn mergeObject(duplicate(item.toObject(false)), {\r\n\t\tname: name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originItemName\": staff.name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originItemUuid\": staff.uuid,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originName\": item.name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originUuid\": item.uuid,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.consume.amount\": amount,\r\n\t\t\"system.consume.target\": staff.id,\r\n\t\t\"system.consume.type\": type,\r\n\t\t\"system.damage.parts\": damage,\t\r\n\t\t\"system.preparation.mode\": prep,\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getTempSpellItemMods = async (spell, staff, choice) => {\r\n\tconst amount = await getConsumptionAmount(choice)\r\n\tconst weapon = game.items.find(item => item.name == s.damageWeaponName)\r\n\tconst damage = choice == s.allChoices[4] ? [\"1d8 + @mod\", \"bludgeoning\"] : weapon.system.damage.parts\r\n\tconsole.log(\"getTempSpellItemMods damage\")\r\n\tconsole.log(damage)\t\r\n\tconst item = choice == s.allChoices[3] || choice == s.allChoices[4] ? weapon : spell\r\n\tconst name = item.name == s.damageWeaponName ? staff.name : spell.name\r\n\tconst prep = choice == s.allChoices[3] || choice == s.allChoices[4] ? null : \"innate\"\r\n\tconst type = choice == s.allChoices[3] || choice == s.allChoices[4] ? null : \"charges\"\r\n\treturn [amount, damage, item, name, prep, type]\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\t//make sure the item is equipped and attuned before doing antyhing\r\n\tconsole.log(\"BEANS\")\r\n\tconst staff = await fromUuid(item.uuid)\r\n\tconsole.log(\"staff\")\r\n\tconsole.log(staff)\r\n\t//choose spell \r\n\tconst [choices, spells] = await getSpellsToCast(staff)\r\n\tconsole.log(\"choices\")\r\n\tconsole.log(choices)\r\n\tconsole.log(\"spells\")\r\n\tconsole.log(spells)\r\n\tconst choice = await getDialogueButtonType(choices, {width: choices.length * 150, height: \"100%\"}, s.initHeader, getSpellIconPaths, 60, 60, spells)\r\n\tconsole.log(\"choice\")\r\n\tconsole.log(choice.value)\r\n\tconst chosenItem = await getChosenItem(choice.value, spells)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconsole.log(\"chosenItem\")\r\n\tconsole.log(chosenItem)\t\r\n\t//cast spell\r\n\tcastSpell(chosenItem, staff, tokenActor, choice.value)\t\r\n\t//remove appropriate number of charges from source item \r\n}\r\n\r\nexport const staffOfSwarmingInsects = {\r\n\tdeleteTempItem,\r\n\tonUse\r\n}","import {getDialogueButtonType, setActiveEffects} from \"../../helper-functions.js\"\r\n\r\nconst getCommandItemData = async (originActor, type) => {\r\n\tconst sourceItem = type.value == \"Command: Flee\" ? await fromUuid(\"Item.TLqebf57ZF6HUkml\") : await fromUuid(\"Item.9iKDqMbCAERS9psP\")\r\n\tconsole.log(sourceItem)\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\t\t//name: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getFearItemData = async (originActor) => {\r\n\tconst sourceItem = await fromUuid(\"Item.DG5FfgOrf5IhvITt\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Fear\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-monster-purple-blue.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Flee\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-shadow-monster-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Prone\":\r\n\t\t\treturn \"icons/magic/control/silhouette-fall-slip-prone.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst onUse = async ({args, item, actor, token}) => {\r\n\tconst buttonOptions = item.system.uses.value > 1 ? [\"Fear\", \"Command: Flee\", \"Command: Prone\"] : [\"Command: Flee\", \"Command: Prone\"]\r\n\tconst type = await getDialogueButtonType(buttonOptions, {width: 400, height: 150}, \"What do you want to cast?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Fear\") {\r\n\t\tsetFearEffects(actor, item)\r\n\t} else {\r\n\t\tsetCommandEffects(actor, item, token, type)\r\n\t}\r\n}\r\nconst setCommandEffects = async (actor, item, token, type) => {\r\n\tconst commandItem = await getCommandItemData(actor, type)\r\n\tconst target = game.user.targets?.first() ?? false\r\n\tif (!target) return false\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [target.document.uuid]}\r\n\tconst commandWorkflow = await MidiQOL.completeItemUse(commandItem, {}, options)\t\r\n\tsetCommandEffectsSequencer(target)\r\n\tsetItemUsesUpdate(item.uuid, 1)\t\r\n}\r\nconst setCommandEffectsSequencer = async (token) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.enchantment.complete.dark_purple`)\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t\t.attachTo(token)\r\n\t\t\t.belowTokens()\r\n\t\t.play()\t\t\t\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token, template) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.detect_magic.cone.purple`)\r\n\t\t\t.scale(4.4)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\r\n\t\t\t.spriteOffset({x: 600, y:0}, {local: true})\r\n\t\t\t.rotate(-template.direction)\r\n\t\t.play()\t\t\t\r\n}\r\nconst setFearEffects = async (actor, item) => {\r\n\tconst fearItem = await getFearItemData(actor)\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false}\r\n\tconst fearWorkflow = await MidiQOL.completeItemUse(fearItem, {}, options)\t\r\n\tconst liveTemplate = await fromUuid(fearWorkflow.templateUuid)\r\n\tsetEffectsSequencer(0, 0, 1, false, liveTemplate)\r\n\tsetItemUsesUpdate(item.uuid, 2)\t\r\n}\r\nconst setItemUsesUpdate = async (itemUuid, usesUsed) => {\r\n\tconst liveItem = await fromUuid(itemUuid)\r\n\tliveItem.update({\"system.uses.value\": liveItem.system.uses.value - usesUsed})\r\n}\r\n\r\nexport const wandOfFear = {\r\n\tonUse\r\n}","import {auraOfPurity} from \"./macros/spells/aura-of-purity.js\"\r\nimport {blight} from \"./macros/spells/blight.js\"\r\nimport {clairvoyance} from \"./macros/spells/clairvoyance.js\"\r\nimport {daylight} from \"./macros/spells/daylight.js\"\r\nimport {dispelMagic} from \"./macros/spells/dispel-magic.js\"\r\nimport {feyAncestry} from \"./macros/features/fey-ancestry.js\"\r\nimport {hordePassive} from \"./macros/features/horde-passive.js\"\r\nimport {instrumentOfTheBards} from \"./macros/items/instrument-of-the-bards.js\"\r\nimport {protectionFromPoison} from \"./macros/spells/protection-from-poison.js\"\r\nimport {ringOfSpellStoring} from \"./macros/items/ring-of-spell-storing.js\"\r\nimport {songOfRest} from \"./macros/features/class/bard/song-of-rest.js\"\r\nimport {staffOfSwarmingInsects} from \"./macros/items/staff-of-swarming-insects.js\"\r\nimport {wandOfFear} from \"./macros/items/wand-of-fear.js\"\r\n\r\nexport const macros = {\r\n\tauraOfPurity,\r\n\tblight,\r\n\tclairvoyance,\r\n\tdaylight,\r\n\tdispelMagic,\r\n\tfeyAncestry,\r\n\thordePassive,\r\n\tinstrumentOfTheBards,\r\n\tprotectionFromPoison,\r\n\tringOfSpellStoring,\r\n\tsongOfRest,\r\n\tstaffOfSwarmingInsects,\r\n\twandOfFear\r\n}","const getBlightEffectData = async (origin) => {\r\n\treturn {\r\n\t\tname: `Blight Saving Throw Disadvantage`, \r\n\t\ticon: \"icons/magic/movement/chevrons-down-yellow.webp\", \r\n\t\torigin: origin,\r\n\t\tchanges: [{key: \"flags.midi-qol.disadvantage.ability.save.all\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [\"1\"], \"priority\": 20}],\r\n\t\t\"flags.dae.stackable\": \"noneName\",\r\n\t\t\"flags.times-up.isPassive\": true,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\", \"combatEnd\", \"isSave\"],\r\n\t\t\"flags.dae.showIcon\": false,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst setBlightHook = async (castLevel) => {\r\n\tconst blightPreDamageRollHookId = Hooks.once(\"dnd5e.preRollDamage\", (rolledItem, rollConfig) => {\r\n\t\tconst maxDamageRoll = 8 * castLevel + 32\r\n\t\tconst maxDamageString = String(maxDamageRoll) + \"[necrotic]\" \r\n\t\trollConfig.parts = [maxDamageString]\r\n\t})\t\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].hitTargets[0].actor.system.details.type.value == \"plant\") {\r\n\t\tconst effectData = await getBlightEffectData(args[0].item.uuid)\r\n\t\tawait MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: args[0].hitTargets[0].actor.uuid, effects: [effectData] })\r\n\t\tawait setBlightHook(args[0].castData.castLevel)\r\n\t}\t\r\n}\r\n\r\nexport const blight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {conditionLabels} from \"../../constants.js\"\r\n\r\nconst main = async ({item, workflow, args}) => {\r\n\tconst hasCharm = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"charmed\"].includes(change.value.toLowerCase())))\r\n\tif (hasCharm) {\r\n\t\tworkflow.saveDetails.advantage = true\r\n\t}\r\n}\r\n\r\nexport const feyAncestry = {\r\n\tmain\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const protectionFromPoison = {\r\n\tinitHeader: \t\t\"What do you want to cast?\"\r\n}","const getItemData = (originActor, songLevel) => {\r\n\tconst sourceItem = fromUuidSync(\"Item.GvIIDEPRp3unaRVe\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Song of Rest\",\r\n\t\tsystem: { \r\n\t\t\tdamage: {\r\n\t\t\t\tparts: [[`1d${songLevel}`, \"healing\"]]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getOriginBardScale = (effectOriginUuid) => {\r\n\tconst effectOrigin = fromUuidSync(effectOriginUuid)\r\n\tconst originActor = fromUuidSync(effectOrigin.parent.uuid)\r\n\treturn originActor.system.scale.bard[\"song-of-rest\"].faces\r\n}\r\nconst main = (actor, data) => {\r\n\tconst songEffects = actor.effects.filter(effect => effect.name == \"Song of Rest\")\r\n\tif (data.dhd < 0 && songEffects.length > 0) {\r\n\t\tsongEffects.map(effect => {\r\n\t\t\tconst originBardScale = getOriginBardScale(effect.origin)\r\n\t\t\tconst item = getItemData(actor, originBardScale)\r\n\t\t\tconst token = MidiQOL.tokenForActor(actor.uuid)\r\n\t\t\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [token.document.uuid] }\r\n\t\t\tMidiQOL.completeItemUse(item, {}, options)\t\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const songOfRest = {\r\n\tmain\r\n}","export const setAmbientLightCreate = async (params) => {\r\n\treturn await canvas.scene.createEmbeddedDocuments(\"AmbientLight\", [params])\r\n}\r\nexport const setAmbientLightDelete = async (ambientLightId) => {\r\n\tconst ambientLight = await canvas.scene.deleteEmbeddedDocuments(\"AmbientLight\", [ambientLightId])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn ambientLight\r\n}\r\nexport const setMeasuredTemplateDelete = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid) ?? false\r\n\tif (!template) return false\r\n\tconst deletedMeasuredTemplate = await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [template._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn deletedMeasuredTemplate\r\n}\r\nexport const setActiveEffectDelete = async (ownerActor, effectId) => {\t\r\n\tconst [deleteEffect] = ownerActor.effects.filter(effect => effect._id == effectId)\t\r\n\treturn await ownerActor.deleteEmbeddedDocuments(\"ActiveEffect\", [deleteEffect._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n}\r\nexport const setDeleteSummonConcentrationHook = async (actor, spawnedTokenUuid) => {\r\n\tconst preDeleteSummonConcentrationHookId = Hooks.on(\"preDeleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", preDeleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\t\r\n}","import {setConfig} from './config.js';\r\nimport {macros} from \"./macros.js\"\r\nimport * as sf from \"./socket-functions.js\"\r\n\r\nexport let socket\r\n\r\nHooks.once(\"socketlib.ready\", () => {\r\n\tsocket = socketlib.registerModule(\"charnames-bag-of-macros\")\r\n\tsocket.register(\"setActiveEffectDelete\", sf.setActiveEffectDelete)\r\n\tsocket.register(\"setAmbientLightCreate\", sf.setAmbientLightCreate)\t\r\n\tsocket.register(\"setAmbientLightDelete\", sf.setAmbientLightDelete)\r\n\tsocket.register(\"setDeleteSummonConcentrationHook\", sf.setDeleteSummonConcentrationHook)\r\n\tsocket.register(\"setMeasuredTemplateDelete\", sf.setMeasuredTemplateDelete)\r\n})\r\n\r\nHooks.on(\"dnd5e.restCompleted\", (actor, data) => {\r\n\tmacros.instrumentOfTheBards.onNewDay(actor, data)\r\n\tmacros.songOfRest.main(actor, data)\r\n})\r\n\r\nglobalThis['CHARNAME'] = {\r\n    macros\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","conditionLabels","blinded","charmed","concentrating","dead","deafened","exhaustion1","exhaustion2","exhaustion3","exhaustion4","exhaustion5","frightened","grappled","incapacitated","invisible","paralyzed","petrified","poisoned","prone","restrained","stunned","unconscious","wounded","cloudSpellNames","deleteTempItem","async","args","item","workflow","setDeleteItemFlags","tempItem","originTokenDoc","tokenActor","getDeleteItemData","logic","getDeleteItemLogic","setDeleteItemLogic","fromUuid","uuid","tokenUuid","actor","concEffect","MidiQOL","getConcentrationEffect","hasTemplate","templateUuid","hasSelfEffects","getSelfEffects","length","hasSelfTarget","hasEffects","effects","size","isSelfTargetItem","target","type","originTargetingSelf","hitTargetUuids","filter","checkSelfTarget","getDialogueButtonType","choices","dialogueOptions","title","getIconPathsFunc","buttonWidth","buttonHeight","iconData","Promise","resolve","buttons","getIconPaths","width","height","reduce","choice","i","icon","label","callback","value","getDialogueButtons","Dialog","render","effect","selfTarget","flags","dae","selfTargetAlways","getTemplatesInRange","templates","gridSize","gridScale","range","x1","y1","template","a","b","x","y","Math","sqrt","pow","distance","itemRangeModified","setActiveEffects","tokenActorUuids","effectData","all","map","tokenActorUuid","socket","executeAsGM","actorUuid","createEffect","setDeleteUuids","delete","tempItemEffect","find","origin","deletionChange","mode","CONST","ACTIVE_EFFECT_MODES","ADD","updatedChanges","changes","update","setSpawnedTokenId","itemRange","originToken","spawn","token","name","location","spawnIconPath","interval","canvas","scene","grid","warpgate","crosshairs","show","lockSize","lockPosition","tag","drawIcon","rememberControlled","tokens","activate","setCrosshairConfigs","distanceAvailable","crosshairsDistance","inFlight","wait","ray","Ray","center","measureDistances","gridSpaces","draw","cancelled","getSpawnLocation","spawnedTokenId","spawnAt","originActorSenses","originTokenSight","updates","TOKEN_DISPLAY_MODES","HOVER","getSpawnUpdates","mergeObject","getWarpgateUpdates","system","attributes","senses","document","sight","pre","originTokenUuid","color","Sequence","file","scale","opacity","atLocation","belowTokens","waitUntilFinished","fadeIn","play","setEffectsSequencer","post","animation","on","setPostEffectsSequencer","getWarpgateCallbacks","controllingActor","getWarpgateOptions","buttonName","setAreaChoiceEffects","templateEffect","itemUuid","positions","setTemplateEffects","lightParams","sanitizedLight","originUuid","lightId","disabled","getEffectOriginData","_id","ineligibleEffectNames","minSpellLevel","originTemplateActiveEffect","itemTemplatePositions","setAreaEffectDeleteHookId","Hooks","templateData","originFlag","dnd5e","templateSpellLevel","spellLevel","fromUuidSync","includes","gridTemplateId","id","gridTemplatePositions","highlightLayers","intersection","setTimeout","setAreaEffectDeleteHookOffId","config","off","setAreaEffectDeleteHookOff","setAreaEffectDeleteHook","attachTo","templatePositions","potentialTemplates","originName","templatesWithOverlap","eligibleTemplates","Set","getTemplatesWithOverlap","setTemplateDispels","casterUuid","dispelAbility","dispelLevel","casterToken","game","user","targets","first","effectsLTE2DispelLevel","effectsGTDispelLevel","castData","baseLevel","getTokenEffects","effectsIdsToDelete","abilities","mod","abilityRoll","arr","effectCastLevel","castLevel","rollAbilityTest","total","push","concat","getEffectsToDelete","deleteEffectsOnToken","selectedTemplate","inRangeEligibleTemplates","originItem","originItems","items","sortedTemplates","sort","aOrig","bOrig","localeCompare","templateSelections","itemOwnerName","parent","menu","inputs","console","log","ui","notifications","info","options","indexOf","getTemplateSelection","getSelectedTemplate","templateCastLevel","getTemplatesToDelete","deleteTemplate","getAoeOverlapPerc","creatureCoords","getCreatureCoords","templateCoords","getTemplateCoords","templateId","tokenDoc","set","position","j","toString","add","templateIdStr","setLiveTokenDocUpdates","texture","hordeItem","hordeItemUsesMax","multiplier","liveTokenDoc","shouldReduce","tokenSizeNum","setSequencer","traits","keys","CONFIG","DND5E","actorSizes","setPostDamageUpdates","newHpDamage","newHealthPercentage","hp","max","hordePassive","img1","img2","img3","sequencerPath","ringOfSpellStoring","addSpellErr","castSpellErr","castSpellHeader","charHeader","currSpellBank","descLevel","charnamesExceptions","initChoices","initHeader","levelHeader","levelLabels","spellHeader","instrumentOfTheBards","anstruthHarp","canaithMandolin","cliLyre","dossLute","fochlucanBandore","generic","macFuirmidhCittern","ollamhHarp","staffOfSwarmingInsects","allChoices","damageWeaponName","meleeChoices","spellNames","createTempItem","spell","instrument","chosenIndex","sourceMacroNames","updatedMacroNames","activation","itemData","getTempSpellItem","createEmbeddedDocuments","onUseMacroName","getSpellIconPaths","spells","toLowerCase","img","level","damage","parts","getCureWoundsData","duplicate","toObject","overwrite","inlace","insertKeys","insertValues","macroNames","charname","originInstrumentUuid","index","spellIndex","updateDeleteItemFlags","isCharged","isConcentration","components","concentration","midiProperties","isReactionItem","getInitIconPaths","spellData","liveItem","sourceItem","getTempItem","getAddSpellChoices","eligibleSpellsByChar","charChoice","charChoices","character","toSorted","getCharIconPaths","getAddCharChoice","levelChoice","levelChoices","getLevelChoices","getLevelIconPaths","getAddLevelChoice","spellChoice","spellChoices","spellIcons","getSpellChoices","getSpellChoice","getAddSpellChoice","getEligibleSpells","actors","actorSpells","eligibleLevelSpells","highestSpellLevel","getHighestSpellLevel","preparation","getSpellData","pact","getEligibleLevelSpells","prototypeToken","src","slotsRemaining","slotsUsed","eligibleLevels","spellLevels","Array","from","getLiveActors","users","getNewSlotsUsed","sortedChoices","radioSelections","levelChoiceInt","dc","spelldc","ability","spellcasting","attackBonus","isRangedAttack","actionType","isMeleeAttack","parseInt","bonuses","rsak","attack","msak","getAttackBonus","prof","getSpellToCast","uniqueSpells","spellsArr","chosenSpell","getUpdatedDescription","desc","description","newSpells","descs","spellBankStr","substring","lastIndexOf","replace","setPreUseItemHooks","once","useItem","consumeResource","consumeSpellSlot","consumeUsage","slotLevel","_baseProficiency","setReactionUpdates","setResetSpellsDesc","updatedStr","updatedDesc","newSlotsUsed","flaggedItem","updatedDescription","updateRingItem","charName","spellName","notification","setRingUpdatesNotification","newSpellData","chr","getUpdateRingData","setRingUpdates","staff","hasSysConc","hasMidiConc","getDeleteUuidEffects","updateDeleteUuidEffects","callMacro","asGM","setCastSpellUpdates","completeItemUse","getSourceMacroNames","flagName","getUpdatedMacroNames","amount","prep","getTempSpellItemMods","getConsumptionAmount","weapon","setCommandEffectsSequencer","setItemUsesUpdate","usesUsed","uses","macros","auraOfPurity","preTargetSave","some","change","saveDetails","advantage","onUse","tokenAttacher","attachElementToToken","tokenDocs","collections","values","eligibleTokenDocs","tokenDocuments","originX","originY","tokenDocsInRange","tokenTopLeftCenterX","tokenTopLeftCenterY","tokenGridBorderCoords","xArr","coord","yArr","maxX","maxY","coords","x2","y2","getTokensInRange","templateNonEffectedTokens","itemEffectName","statuses","has","getNonTemplateEffectedTokenDocs","getEligibleTokenDocuments","tokenEffectUuids","casterDisposition","effected","disposition","dfreds","effectInterface","addEffect","effectName","setTokenEffects","blight","speaker","scope","hitTargets","details","CUSTOM","getBlightEffectData","rolledItem","rollConfig","maxDamageString","String","setBlightHook","clairvoyance","macroPass","setActorConcDeletion","spawnedTokenUuid","getTokenSpawnIds","originTokenActorUuid","fromUuidActor","originActor","originActorConcentrationRemoveUuids","removeUuids","setActorConcRemoveUuids","userId","isTheGM","deleteSummonConcentrationHookId","setHookMacros","setPostSpawnEffects","daylight","duration","rounds","getEffectTokenData","setInitChoice","lastArg","efData","dispelMagic","feyAncestry","main","isSaveFailure","hasAreaTarget","preTargetDamageApplication","hordeItemUses","hpDamage","damageItem","aoeOverlapPerc","hordeCount","floor","getNewDamage","setHpUpdateEffects","data","filteredSpellNames","getSpellsToCast","createCastWorkflow","castSpell","onNewDay","newDay","instruments","forEach","refreshInstruments","protectionFromPoison","poisonEffects","hasPoisonedName","hasPoisonedConditions","chosenEffect","acc","nameAlreadyUsed","getChoices","buttonNames","initChoice","getChosenEffect","effectUuid","removeEffect","setAddSpellNotification","getAddSpellUpdates","setAddSpellUpdates","addSpell","tempItems","ringUuid","resetSpells","deleteIndex","usedSpellLevel","usedSpell","getDeleteItemFlagData","getDeleteItemFlagUpdates","songOfRest","songEffects","dhd","originBardScale","effectOriginUuid","effectOrigin","bard","faces","getOriginBardScale","songLevel","Item","documentClass","getItemData","showFullCard","createWorkflow","versatile","configureDialog","targetUuids","tokenForActor","chosenItem","getChosenItem","wandOfFear","buttonOptions","fearItem","getFearItemData","fearWorkflow","spriteOffset","local","rotate","direction","setFearEffects","commandItem","getCommandItemData","setCommandEffects","setAmbientLightCreate","params","setAmbientLightDelete","ambientLightId","ambientLight","deleteEmbeddedDocuments","setMeasuredTemplateDelete","deletedMeasuredTemplate","setActiveEffectDelete","ownerActor","effectId","deleteEffect","setDeleteSummonConcentrationHook","preDeleteSummonConcentrationHookId","socketlib","registerModule","register","globalThis"],"sourceRoot":""}