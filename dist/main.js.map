{"version":3,"file":"main.js","mappings":"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","sources":["webpack://CHARNAME's Bag of Macros/webpack/bootstrap","webpack://CHARNAME's Bag of Macros/webpack/runtime/define property getters","webpack://CHARNAME's Bag of Macros/webpack/runtime/hasOwnProperty shorthand","webpack://CHARNAME's Bag of Macros/./src/scripts/constants.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helper-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/aura-of-purity.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/clairvoyance.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/daylight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/hooks.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/dispel-magic.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/horde-passive.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/features.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/misc/insect-cloud.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/items.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/instrument-of-the-bards.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/protection-from-poison.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/ring-of-spell-storing.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/staff-of-swarming-insects.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/wand-of-fear.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/blight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/fey-ancestry.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/spells.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/class/bard/song-of-rest.js","webpack://CHARNAME's Bag of Macros/./src/scripts/socket-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export const conditionLabels = {\r\n\tblinded: [\"blinded\", \"convenient effect: blinded\"],\r\n\tcharmed: [\"charmed\", \"convenient effect: charmed\"],\r\n\tconcentrating: [\"concentrating\", \"convenient effect: concentrating\"],\r\n\tdead: [\"dead\", \"convenient effect: dead\"],\r\n\tdeafened: [\"deafened\", \"convenient effect: deafened\"],\r\n\texhaustion1: [\"exhaustion 1\", \"convenient effect: exhaustion 1\"],\r\n\texhaustion2: [\"exhaustion 2\", \"convenient effect: exhaustion 2\"],\r\n\texhaustion3: [\"exhaustion 3\", \"convenient effect: exhaustion 3\"],\r\n\texhaustion4: [\"exhaustion 4\", \"convenient effect: exhaustion 4\"],\r\n\texhaustion5: [\"exhaustion 5\", \"convenient effect: exhaustion 5\"],\r\n\tfrightened: [\"frightened\", \"convenient effect: frightened\"],\r\n\tgrappled: [\"grappled\", \"convenient effect: grappled\"],\r\n\tincapacitated: [\"incapacitated\", \"convenient effect: incapacitated\"],\r\n\tinvisible: [\"invisible\", \"convenient effect: invisible\"],\r\n\tparalyzed: [\"paralyzed\", \"convenient effect: paralyzed\"],\r\n\tpetrified: [\"petrified\", \"convenient effect: petrified\"],\r\n\tpoisoned: [\"poisoned\", \"convenient effect: poisoned\"],\r\n\tprone: [\"prone\", \"convenient effect: prone\"],\r\n\trestrained: [\"restrained\", \"convenient effect: restrained\"],\r\n\tstunned: [\"stunned\", \"convenient effect: stunned\"],\r\n\tunconscious: [\"unconscious\", \"convenient effect: unconscious\"],\r\n\twounded: [\"wounded\", \"convenient effect: wounded\"]\r\n}\r\n\r\nexport const cloudSpellNames = [\r\n\t\"Cloudkill\",\r\n\t\"Incendiary Cloud\",\r\n\t\"Insect Plague\",\r\n\t\"Moonbeam\",\r\n\t\"Spirit Guardians\"\r\n]","import {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nexport const deleteTempItem = async ({args, item, workflow}, setDeleteItemFlags) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tif (setDeleteItemFlags) await setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nexport const deleteAuraEffectsWhenMoved = async (effectName, newTokenActorUuids, oldTokenActorUuids, originUuid) => {\r\n\tconst removalUuids = oldTokenActorUuids.filter(uuid => !newTokenActorUuids.includes(uuid))\r\n\tawait removalUuids.forEach(actorUuid => {\r\n\t\tconst actor = fromUuidSync(actorUuid)\t\r\n\t\tconst tokenEffect = actor.effects.find(effect => \r\n\t\t\teffect.name == effectName\r\n\t\t && effect.origin == originUuid\r\n\t\t)\r\n\t\tif (!tokenEffect) return false\r\n\t\tremoveEffect(tokenEffect.uuid)\r\n\t})\t\r\n}\r\nexport const getAuraParamsWhenMoved = async (dispositions, getEffectData, template, flagName) => {\r\n\tconst effectData = await getEffectData(template.flags[\"midi-qol\"].actorUuid, template.uuid)\r\n\tconst newTokenIds = game.modules.get(\"templatemacro\").api.findContained(template)\r\n\tconst newTokens = newTokenIds.map(id => \r\n\t\tcanvas.scene.collections.tokens.get(id)\r\n\t).filter(tokenDoc => \r\n\t\ttokenDoc.id != template.flags[\"midi-qol\"].tokenId\r\n\t && dispositions.includes(tokenDoc.disposition)\r\n\t)\r\n\tconst newTokenActorUuids = newTokens.map(token => token.actor.uuid)\r\n\tconst oldTokenActorUuids = template.flags.charname[flagName].tokenActorsEffected\r\n\treturn [effectData, newTokenActorUuids, oldTokenActorUuids]\r\n}\r\nexport const getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nexport const getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nexport const getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst hasSysConc = item.system.components?.concentration ?? false\r\n\tconst hasMidiConc = item.flags?.midiProperties?.concentration ?? false\r\n\tconst isConcentration = hasSysConc || hasMidiConc\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nexport const getDialogueButtons = (resolve, choices, getIconPaths, width, height, iconData) => {\t\r\n\treturn choices.reduce((buttons, choice, i) => {\r\n\t\tconst icon = getIconPaths(choice, iconData)\r\n\t\tconst newButton = {[choice]: {\r\n\t\t\tlabel: `<img src=${icon} width=${width} height=${height} style=\"border:0px\"><br>${choice}`,\r\n\t\t\tcallback: () => {\r\n\t\t\t\tresolve({value: `${choice}`})\r\n\t\t\t}\r\n\t\t}}\r\n\t\treturn {...buttons, ...newButton}\r\n\t}, {})\r\n}\r\nexport const getDialogueButtonType = async (choices, dialogueOptions, title, getIconPathsFunc, buttonWidth, buttonHeight, iconData) => { \r\n\treturn await (new Promise( (resolve) => {\t\r\n\t\tconst buttons = getDialogueButtons(resolve, choices, getIconPathsFunc, buttonWidth, buttonHeight, iconData)\t\t\r\n\t\tnew Dialog({\r\n\t\t\ttitle: title,\r\n\t\t\tbuttons: buttons\r\n\t\t}, dialogueOptions).render(true)\r\n}))}\r\nexport const getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nexport const getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nexport const getSpawnLocation = async (spawnIconPath, size, interval, tokenUuid, itemRange, originToken) => {\r\n\tawait setCrosshairConfigs(tokenUuid, itemRange)\r\n\tconst distanceAvailable = itemRange\r\n\tlet crosshairsDistance = 0\r\n\tconst checkDistance = async (crosshairs) => {\r\n\t\twhile (crosshairs.inFlight) {\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t\tconst ray = new Ray(originToken.center, crosshairs)\r\n\t\t\tconst distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0]\r\n\t\t\tif (crosshairsDistance !== distance) {\r\n\t\t\t\tcrosshairsDistance = distance;\r\n\t\t\t\tif (distance > distanceAvailable) {\r\n\t\t\t\t\tcrosshairs.icon = 'icons/svg/hazard.svg';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcrosshairs.icon = spawnIconPath\r\n\t\t\t\t}\r\n\t\t\t\tcrosshairs.draw();\r\n\t\t\t\tcrosshairs.label = `${distance} ft`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst location = await warpgate.crosshairs.show(\r\n\t\t{\r\n\t\t\tsize: size,\r\n\t\t\tinterval: interval,\r\n\t\t\ticon: spawnIconPath,\r\n\t\t\tlabel: '0 ft.',\r\n\t\t},\r\n\t\t{\r\n\t\t\tshow: checkDistance\r\n\t\t},\r\n\t)\r\n\tif (location.cancelled || crosshairsDistance > distanceAvailable) {\r\n\t\treturn\r\n\t} else {\r\n\t\treturn location\r\n\t}\r\n}\r\nexport const getTemplatesInRange = (templates, gridSize, gridScale, range, x1, y1) => {\r\n\t//gets templates where center of template within range of a cast template\r\n\treturn templates.filter(template => {\r\n\t\tconst [a, b] = [x1 - template.x, y1 - template.y]\r\n\t\tconst c  = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\tconst templateCentersDistance = c / gridSize\t\r\n\t\tconst templateRangeModified = template.distance / gridScale\t\r\n\t\tconst itemRangeModified = range / gridScale\t\t\r\n\t\treturn templateCentersDistance < templateRangeModified + itemRangeModified\r\n\t})\r\n}\r\nexport const getTemplatesWithOverlap = (eligibleTemplates, itemTemplatePositions) => {\r\n\treturn eligibleTemplates.filter(template => {\r\n\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\tconst templatePositions = canvas.grid.highlightLayers[gridTemplateId]?.positions ?? new Set(\"-1\")\r\n\t\treturn itemTemplatePositions.intersection(templatePositions).size > 0\r\n\t})\r\n}\r\nexport const getTokensInRange = async (tokens, gridSize, gridScale, itemRange, x1, y1) => {\r\n\treturn tokens.filter(token => {\r\n\t\tconst tokenTopLeftCenterX = token.x + gridSize / 2\r\n\t\tconst tokenTopLeftCenterY = token.y + gridSize / 2\r\n\t\tlet tokenGridBorderCoords = []\r\n\t\t\r\n\t\tfor (let i = 0; i <= token.width * 2 - 1; i++) {\r\n\t\t\tfor (let j = 0; j <= token.width * 2  - 1; j++) {\r\n\t\t\t\ttokenGridBorderCoords.push({x: tokenTopLeftCenterX + gridSize / 2 * i, y: tokenTopLeftCenterY + gridSize / 2 * j})\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst xArr = tokenGridBorderCoords.map(coord => coord.x)\r\n\t\tconst yArr = tokenGridBorderCoords.map(coord => coord.y)\r\n\t\tconst maxX = Math.max(...xArr)\r\n\t\tconst maxY = Math.max(...yArr)\r\n\t\tconst tokenGridCoords = tokenGridBorderCoords.filter(coords => coords.x != maxX && coords.y != maxY)\r\n\t\t\r\n\t\tconst tokenGridCoordsInRange = tokenGridCoords.filter(coord => {\r\n\t\t\tconst [x2, y2] = [coord.x, coord.y]\r\n\t\t\tconst a = x1 - x2\r\n\t\t\tconst b = y1 - y2\r\n\t\t\tconst c = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\t\treturn c / gridSize <= itemRange / gridScale\r\n\t\t})\r\n\t\t\r\n\t\treturn tokenGridCoordsInRange.length > 0\r\n\t})\r\n}\r\nexport const getUpdatedMacroNames = async (macroNames, flagName, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + `,[postRollFinished]function.CHARNAME.macros.${flagName}.deleteTempItem` \r\n\t\t\t: `[postRollFinished]function.CHARNAME.macros.${flagName}.deleteTempItem`\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + `,[postActiveEffects]function.CHARNAME.macros.${flagName}.setReactionHook`\r\n\t} \r\n\treturn update\r\n}\r\nexport const removeEffect = async (effectUuid) => {\r\n\treturn await MidiQOL.socket().executeAsGM(\"removeEffect\", {effectUuid: effectUuid})\r\n}\r\nexport const removeEffects = async (effectUuids) => {\r\n\treturn await MidiQOL.socket().executeAsGM(\"removeEffects\", effectUuids\r\n)}\r\nexport const setActiveEffects = async (tokenActorUuids, effectData) => {\r\n\tconst createEffect = async (tokenActorUuid, effectData) => {return await MidiQOL.socket().executeAsGM(\"createEffects\", {actorUuid: tokenActorUuid, effects: [effectData]})}\r\n\tconst [effects] = await Promise.all(tokenActorUuids.map(tokenActorUuid => createEffect(tokenActorUuid, effectData)))\r\n\treturn effects\r\n}\r\nexport const setActorConcDeletion = async (actor) => {\r\n\tif (actor.effects.find(effect => effect.name == \"Concentrating\")) actor.effects.find(effect => effect.name == \"Concentrating\").delete()\r\n} \r\nexport const setActorConcRemoveUuids = async (originActor, uuid) => {\r\n\tlet originActorConcentrationRemoveUuids = originActor.flags[\"midi-qol\"][\"concentration-data\"]?.removeUuids || []\r\n\toriginActorConcentrationRemoveUuids.push(uuid)\t\r\n\tawait originActor.update({\"flags.midi-qol\": {\"concentration-data\": {removeUuids: originActorConcentrationRemoveUuids}}})\r\n\tconst concEffect = originActor.effects.find(effect => effect.name == \"Concentrating\")\r\n\tawait concEffect.update({\r\n\t\t\"flags.dae\": {\"specialDuration\": [\"shortRest\", \"longRest\"]}\r\n\t})\r\n}\r\nexport const setActorReagentCost = async (actorUuid, itemUuid) => {\r\n\tconst actor = await fromUuid(actorUuid)\r\n\tconst item = await fromUuid(itemUuid)\t\r\n\tif (settings.reagentsConsume = \"money\")  {\r\n\t\t//set this to pull from the lower denominations first\r\n\t\tconst newMoney = actor.system.currency.gp - item.system.materials.cost\r\n\t\tif (newMoney < 0) return false\r\n\t\tactor.update({\"system.currency.gp\": newMoney})\r\n\t} else if (settings.reagentsConsume = \"supply\") {\r\n\t\tconst newSupply = item.system.materials.supply - 1\r\n\t\tif (newSupply < 0) return false\r\n\t\titem.update({\"system.materials.supply\": newSupply})\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n\treturn true\r\n}\r\nexport const setAuraEffectUpdatesWhenDeleted = async (effectName, flagName, template) => {\r\n\tconst tokenActorsEffected = template.flags?.charname[flagName]?.tokenActorsEffected ?? []\r\n\tconst effectUuids = await tokenActorsEffected.forEach(actorUuid => {\r\n\t\tconst actor = fromUuidSync(actorUuid)\t\t\t\r\n\t\tconst effect = actor.effects.find(effect => effect.name == effectName)\t\r\n\t\tif (!effect) return false\r\n\t\tremoveEffect(effect.uuid)\r\n\t})\t\r\n}\r\nexport const setAuraEffectsWhenEntered = async (effectName, flagName, getEffectData, template, token) => {\r\n\tconst tokenEffect = token.actor?.effects.find(effect => effect.name == effectName) ?? false\r\n\tif (!tokenEffect) {\r\n\t\tconst effectData = await getEffectData(template.flags[\"midi-qol\"].actorUuid, template.uuid)\r\n\t\tsetActiveEffects([token.actor.uuid], effectData)\r\n\t\tconst newActorUuids = [\r\n\t\t\t...template.flags.charname.insectCloud.tokenActorsEffected, \r\n\t\t\ttoken.actor.uuid\r\n\t\t]\r\n\t\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\t\tconst updatedTemplate = await template.update({\r\n\t\t\t[flag]: newActorUuids\r\n\t\t})\t\t\t\r\n\t}\t\r\n}\r\nexport const setAuraEffectsWhenLeft = async (effectName, flagName, template, token) => {\r\n\tconst tokenEffect = token.actor?.effects.find(effect => effect.name == effectName) ?? false\r\n\tif (tokenEffect) {\r\n\t\tremoveEffect(tokenEffect.uuid)\r\n\t\tconst newActorUuids = template.flags.charname[flagName].tokenActorsEffected.filter(actorUuid => \r\n\t\t\tactorUuid != token.actor.uuid\r\n\t\t)\r\n\t\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\t\tconst updatedTemplate = await template.update({\r\n\t\t\t[flag]: newActorUuids\r\n\t\t})\t\t\t\r\n\t}\t\r\n}\r\nexport const setAuraEffectsWhenMoved = async (effectData, flagName, newTokenActorUuids, oldTokenActorUuids, template) => {\r\n\tconst newUuidsToEffect = newTokenActorUuids.filter(uuid => \r\n\t\t!oldTokenActorUuids.includes(uuid)\r\n\t)\r\n\tsetActiveEffects(newUuidsToEffect, effectData)\t\r\n\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\ttemplate.update({\r\n\t\t[flag]: newTokenActorUuids\r\n\t})\t\t\r\n}\r\nexport const setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nexport const setCrosshairConfigs = async (tokenUuid, itemRange) => {\r\n\tconst target = await fromUuid(tokenUuid)\r\n\tconst {distance} = canvas.scene.grid\r\n\twarpgate.crosshairs.show({\r\n\t\tlockSize:true,\r\n\t\tlockPosition: true,\r\n\t\tsize: target.width + (2*itemRange/distance),\r\n\t\ttag: 'range',\r\n\t\tdrawIcon:false,\r\n\t\tlabel: 'Valid Area',\r\n\t\tx: target.x,\r\n\t\ty: target.y,\r\n\t\trememberControlled: true\r\n\t})\t\r\n\tcanvas.tokens.activate()\r\n}\r\nexport const setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nexport const setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nexport const setTemplateDispels = async (x, y, name, itemTemplatePositions) => {\r\n\tconst dnd5eFlaggedTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e)\r\n\tconst potentialTemplates = dnd5eFlaggedTemplates.filter(template => {\r\n\t\tconst originName = fromUuidSync(template.flags.dnd5e.origin).name\r\n\t\tif (!name) {\r\n\t\t\treturn template.flags.dnd5e.spellLevel\r\n\t\t} else {\r\n\t\t\treturn template.flags.dnd5e.spellLevel && originName == name\t\r\n\t\t}\r\n\t})\r\n\tconst templatesInRange = getTemplatesInRange(potentialTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 60, x, y)\r\n\tconst templatesWithOverlap = getTemplatesWithOverlap(templatesInRange, itemTemplatePositions)\r\n\ttemplatesWithOverlap.map(template => {socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)})\r\n}\r\nexport const updateAuraEffectsOnUse = async (actor, args, effectName, getEffectData, tokenActorUuids) => {\r\n\tconst effectData = await getEffectData(actor.uuid, args[0].templateUuid)\r\n\tconst [appliedEffect] = await setActiveEffects(tokenActorUuids, effectData)\r\n\tconst liveActor = await fromUuid(actor.uuid)\r\n\tconst templateEffect = liveActor.effects.find(effect => effect.name == effectName)\r\n\tconst updatedChanges = [...templateEffect.changes, ...appliedEffect.changes]\r\n\ttemplateEffect.update({\"changes\": updatedChanges})\r\n}\r\nexport const updateAuraFlags = async (flagName, template, tokenActorUuids) => {\r\n\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\tconst updatedTemplate = await template.update({\r\n\t\t[flag]: tokenActorUuids\r\n\t})\t\t\r\n}\r\nexport const updateAuraWhenMoved = async (dispositions, effectName, flagName, getEffectData, template) => {\r\n\tconst [\r\n\t\teffectData, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids\r\n\t] = await getAuraParamsWhenMoved(dispositions, getEffectData, template, flagName)\r\n\tdeleteAuraEffectsWhenMoved(\r\n\t\teffectName, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids,\t\t\r\n\t\ttemplate.flags[\"midi-qol\"].actorUuid\r\n\t)\r\n\tsetAuraEffectsWhenMoved(\r\n\t\teffectData, \r\n\t\tflagName, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids, \r\n\t\ttemplate\r\n\t)\t\r\n}\r\nexport const updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {getTokensInRange} from \"../../helper-functions.js\"\r\n\r\nasync function getEligibleTokenDocuments(tokenDocuments, scene, itemRange, originX, originY) {\r\n\tconst tokenDocsInRange = await getTokensInRange(tokenDocuments, scene.grid.size, scene.grid.distance, itemRange, originX, originY)\r\n\tif (!tokenDocsInRange) return false\r\n\tconst templateNonEffectedTokens = await getNonTemplateEffectedTokenDocs(tokenDocsInRange)\r\n\tif (!templateNonEffectedTokens) return false\r\n\treturn templateNonEffectedTokens\r\n}\r\nasync function getNonTemplateEffectedTokenDocs(tokenDocuments, itemEffectName) {\r\n\treturn tokenDocuments.filter(token => {\r\n\t\tconst effects = token.actor.statuses\r\n\t\treturn effects.has(itemEffectName) == false\r\n\t})\r\n}\r\nconst onUse = async ({args, workflow, item, actor, token}) => {\r\n\tconst itemEffectName = \"Convenient Effect: Aura of Purity\"\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\tconst scene = await fromUuid(template.parent.uuid)\r\n\tconst itemRange = args[0].item.system.target.value\r\n\tconst tokenDocs = Array.from(scene.collections.tokens.values())\r\n\t\r\n\tconst eligibleTokenDocs = await getEligibleTokenDocuments(tokenDocs, scene, itemRange, template.x, template.y)\r\n\tif (!eligibleTokenDocs) return false\r\n\r\n\tconst tokenEffectUuids = await setTokenEffects(eligibleTokenDocs, token.document.disposition)\r\n\tawait template.update({\r\n\t\t\"flags.castData.auraOfPurity.tokensEffected\": tokenEffectUuids\r\n\t})\r\n}\r\nconst preTargetSave = async ({args, workflow, item, actor}) => {\r\n\tconst itemHasEffect = item.effects.some(effect => effect.changes.some(change => {\r\n\t\treturn conditionLabels[\"blinded\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"charmed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"deafened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"frightened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"paralyzed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"stunned\"].includes(change.value.toLowerCase())\r\n\t}))\r\n\tif (itemHasEffect) workflow.saveDetails.advantage = true\r\n}\r\nasync function setTokenEffects(tokenDocs, casterDisposition) {\r\n\tlet effected = []\r\n\tlet uuid = \"\"\r\n\tfor (let i=0; i < tokenDocs.length; i++) {\r\n\t\tconsole.log(\"tokenDocs[i]\")\r\n\t\tconsole.log(tokenDocs[i])\r\n\t\tuuid = tokenDocs[i].actor.uuid\r\n\t\tif ((casterDisposition == 1 && tokenDocs[i].disposition != -1)\r\n\t\t\t|| (casterDisposition == -1  && tokenDocs[i].disposition != 1)) {\r\n\t\t\tgame.dfreds.effectInterface.addEffect( {effectName: 'Aura of Purity', uuid} )\r\n\t\t\teffected.push(uuid)\r\n\t\t}\r\n\t}\r\n\treturn effected\r\n}\r\n\r\nexport const auraOfPurity = {\r\n\tpreTargetSave,\r\n\tonUse\r\n}","import {getSpawnLocation, setActorConcDeletion, setActorConcRemoveUuids} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getSpawnUpdates = async (originActorSenses, originTokenSight) => {\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"alpha\": 0,\r\n\t\t\t\"sight\": originTokenSight\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"system.attributes.senses\": originActorSenses\r\n\t\t}\r\n\t}\r\n}\r\nconst getTokenSpawnIds = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawnedTokenId = await setSpawnedTokenId(tokenUuid, itemRange, actor, originToken)\r\n\tconst spawnedToken = canvas.scene.collections.tokens.get(spawnedTokenId)\r\n\treturn spawnedToken.uuid\r\n}\r\nconst getWarpgateCallbacks = async (tokenUuid) => {\r\n\treturn {\r\n\t\tpre: async (template,update,token) => {\r\n\t\t\tsetEffectsSequencer(template, update, token, tokenUuid)\r\n\t\t\tawait warpgate.wait(2650)\r\n\t\t},\r\n\t\tpost: async (template, token) => {\r\n\t\t\tsetPostEffectsSequencer(template,token)\r\n\t\t}\r\n\t}\r\n}\r\nconst getWarpgateOptions = async (actor) => {\r\n\treturn {controllingActor: actor}\r\n}\r\nconst getWarpgateUpdates = async (spawn, originActorSenses, originTokenSight) => {\r\n\tconst updates = await getSpawnUpdates(originActorSenses, originTokenSight)\r\n\treturn mergeObject(updates, spawn)\r\n}\r\nconst setEffectsSequencer = async (template, update, token, originTokenUuid) => {\r\n\tconst color = \"blue\"\r\n\tconst originToken = await fromUuid(originTokenUuid)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.intro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.loop.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.outro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\t\r\n}\r\nconst setHookMacros = async (actor, spawnedTokenUuid) => {\r\n\tconst userIsGM = game.users.find(user => user.id == game.userId).isTheGM\r\n\tif (!userIsGM) {\r\n\t\tawait socket.executeAsGM(\"setDeleteSummonConcentrationHook\", actor, spawnedTokenUuid)\r\n\t}\r\n\tconst deleteSummonConcentrationHookId = Hooks.on(\"deleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", deleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\r\n}\r\nconst setPostEffectsSequencer = async (template, token) => {\r\n\tconst sequencerPath = \"jb2a.impact.009.blue\"\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.fadeIn(250)\t\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\t\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t.play()\r\n\t\r\n}\r\nconst setPostSpawnEffects = async (spawnedTokenUuid, originTokenActorUuid) => {\r\n\tconst fromUuidActor = await fromUuid(originTokenActorUuid)\r\n\tawait setActorConcRemoveUuids(fromUuidActor, spawnedTokenUuid)\r\n\tawait setHookMacros(fromUuidActor, spawnedTokenUuid)\t\r\n}\r\nconst setSpawnedTokenId = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawn = {\r\n\t\ttoken: { name:\"Clairvoyance\"},\r\n\t\tactor: { name:\"Clairvoyance\"}\r\n\t}\r\n\tconst location = await getSpawnLocation(\"modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_Grey_Sphere_400x400.webm\", 1, 4, tokenUuid, itemRange, originToken)\r\n\tconst spawnedTokenId = await warpgate.spawnAt({x: location.x, y: location.y}, spawn.token.name, await getWarpgateUpdates(spawn, actor.system.attributes.senses, originToken.document.sight), await getWarpgateCallbacks(tokenUuid), await getWarpgateOptions(actor))\r\n\treturn spawnedTokenId[0]\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tawait setActorConcDeletion(actor)\r\n\t} else {\t\r\n\t\tconst spawnedTokenUuid = await getTokenSpawnIds(args[0].tokenUuid, 5280, actor, token)\t\t\r\n\t\tawait setPostSpawnEffects(spawnedTokenUuid, token.document.actor.uuid)\t\r\n\t}\r\n}\r\n\r\nexport const clairvoyance = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getDialogueButtonType, setActiveEffects, setTemplateDispels} from \"../../helper-functions.js\"\r\nimport {setAreaEffectDeleteHook} from \"../../hooks.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getEffectOriginData = async (originUuid, lightId) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\torigin: originUuid,\r\n\t\tchanges: [{key: \"macro.execute\", mode: 0, value: \"function.CHARNAME.macros.daylight.setSpellEffects\"}],\r\n\t\t\"flags.castData.daylight.lightId\": lightId,\r\n\t\t\"flags.dae.showIcon\": false,\t\t\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": true,\t\t\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectTokenData = async (originUuid) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\tduration: {rounds: 600},\r\n\t\torigin: originUuid,\r\n\t\tchanges: [\r\n\t\t\t{key: `ATL.light.dim`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [120]},\r\n\t\t\t{key: `ATL.light.bright`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [60]},\r\n\t\t\t{key: `ATL.light.attenuation`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [.35]}\r\n\t\t],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": false,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.showIcon\": true,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area of Effect\":\r\n\t\t\treturn \"icons/magic/air/weather-clouds-sunlight.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/air/weather-sunlight-sky.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst setAreaChoiceEffects = async (templateUuid, templateEffect, tokenActorUuid, itemUuid, positions) => {\r\n\tconst [x, y] = await setTemplateEffects(templateUuid, templateEffect, positions)\r\n\tconst lightParams = {\"x\": x, \"y\": y, \"config\": {\"bright\": 60, \"dim\": 120, \"attenuation\": .4}}\r\n\tconst [sanitizedLight] = await socket.executeAsGM(\"setAmbientLightCreate\", lightParams)\r\n\tconst [effect] = await setActiveEffects([tokenActorUuid], await getEffectOriginData(itemUuid, sanitizedLight._id))\t\r\n\tawait setAreaEffectDeleteHook(60, x, y, [\"Darkness\"], 9, effect, positions)\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token) => {\r\n\tif (!token) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation({\"x\": x, \"y\": y})\r\n\t\t\t.play()\t\t\t\t\r\n\t} else {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.attachTo(token)\r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst setInitChoice = async (itemUuid)  => {\r\n\tconst type = await getDialogueButtonType([\"Area of Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Daylight?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tconst target = game.user.targets.first()\r\n\t\tawait setActiveEffects([target.document.actor.uuid], await getEffectTokenData(itemUuid))\r\n\t\tawait setEffectsSequencer(0, 0, target.document.width, target)\r\n\t\treturn false\t\t\t\r\n\t}\t\r\n\treturn true\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tconst isAreaChoice = await setInitChoice(item.uuid)\r\n\t\tif (!isAreaChoice) return false\r\n\t} else if (args[0].tag == \"OnUse\" && args[0].macroPass == \"postActiveEffects\") {\r\n\t\tconst templateId = \"MeasuredTemplate.\" + args[0].templateId \r\n\t\tconst templatePositions = canvas.grid.highlightLayers[templateId].positions\r\n\t\tconst templateEffect = actor.effects.find(effect => effect.name == \"Daylight Template\")\r\n\t\tawait setAreaChoiceEffects(args[0].templateUuid, templateEffect, token.document.actor.uuid, item.uuid, templatePositions)\r\n\t} else if (args[0] == \"off\")  {\r\n\t\tconst lastArg = args[args.length - 1]\r\n\t\tawait socket.executeAsGM(\"setAmbientLightDelete\", lastArg.efData.flags.castData.daylight.lightId)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setTemplateEffects = async (templateUuid, templateEffect, templatePositions) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tawait setEffectsSequencer(template.x, template.y, 7, false)\r\n\tawait setTemplateDispels(template.x, template.y, \"Darkness\", templatePositions)\r\n\ttemplateEffect.delete()\r\n\treturn [template.x, template.y]\r\n}\r\n\r\nexport const daylight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getTemplatesInRange, getTemplatesWithOverlap} from \"./helper-functions.js\"\r\nimport {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const setAreaEffectDeleteHook = async (range, x, y, ineligibleEffectNames, minSpellLevel, originTemplateActiveEffect, itemTemplatePositions) => {\r\n\tconst setAreaEffectDeleteHookId = Hooks.on(\"refreshMeasuredTemplate\", (templateData) => {\r\n\t\tconst template = templateData.document\t\t\r\n\t\tconst originFlag = template.flags?.dnd5e?.origin ?? false\r\n\t\tconst templateSpellLevel = template.flags?.dnd5e?.spellLevel ?? 0\r\n\t\tif (!originFlag || templateSpellLevel > minSpellLevel) return false\t\t\r\n\t\tconst origin = fromUuidSync(template.flags.dnd5e.origin)\r\n\t\tif (ineligibleEffectNames.includes(origin.name) || ineligibleEffectNames == \"all\") {\t\r\n\t\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\t\tconst gridTemplatePositions = canvas.grid.highlightLayers[gridTemplateId].positions\t\r\n\t\t\tconst templatesOverlap = itemTemplatePositions.intersection(gridTemplatePositions).size > 0 \r\n\t\t\tif (!templatesOverlap) return false\r\n\t\t\t//waiting for potential concentration effects to cycle through\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsocket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)\r\n\t\t\t}, 200)\t\t\t\t\r\n\t\t}\r\n\t})\r\n\tawait setAreaEffectDeleteHookOff(originTemplateActiveEffect, setAreaEffectDeleteHookId)\r\n}\r\nexport const setAreaEffectDeleteHookOff = async (templateEffect, setAreaEffectDeleteHookId) => {\r\n\tconst setAreaEffectDeleteHookOffId = Hooks.on(\"deleteActiveEffect\", (effect, config) => {\t\t\t\r\n\t\tif (effect.uuid == templateEffect.uuid) {\r\n\t\t\tHooks.off(\"createMeasuredTemplate\", setAreaEffectDeleteHookId)\r\n\t\t\tHooks.off(\"deleteActiveEffect\", setAreaEffectDeleteHookOffId)\r\n\t\t}\r\n\t})\r\n}","import {getDialogueButtonType, getTemplatesInRange} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst deleteEffectsOnToken = async (casterToken, dispelAbility, dispelLevel) => {\r\n\tconst target = game.user.targets.first()\t\r\n\tconst [effectsLTE2DispelLevel, effectsGTDispelLevel] = await getTokenEffects(target, dispelLevel)\r\n\tconst effectsIdsToDelete = await getEffectsToDelete(casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel)\r\n\teffectsIdsToDelete.map(socket.executeAsGM(\"setActiveEffectDelete\", target.actor, effectsIdsToDelete[i]))\r\n}\r\nconst deleteTemplate = async (casterToken, dispelAbility, dispelLevel, selectedTemplate) => {\r\n\tconst spellLevel = selectedTemplate.flags.dnd5e.spellLevel\r\n\tconst templatesToDelete = dispelLevel < spellLevel ? await getTemplatesToDelete(casterToken, dispelAbility, [selectedTemplate]) : [selectedTemplate]\r\n\ttemplatesToDelete.map(template => socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid))\r\n}\r\nconst getEffectsToDelete = async (casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel) => {\r\n\tconst casterAbilityMod = casterToken.actor.system.abilities[dispelAbility].mod\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet effectCastLevel = 0\r\n\tfor (let i = 0; i < effectsGTDispelLevel.length; i++) {\r\n\t\teffectCastLevel = effectsGTDispelLevel[i].flags[\"midi-qol\"].castData.castLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > effectCastLevel + 10) arr.push(effectsGTDispelLevel[i])\t\t\r\n\t}\r\n\treturn effectsLTE2DispelLevel.concat(arr).map(effect => effect.id)\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area Effect\":\r\n\t\t\treturn \"icons/magic/air/air-burst-spiral-blue-gray.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/nature/plant-sprout-hand-blue.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelectedTemplate = async (casterToken) => {\r\n\tconst eligibleTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e.spellLevel > 0)\r\n\tconst inRangeEligibleTemplates = getTemplatesInRange(eligibleTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 120, casterToken.x, casterToken.y)\t\r\n\tlet originItem\r\n\tlet originItems = []\r\n\tfor (let i = 0; i < inRangeEligibleTemplates.length; i++) {\r\n\t\toriginItem = await fromUuid(inRangeEligibleTemplates[i].flags.dnd5e.origin)\r\n\t\toriginItems.push(originItem)\r\n\t}\r\n\treturn await getTemplateSelection(originItems, inRangeEligibleTemplates)\r\n}\r\nconst getTemplateSelection = async (items, inRangeEligibleTemplates) => {\r\n\tconst sortedTemplates = inRangeEligibleTemplates.sort((a, b) => {\r\n\t\tconst aOrig = fromUuidSync(a.flags.dnd5e.origin)\t\r\n\t\tconst bOrig = fromUuidSync(b.flags.dnd5e.origin)\r\n\t\treturn aOrig.name.localeCompare(bOrig.name)\r\n\t})\r\n\tconst templateSelections = items.map((item, i) => {\r\n\t\tconst itemOwnerName = canvas.scene.tokens?.find(token => token.actor.uuid == item.parent.uuid)?.name ?? \"unknown\"\r\n\t\tconst itemLabel = item.name + \" from \" + itemOwnerName\t\r\n\t\treturn {type: 'radio', label: itemLabel}\r\n\t}).sort((a, b) => a.label.localeCompare(b.label))\t\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: templateSelections\r\n\t\t},{\r\n\t\t\ttitle: \"Which template to dispel?\",\r\n\t\t\trender: (...args) => { console.log(...args); ui.notifications.info(\"render!\")},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100px\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn sortedTemplates[choices.inputs.indexOf(true)]\r\n}\r\nconst getTemplatesToDelete = async (casterToken, dispelAbility, potentialTemplates) => {\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet templateCastLevel = 0\r\n\tfor (let i = 0; i < potentialTemplates.length; i++) {\r\n\t\ttemplateCastLevel = potentialTemplates[i].flags.dnd5e.spellLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > potentialTemplates[i].flags.dnd5e.spellLevel + 10) arr.push(potentialTemplates[i])\t\t\r\n\t}\t\r\n\treturn arr\r\n}\r\nconst getTokenEffects = async (token, dispelLevel) => {\r\n\t//get two groups, 1: effects w/ spell levels lesser than or equal to the casted spell level of dispel magic; and 2: the same with greater than that level\r\n\tconst effectsLTE2DispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > 0 && effect.flags[\"midi-qol\"].castData.baseLevel <= dispelLevel)\r\n\tconst effectsGTDispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > dispelLevel)\r\n\treturn [effectsLTE2DispelLevel, effectsGTDispelLevel]\r\n} \r\nconst setInitChoice = async (casterUuid, dispelAbility, dispelLevel)  => {\r\n\tconst type = await getDialogueButtonType([\"Area Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Dispel Magic?\", getIconPaths, 60, 60)\r\n\tconst casterToken = await fromUuid(casterUuid)\t\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tdeleteEffectsOnToken(casterToken, dispelAbility, dispelLevel)\t\r\n\t} else if (type.value == \"Area Effect\") {\r\n\t\tconst selectedTemplate = await getSelectedTemplate(casterToken)\r\n\t\tdeleteTemplate(casterToken, dispelAbility, dispelLevel, selectedTemplate)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setSpellEffects = async ({args, item, workflow}) => {\r\n\tconst casterUuid = args[0].tokenUuid\r\n\tconst dispelAbility = args[0].actor.system.attributes.spellcasting\r\n\tconst dispelLevel = args[0].spellLevel < 3 ? 3 : args[0].spellLevel\r\n\tsetInitChoice(casterUuid, dispelAbility, dispelLevel)\r\n}\r\n\r\nexport const dispelMagic = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {cloudSpellNames} from \"../../constants.js\"\r\n\r\nconst getAoeOverlapPerc = async (args) => {\r\n\tconst creatureCoords = await getCreatureCoords(args[0].actor.token)\r\n\tconst templateCoords = await getTemplateCoords(args[0].templateId) ?? false\r\n\tif (!templateCoords) return 0\r\n\tconst overlap = creatureCoords.intersection(templateCoords)\r\n\treturn overlap.size / creatureCoords.size\r\n}\r\nconst getCreatureCoords = async (tokenDoc) => {\r\n\tconst gridSize = canvas.scene.grid.size\r\n\tlet set = new Set()\r\n\tlet position = \"\"\r\n\tfor (let i = 0; i < tokenDoc.height; i++) {\r\n\t\tfor (let j = 0; j < tokenDoc.width; j++) {\r\n\t\t\tposition = (tokenDoc.x + gridSize*i).toString() + \".\" + (tokenDoc.y + gridSize*j).toString() \r\n\t\t\tset.add(position)\r\n\t\t}\r\n\t}\r\n\treturn set\r\n}\r\nconst getNewDamage = async(hpDamage, hordeCount, multiplier, hasAreaTarget) => {\r\n\treturn hasAreaTarget ? Math.floor(hpDamage * hordeCount * multiplier) : hpDamage\r\n}\r\nconst getTemplateCoords = async (templateId) => {\r\n\tconst templateIdStr = \"MeasuredTemplate.\" + templateId\r\n\treturn canvas.grid.highlightLayers[templateIdStr].positions\r\n}\r\nconst isSaveFailure = async ({args, item}) => {\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tconsole.log(await getAoeOverlapPerc(args))\r\n\tif (!item.system.hasAreaTarget || await getAoeOverlapPerc(args) <= .666) {\r\n\t\tHooks.once(\"createActiveEffect\", (effect) => {\t\t\t\r\n\t\t\teffect.delete()\r\n\t\t})\r\n\t}\t\r\n}\r\nconst preTargetDamageApplication = async ({actor, args, item, workflow, token}) => {\r\n\tif (workflow.hitTargets.size < 1) return false\r\n\tconst hordeItem = await fromUuid(actor.items.find(item => item.name == \"Horde\").uuid)\r\n\tconst hordeItemUses = hordeItem.system.uses.value\r\n\tconst hordeItemUsesMax = hordeItem.system.uses.max\r\n\tconst liveTokenDoc = await fromUuid(token.document.uuid)\r\n\tconst hpDamage = workflow.damageItem.hpDamage\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tif (hpDamage > 0) setHpUpdateEffects(actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args)\r\n}\r\nconst setHpUpdateEffects = async (actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args) => {\r\n\tconst aoeOverlapPerc = await getAoeOverlapPerc(args)\r\n\tconst newHpDamage = await getNewDamage(hpDamage, hordeItemUses, aoeOverlapPerc, hasAreaTarget)\r\n\tworkflow.damageItem.hpDamage = newHpDamage\r\n\tsetPostDamageUpdates(actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax)\r\n}\r\nconst setLiveTokenDocUpdates = async (texture, hordeItem, hordeItemUsesMax, multiplier, liveTokenDoc, shouldReduce, tokenSizeNum) => {\r\n\t\thordeItem.update({\"system.uses.value\": hordeItemUsesMax * multiplier})\r\n\t\tif (tokenSizeNum > 2 && shouldReduce) {\r\n\t\t\tawait warpgate.wait(4000)\t\r\n\t\t\tsetSequencer(liveTokenDoc)\r\n\t\t\tawait warpgate.wait(200)\t\r\n\t\t\tif (liveTokenDoc.actor.system.traits.size != \"grg\" && liveTokenDoc.width <= 4 && liveTokenDoc.width <= 4) {\r\n\t\t\t\tliveTokenDoc.actor.update({\"system.traits.size\": Object.keys(CONFIG.DND5E.actorSizes)[tokenSizeNum - 1]})\r\n\t\t\t}\r\n\t\t\tliveTokenDoc.update({\"width\": liveTokenDoc.width - 1, \"height\": liveTokenDoc.width - 1})\t\r\n\t\t}\r\n\t\tliveTokenDoc.update({\"texture.src\": texture})\r\n}\r\nconst setPostDamageUpdates = async (actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax) => {\r\n\tconst newHealthPercentage = ((actor.system.attributes.hp.value - newHpDamage) / actor.system.attributes.hp.max) * 100\r\n\tconst tokenSizeNum = Object.keys(CONFIG.DND5E.actorSizes).indexOf(liveTokenDoc.actor.system.traits.size)\r\n\tlet shouldReduce = false\r\n\tif (75 >= newHealthPercentage && newHealthPercentage > 50) {\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img1, hordeItem, hordeItemUsesMax, .75, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (50 >= newHealthPercentage && newHealthPercentage > 25) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img2, hordeItem, hordeItemUsesMax, .50, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (25 >= newHealthPercentage && newHealthPercentage >= 0) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img3, hordeItem, hordeItemUsesMax, .25, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} \r\n}\r\nconst setSequencer = async (liveTokenDoc) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(liveTokenDoc.actor.flags[\"midi-qol\"].hordePassive.sequencerPath)\r\n\t\t\t.atLocation(liveTokenDoc)\r\n\t\t.play()\r\n}\r\n\r\nexport const hordePassive = {\r\n\tisSaveFailure,\r\n\tpreTargetDamageApplication\r\n}","export const insectCloud = {\r\n\tflagName:\t\t\t\t\"insectCloud\",\r\n\teffectName:\t\t\t\t\"Insect Cloud\",\r\n\ttemplateEffectName:\t\t\"Insect Cloud Template\"\r\n}","import {\r\n\tsetActiveEffects,\r\n\tsetAuraEffectUpdatesWhenDeleted,\r\n\tsetAuraEffectsWhenEntered,\r\n\tsetAuraEffectUpdatesWhenMoved,\r\n\tsetAuraEffectsWhenLeft,\r\n\tupdateAuraEffectsOnUse,\r\n\tupdateAuraFlags,\r\n\tupdateAuraWhenMoved\r\n} from \"../../../helper-functions.js\"\r\nimport {insectCloud as s} from \"../../../strings/features.js\"\r\n\r\nconst checkAttackerVision = (workflow) => {\r\n\tif (workflow.targets.first() == workflow.attackingToken) return false\r\n\tconst [target, bsRange, tsRange, units] = getCheckAttackerVisionParams(workflow)\r\n\tif (![\"ft\", \"m\", null].includes(units) && (bsRange > 0 || tsRange > 0)) return false \r\n\tconst attackerIsDefenderEffectOrigin = checkEffectOrigin(target, workflow.attackingToken)\r\n\tif (attackerIsDefenderEffectOrigin) return false\r\n\tconst inBsOrTsRange = getIfInBsOrTsRange(bsRange, tsRange, target, workflow)\r\n\tconst defenderIsOwnEffectOrigin = checkEffectOrigin(target, target)\r\n\tif (!inBsOrTsRange && defenderIsOwnEffectOrigin) return true\r\n\tconst attackerIsOwnEffectOrigin = checkEffectOrigin(workflow.attackingToken, workflow.attackingToken)\r\n\tif (!inBsOrTsRange && !attackerIsOwnEffectOrigin) return true\r\n\treturn false\r\n}\r\nconst checkDefenderVision = (workflow) => {\r\n\tif (workflow.targets.first() == workflow.attackingToken) return false\r\n\tconst [target, bsRange, tsRange, units] = getCheckDefenderVisionParams(workflow)\r\n\tif (![\"ft\", \"m\", null].includes(units) && (bsRange > 0 || tsRange > 0)) return false\r\n\tconst defenderIsAttackerEffectOrigin = checkEffectOrigin(workflow.attackingToken, target)\r\n\tif (defenderIsAttackerEffectOrigin) return false\r\n\tconst inBsOrTsRange = getIfInBsOrTsRange(bsRange, tsRange, target, workflow)\r\n\tconst defenderIsOwnEffectOrigin = checkEffectOrigin(target, target)\r\n\tif (inBsOrTsRange || defenderIsOwnEffectOrigin) return false\r\n\treturn true\r\n}\r\nconst checkEffectOrigin = (effectedToken, candidateToken) => {\r\n\tconst effect = effectedToken.actor.effects.find(effect => \r\n\t\ts.insectCloudEffectNames.includes(effect.name)\r\n\t)\r\n\tconst origin = effect?.origin ?? {}\r\n\treturn origin == candidateToken.actor.uuid\r\n}\r\nconst getCheckAttackerVisionParams = (workflow) => {\r\n\tconst target = workflow.targets.first()\r\n\tconst bsRange = workflow.actor.attributes.senses.blindsight\r\n\tconst tsRange = workflow.actor.attributes.senses.tremorsense\r\n\tconst units = workflow.actor.attributes.senses.units\t\r\n\treturn [target, bsRange, tsRange, units] \r\n}\r\nconst getCheckDefenderVisionParams = (workflow) => {\r\n\tconst target = workflow.targets.first()\r\n\tconst bsRange = target.actor.system.attributes.senses.blindsight\r\n\tconst tsRange = target.actor.system.attributes.senses.tremorsense\r\n\tconst units = target.actor.system.attributes.senses.units\t\r\n\treturn [target, bsRange, tsRange, units] \r\n}\r\nconst getEffectData = async (originUuid, templateUuid) => {\r\n\tconst duration = await getEffectDuration(templateUuid)\r\n\treturn {\r\n\t\tname: \"Insect Cloud\", \r\n\t\ticon: \"icons/creatures/invertebrates/wasp-swarm-movement.webp\", \r\n\t\torigin: originUuid,\r\n\t\tduration,\r\n\t\tchanges: [{\r\n\t\t\t\tkey: \"flags.midi-qol.grants.disadvantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkAttackerVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.advantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkDefenderVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.grants.advantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkDefenderVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.disadvantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkAttackerVision(workflow)`]\r\n\t\t}],\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectDuration = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tconst sourceActor = await fromUuid(template.flags[\"midi-qol\"].actorUuid)\r\n\tconst templateEffect = sourceActor.effects.find(effect => effect.name == s.templateEffectName)\r\n\treturn templateEffect.duration\r\n}\r\nconst getIfInBsOrTsRange = (bsRange, tsRange, target, workflow) => {\r\n\tconst maxBsOrTsRange = Math.max(bsRange, tsRange)\r\n\treturn MidiQOL.findNearby(\"all\", \r\n\t\ttarget, \r\n\t\tmaxBsOrTsRange, \r\n\t\t{canSee: true}\r\n\t).filter(token => \r\n\t\ttoken.actor.uuid == workflow.attackingToken.actor.uuid\r\n\t).length > 0 \t\r\n}\r\nconst getTokenActorUuids = async (template, token) => {\r\n\tconst tokenIds = game.modules.get(\"templatemacro\").api.findContained(template)\r\n\tconst elligibleTokens = tokenIds.map(id => \r\n\t\tcanvas.scene.collections.tokens.get(id)\r\n\t).filter(tokenDoc => token.document.uuid != tokenDoc.uuid)\r\n\tif (elligibleTokens.length < 1) return false\r\n\treturn elligibleTokens.filter(tokenDoc => {\r\n\t\tconst effects = tokenDoc.actor?.effects ?? []\r\n\t\treturn effects.filter(effect => \r\n\t\t\teffect.name != s.effectName\r\n\t\t).length > 0\r\n\t}).map(tokenDoc => tokenDoc.actor.uuid)\t\r\n}\r\nconst onUse = async ({actor, args, token}) => {\r\n\tconst template = await setTemplateAttachment(args, token)\r\n\tconst tokenActorUuids = await getTokenActorUuids(template, token)\r\n\tif (!tokenActorUuids) return false\r\n\tupdateAuraEffectsOnUse(actor, \r\n\t\targs, \r\n\t\ts.templateEffectName, \r\n\t\tgetEffectData, \r\n\t\ttokenActorUuids\r\n\t)\r\n\tupdateAuraFlags(s.flagName, template, tokenActorUuids)\r\n}\r\nconst setTemplateAttachment = async (args, token) => {\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\treturn template\r\n}\r\nconst whenDeleted = async (template) => {\r\n\tsetAuraEffectUpdatesWhenDeleted(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\ttemplate\r\n\t)\r\n}\r\nconst whenEntered = async (template, token) => {\r\n\tsetAuraEffectsWhenEntered(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\tgetEffectData, \r\n\t\ttemplate, \r\n\t\ttoken\r\n\t)\r\n}\r\nconst whenLeft = async (template, token) => {\r\n\tsetAuraEffectsWhenLeft(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\ttemplate, \r\n\t\ttoken\r\n\t)\r\n}\r\nconst whenMoved = async (template) => {\r\n\tconst dispositions = [-1, 0, 1]\r\n\tupdateAuraWhenMoved(\r\n\t\tdispositions, \r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\tgetEffectData, \r\n\t\ttemplate\r\n\t)\r\n}\r\n\r\nexport const insectCloud = {\r\n\tcheckAttackerVision,\r\n\tcheckDefenderVision,\r\n\tonUse,\r\n\twhenDeleted,\r\n\twhenEntered,\r\n\twhenLeft,\r\n\twhenMoved\t\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const ringOfSpellStoring = {\r\n\taddSpellErr:\t\t\"Your Ring of Spell Storing doesn't have enough room left for a spell!\",\r\n\tcastSpellErr:\t\t\"Your Ring of Spell Storing doesn't have any spells on it!\",\t\r\n\tcastSpellHeader:\t\"Which spell do you wan to cast?\",\r\n\tcharHeader: \t\t\"Who is casting onto the ring?\",\r\n\tcurrSpellBank:\t\t\"Current Spell Bank\",\r\n\tdescLevel: \t\t\t\", Level \",\r\n\tcharnamesExceptions:[\"Shadowfell Vine Strike\", \"Necrotic Blast\", \"Summon Shadow Clone\", \"Animate Shadow Servant\", \"Mud\", \"Taunt\"],\r\n\tinitChoices:\t\t[\"Add Spells\", \"Cast Spell\", \"Empty Spells\"],\r\n\tinitHeader: \t\t\"What do you want to cast?\",\r\n\tlevelHeader:\t\t\"What level spell do you want to add?\",\r\n\tlevelLabels:\t\t[\"One\", \"Two\", \"Three\", \"Four\", \"Five\"],\r\n\tspellHeader:\t\t\"Which spell is being cast onto the ring?\",\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tinstrumentSpellNames: {\r\n\t\tanstruthHarp: \t\t[\"Control Weather\", \"Cure Wounds\", \"Wall of Thorns\"],\r\n\t\tcanaithMandolin: \t[\"Cure Wounds\", \"Dispel Magic\", \"Protection from Energy (Lightning)\"],\r\n\t\tcliLyre: \t\t\t[\"Stone Shape\", \"Wall of Fire\", \"Wind Wall\"],\r\n\t\tdossLute: \t\t\t[\"Animal Friendship\", \"Protection from Energy (Fire)\", \"Protection from Poison\"],\r\n\t\tfochlucanBandore: \t[\"Entangle\", \"Faerie Fire\", \"Shillelagh\", \"Speak with Animals\"],\r\n\t\tgeneric: \t\t\t[\"Fly\", \"Invisibility\", \"Levitate\", \"Protection from Evil and Good\"],\r\n\t\tmacFuirmidhCittern: [\"Barkskin\", \"Cure Wounds\", \"Fog Cloud\"],\r\n\t\tollamhHarp: \t\t[\"Confusion\", \"Control Weather\", \"Fire Storm\"]\r\n\t},\r\n\tinitHeader: \t\t\t\"Choose a spell to cast!\"\r\n}\r\n\r\nexport const staffOfSwarmingInsects = {\r\n\tallChoices: \t\t\t[\"Giant Insect\", \"Insect Cloud\", \"Insect Plague\", \"Melee (1h)\", \"Melee (2h)\"],\r\n\tdamageWeaponName:\t\t\"Staff of Swarming Insects - Damage\",\r\n\tflagName:\t\t\t\t\"staffOfSwarmingInsects\",\r\n\tinitHeader: \t\t\t\"What do you want to do?\",\r\n\tmeleeChoices: \t\t\t[\"Melee (1h)\", \"Melee (2h)\"],\r\n\tspellNames: \t\t\t[\"Giant Insect\", \"Insect Cloud\", \"Insect Plague\"],\r\n}","import {deleteTempItem as deleteItem, getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {instrumentOfTheBards as s} from \"../../strings/items.js\"\r\n\r\nconst castSpell = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst updates = await createCastWorkflow(spell, instrument, tokenActor, chosenIndex)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst [tempItem] = await createTempItem(spell, instrument, tokenActor, chosenIndex)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spell.activation)\r\n\tconst itemData = await getTempSpellItem(spell, instrument, updatedMacroNames, chosenIndex)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data, setDeleteItemFlags)\r\n}\r\nconst getCureWoundsData = async (spell, instrument) => {\r\n\tif (instrument.type == \"anstruthHarp\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [5, [\"5d8 + @mod\", \"healing\"]]\r\n\t} else if (instrument.type == \"canaithMandolin\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [3, [\"3d8 + @mod\", \"healing\"]]\r\n\t} else {\r\n\t\treturn [spell.system.level, spell.system.damage.parts]\r\n\t}\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getInstrumentSpells = async (instrument) => {\r\n\t//keeping this for reference\r\n\tswitch(instrument) {\r\n\t\tcase \"anstruthHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Control Weather\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Wall of Thorns\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"canaithMandolin\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Cure Wounds\", \r\n\t\t\t\t\"Dispel Magic\",\r\n\t\t\t\t\"Protection from Energy (Lightning)\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"cliLyre\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Stone Shape\", \r\n\t\t\t\t\"Wall of Fire\",\r\n\t\t\t\t\"Wind Wall\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"dossLute\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Animal Friendship\", \r\n\t\t\t\t\"Protection from Energy (Fire)\",\r\n\t\t\t\t\"Protection from Poison\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"fochlucanBandore\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Entangle\", \r\n\t\t\t\t\"Faerie Fire\",\r\n\t\t\t\t\"Shillelagh\",\r\n\t\t\t\t\"Speak with Animals\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"macFuirmidhCittern\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Barkskin\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Fog Cloud\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"ollamhHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Confusion\", \r\n\t\t\t\t\"Control Weather\",\r\n\t\t\t\t\"Fire Storm\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\treturn spell.img\r\n}\r\nconst getSpellsToCast = async (item, type) => {\r\n\tconst spellNames = [...s.instrumentSpellNames[\"generic\"], ...s.instrumentSpellNames[type]].sort()\r\n\tconst spellData = spellNames.map((name, i) => {\r\n\t\treturn {\"name\": name, id: i}\r\n\t}).filter(spell => item.flags.charname.instrumentOfTheBards.spells[spell.id].isCharged)\r\n\tconst spells = spellData.map(spell => game.items.find(item => item.name.toLowerCase() == spell.name.toLowerCase()))\t\r\n\tconst filteredSpellNames = spells.map(spell => spell.name)\r\n\treturn [spellData, spellNames, filteredSpellNames, spells]\r\n}\r\nconst getTempSpellItem = async (spell, instrument, updatedMacroNames, chosenIndex) => {\r\n\tconst [level, damage] = await getCureWoundsData(spell, instrument)\r\n\treturn mergeObject(duplicate(spell.toObject(false)), {\r\n\t\t\"flags.charname.instrumentOfTheBards.originInstrumentUuid\": instrument.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.originName\": spell.name,\r\n\t\t\"flags.charname.instrumentOfTheBards.originUuid\": spell.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.type\": \"spell\",\r\n\t\t\"flags.charname.instrumentOfTheBards.spellIndex\": chosenIndex,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.damage.parts\": damage,\r\n\t\t\"system.level\": level,\t\t\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.instrumentOfTheBards.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst main = async ({actor, args, token}) => {\r\n\t//\r\n}\r\nconst removeSpells = async (actor, instrument) => {\r\n\t//this erased everything on Nora lol\r\n\t\r\n\treturn Promise.all(actor.items.filter(item => {\r\n\t\tconst originName = item.flags?.charname?.instrumentOfTheBards?.originName ?? null\r\n\t\treturn instrument.spells.filter(spell => spell.name == originName).length > 0\r\n\t}).map(item => item.delete()))\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst instrument = await fromUuid(tempItem.flags.charname.instrumentOfTheBards.originInstrumentUuid)\r\n\tconst index = tempItem.flags.charname.instrumentOfTheBards.spellIndex\r\n\tupdateDeleteItemFlags(instrument, index)\r\n}\r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst updateDeleteItemFlags = async (instrument, index) => {\r\n\tconst updates = instrument.flags.charname.instrumentOfTheBards.spells.map((spell, i) => {\r\n\t\tif (i == index) {\r\n\t\t\treturn {name: spell.name, isCharged: false}\r\n\t\t} else {\r\n\t\t\treturn spell\r\n\t\t}\r\n\t})\r\n\tconst flaggedItem = await instrument.update({\r\n\t\t\"flags.charname.instrumentOfTheBards.spells\": updates\r\n\t})\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\tif (type == \"spell\") return false\t\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\t\t\r\n\tconst [spellData, spellNames, filteredSpellNames, spells] = await getSpellsToCast(liveItem, type)\r\n\tconst choice = await getDialogueButtonType(filteredSpellNames, {width: filteredSpellNames.length * 150, height: \"100%\"}, s.initHeader, getSpellIconPaths, 60, 60, spells)\r\n\tconst spell = spells.find(spell => spell.name == choice.value)\r\n\tconst chosenIndex = spellNames.indexOf(choice.value)\r\n\tcastSpell(spell, liveItem, tokenActor, chosenIndex)\t\r\n}\r\nconst onNewDay = async (actor, data) => {\r\n\tif (!data.newDay) return false\r\n\tconst instruments = actor.items.filter(item => {\r\n\t\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\t\treturn type != \"spell\"\r\n\t}) \r\n\trefreshInstruments(instruments)\r\n}\r\nconst refreshInstruments = async (instruments) => {\r\n\tinstruments.forEach(instrument => {\r\n\t\tconst spells = instrument.flags.charname.instrumentOfTheBards.spells\r\n\t\tconst update = spells.map(spell => {\r\n\t\t\tspell.isCharged = true\r\n\t\t\treturn spell\r\n\t\t})\r\n\t\tinstrument.update({\"flags.charname.instrumentOfTheBards.spells\": update})\r\n\t})\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tdeleteTempItem,\r\n\tonUse,\r\n\tonNewDay\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {protectionFromPoison as s} from \"../../strings/spells.js\"\r\nimport {getDialogueButtonType, removeEffect} from \"../../helper-functions.js\"\r\n\r\nconst getChoices = async (effects) => {\r\n\treturn effects.reduce((acc, effect, i) => {\r\n\t\t\tconst nameAlreadyUsed = acc.find(choice => choice.name == effect.name)\r\n\t\t\tconst name = nameAlreadyUsed ? effect.name + \"-\" + i : effect.name\r\n\t\t\tconst choice = {name: name, icon: effect.icon, uuid: effect.uuid}\r\n\t\t\treturn [...acc, choice]\r\n\t}, [])\r\n}\r\nconst getChosenEffect = async (effects) => {\r\n\tconst choices = await getChoices(effects)\t\t\r\n\tconst buttonNames = choices.map(choice => choice.name)\t\t\r\n\tconst initChoice = await getDialogueButtonType(buttonNames, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60, choices)\r\n\treturn choices.find(effect => effect.name == initChoice.value)\t\r\n}\r\nconst getInitIconPaths = (choice, effects) => {\r\n\tconst chosenEffect = effects.find(effect => effect.name == choice)\r\n\treturn chosenEffect.icon\r\n}\r\nconst getPoisonEffects = () => {\r\n\tconst target = game.user.targets.first()\r\n\treturn target.actor.effects.filter(effect => {\r\n\t\tconst hasPoisonedName = conditionLabels[\"poisoned\"].includes(effect.name.toLowerCase())\r\n\t\tconst hasPoisonedConditions = effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase()))\r\n\t\treturn hasPoisonedName || hasPoisonedConditions\r\n\t})\t\r\n}\r\nconst onUse = async ({item, workflow, args, token}) => {\r\n\tconst poisonEffects = await getPoisonEffects()\r\n\tif (poisonEffects.length > 0) {\r\n\t\tconst chosenEffect = await getChosenEffect(poisonEffects)\r\n\t\tawait removeEffect(chosenEffect.uuid)\t\r\n\t}\r\n}\r\nconst preTargetSave = async ({item, workflow, args}) => {\r\n\tconst hasPoison = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())))\r\n\tif (hasPoison) workflow.saveDetails.advantage = true\r\n}\r\n\r\nexport const protectionFromPoison = {\r\n\tonUse,\r\n\tpreTargetSave\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {ringOfSpellStoring as s} from \"../../strings/items.js\"\r\n\r\nconst addSpell = async (item, tokenActor) => {\r\n\tconst notification = await setAddSpellNotification(item)\r\n\tif (notification) return false\r\n\tconst updates = await getAddSpellUpdates(item, tokenActor)\r\n\tsetAddSpellUpdates(item, updates, tokenActor)\r\n}\r\nconst castSpell = async (item, tokenActor) => {\r\n\tconst updates = await createCastWorkflow(item, tokenActor)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nconst createCastWorkflow = async (item, tokenActor) => {\r\n\tconst spellData = await getSpellToCast(item)\t\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, item)\r\n\tawait setPreUseItemHooks(tempItem, spellData)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, item)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spellData, tokenActor, liveItem) => {\r\n\tconst sourceItem = await fromUuid(spellData.uuid)\t\r\n\tconst sourceMacroNames = await getSourceMacroNames(sourceItem)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spellData.activation)\r\n\tconst itemData = await getTempItem(liveItem, sourceItem, spellData, updatedMacroNames)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async ({args, item, workflow}) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tawait setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nconst getAddCharChoice = async (eligibleSpellsByChar) => {\r\n\tconst charChoices = eligibleSpellsByChar.map(character => character.origin).toSorted()\t\r\n\treturn await getDialogueButtonType(charChoices, {width: 400, height: 150}, s.charHeader, getCharIconPaths, 60, 60, eligibleSpellsByChar)\r\n}\r\nconst getAddLevelChoice = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst levelChoices = await getLevelChoices(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst levelChoice = await getDialogueButtonType(levelChoices, {width: 400, height: 150}, s.levelHeader, getLevelIconPaths, 60, 60)\r\n\t//return value as int\r\n\treturn {value: s.levelLabels.indexOf(levelChoice.value) + 1}\r\n}\r\nconst getAddSpellChoice = async (charChoice, eligibleSpellsByChar, levelChoice) => {\r\n\tconst [spellChoices, spellIcons] = await getSpellChoices(charChoice, eligibleSpellsByChar, levelChoice)\r\n\treturn await getSpellChoice(spellChoices, s.spellHeader, getSpellIconPaths, spellIcons)\t\r\n}\r\nconst getAddSpellChoices = async (eligibleSpellsByChar, item, tokenActor) => {\r\n\tconst charChoice = await getAddCharChoice(eligibleSpellsByChar)\r\n\tconst levelChoice = await getAddLevelChoice(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst spellChoice = await getAddSpellChoice(charChoice, eligibleSpellsByChar, levelChoice.value)\r\n\treturn [charChoice.value, levelChoice.value, spellChoice.value]\r\n}\r\nconst getAddSpellUpdates = async (item, tokenActor) => {\r\n\tconst actors = await getLiveActors()\r\n\tconst eligibleSpellsByChar = await getEligibleSpells(actors)\t\r\n\tconst choices = await getAddSpellChoices(eligibleSpellsByChar, item, tokenActor)\t\r\n\treturn [choices, eligibleSpellsByChar]\r\n}\r\nconst getAttackBonus = (actor, item, ability) => {\r\n\tconst isRangedAttack = item.system.actionType == \"rsak\"\r\n\tconst isMeleeAttack = item.system.actionType == \"msak\"\r\n\tif (!isRangedAttack && !isMeleeAttack) {\r\n\t\treturn 0\r\n\t} else if (isRangedAttack) {\t\t\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.rsak.attack)\r\n\t} else if (isMeleeAttack) {\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.msak.attack)\r\n\t}\r\n}\r\nconst getCharIconPaths = (choice, iconData) => {\t\r\n\tconst match = iconData.find(item => item.origin == choice)\r\n\treturn match.icon\r\n}\r\nconst getDeleteItemFlagData = async (liveItem, tempItem) => {\r\n\tconst spellData = tempItem.flags.charname.ringOfSpellStoring.spellData\r\n\tconst spells = liveItem.flags.charname.ringOfSpellStoring.spells\t\r\n\tconst slotsUsed = liveItem.flags.charname.ringOfSpellStoring.slotsUsed\r\n\tconst usedSpell = spells.find(spell => {\r\n\t\treturn spell.level == spellData.level\r\n\t\t\t&& spell.name == spellData.name \r\n\t\t\t&& spell.dc == spellData.dc \r\n\t\t\t&& spell.ability == spellData.ability\r\n\t})\t\r\n\tconst deleteIndex = spells.indexOf(usedSpell)\r\n\treturn [deleteIndex, slotsUsed, spells, usedSpell.level]\r\n}\r\nconst getDeleteItemFlagUpdates = async (liveItem, tempItem) => {\r\n\tconst [deleteIndex, slotsUsed, spells, usedSpellLevel] = await getDeleteItemFlagData(liveItem, tempItem)\r\n\tconst newSlotsUsed = slotsUsed - usedSpellLevel\r\n\tconst newSpells = spells.filter((spell, i) => i != deleteIndex)\t\r\n\treturn [newSlotsUsed, newSpells]\r\n}\r\nconst getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nconst getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getEligibleLevelSpells = (actor, item) => {\r\n\tconst highestSpellLevel = getHighestSpellLevel(actor.system.spells)\r\n\tconst mode = item.system.preparation.mode\r\n\tlet eligibleLevelSpells = []\r\n\tlet spellData = {}\r\n\tfor (let i = item.system.level; i <= 5; i ++) {\r\n\t\tif (mode == \"atwill\" || mode == \"innate\") {\t\t\t\t\r\n\t\t\tif (i == item.system.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, item.system.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else if (mode == \"pact\") {\r\n\t\t\tif (i == actor.system.spells.pact.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, actor.system.spells.pact.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (i <= highestSpellLevel) {\r\n\t\t\t\tspellData = getSpellData(actor, item, i)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\t\t\r\n\treturn eligibleLevelSpells\r\n}\r\nconst getEligibleSpells = async (actors) => {\r\n\treturn actors.map(actor => {\r\n\r\n\t\tconst eligibleSpells = actor.items.filter(item => item.type == \"spell\" && item.system.level > 0 && item.system.level <= 5)\t\r\n\t\tconst actorSpells = eligibleSpells.reduce((spells, spell) => {\r\n\t\t\tconst eligibleLevelSpells = getEligibleLevelSpells(actor, spell)\r\n\t\t\treturn [...spells, ...eligibleLevelSpells]\r\n\t\t}, [])\r\n\t\treturn {origin: actor.prototypeToken.name, icon: actor.prototypeToken.texture.src, spells: actorSpells}\r\n\t})\r\n}\r\nconst getHighestSpellLevel = (spells) => {\r\n\tlet arr = []\r\n\tlet label\r\n\tfor (let i = 1; i <= 9; i++) {\r\n\t\tlabel = \"spell\" + i\r\n\t\tif (spells[label].max > 0) arr.push(i)\r\n\t}\r\n\treturn Math.max(...arr)\r\n}\r\nconst getInitIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.initChoices[0]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-diamond-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[1]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-pentagon-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[2]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-glowing-triangle-teal-purple.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst getLevelChoices = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst slotsRemaining = 5 - item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\r\n\tconst eligibleLevels = character.spells.map(spell => spell.level).filter(level => level <= slotsRemaining)\r\n\tconst spellLevels = new Set(eligibleLevels)\t\t\t\r\n\treturn Array.from(spellLevels).toSorted().map(level => s.levelLabels[level - 1])\r\n}\r\nconst getLevelIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.levelLabels[0]:\r\n\t\t\treturn \"icons/skills/ranged/target-bullseye-archer-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[1]:\r\n\t\t\treturn \"icons/skills/melee/weapons-crossed-daggers-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[2]:\r\n\t\t\treturn \"icons/skills/ranged/arrows-triple-yellow-red.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[3]:\r\n\t\t\treturn \"icons/skills/ranged/shuriken-thrown-yellow.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[4]:\r\n\t\t\treturn \"icons/skills/ranged/daggers-thrown-salvo-orange.webp\"\r\n\t\t\tbreak\t\t\t\t\r\n\t}\t\r\n}\r\nconst getLiveActors = async () => {\r\n\treturn game.users.filter(user => user.character).filter(user => {\r\n\t\treturn canvas.scene.tokens.find(token => token.actor.uuid == user.character.uuid)\r\n\t}).map(user => user.character)\r\n}\r\nconst getNewSlotsUsed = async(item, level) => {\r\n\tconst slots = item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\treturn slots + level\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellChoice = async (spellChoices, spellHeader, getSpellIconPaths, spellIcons) => {\r\n\tconst sortedChoices = spellChoices.toSorted()\r\n\tconst radioSelections = sortedChoices.map(choice => {\r\n\t\tconst data = spellIcons.find(spell => spell.name == choice)\r\n\t\tconst icon = data.icon\r\n\t\tconst label = `<img align=left src=${icon} width=\"15\" height=\"15\" style=\"border:0px\">${choice}`\r\n\t\treturn {type: \"radio\", label}\r\n\t})\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: radioSelections\r\n\t\t},{\r\n\t\t\ttitle: spellHeader,\r\n\t\t\trender: (...args) => {},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn {value: sortedChoices[choices.inputs.indexOf(true)]}\r\n}\r\nconst getSpellChoices = async (charChoice, eligibleSpellsByChar, levelChoiceInt) => {\t\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\t\r\n\tconst spells = character.spells.filter(spell => spell.level == levelChoiceInt && !s.charnamesExceptions.includes(spell.name))\r\n\tconst names = spells.map(spell => spell.name)\r\n\tconst icons = spells.map(spell => { return {name: spell.name, icon: spell.icon} })\r\n\treturn [names, icons]\r\n}\r\nconst getSpellData = (actor, item, i) => {\r\n\tconst name = item.name\r\n\tconst level = i\r\n\tconst dc = actor.system.attributes.spelldc\r\n\tconst ability = actor.system.attributes.spellcasting\r\n\tconst attackBonus = getAttackBonus(actor, item, ability)\r\n\tconst prof = actor.system.attributes.prof\t\r\n\tconst icon = item.img\r\n\tconst uuid = item.uuid\r\n\tconst activation = item.system.activation.type\r\n\tconst originUuid = actor.uuid\r\n\treturn {name, level, dc, ability, attackBonus, prof, icon, uuid, activation, originUuid}\r\n}\r\nconst getSpellIconPaths = (choice, iconData) => {\r\n\tconst match = iconData.find(item => item.name == choice)\r\n\treturn match.icon\t\r\n}\r\nconst getSpellToCast = async (item) => {\r\n\tconst spells = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tif (spells.length < 1) {\r\n\t\tui.notifications.info(s.castSpellErr)\r\n\t\treturn false\t\t\r\n\t}\t\r\n\tconst uniqueSpells = new Set(spells)\r\n\tconst spellsArr = Array.from(uniqueSpells)\r\n\tconst spellNames = spellsArr.map(spell => spell.name).toSorted()\r\n\tconst chosenSpell = await getDialogueButtonType(spellNames, {width: 400, height: \"100%\"}, s.castSpellHeader, getSpellIconPaths, 60, 60, spellsArr)\r\n\treturn spellsArr.find(spell => spell.name == chosenSpell.value)\r\n}\r\nconst getTempItem = async (liveItem, sourceItem, spellData, updatedMacroNames) => {\r\n\treturn mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\timg: liveItem.img,\r\n\t\t\"flags.charname.ringOfSpellStoring.ringUuid\": liveItem.uuid,\r\n\t\t\"flags.charname.ringOfSpellStoring.spellData\": spellData,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.ability\": \"none\",\r\n\t\t\"system.attackBonus\": spellData.attackBonus,\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t\t\"system.save.dc\": spellData.dc,\r\n\t\t\"system.save.scaling\": \"flat\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedDescription = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spells = item.flags.charname.ringOfSpellStoring.spells.reduce((spells, spell) => {\r\n\t\tconst newSpell = [\"<br />\" + spell.name + s.descLevel + spell.level]\r\n\t\treturn [...spells, ...newSpell]\r\n\t}, []).toSorted()\t\t\r\n\tconst newSpells = spells.reduce((descs, desc) => {\r\n\t\treturn descs + desc\r\n\t}, \"\")\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\r\n\tconst sanitizedDesc = desc.replace(spellBankStr, \"\")\t\r\n\treturn sanitizedDesc + \"<br />*******<br />\" + s.currSpellBank + \":<br />\" + newSpells + \"<br />*******\"\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.ringOfSpellStoring.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst getUpdateRingData = async (charName, eligibleSpellsByChar, item, level, spellName) => {\r\n\tconst chr = eligibleSpellsByChar.find(chr => chr.origin == charName)\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tconst newSlotsUsed = await getNewSlotsUsed(item, level)\r\n\tconst chosenSpell = [chr.spells.find(spell => spell.name == spellName && spell.level == level)]\t\t\r\n\tconst newSpellData = [...spellData, ...chosenSpell]\t\r\n\treturn [chosenSpell, newSlotsUsed, newSpellData]\r\n}\r\nconst main = async ({args, item}) => {\r\n\tconst initChoice = await getDialogueButtonType(s.initChoices, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\r\n\tif (initChoice.value == s.initChoices[0]) {\r\n\t\taddSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[1]) {\r\n\t\tcastSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[2]) {\r\n\t\tresetSpells(liveItem, tokenActor)\r\n\t}\r\n}\r\nconst resetSpells = async (item, tokenActor) => {\r\n\tsetResetSpellsDesc(item)\r\n\tconst tempItems = tokenActor.items.filter(item => item.flags?.charname?.ringOfSpellStoring?.ringUuid ?? false)\r\n\ttempItems.map(item => item.delete())\r\n}\r\nconst setAddSpellNotification = async (item) => {\r\n\tif (item.flags.charname.ringOfSpellStoring.slotsUsed == 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\t\r\n}\r\nconst setAddSpellUpdates = async (item, updates, tokenActor) => {\r\n\tconst [choices, eligibleSpellsByChar] = updates\r\n\tconst [spellData] = await updateRingItem(item, choices, eligibleSpellsByChar)\t\r\n\tif (spellData.activation == \"reaction\") setReactionUpdates(spellData, tokenActor, item)\t\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst liveItem = await fromUuid(tempItem.flags.charname.ringOfSpellStoring.ringUuid)\r\n\tconst updates = await getDeleteItemFlagUpdates(liveItem, tempItem)\r\n\tupdateDeleteItemFlags(liveItem, updates)\r\n}\r\nconst setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst setPreUseItemHooks = async (item, spellData) => {\r\n\tHooks.once(\"dnd5e.preUseItem\", (useItem, config) => {\r\n\t\tif (item.uuid != useItem.uuid) return false\t\r\n\t\tconfig.consumeResource = false\r\n\t\tconfig.consumeSpellSlot = false\r\n\t\tconfig.consumeUsage = false\r\n\t\tconfig.slotLevel = spellData.level\t\r\n\t\tconfig.system.prof._baseProficiency = spellData.prof\t\t\t\r\n\t})\t\t\r\n}\r\nconst setReactionHook = async ({item}) => {\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spellData ?? false\r\n\tif (!spellData) return false\r\n\tsetPreUseItemHooks(item, spellData)\r\n}\r\nconst setReactionUpdates = async (spellData, tokenActor, liveItem) => {\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, liveItem)\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n}\r\nconst setResetSpellsDesc = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\t\r\n\tconst updatedStr = \"<br />*******<br />\" + s.currSpellBank + \":<br /><br />*******\"\r\n\tconst updatedDesc = desc.replace(spellBankStr, updatedStr)\t\r\n\titem.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": [],\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": 0,\r\n\t\t\"system.description.value\": updatedDesc\r\n\t})\t\t\r\n}\r\nconst setRingUpdates = async (chosenSpell, item, newSlotsUsed, newSpellData) => {\r\n\tconst flagUpdate = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpellData,\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed\r\n\t})\t\r\n\tconst updatedDescription = await getUpdatedDescription(item)\t\r\n\tconst descUpdate = await item.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\r\n}\r\nconst setRingUpdatesNotification = async (item, level) => {\r\n\tconst slots = await getNewSlotsUsed(item, level)\r\n\tif (slots > 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\r\n\treturn false\r\n}\r\nconst updateDeleteItemFlags = async (item, updates) => {\r\n\tconst [newSlotsUsed, newSpells] = updates\r\n\tconst flaggedItem = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed,\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpells\r\n\t})\r\n\tconst updatedDescription = await getUpdatedDescription(flaggedItem)\t\r\n\tawait flaggedItem.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst updateRingItem = async (item, choices, eligibleSpellsByChar) => {\t\r\n\tconst [charName, level, spellName] = choices\r\n\tconst notification = await setRingUpdatesNotification(item, level)\r\n\tif (notification) return false\r\n\tconst [chosenSpell, newSlotsUsed, newSpellData] = await getUpdateRingData(charName, eligibleSpellsByChar, item, level, spellName)\r\n\tsetRingUpdates(chosenSpell, item, newSlotsUsed, newSpellData)\r\n\treturn chosenSpell\r\n}\r\n\r\nexport const ringOfSpellStoring = {\r\n\t\"main\": main,\r\n\t\"deleteTempItem\": deleteTempItem,\r\n\t\"setReactionHook\": setReactionHook\r\n}","import {\r\n\tdeleteTempItem as deleteItem, \r\n\tgetDialogueButtonType, \r\n\tgetSourceMacroNames, \r\n\tgetUpdatedMacroNames, \r\n\tsetCastSpellUpdates,\r\n} from \"../../helper-functions.js\"\r\nimport {staffOfSwarmingInsects as s} from \"../../strings/items.js\"\r\n\r\nconst castSpell = async (spell, staff, tokenActor, choice) => {\r\n\tconst updates = await createCastWorkflow(spell, staff, tokenActor, choice)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, staff, tokenActor, choice) => {\r\n\tconst [tempItem] = await createTempItem(spell, staff, tokenActor, choice)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, staff, tokenActor, choice) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, \"staffOfSwarmingInsects\", spell.activation)\r\n\tconst itemData = await getTempSpellItem(spell, staff, updatedMacroNames, choice)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data)\r\n}\r\nconst getChosenItem = async (choice, spells) => {\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn game.items.find(item => item.name == s.damageWeaponName)\r\n\t} else {\r\n\t\treturn spells.find(spell => spell.name == choice)\t\t\r\n\t}\t\r\n}\r\nconst getConsumptionAmount = async (spell, choice) => {\r\n\tif (choice == s.allChoices[0]) {\r\n\t\treturn 4\r\n\t} else if (choice == s.allChoices[1]) {\r\n\t\treturn 1\r\n\t} else if (choice == s.allChoices[2]) {\r\n\t\treturn 5\r\n\t} else {\r\n\t\treturn 0\r\n\t}\r\n}\r\nconst getDamage = async (spell, choice) => {\r\n\tconst weapon = game.items.find(item => item.name == s.damageWeaponName)\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn choice == s.allChoices[4] \r\n\t\t\t? [\"1d8 + @mod\", \"bludgeoning\"] \r\n\t\t\t: [\"1d6 + @mod\", \"bludgeoning\"]\r\n\t} else {\r\n\t\treturn spell.system.damage.parts\r\n\t}\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn \"icons/weapons/staves/staff-simple-spiral-green.webp\"\r\n\t} else {\r\n\t\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\t\treturn spell.img\t\t\r\n\t}\r\n}\r\nconst getSpellsToCast = async (staff) => {\r\n\tconst spells = s.spellNames.map(spell => game.items.find(item => {\r\n\t\tif (!item.name) return false\r\n\t\treturn item.name.toLowerCase() == spell.toLowerCase()\r\n\t}))\t\r\n\tconst filteredSpellNames = s.spellNames.filter((spell, i, arr) => {\r\n\t\treturn ((spell == arr[0] && staff.system.uses.value >= 4)\r\n\t\t\t||  (spell == arr[1] && staff.system.uses.value >= 1)\r\n\t\t\t||  (spell == arr[2] && staff.system.uses.value >= 5))\r\n\t})\r\n\tconst choices = staff.system.attunement == 2 ? \r\n\t\t[...s.meleeChoices, ...filteredSpellNames].sort() : \r\n\t\ts.meleeChoices.sort()\r\n\treturn [choices, spells]\r\n}\r\nconst getTempSpellItem = async (spell, staff, updatedMacroNames, choice) => {\r\n\tconst [amount, damage, item, name, prep, type] = await getTempSpellItemMods(spell, staff, choice)\r\n\treturn mergeObject(duplicate(item.toObject(false)), {\r\n\t\tname: name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originItemName\": staff.name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originItemUuid\": staff.uuid,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originName\": item.name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originUuid\": item.uuid,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.consume.amount\": amount,\r\n\t\t\"system.consume.target\": staff.id,\r\n\t\t\"system.consume.type\": type,\r\n\t\t\"system.damage.parts\": damage,\t\r\n\t\t\"system.preparation.mode\": prep,\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getTempSpellItemMods = async (spell, staff, choice) => {\r\n\tconst amount = await getConsumptionAmount(choice)\r\n\tconst damage = await getDamage(spell, choice)\r\n\tconst item = choice == s.allChoices[3] || choice == s.allChoices[4] ? weapon : spell\r\n\tconst name = item.name == s.damageWeaponName ? staff.name : spell.name\r\n\tconst prep = choice == s.allChoices[3] || choice == s.allChoices[4] ? null : \"innate\"\r\n\tconst type = choice == s.allChoices[3] || choice == s.allChoices[4] ? null : \"charges\"\r\n\treturn [amount, damage, item, name, prep, type]\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst staff = await fromUuid(item.uuid)\r\n\tif (!staff.system.equipped) return false\r\n\tconst [choices, spells] = await getSpellsToCast(staff)\r\n\tconst choice = await getDialogueButtonType(\r\n\t\tchoices, \r\n\t\t{width: choices.length * 150, height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetSpellIconPaths, \r\n\t\t60, \r\n\t\t60, \r\n\t\tspells\r\n\t)\r\n\tconst chosenItem = await getChosenItem(choice.value, spells)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tcastSpell(chosenItem, staff, tokenActor, choice.value)\t\r\n}\r\n\r\nexport const staffOfSwarmingInsects = {\r\n\tdeleteTempItem,\r\n\tonUse\t\r\n}","import {getDialogueButtonType, setActiveEffects} from \"../../helper-functions.js\"\r\n\r\nconst getCommandItemData = async (originActor, type) => {\r\n\tconst sourceItem = type.value == \"Command: Flee\" ? await fromUuid(\"Item.TLqebf57ZF6HUkml\") : await fromUuid(\"Item.9iKDqMbCAERS9psP\")\r\n\tconsole.log(sourceItem)\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\t\t//name: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getFearItemData = async (originActor) => {\r\n\tconst sourceItem = await fromUuid(\"Item.DG5FfgOrf5IhvITt\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Fear\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-monster-purple-blue.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Flee\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-shadow-monster-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Prone\":\r\n\t\t\treturn \"icons/magic/control/silhouette-fall-slip-prone.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst onUse = async ({args, item, actor, token}) => {\r\n\tconst buttonOptions = item.system.uses.value > 1 ? [\"Fear\", \"Command: Flee\", \"Command: Prone\"] : [\"Command: Flee\", \"Command: Prone\"]\r\n\tconst type = await getDialogueButtonType(buttonOptions, {width: 400, height: 150}, \"What do you want to cast?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Fear\") {\r\n\t\tsetFearEffects(actor, item)\r\n\t} else {\r\n\t\tsetCommandEffects(actor, item, token, type)\r\n\t}\r\n}\r\nconst setCommandEffects = async (actor, item, token, type) => {\r\n\tconst commandItem = await getCommandItemData(actor, type)\r\n\tconst target = game.user.targets?.first() ?? false\r\n\tif (!target) return false\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [target.document.uuid]}\r\n\tconst commandWorkflow = await MidiQOL.completeItemUse(commandItem, {}, options)\t\r\n\tsetCommandEffectsSequencer(target)\r\n\tsetItemUsesUpdate(item.uuid, 1)\t\r\n}\r\nconst setCommandEffectsSequencer = async (token) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.enchantment.complete.dark_purple`)\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t\t.attachTo(token)\r\n\t\t\t.belowTokens()\r\n\t\t.play()\t\t\t\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token, template) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.detect_magic.cone.purple`)\r\n\t\t\t.scale(4.4)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\r\n\t\t\t.spriteOffset({x: 600, y:0}, {local: true})\r\n\t\t\t.rotate(-template.direction)\r\n\t\t.play()\t\t\t\r\n}\r\nconst setFearEffects = async (actor, item) => {\r\n\tconst fearItem = await getFearItemData(actor)\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false}\r\n\tconst fearWorkflow = await MidiQOL.completeItemUse(fearItem, {}, options)\t\r\n\tconst liveTemplate = await fromUuid(fearWorkflow.templateUuid)\r\n\tsetEffectsSequencer(0, 0, 1, false, liveTemplate)\r\n\tsetItemUsesUpdate(item.uuid, 2)\t\r\n}\r\nconst setItemUsesUpdate = async (itemUuid, usesUsed) => {\r\n\tconst liveItem = await fromUuid(itemUuid)\r\n\tliveItem.update({\"system.uses.value\": liveItem.system.uses.value - usesUsed})\r\n}\r\n\r\nexport const wandOfFear = {\r\n\tonUse\r\n}","import {auraOfPurity} from \"./macros/spells/aura-of-purity.js\"\r\nimport {blight} from \"./macros/spells/blight.js\"\r\nimport {clairvoyance} from \"./macros/spells/clairvoyance.js\"\r\nimport {daylight} from \"./macros/spells/daylight.js\"\r\nimport {dispelMagic} from \"./macros/spells/dispel-magic.js\"\r\nimport {feyAncestry} from \"./macros/features/fey-ancestry.js\"\r\nimport {hordePassive} from \"./macros/features/horde-passive.js\"\r\nimport {insectCloud} from \"./macros/features/misc/insect-cloud.js\"\r\nimport {instrumentOfTheBards} from \"./macros/items/instrument-of-the-bards.js\"\r\nimport {protectionFromPoison} from \"./macros/spells/protection-from-poison.js\"\r\nimport {ringOfSpellStoring} from \"./macros/items/ring-of-spell-storing.js\"\r\nimport {songOfRest} from \"./macros/features/class/bard/song-of-rest.js\"\r\nimport {staffOfSwarmingInsects} from \"./macros/items/staff-of-swarming-insects.js\"\r\nimport {wandOfFear} from \"./macros/items/wand-of-fear.js\"\r\n\r\nexport const macros = {\r\n\tauraOfPurity,\r\n\tblight,\r\n\tclairvoyance,\r\n\tdaylight,\r\n\tdispelMagic,\r\n\tfeyAncestry,\r\n\thordePassive,\r\n\tinsectCloud,\r\n\tinstrumentOfTheBards,\r\n\tprotectionFromPoison,\r\n\tringOfSpellStoring,\r\n\tsongOfRest,\r\n\tstaffOfSwarmingInsects,\r\n\twandOfFear\r\n}","const getBlightEffectData = async (origin) => {\r\n\treturn {\r\n\t\tname: `Blight Saving Throw Disadvantage`, \r\n\t\ticon: \"icons/magic/movement/chevrons-down-yellow.webp\", \r\n\t\torigin: origin,\r\n\t\tchanges: [{key: \"flags.midi-qol.disadvantage.ability.save.all\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [\"1\"], \"priority\": 20}],\r\n\t\t\"flags.dae.stackable\": \"noneName\",\r\n\t\t\"flags.times-up.isPassive\": true,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\", \"combatEnd\", \"isSave\"],\r\n\t\t\"flags.dae.showIcon\": false,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst setBlightHook = async (castLevel) => {\r\n\tconst blightPreDamageRollHookId = Hooks.once(\"dnd5e.preRollDamage\", (rolledItem, rollConfig) => {\r\n\t\tconst maxDamageRoll = 8 * castLevel + 32\r\n\t\tconst maxDamageString = String(maxDamageRoll) + \"[necrotic]\" \r\n\t\trollConfig.parts = [maxDamageString]\r\n\t})\t\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].hitTargets[0].actor.system.details.type.value == \"plant\") {\r\n\t\tconst effectData = await getBlightEffectData(args[0].item.uuid)\r\n\t\tawait MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: args[0].hitTargets[0].actor.uuid, effects: [effectData] })\r\n\t\tawait setBlightHook(args[0].castData.castLevel)\r\n\t}\t\r\n}\r\n\r\nexport const blight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {conditionLabels} from \"../../constants.js\"\r\n\r\nconst main = async ({item, workflow, args}) => {\r\n\tconst hasCharm = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"charmed\"].includes(change.value.toLowerCase())))\r\n\tif (hasCharm) {\r\n\t\tworkflow.saveDetails.advantage = true\r\n\t}\r\n}\r\n\r\nexport const feyAncestry = {\r\n\tmain\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const protectionFromPoison = {\r\n\tinitHeader: \t\t\"What do you want to cast?\"\r\n}","const getItemData = (originActor, songLevel) => {\r\n\tconst sourceItem = fromUuidSync(\"Item.GvIIDEPRp3unaRVe\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Song of Rest\",\r\n\t\tsystem: { \r\n\t\t\tdamage: {\r\n\t\t\t\tparts: [[`1d${songLevel}`, \"healing\"]]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getOriginBardScale = (effectOriginUuid) => {\r\n\tconst effectOrigin = fromUuidSync(effectOriginUuid)\r\n\tconst originActor = fromUuidSync(effectOrigin.parent.uuid)\r\n\treturn originActor.system.scale.bard[\"song-of-rest\"].faces\r\n}\r\nconst main = (actor, data) => {\r\n\tconst songEffects = actor.effects.filter(effect => effect.name == \"Song of Rest\")\r\n\tif (data.dhd < 0 && songEffects.length > 0) {\r\n\t\tsongEffects.map(effect => {\r\n\t\t\tconst originBardScale = getOriginBardScale(effect.origin)\r\n\t\t\tconst item = getItemData(actor, originBardScale)\r\n\t\t\tconst token = MidiQOL.tokenForActor(actor.uuid)\r\n\t\t\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [token.document.uuid] }\r\n\t\t\tMidiQOL.completeItemUse(item, {}, options)\t\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const songOfRest = {\r\n\tmain\r\n}","export const setAmbientLightCreate = async (params) => {\r\n\treturn await canvas.scene.createEmbeddedDocuments(\"AmbientLight\", [params])\r\n}\r\nexport const setAmbientLightDelete = async (ambientLightId) => {\r\n\tconst ambientLight = await canvas.scene.deleteEmbeddedDocuments(\"AmbientLight\", [ambientLightId])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn ambientLight\r\n}\r\nexport const setMeasuredTemplateDelete = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid) ?? false\r\n\tif (!template) return false\r\n\tconst deletedMeasuredTemplate = await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [template._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn deletedMeasuredTemplate\r\n}\r\nexport const setActiveEffectDelete = async (ownerActor, effectId) => {\t\r\n\tconst [deleteEffect] = ownerActor.effects.filter(effect => effect._id == effectId)\t\r\n\treturn await ownerActor.deleteEmbeddedDocuments(\"ActiveEffect\", [deleteEffect._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n}\r\nexport const setDeleteSummonConcentrationHook = async (actor, spawnedTokenUuid) => {\r\n\tconst preDeleteSummonConcentrationHookId = Hooks.on(\"preDeleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", preDeleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\t\r\n}","import {setConfig} from './config.js';\r\nimport {macros} from \"./macros.js\"\r\nimport * as sf from \"./socket-functions.js\"\r\n\r\nexport let socket\r\n\r\nHooks.once(\"socketlib.ready\", () => {\r\n\tsocket = socketlib.registerModule(\"charnames-bag-of-macros\")\r\n\tsocket.register(\"setActiveEffectDelete\", sf.setActiveEffectDelete)\r\n\tsocket.register(\"setAmbientLightCreate\", sf.setAmbientLightCreate)\t\r\n\tsocket.register(\"setAmbientLightDelete\", sf.setAmbientLightDelete)\r\n\tsocket.register(\"setDeleteSummonConcentrationHook\", sf.setDeleteSummonConcentrationHook)\r\n\tsocket.register(\"setMeasuredTemplateDelete\", sf.setMeasuredTemplateDelete)\r\n})\r\n\r\nHooks.on(\"dnd5e.restCompleted\", (actor, data) => {\r\n\tmacros.instrumentOfTheBards.onNewDay(actor, data)\r\n\tmacros.songOfRest.main(actor, data)\r\n})\r\n\r\nglobalThis['CHARNAME'] = {\r\n    macros\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","conditionLabels","blinded","charmed","concentrating","dead","deafened","exhaustion1","exhaustion2","exhaustion3","exhaustion4","exhaustion5","frightened","grappled","incapacitated","invisible","paralyzed","petrified","poisoned","prone","restrained","stunned","unconscious","wounded","cloudSpellNames","deleteTempItem","async","args","item","workflow","setDeleteItemFlags","tempItem","originTokenDoc","tokenActor","getDeleteItemData","logic","getDeleteItemLogic","setDeleteItemLogic","fromUuid","uuid","tokenUuid","actor","concEffect","MidiQOL","getConcentrationEffect","hasTemplate","templateUuid","hasSelfEffects","getSelfEffects","length","hasSelfTarget","hasEffects","effects","size","isSelfTargetItem","target","type","originTargetingSelf","hitTargetUuids","filter","checkSelfTarget","getDialogueButtonType","choices","dialogueOptions","title","getIconPathsFunc","buttonWidth","buttonHeight","iconData","Promise","resolve","buttons","getIconPaths","width","height","reduce","choice","i","icon","label","callback","value","getDialogueButtons","Dialog","render","effect","selfTarget","flags","dae","selfTargetAlways","getTemplatesInRange","templates","gridSize","gridScale","range","x1","y1","template","a","b","x","y","Math","sqrt","pow","distance","itemRangeModified","removeEffect","effectUuid","socket","executeAsGM","setActiveEffects","tokenActorUuids","effectData","all","map","tokenActorUuid","actorUuid","createEffect","setDeleteUuids","delete","tempItemEffect","find","origin","deletionChange","mode","CONST","ACTIVE_EFFECT_MODES","ADD","updatedChanges","changes","update","setSpawnedTokenId","itemRange","originToken","spawn","token","name","location","spawnIconPath","interval","canvas","scene","grid","warpgate","crosshairs","show","lockSize","lockPosition","tag","drawIcon","rememberControlled","tokens","activate","setCrosshairConfigs","distanceAvailable","crosshairsDistance","inFlight","wait","ray","Ray","center","measureDistances","gridSpaces","draw","cancelled","getSpawnLocation","spawnedTokenId","spawnAt","originActorSenses","originTokenSight","updates","TOKEN_DISPLAY_MODES","HOVER","getSpawnUpdates","mergeObject","getWarpgateUpdates","system","attributes","senses","document","sight","pre","originTokenUuid","color","Sequence","file","scale","opacity","atLocation","belowTokens","waitUntilFinished","fadeIn","play","setEffectsSequencer","post","animation","on","setPostEffectsSequencer","getWarpgateCallbacks","controllingActor","getWarpgateOptions","buttonName","setAreaChoiceEffects","templateEffect","itemUuid","positions","setTemplateEffects","lightParams","sanitizedLight","originUuid","lightId","disabled","getEffectOriginData","_id","ineligibleEffectNames","minSpellLevel","originTemplateActiveEffect","itemTemplatePositions","setAreaEffectDeleteHookId","Hooks","templateData","originFlag","dnd5e","templateSpellLevel","spellLevel","fromUuidSync","includes","gridTemplateId","id","gridTemplatePositions","highlightLayers","intersection","setTimeout","setAreaEffectDeleteHookOffId","config","off","setAreaEffectDeleteHookOff","setAreaEffectDeleteHook","attachTo","templatePositions","potentialTemplates","originName","templatesWithOverlap","eligibleTemplates","Set","getTemplatesWithOverlap","setTemplateDispels","casterUuid","dispelAbility","dispelLevel","casterToken","game","user","targets","first","effectsLTE2DispelLevel","effectsGTDispelLevel","castData","baseLevel","getTokenEffects","effectsIdsToDelete","abilities","mod","abilityRoll","arr","effectCastLevel","castLevel","rollAbilityTest","total","push","concat","getEffectsToDelete","deleteEffectsOnToken","selectedTemplate","inRangeEligibleTemplates","originItem","originItems","items","sortedTemplates","sort","aOrig","bOrig","localeCompare","templateSelections","itemOwnerName","parent","menu","inputs","console","log","ui","notifications","info","options","indexOf","getTemplateSelection","getSelectedTemplate","templateCastLevel","getTemplatesToDelete","deleteTemplate","getAoeOverlapPerc","creatureCoords","getCreatureCoords","templateCoords","getTemplateCoords","templateId","tokenDoc","set","position","j","toString","add","templateIdStr","setLiveTokenDocUpdates","texture","hordeItem","hordeItemUsesMax","multiplier","liveTokenDoc","shouldReduce","tokenSizeNum","setSequencer","traits","keys","CONFIG","DND5E","actorSizes","setPostDamageUpdates","newHpDamage","newHealthPercentage","hp","max","hordePassive","img1","img2","img3","sequencerPath","insectCloud","flagName","effectName","templateEffectName","checkEffectOrigin","effectedToken","candidateToken","insectCloudEffectNames","getEffectData","duration","getEffectDuration","CUSTOM","getIfInBsOrTsRange","bsRange","tsRange","maxBsOrTsRange","findNearby","canSee","attackingToken","checkAttackerVision","units","blindsight","tremorsense","getCheckAttackerVisionParams","inBsOrTsRange","defenderIsOwnEffectOrigin","attackerIsOwnEffectOrigin","checkDefenderVision","getCheckDefenderVisionParams","onUse","tokenAttacher","attachElementToToken","setTemplateAttachment","elligibleTokens","modules","api","findContained","collections","getTokenActorUuids","appliedEffect","updateAuraEffectsOnUse","flag","updateAuraFlags","whenDeleted","tokenActorsEffected","charname","forEach","setAuraEffectUpdatesWhenDeleted","whenEntered","newActorUuids","setAuraEffectsWhenEntered","whenLeft","tokenEffect","setAuraEffectsWhenLeft","whenMoved","dispositions","newTokenActorUuids","oldTokenActorUuids","tokenId","disposition","getAuraParamsWhenMoved","removalUuids","deleteAuraEffectsWhenMoved","newUuidsToEffect","setAuraEffectsWhenMoved","updateAuraWhenMoved","ringOfSpellStoring","addSpellErr","castSpellErr","castSpellHeader","charHeader","currSpellBank","descLevel","charnamesExceptions","initChoices","initHeader","levelHeader","levelLabels","spellHeader","instrumentOfTheBards","anstruthHarp","canaithMandolin","cliLyre","dossLute","fochlucanBandore","generic","macFuirmidhCittern","ollamhHarp","staffOfSwarmingInsects","allChoices","damageWeaponName","meleeChoices","spellNames","createTempItem","spell","instrument","chosenIndex","sourceMacroNames","updatedMacroNames","activation","itemData","getTempSpellItem","createEmbeddedDocuments","onUseMacroName","getSpellIconPaths","spells","toLowerCase","img","level","damage","parts","getCureWoundsData","duplicate","toObject","overwrite","inlace","insertKeys","insertValues","macroNames","originInstrumentUuid","index","spellIndex","updateDeleteItemFlags","isCharged","isConcentration","components","concentration","midiProperties","isReactionItem","getInitIconPaths","spellData","liveItem","sourceItem","getTempItem","getAddSpellChoices","eligibleSpellsByChar","charChoice","charChoices","character","toSorted","getCharIconPaths","getAddCharChoice","levelChoice","levelChoices","getLevelChoices","getLevelIconPaths","getAddLevelChoice","spellChoice","spellChoices","spellIcons","getSpellChoices","getSpellChoice","getAddSpellChoice","getEligibleSpells","actors","actorSpells","eligibleLevelSpells","highestSpellLevel","getHighestSpellLevel","preparation","getSpellData","pact","getEligibleLevelSpells","prototypeToken","src","slotsRemaining","slotsUsed","eligibleLevels","spellLevels","Array","from","getLiveActors","users","getNewSlotsUsed","sortedChoices","radioSelections","levelChoiceInt","dc","spelldc","ability","spellcasting","attackBonus","isRangedAttack","actionType","isMeleeAttack","parseInt","bonuses","rsak","attack","msak","getAttackBonus","prof","getSpellToCast","uniqueSpells","spellsArr","chosenSpell","getUpdatedDescription","desc","description","newSpells","descs","spellBankStr","substring","lastIndexOf","replace","setPreUseItemHooks","once","useItem","consumeResource","consumeSpellSlot","consumeUsage","slotLevel","_baseProficiency","setReactionUpdates","setResetSpellsDesc","updatedStr","updatedDesc","newSlotsUsed","flaggedItem","updatedDescription","updateRingItem","charName","spellName","notification","setRingUpdatesNotification","newSpellData","chr","getUpdateRingData","setRingUpdates","staff","hasSysConc","hasMidiConc","getDeleteUuidEffects","updateDeleteUuidEffects","callMacro","asGM","setCastSpellUpdates","completeItemUse","getSourceMacroNames","getUpdatedMacroNames","amount","prep","getTempSpellItemMods","getConsumptionAmount","getDamage","weapon","setCommandEffectsSequencer","setItemUsesUpdate","usesUsed","uses","macros","auraOfPurity","preTargetSave","some","change","saveDetails","advantage","tokenDocs","values","eligibleTokenDocs","tokenDocuments","originX","originY","tokenDocsInRange","tokenTopLeftCenterX","tokenTopLeftCenterY","tokenGridBorderCoords","xArr","coord","yArr","maxX","maxY","coords","x2","y2","getTokensInRange","templateNonEffectedTokens","itemEffectName","statuses","has","getNonTemplateEffectedTokenDocs","getEligibleTokenDocuments","tokenEffectUuids","casterDisposition","effected","dfreds","effectInterface","addEffect","setTokenEffects","blight","speaker","scope","hitTargets","details","getBlightEffectData","rolledItem","rollConfig","maxDamageString","String","setBlightHook","clairvoyance","macroPass","setActorConcDeletion","spawnedTokenUuid","getTokenSpawnIds","originTokenActorUuid","fromUuidActor","originActor","originActorConcentrationRemoveUuids","removeUuids","setActorConcRemoveUuids","userId","isTheGM","deleteSummonConcentrationHookId","setHookMacros","setPostSpawnEffects","daylight","rounds","getEffectTokenData","setInitChoice","lastArg","efData","dispelMagic","feyAncestry","main","isSaveFailure","hasAreaTarget","preTargetDamageApplication","hordeItemUses","hpDamage","damageItem","aoeOverlapPerc","hordeCount","floor","getNewDamage","setHpUpdateEffects","data","filteredSpellNames","getSpellsToCast","createCastWorkflow","castSpell","onNewDay","newDay","instruments","refreshInstruments","protectionFromPoison","poisonEffects","hasPoisonedName","hasPoisonedConditions","chosenEffect","acc","nameAlreadyUsed","getChoices","buttonNames","initChoice","getChosenEffect","setAddSpellNotification","getAddSpellUpdates","setAddSpellUpdates","addSpell","tempItems","ringUuid","resetSpells","deleteIndex","usedSpellLevel","usedSpell","getDeleteItemFlagData","getDeleteItemFlagUpdates","songOfRest","songEffects","dhd","originBardScale","effectOriginUuid","effectOrigin","bard","faces","getOriginBardScale","songLevel","Item","documentClass","getItemData","showFullCard","createWorkflow","versatile","configureDialog","targetUuids","tokenForActor","equipped","attunement","chosenItem","getChosenItem","wandOfFear","buttonOptions","fearItem","getFearItemData","fearWorkflow","spriteOffset","local","rotate","direction","setFearEffects","commandItem","getCommandItemData","setCommandEffects","setAmbientLightCreate","params","setAmbientLightDelete","ambientLightId","ambientLight","deleteEmbeddedDocuments","setMeasuredTemplateDelete","deletedMeasuredTemplate","setActiveEffectDelete","ownerActor","effectId","deleteEffect","setDeleteSummonConcentrationHook","preDeleteSummonConcentrationHookId","socketlib","registerModule","register","globalThis"],"sourceRoot":""}