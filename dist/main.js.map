{"version":3,"file":"main.js","mappings":"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","sources":["webpack://CHARNAME's Bag of Macros/./src/scripts/constants.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helper-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helpers/summons.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/aura-of-purity.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/blight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/misc/chef-rest.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/clairvoyance.js","webpack://CHARNAME's Bag of Macros/./src/scripts/hooks.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/daylight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/dispel-magic.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/fey-ancestry.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/spells.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/giant-insect.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/horde-passive.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/features.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/misc/insect-cloud.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/items.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/instrument-of-the-bards.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/charname/lmrtfy-journal.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/protection-from-poison.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/ring-of-spell-storing.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/spell-scroll.js","webpack://CHARNAME's Bag of Macros/./src/scripts/exceptions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/summon-celestial.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/summon-draconic-spirit.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/summon-elemental.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/actions/creature/summon-ice-wolves.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/summon-undead.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/staff-of-swarming-insects.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/wand-of-fear.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/class/bard/song-of-rest.js","webpack://CHARNAME's Bag of Macros/./src/scripts/index.js","webpack://CHARNAME's Bag of Macros/./src/scripts/socket-functions.js","webpack://CHARNAME's Bag of Macros/webpack/bootstrap","webpack://CHARNAME's Bag of Macros/webpack/runtime/define property getters","webpack://CHARNAME's Bag of Macros/webpack/runtime/hasOwnProperty shorthand","webpack://CHARNAME's Bag of Macros/webpack/startup"],"sourcesContent":["export const conditionLabels = {\r\n\tblinded: [\"blinded\", \"convenient effect: blinded\"],\r\n\tcharmed: [\"charmed\", \"convenient effect: charmed\"],\r\n\tconcentrating: [\"concentrating\", \"convenient effect: concentrating\"],\r\n\tdead: [\"dead\", \"convenient effect: dead\"],\r\n\tdeafened: [\"deafened\", \"convenient effect: deafened\"],\r\n\texhaustion1: [\"exhaustion 1\", \"convenient effect: exhaustion 1\"],\r\n\texhaustion2: [\"exhaustion 2\", \"convenient effect: exhaustion 2\"],\r\n\texhaustion3: [\"exhaustion 3\", \"convenient effect: exhaustion 3\"],\r\n\texhaustion4: [\"exhaustion 4\", \"convenient effect: exhaustion 4\"],\r\n\texhaustion5: [\"exhaustion 5\", \"convenient effect: exhaustion 5\"],\r\n\tfrightened: [\"frightened\", \"convenient effect: frightened\"],\r\n\tgrappled: [\"grappled\", \"convenient effect: grappled\"],\r\n\tincapacitated: [\"incapacitated\", \"convenient effect: incapacitated\"],\r\n\tinvisible: [\"invisible\", \"convenient effect: invisible\"],\r\n\tparalyzed: [\"paralyzed\", \"convenient effect: paralyzed\"],\r\n\tpetrified: [\"petrified\", \"convenient effect: petrified\"],\r\n\tpoisoned: [\"poisoned\", \"convenient effect: poisoned\"],\r\n\tprone: [\"prone\", \"convenient effect: prone\"],\r\n\trestrained: [\"restrained\", \"convenient effect: restrained\"],\r\n\tstunned: [\"stunned\", \"convenient effect: stunned\"],\r\n\tunconscious: [\"unconscious\", \"convenient effect: unconscious\"],\r\n\twounded: [\"wounded\", \"convenient effect: wounded\"]\r\n}\r\n\r\nexport const cloudSpellNames = [\r\n\t\"Cloudkill\",\r\n\t\"Incendiary Cloud\",\r\n\t\"Insect Plague\",\r\n\t\"Moonbeam\",\r\n\t\"Spirit Guardians\"\r\n]","import {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const createEffect = async (tokenActorUuid, effectData) => {\r\n\treturn await MidiQOL.socket().executeAsGM(\r\n\t\t\"createEffects\", \r\n\t\t{actorUuid: tokenActorUuid, effects: [effectData]}\r\n\t)\r\n}\r\nexport const checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nexport const deleteTempItem = async ({args, item, workflow}, setDeleteItemFlags) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tif (setDeleteItemFlags) await setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nexport const deleteAuraEffectsWhenMoved = async (effectName, newTokenActorUuids, oldTokenActorUuids, originUuid) => {\r\n\tconst removalUuids = oldTokenActorUuids.filter(uuid => !newTokenActorUuids.includes(uuid))\r\n\tawait removalUuids.forEach(actorUuid => {\r\n\t\tconst actor = fromUuidSync(actorUuid)\t\r\n\t\tconst tokenEffect = actor.effects.find(effect => \r\n\t\t\teffect.name == effectName\r\n\t\t && effect.origin == originUuid\r\n\t\t)\r\n\t\tif (!tokenEffect) return false\r\n\t\tremoveEffect(tokenEffect.uuid)\r\n\t})\t\r\n}\r\nexport const getAuraParamsWhenMoved = async (dispositions, getEffectData, template, flagName) => {\r\n\tconst effectData = await getEffectData(template.flags[\"midi-qol\"].actorUuid, template.uuid)\r\n\tconst newTokenIds = game.modules.get(\"templatemacro\").api.findContained(template)\r\n\tconst newTokens = newTokenIds.map(id => \r\n\t\tcanvas.scene.collections.tokens.get(id)\r\n\t).filter(tokenDoc => \r\n\t\ttokenDoc.id != template.flags[\"midi-qol\"].tokenId\r\n\t && dispositions.includes(tokenDoc.disposition)\r\n\t)\r\n\tconst newTokenActorUuids = newTokens.map(token => token.actor.uuid)\r\n\tconst oldTokenActorUuids = template.flags.charname[flagName].tokenActorsEffected\r\n\treturn [effectData, newTokenActorUuids, oldTokenActorUuids]\r\n}\r\nexport const getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nexport const getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nexport const getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst hasSysConc = item.system.components?.concentration ?? false\r\n\tconst hasMidiConc = item.flags?.midiProperties?.concentration ?? false\r\n\tconst isConcentration = hasSysConc || hasMidiConc\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nexport const getDialogueButtons = (resolve, choices, getIconPaths, width, height, iconData) => {\t\r\n\treturn choices.reduce((buttons, choice, i) => {\r\n\t\tconst icon = getIconPaths(choice, iconData)\r\n\t\tconst newButton = {[choice]: {\r\n\t\t\tlabel: `<img src=${icon} width=${width} height=${height} style=\"border:0px\"><br>${choice}`,\r\n\t\t\tcallback: () => {\r\n\t\t\t\tresolve({value: `${choice}`})\r\n\t\t\t}\r\n\t\t}}\r\n\t\treturn {...buttons, ...newButton}\r\n\t}, {})\r\n}\r\nexport const getDialogueButtonType = async (choices, dialogueOptions, title, getIconPathsFunc, buttonWidth, buttonHeight, iconData) => { \r\n\treturn await (new Promise( (resolve) => {\t\r\n\t\tconst buttons = getDialogueButtons(resolve, choices, getIconPathsFunc, buttonWidth, buttonHeight, iconData)\t\t\r\n\t\tnew Dialog({\r\n\t\t\ttitle: title,\r\n\t\t\tbuttons: buttons\r\n\t\t}, dialogueOptions).render(true)\r\n}))}\r\nexport const getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nexport const getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nexport const getSpawnLocation = async (spawnIconPath, size, interval, tokenUuid, itemRange, originToken) => {\r\n\tawait setCrosshairConfigs(tokenUuid, itemRange, size)\r\n\tconst distanceAvailable = itemRange\r\n\tlet crosshairsDistance = 0\r\n\tconst checkDistance = async (crosshairs) => {\r\n\t\twhile (crosshairs.inFlight) {\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t\tconst ray = new Ray(originToken.center, crosshairs)\r\n\t\t\tconst distance = Math.ceil(canvas.grid.measureDistances([{ ray }], { gridSpaces: false })[0] / 5) * 5\r\n\t\t\tif (crosshairsDistance !== distance) {\r\n\t\t\t\tcrosshairsDistance = distance;\r\n\t\t\t\tif (distance > distanceAvailable) {\r\n\t\t\t\t\tcrosshairs.icon = 'icons/svg/hazard.svg';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcrosshairs.icon = spawnIconPath\r\n\t\t\t\t}\r\n\t\t\t\tcrosshairs.draw();\r\n\t\t\t\tcrosshairs.label = `${distance} ft`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst location = await warpgate.crosshairs.show(\r\n\t\t{\r\n\t\t\tsize: size,\r\n\t\t\tinterval: interval,\r\n\t\t\ticon: spawnIconPath,\r\n\t\t\tlabel: '0 ft.',\r\n\t\t},\r\n\t\t{\r\n\t\t\tshow: checkDistance\r\n\t\t},\r\n\t)\r\n\tif (location.cancelled || crosshairsDistance > distanceAvailable) {\r\n\t\treturn\r\n\t} else {\r\n\t\treturn location\r\n\t}\r\n}\r\nexport const getStringsOrExceptions = async (actor, defaultStrings, exceptionStrings) => {\r\n\tconst exceptionActorNames = exceptionStrings?.exceptionActorNames ?? []\r\n\treturn  exceptionActorNames.includes(actor.name) || exceptionActorNames == \"all\"\r\n\t\t? exceptionStrings \r\n\t\t: defaultStrings\t\r\n}\r\nexport const getTemplatesInRange = (templates, gridSize, gridScale, range, x1, y1) => {\r\n\t//gets templates where center of template within range of a cast template\r\n\treturn templates.filter(template => {\r\n\t\tconst [a, b] = [x1 - template.x, y1 - template.y]\r\n\t\tconst c  = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\tconst templateCentersDistance = c / gridSize\t\r\n\t\tconst templateRangeModified = template.distance / gridScale\t\r\n\t\tconst itemRangeModified = range / gridScale\t\t\r\n\t\treturn templateCentersDistance < templateRangeModified + itemRangeModified\r\n\t})\r\n}\r\nexport const getTemplatesWithOverlap = (eligibleTemplates, itemTemplatePositions) => {\r\n\treturn eligibleTemplates.filter(template => {\r\n\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\tconst templatePositions = canvas.grid.highlightLayers[gridTemplateId]?.positions ?? new Set(\"-1\")\r\n\t\treturn itemTemplatePositions.intersection(templatePositions).size > 0\r\n\t})\r\n}\r\nexport const getTokensInRange = async (tokens, gridSize, gridScale, itemRange, x1, y1) => {\r\n\treturn tokens.filter(token => {\r\n\t\tconst tokenTopLeftCenterX = token.x + gridSize / 2\r\n\t\tconst tokenTopLeftCenterY = token.y + gridSize / 2\r\n\t\tlet tokenGridBorderCoords = []\r\n\t\t\r\n\t\tfor (let i = 0; i <= token.width * 2 - 1; i++) {\r\n\t\t\tfor (let j = 0; j <= token.width * 2  - 1; j++) {\r\n\t\t\t\ttokenGridBorderCoords.push({x: tokenTopLeftCenterX + gridSize / 2 * i, y: tokenTopLeftCenterY + gridSize / 2 * j})\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst xArr = tokenGridBorderCoords.map(coord => coord.x)\r\n\t\tconst yArr = tokenGridBorderCoords.map(coord => coord.y)\r\n\t\tconst maxX = Math.max(...xArr)\r\n\t\tconst maxY = Math.max(...yArr)\r\n\t\tconst tokenGridCoords = tokenGridBorderCoords.filter(coords => coords.x != maxX && coords.y != maxY)\r\n\t\t\r\n\t\tconst tokenGridCoordsInRange = tokenGridCoords.filter(coord => {\r\n\t\t\tconst [x2, y2] = [coord.x, coord.y]\r\n\t\t\tconst a = x1 - x2\r\n\t\t\tconst b = y1 - y2\r\n\t\t\tconst c = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\t\treturn c / gridSize <= itemRange / gridScale\r\n\t\t})\r\n\t\t\r\n\t\treturn tokenGridCoordsInRange.length > 0\r\n\t})\r\n}\r\nexport const getUpdatedMacroNames = async (macroNames, flagName, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + `,[postRollFinished]function.CHARNAME.macros.${flagName}.deleteTempItem` \r\n\t\t\t: `[postRollFinished]function.CHARNAME.macros.${flagName}.deleteTempItem`\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + `,[postActiveEffects]function.CHARNAME.macros.${flagName}.setReactionHook`\r\n\t} \r\n\treturn update\r\n}\r\nexport const removeEffect = async (effectUuid) => {\r\n\treturn await MidiQOL.socket().executeAsGM(\"removeEffect\", {effectUuid: effectUuid})\r\n}\r\nexport const removeEffects = async (effectUuids) => {\r\n\treturn await MidiQOL.socket().executeAsGM(\"removeEffects\", effectUuids\r\n)}\r\nexport const setActiveEffects = async (tokenActorUuids, effectData) => {\r\n\tconst [effects] = await Promise.all(tokenActorUuids.map(tokenActorUuid => {\r\n\t\treturn createEffect(tokenActorUuid, effectData)\r\n\t}))\r\n\treturn effects\r\n}\r\nexport const setActorConcDeletion = async (actor) => {\r\n\tif (actor.effects.find(effect => effect.name == \"Concentrating\")) actor.effects.find(effect => effect.name == \"Concentrating\").delete()\r\n} \r\nexport const setActorConcRemoveUuids = async (originActor, uuid) => {\r\n\tlet originActorConcentrationRemoveUuids = originActor.flags[\"midi-qol\"][\"concentration-data\"]?.removeUuids || []\r\n\toriginActorConcentrationRemoveUuids.push(uuid)\t\r\n\tawait originActor.update({\"flags.midi-qol\": {\"concentration-data\": {removeUuids: originActorConcentrationRemoveUuids}}})\r\n\tconst concEffect = originActor.effects.find(effect => effect.name == \"Concentrating\")\r\n\tawait concEffect.update({\r\n\t\t\"flags.dae\": {\"specialDuration\": [\"shortRest\", \"longRest\"]}\r\n\t})\r\n}\r\nexport const setActorReagentCost = async (actorUuid, itemUuid) => {\r\n\tconst actor = await fromUuid(actorUuid)\r\n\tconst item = await fromUuid(itemUuid)\t\r\n\tif (settings.reagentsConsume = \"money\")  {\r\n\t\t//set this to pull from the lower denominations first\r\n\t\tconst newMoney = actor.system.currency.gp - item.system.materials.cost\r\n\t\tif (newMoney < 0) return false\r\n\t\tactor.update({\"system.currency.gp\": newMoney})\r\n\t} else if (settings.reagentsConsume = \"supply\") {\r\n\t\tconst newSupply = item.system.materials.supply - 1\r\n\t\tif (newSupply < 0) return false\r\n\t\titem.update({\"system.materials.supply\": newSupply})\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n\treturn true\r\n}\r\nexport const setAuraEffectUpdatesWhenDeleted = async (effectName, flagName, template) => {\r\n\tconst tokenActorsEffected = template.flags?.charname[flagName]?.tokenActorsEffected ?? []\r\n\tconst effectUuids = await tokenActorsEffected.forEach(actorUuid => {\r\n\t\tconst actor = fromUuidSync(actorUuid)\t\t\t\r\n\t\tconst effect = actor.effects.find(effect => effect.name == effectName)\t\r\n\t\tif (!effect) return false\r\n\t\tremoveEffect(effect.uuid)\r\n\t})\t\r\n}\r\nexport const setAuraEffectsWhenEntered = async (effectName, flagName, getEffectData, template, token) => {\r\n\tconst tokenEffect = token.actor?.effects.find(effect => effect.name == effectName) ?? false\r\n\tif (!tokenEffect) {\r\n\t\tconst effectData = await getEffectData(template.flags[\"midi-qol\"].actorUuid, template.uuid)\r\n\t\tsetActiveEffects([token.actor.uuid], effectData)\r\n\t\tconst newActorUuids = [\r\n\t\t\t...template.flags.charname.insectCloud.tokenActorsEffected, \r\n\t\t\ttoken.actor.uuid\r\n\t\t]\r\n\t\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\t\tconst updatedTemplate = await template.update({\r\n\t\t\t[flag]: newActorUuids\r\n\t\t})\t\t\t\r\n\t}\t\r\n}\r\nexport const setAuraEffectsWhenLeft = async (effectName, flagName, template, token) => {\r\n\tconst tokenEffect = token.actor?.effects.find(effect => effect.name == effectName) ?? false\r\n\tif (tokenEffect) {\r\n\t\tremoveEffect(tokenEffect.uuid)\r\n\t\tconst newActorUuids = template.flags.charname[flagName].tokenActorsEffected.filter(actorUuid => \r\n\t\t\tactorUuid != token.actor.uuid\r\n\t\t)\r\n\t\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\t\tconst updatedTemplate = await template.update({\r\n\t\t\t[flag]: newActorUuids\r\n\t\t})\t\t\t\r\n\t}\t\r\n}\r\nexport const setAuraEffectsWhenMoved = async (effectData, flagName, newTokenActorUuids, oldTokenActorUuids, template) => {\r\n\tconst newUuidsToEffect = newTokenActorUuids.filter(uuid => \r\n\t\t!oldTokenActorUuids.includes(uuid)\r\n\t)\r\n\tsetActiveEffects(newUuidsToEffect, effectData)\t\r\n\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\ttemplate.update({\r\n\t\t[flag]: newTokenActorUuids\r\n\t})\t\t\r\n}\r\nexport const setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nexport const setCrosshairConfigs = async (tokenUuid, itemRange, size) => {\r\n\tconst target = await fromUuid(tokenUuid)\r\n\tconst {distance} = canvas.scene.grid\r\n\tconst adjustment = size > 0 \r\n\t\t? (canvas.grid.size * .5 * size) \r\n\t\t: (canvas.grid.size * .5)\r\n\twarpgate.crosshairs.show({\r\n\t\tlockSize:true,\r\n\t\tlockPosition: true,\r\n\t\tsize: 2 * itemRange / distance,\r\n\t\ttag: 'range',\r\n\t\tdrawIcon:false,\r\n\t\tlabel: 'Valid Area',\r\n\t\tx: target.x + adjustment,\r\n\t\ty: target.y + adjustment,\r\n\t\trememberControlled: true\r\n\t})\t\r\n\tcanvas.tokens.activate()\r\n}\r\nexport const setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nexport const setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nexport const setTemplateDispels = async (x, y, name, itemTemplatePositions) => {\r\n\tconst dnd5eFlaggedTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e)\r\n\tconst potentialTemplates = dnd5eFlaggedTemplates.filter(template => {\r\n\t\tconst originName = fromUuidSync(template.flags.dnd5e.origin).name\r\n\t\tif (!name) {\r\n\t\t\treturn template.flags.dnd5e.spellLevel\r\n\t\t} else {\r\n\t\t\treturn template.flags.dnd5e.spellLevel && originName == name\t\r\n\t\t}\r\n\t})\r\n\tconst templatesInRange = getTemplatesInRange(potentialTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 60, x, y)\r\n\tconst templatesWithOverlap = getTemplatesWithOverlap(templatesInRange, itemTemplatePositions)\r\n\ttemplatesWithOverlap.map(template => {socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)})\r\n}\r\nexport const updateAuraEffectsOnUse = async (actor, args, effectName, getEffectData, tokenActorUuids) => {\r\n\tconst effectData = await getEffectData(actor.uuid, args[0].templateUuid)\r\n\tconst [appliedEffect] = await setActiveEffects(tokenActorUuids, effectData)\r\n\tconst liveActor = await fromUuid(actor.uuid)\r\n\tconst templateEffect = liveActor.effects.find(effect => effect.name == effectName)\r\n\tconst updatedChanges = [...templateEffect.changes, ...appliedEffect.changes]\r\n\ttemplateEffect.update({\"changes\": updatedChanges})\r\n}\r\nexport const updateAuraFlags = async (flagName, template, tokenActorUuids) => {\r\n\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\tconst updatedTemplate = await template.update({\r\n\t\t[flag]: tokenActorUuids\r\n\t})\t\t\r\n}\r\nexport const updateAuraWhenMoved = async (dispositions, effectName, flagName, getEffectData, template) => {\r\n\tconst [\r\n\t\teffectData, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids\r\n\t] = await getAuraParamsWhenMoved(dispositions, getEffectData, template, flagName)\r\n\tdeleteAuraEffectsWhenMoved(\r\n\t\teffectName, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids,\t\t\r\n\t\ttemplate.flags[\"midi-qol\"].actorUuid\r\n\t)\r\n\tsetAuraEffectsWhenMoved(\r\n\t\teffectData, \r\n\t\tflagName, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids, \r\n\t\ttemplate\r\n\t)\t\r\n}\r\nexport const updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}","import {conditionLabels as c} from \"../constants.js\"\r\nimport {getSpawnLocation} from \"../helper-functions.js\"\r\nimport {setSpawnedTokensInitiative}  from \"../socket-functions.js\"\r\n\r\n//review for later:\r\n//think about adding sounds to the sequencers?\r\n//see if you can fix the buggy useTokenDeleteSequencer Math.random thing\r\n\r\n//leaving as example of how override data is more or less laid out \r\n//don't forget to toString() your functions before passing them!\r\n//overrides: {\r\n//\tgeneral: {\r\n//\t\tamountToSpawnByIndex: [10, 3, 5, 1]\r\n//\t}\r\n//\tsequencer: {\r\n//\t\tpre: usePreEffectSequencer.toString(),\r\n//\t\tpost: usePostEffectSequencer.toString(),\r\n//\t\tdelete: useTokenDeleteSequencer.toString(),\r\n//\t\toptions: {\r\n//\t\t\tcircleNum: \"02\",\r\n//\t\t\tcolor: \"green\",\r\n//\t\t\timpactNum: \"011\"\r\n//\t\t\tscale: .15,\r\n//\t\t\tschool: \"conjuration\"\r\n//\t}},\r\n//\twarpGate: {\r\n//\t\tcallbacks: callbackFunc.toString()\r\n//\t\tmutations: {\r\n//\t\t\ttoken: {},\r\n//\t\t\tactor: {}\r\n//\t\t},\r\n//\t\toptions: {\r\n//\t\t\tcontrollingActor: actor\r\n//\t\t}\r\n//\t}\r\n//}\r\n\r\nconst checkCombatActivity = async (token) => {\r\n\tconst combatIsActive = game.combat?.active ?? false\r\n\tif (!combatIsActive) return false\r\n\tconst sourceCombatDoc = game.combat.turns.find(doc => doc.tokenId == token.id)\t\r\n\tif (!sourceCombatDoc) return false\t\r\n\treturn sourceCombatDoc\r\n}\r\nconst createSpawn = async (actor, choice, item, overrides, strings, token) => {\r\n\tconst concEffect = await getConcEffect(token)\r\n\tconst spawnUuids = await createSpawnTokens(actor, choice, concEffect, item, overrides, strings, token)\r\n\tif (!concEffect) return false\r\n\tupdateInitiatives(spawnUuids, token)\r\n\tupdateConcEffect(concEffect, spawnUuids, token)\r\n\treturn spawnUuids\r\n}\r\nconst createSpawnTokens = async (actor, choice, concEffect, item, overrides, strings, token) => {\r\n\tconst params = await getSpawnParams(\r\n\t\tactor, \r\n\t\tchoice, \r\n\t\tconcEffect, \r\n\t\titem, \r\n\t\toverrides,\r\n\t\tstrings,\r\n\t\ttoken\r\n\t)\t\r\n\tconst spawnIds = await setWarpGateSpawn(params, item, overrides, token)\t\t\r\n\treturn spawnIds.map(id => {\t\t\r\n\t\tconst token = canvas.scene.tokens.find(tokenDoc => tokenDoc.id == id)\t\r\n\t\treturn token.uuid\r\n\t})\t\r\n}\r\nconst getAmountToSpawn = async (choice, overrides, strings) => {\r\n\tconst overrideAmountToSpawn = overrides?.general?.amountToSpawnByIndex ?? 1\r\n\tif (typeof overrideAmountToSpawn == \"number\") return overrideAmountToSpawn\r\n\treturn overrideAmountToSpawn[strings.choices.indexOf(choice)]\t\r\n}\r\nconst getCallbacks = async (i, overrides, size, spawnName, originToken) => {\r\n\tconst overrideCallbacks = overrides?.warpGate?.callbacks ?? []\r\n\tif (overrideCallbacks.length > 0) return eval(overrideCallbacks)\r\n\treturn {\r\n\t\tpre: async (loc) => {\r\n\t\t\tusePreEffectSequencer(i, loc, originToken, size, overrides)\r\n\t\t\tawait warpgate.wait(200)\r\n\t\t},\r\n\t\tpost: async (loc, spawnToken) => {\r\n\t\t\tusePostEffectSequencer(loc, spawnToken, overrides)\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t}\r\n\t}\r\n}\r\nconst getConcEffect = async (token) => {\r\n\tconst liveActor = await fromUuid(token.actor.uuid)\r\n\treturn liveActor.effects.find(effect => \r\n\t\tc.concentrating.includes(effect.name.toLowerCase())\r\n\t)\t\t\r\n}\r\nconst getDefaultIconPath = async (choice, index, strings) => {\r\n\tconst stringIcons = strings?.defaultIcons ?? []\r\n\tif (stringIcons.length > 0) return stringIcons[index]\r\n\treturn []\r\n}\r\nconst getPreDeleteParams = async (tokenDoc) => {\r\n\tconst amountSpawned = tokenDoc.actor?.flags?.charname?.summoning?.amountSpawned ?? 1\t\r\n\tconst overrides = tokenDoc.actor?.flags?.charname?.summoning?.overrides ?? false\r\n\tconst deleteOverrides = tokenDoc.actor?.flags?.charname?.summoning?.overrides?.sequencer?.delete ?? false\t\r\n\tconst effectUuid = tokenDoc.actor?.flags?.charname?.summoning?.concEffect ?? false\r\n\tconst optionOverrides = tokenDoc.actor?.flags?.charname?.summoning?.overrides?.sequencer?.options ?? {}\t\r\n\treturn [amountSpawned, deleteOverrides, effectUuid, optionOverrides, overrides]\r\n}\r\nconst getPreEffectsSequencerParams = async (originToken, overrides, spawnSize) => {\r\n\tconst circleNum = overrides?.sequencer?.options?.circleNum ?? \"02\"\r\n\tconst color1 = overrides?.sequencer?.options?.circleColor1 ?? \"green\"\r\n\tconst color2 = overrides?.sequencer?.options?.circleColor2 ?? \"green\"\r\n\tconst school = overrides?.sequencer?.options?.school ?? \"conjuration\"\r\n\tconst scale = overrides?.sequencer?.options?.scale ?? .15\r\n\tconst originScale = Math.max(originToken.document.height, originToken.document.width) * scale\r\n\tconst spawnScale = spawnSize * scale\t\r\n\treturn [circleNum, color1, color2, school, originScale, spawnScale]\r\n}\r\nconst getSpawnDetails = async (choice, spawnName, strings) => {\r\n\tconst actor = game.actors.find(actor => actor.name == spawnName)\r\n\tconst texturePath = await getTexturePath(actor, choice, strings)\r\n\tconst size = Math.max(actor.prototypeToken.height, actor.prototypeToken.height)\r\n\treturn [size, texturePath]\r\n}\r\nconst getSpawnParams = async (actor, choice, concEffect, item, overrides, strings, token) => {\r\n\tconst options = overrides?.warpGate?.options ?? {controllingActor: actor}\r\n\tconst spawnName = strings.spawnNames[strings.choices.indexOf(choice)]\r\n\tconst [size, texturePath] = await getSpawnDetails(choice, spawnName, strings)\r\n\tconst amountToSpawn = await getAmountToSpawn(choice, overrides, strings)\r\n\tconst updates = await getSpawnUpdates(actor, amountToSpawn, concEffect, overrides, texturePath, token)\r\n\tconst interval = size % 2 == 1 ? -1 : 1\r\n\treturn {amountToSpawn, interval, options, size, spawnName, texturePath, updates}\r\n}\r\nconst getSpawnUpdates = async (actor, amountToSpawn, concEffect, overrides, texturePath, token) => {\r\n\tconst overrideMutations = overrides?.warpGate?.mutations ?? {}\r\n\tconst concEffectUuid = !concEffect ? null : concEffect.uuid\r\n\tconsole.log(\"getSpawnUpdates texturePath\")\r\n\tconsole.log(texturePath)\r\n\tconst defaultMutations = {\r\n\t\ttoken: {\r\n\t\t\t\"alpha\": 0,\r\n\t\t\t\"disposition\": token.document.disposition,\r\n\t\t\t\"texture.src\": texturePath, \r\n\t\t}, \r\n\t\tactor: \r\n\t\t{\r\n\t\t\t\"flags.charname.summoning.amountSpawned\": amountToSpawn,\r\n\t\t\t\"flags.charname.summoning.concEffect\": concEffectUuid,\r\n\t\t\t\"flags.charname.summoning.overrides\": overrides,\r\n\t\t\t\"flags.charname.summoning.sourceActorUuid\": actor.uuid\r\n\t\t}\r\n\t}\t\r\n\tconst combinedMutations = mergeObject(\r\n\t\tdefaultMutations, \r\n\t\toverrideMutations, \r\n\t\t{overwrite: true, inlace: true, insertKeys: true, insertValues: true}\r\n\t)\r\n\treturn combinedMutations\r\n}\r\nconst getTexturePath = async (actor, choice, strings) => {\r\n\tconst index = strings.choices.indexOf(choice)\r\n\tconst stringTextures = strings?.tokenTextures ?? []\r\n\tif (stringTextures.length > 0) {\t\r\n\t\tconst stringTexture = stringTextures[index]\r\n\t\tif (stringTexture.length > 0) return stringTexture\r\n\t}\r\n\tconst defaultIconPath = await getDefaultIconPath(choice, index, strings)\r\n\treturn defaultIconPath.length > 0 ? defaultIconPath : actor.prototypeToken.texture.src\r\n}\r\nconst onPreDeleteToken = async (tokenDoc, config, user) => {\r\n\tconsole.log(\"WAHAHAHAHAHAHAHA onPreDeleteToken\")\r\n\tconst theGmUser = game.users.find(user => user.isTheGM)\r\n\tif (game.users.get(user).id != theGmUser.id) return false\r\n\tconst summonFlags = tokenDoc.actor?.flags?.charname?.summoning ?? false\r\n\tif (!summonFlags) return false\r\n\tconst [\r\n\t\tamountSpawned, \r\n\t\tdeleteOverrides, \r\n\t\teffectUuid, \r\n\t\toptionOverrides,\r\n\t\toverrides\r\n\t] = await getPreDeleteParams(tokenDoc)\r\n\tif (!deleteOverrides) {\r\n\t\tuseTokenDeleteSequencer(tokenDoc, overrides)\r\n\t} else {\r\n\t\teval(overrides.delete)(tokenDoc, optionOverrides)\r\n\t}\r\n\tif (effectUuid) {\t\r\n\t\tlet concEffect = await fromUuid(effectUuid)\r\n\t\tif (!concEffect) return false\r\n\t\tlet created = concEffect.flags.charname.summoning.totalSpawnCreated\r\n\t\tlet deleted = concEffect.flags.charname.summoning.totalSpawnDeleted\t\t\r\n\t\t//adding random delay to account for multiple things trying to update all at once\r\n\t\t//refactor this later to see if you can get it to work by using a set or something\r\n\t\tconst delay = Math.floor(Math.random() * 800 * (created - deleted))\r\n\t\tawait warpgate.wait(delay)\t\t\t\r\n\t\tconcEffect = await fromUuid(effectUuid)\t\r\n\t\tcreated = concEffect.flags.charname.summoning.totalSpawnCreated\r\n\t\tdeleted = concEffect.flags.charname.summoning.totalSpawnDeleted\r\n\t\tconst newDeleted = deleted + 1\r\n\t\tif (created == newDeleted) {\r\n\t\t\tconcEffect.delete()\r\n\t\t\treturn false\r\n\t\t}\t\r\n\t\tconst updatedConc = await concEffect.update({\"flags\": {\"charname.summoning.totalSpawnDeleted\": newDeleted}})\r\n\t}\r\n}\r\nconst setSpawnedTokensToActive = async (spawnUuids, token) => {\r\n\treturn canvas.scene.tokens.filter(\r\n\t\ttoken => spawnUuids.includes(token.uuid)\r\n\t).map(tokenDoc => {\r\n\t\tconst combatToken = canvas.tokens.placeables.find(token => token.id == tokenDoc.id)\r\n\t\tcombatToken.toggleCombat()\r\n\t\treturn tokenDoc.id\r\n\t})\t\r\n}\r\nconst setWarpGateSpawn = async (params, item, overrides, token) => {\r\n\tconst {\r\n\t\tamountToSpawn, \r\n\t\tinterval, \r\n\t\toptions, \r\n\t\tsize, \r\n\t\tspawnName, \r\n\t\ttexturePath, \r\n\t\tupdates\r\n\t} = params\r\n\tlet loc = {}\r\n\tlet spawnIds = []\r\n\tlet callbacks\r\n\tfor (let i = 0; i < amountToSpawn; i++) {\r\n\t\tloc = await getSpawnLocation(\r\n\t\t\ttexturePath, \r\n\t\t\tsize, \r\n\t\t\tinterval, \r\n\t\t\ttoken.document.uuid, \r\n\t\t\titem.system.range.value, \r\n\t\t\ttoken\r\n\t\t)\r\n\t\tcallbacks = await getCallbacks(i, overrides, size, spawnName, token) \r\n\t\tspawnIds.push(await warpgate.spawnAt(\r\n\t\t\t{x: loc.x, y: loc.y}, \r\n\t\t\tspawnName, \r\n\t\t\tupdates, \r\n\t\t\tcallbacks, \r\n\t\t\toptions\r\n\t\t))\r\n\t}\r\n\treturn spawnIds\r\n}\r\nconst updateCombatDocs = async (activeTokenIds, init) => {\r\n\t//literally takes a moment to add token to combat\t\r\n\tawait warpgate.wait(1000) \t\r\n\tconst combatDocs = game.combat.turns.filter(doc => activeTokenIds.includes(doc.tokenId))\r\n\tsetSpawnedTokensInitiative(combatDocs, init)\t\r\n}\r\nconst updateConcEffect = async (concEffect, spawnUuids, token) => {\r\n\tconst deleteUuidChanges = spawnUuids.map(uuid => {\r\n\t\treturn {\r\n\t\t\t\"key\": \"flags.dae.deleteUuid\",\r\n\t\t\t\"mode\": 2,\r\n\t\t\t\"priority\": 20,\r\n\t\t\t\"value\": uuid\r\n\t\t}\r\n\t})\r\n\tconst changes = [...concEffect.changes, ...deleteUuidChanges]\r\n\tconst spawnFlags = {\r\n\t\t\"charname.summoning.totalSpawnCreated\": spawnUuids.length,\r\n\t\t\"charname.summoning.totalSpawnDeleted\": 0,\r\n\t\t\"charname.summoning.concEffect\": concEffect.uuid\r\n\t}\r\n\tconcEffect.update({\"changes\": changes, \"flags\": spawnFlags})\t\r\n}\r\nconst updateInitiatives = async (spawnUuids, token) => {\r\n\tconst sourceCombatDoc = await checkCombatActivity(token)\r\n\tif (!sourceCombatDoc) return false\r\n\tconst activeTokenIds = await setSpawnedTokensToActive(spawnUuids, token)\r\n\tconst init = sourceCombatDoc?.initiative ?? false\r\n\tif (!init) return false \r\n\tupdateCombatDocs(activeTokenIds, init)\r\n}\r\nconst usePostEffectSequencer = async (loc, token, overrides) => {\r\n\tconst sequencer = overrides?.sequencer?.post ?? \"\"\r\n\tif (sequencer.length > 0) {\r\n\t\teval(overrides.sequencer.post)(loc, token)\r\n\t\treturn false\r\n\t}\t\r\n\tawait warpgate.wait(2100)\r\n\tconst impactColor = overrides?.sequencer?.options?.impactColor1 ?? \"green\"\r\n\tconst impactNum = overrides?.sequencer?.options?.impactNum1 ?? \"003\"\r\n\tconst sequencerPath = `jb2a.impact.${impactNum}.${impactColor}`\r\n\tconst {ms, options} = overrides?.sequencer?.options?.fadeIn \r\n\t\t?? {ms: 600, options: {ease: \"easeInQuart\"}}\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t\t.fadeIn(ms, options)\r\n\t\t\t\t.opacity(1)\r\n\t\t.play()\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation(token)\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.opacity(1.0)\r\n\t\t.play()\t\t\r\n}\r\nconst usePreEffectSequencer = async (i, loc, originToken, spawnSize, overrides) => {\r\n\tconst overrideSequencer = overrides?.sequencer?.pre ?? \"\"\r\n\tif (overrideSequencer.length > 0) {\r\n\t\teval(overrides.sequencer.pre)(loc, token)\r\n\t\treturn false\r\n\t}\t\r\n\tconst [\r\n\t\tcircleNum, \r\n\t\tcolor1, \r\n\t\tcolor2,\r\n\t\tschool, \r\n\t\toriginScale, \r\n\t\tspawnScale\r\n\t] = await getPreEffectsSequencerParams(originToken, overrides, spawnSize)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.intro.${color2}`)\r\n\t\t\t.scale(spawnScale)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(loc)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.loop.${color2}`)\r\n\t\t\t.scale(spawnScale)\r\n\t\t\t.atLocation(loc)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.outro.${color2}`)\r\n\t\t\t.scale(spawnScale)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(loc)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\r\n\tif (i == 0) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.intro.${color1}`)\r\n\t\t\t\t.scale(originScale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation(originToken)\r\n\t\t\t\t.belowTokens() \r\n\t\t\t\t.waitUntilFinished(-1150)\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.loop.${color1}`)\r\n\t\t\t\t.scale(originScale)\r\n\t\t\t\t.atLocation(originToken)\r\n\t\t\t\t.belowTokens() \r\n\t\t\t\t.fadeIn(200)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.waitUntilFinished(-1150)\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.outro.${color1}`)\r\n\t\t\t\t.scale(originScale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation(originToken)\r\n\t\t\t\t.belowTokens() \r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst useTokenDeleteSequencer = async (token, overrides) => {\r\n\tconst overrideSequencer = overrides?.sequencer?.delete ?? \"\"\r\n\tif (overrideSequencer.length > 0) {\r\n\t\teval(overrides.sequencer.delete)(loc, token)\r\n\t\treturn false\r\n\t}\t\r\n\tconst color = overrides?.sequencer?.options?.impactColor2 ?? \"green\"\r\n\tconst impactNum = overrides?.sequencer?.options?.impactNum2 ?? \"003\"\r\n\tconst {ms, options} = overrides?.sequencer?.options?.fadeIn \r\n\t\t?? {ms: 600, options: {ease: \"easeInQuart\"}}\r\n\tconst sequencerPath = `jb2a.impact.${impactNum}.${color}`\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.fadeIn(ms, options)\r\n\t\t\t\t.opacity(1)\r\n\t\t.play()\t\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation(token)\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.opacity(1.0)\r\n\t\t.play()\t\t\r\n}\r\n\r\nexport const summoning = {\r\n\tcreateSpawn,\r\n\tonPreDeleteToken\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {getTokensInRange} from \"../../helper-functions.js\"\r\n\r\nasync function getEligibleTokenDocuments(tokenDocuments, scene, itemRange, originX, originY) {\r\n\tconst tokenDocsInRange = await getTokensInRange(tokenDocuments, scene.grid.size, scene.grid.distance, itemRange, originX, originY)\r\n\tif (!tokenDocsInRange) return false\r\n\tconst templateNonEffectedTokens = await getNonTemplateEffectedTokenDocs(tokenDocsInRange)\r\n\tif (!templateNonEffectedTokens) return false\r\n\treturn templateNonEffectedTokens\r\n}\r\nasync function getNonTemplateEffectedTokenDocs(tokenDocuments, itemEffectName) {\r\n\treturn tokenDocuments.filter(token => {\r\n\t\tconst effects = token.actor.statuses\r\n\t\treturn effects.has(itemEffectName) == false\r\n\t})\r\n}\r\nconst onUse = async ({args, workflow, item, actor, token}) => {\r\n\tconst itemEffectName = \"Convenient Effect: Aura of Purity\"\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\tconst scene = await fromUuid(template.parent.uuid)\r\n\tconst itemRange = args[0].item.system.target.value\r\n\tconst tokenDocs = Array.from(scene.collections.tokens.values())\r\n\t\r\n\tconst eligibleTokenDocs = await getEligibleTokenDocuments(tokenDocs, scene, itemRange, template.x, template.y)\r\n\tif (!eligibleTokenDocs) return false\r\n\r\n\tconst tokenEffectUuids = await setTokenEffects(eligibleTokenDocs, token.document.disposition)\r\n\tawait template.update({\r\n\t\t\"flags.castData.auraOfPurity.tokensEffected\": tokenEffectUuids\r\n\t})\r\n}\r\nconst preTargetSave = async ({args, workflow, item, actor}) => {\r\n\tconst itemHasEffect = item.effects.some(effect => effect.changes.some(change => {\r\n\t\treturn conditionLabels[\"blinded\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"charmed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"deafened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"frightened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"paralyzed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"stunned\"].includes(change.value.toLowerCase())\r\n\t}))\r\n\tif (itemHasEffect) workflow.saveDetails.advantage = true\r\n}\r\nasync function setTokenEffects(tokenDocs, casterDisposition) {\r\n\tlet effected = []\r\n\tlet uuid = \"\"\r\n\tfor (let i=0; i < tokenDocs.length; i++) {\r\n\t\tconsole.log(\"tokenDocs[i]\")\r\n\t\tconsole.log(tokenDocs[i])\r\n\t\tuuid = tokenDocs[i].actor.uuid\r\n\t\tif ((casterDisposition == 1 && tokenDocs[i].disposition != -1)\r\n\t\t\t|| (casterDisposition == -1  && tokenDocs[i].disposition != 1)) {\r\n\t\t\tgame.dfreds.effectInterface.addEffect( {effectName: 'Aura of Purity', uuid} )\r\n\t\t\teffected.push(uuid)\r\n\t\t}\r\n\t}\r\n\treturn effected\r\n}\r\n\r\nexport const auraOfPurity = {\r\n\tpreTargetSave,\r\n\tonUse\r\n}","const getBlightEffectData = async (origin) => {\r\n\treturn {\r\n\t\tname: `Blight Saving Throw Disadvantage`, \r\n\t\ticon: \"icons/magic/movement/chevrons-down-yellow.webp\", \r\n\t\torigin: origin,\r\n\t\tchanges: [{key: \"flags.midi-qol.disadvantage.ability.save.all\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [\"1\"], \"priority\": 20}],\r\n\t\t\"flags.dae.stackable\": \"noneName\",\r\n\t\t\"flags.times-up.isPassive\": true,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\", \"combatEnd\", \"isSave\"],\r\n\t\t\"flags.dae.showIcon\": false,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst setBlightHook = async (castLevel) => {\r\n\tconst blightPreDamageRollHookId = Hooks.once(\"dnd5e.preRollDamage\", (rolledItem, rollConfig) => {\r\n\t\tconst maxDamageRoll = 8 * castLevel + 32\r\n\t\tconst maxDamageString = String(maxDamageRoll) + \"[necrotic]\" \r\n\t\trollConfig.parts = [maxDamageString]\r\n\t})\t\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].hitTargets[0].actor.system.details.type.value == \"plant\") {\r\n\t\tconst effectData = await getBlightEffectData(args[0].item.uuid)\r\n\t\tawait MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: args[0].hitTargets[0].actor.uuid, effects: [effectData] })\r\n\t\tawait setBlightHook(args[0].castData.castLevel)\r\n\t}\t\r\n}\r\n\r\nexport const blight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","const getItemData = (originActor) => {\r\n\tconst sourceItem = fromUuidSync(\"Item.1dmlohsjnRdwam0c\")\r\n\tconst prof = originActor.system.attributes.prof\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Chef's Special Food\",\r\n\t\tsystem: { \r\n\t\t\tdamage: {\r\n\t\t\t\tparts: [[`1d8`, \"healing\"]]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst onShortRest = (actor, data) => {\r\n\tconst chefEffects = actor.effects.filter(effect => effect.name == \"Chef's Special Food\")\r\n\tif (data.dhd < 0 && chefEffects.length > 0) {\r\n\t\tchefEffects.map(effect => {\r\n\t\t\tconst item = getItemData(actor)\r\n\t\t\tconst token = MidiQOL.tokenForActor(actor.uuid)\r\n\t\t\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [token.document.uuid] }\r\n\t\t\tMidiQOL.completeItemUse(item, {}, options)\t\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const chefRest = {\r\n\tonShortRest\r\n}","import {getSpawnLocation, setActorConcDeletion, setActorConcRemoveUuids} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getSpawnUpdates = async (originActorSenses, originTokenSight) => {\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"alpha\": 0,\r\n\t\t\t\"sight\": originTokenSight\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"system.attributes.senses\": originActorSenses\r\n\t\t}\r\n\t}\r\n}\r\nconst getTokenSpawnIds = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawnedTokenId = await setSpawnedTokenId(tokenUuid, itemRange, actor, originToken)\r\n\tconst spawnedToken = canvas.scene.collections.tokens.get(spawnedTokenId)\r\n\treturn spawnedToken.uuid\r\n}\r\nconst getWarpgateCallbacks = async (tokenUuid) => {\r\n\treturn {\r\n\t\tpre: async (template,update,token) => {\r\n\t\t\tsetEffectsSequencer(template, update, token, tokenUuid)\r\n\t\t\tawait warpgate.wait(2650)\r\n\t\t},\r\n\t\tpost: async (template, token) => {\r\n\t\t\tsetPostEffectsSequencer(template,token)\r\n\t\t}\r\n\t}\r\n}\r\nconst getWarpgateOptions = async (actor) => {\r\n\treturn {controllingActor: actor}\r\n}\r\nconst getWarpgateUpdates = async (spawn, originActorSenses, originTokenSight) => {\r\n\tconst updates = await getSpawnUpdates(originActorSenses, originTokenSight)\r\n\treturn mergeObject(updates, spawn)\r\n}\r\nconst setEffectsSequencer = async (template, update, token, originTokenUuid) => {\r\n\tconst color = \"blue\"\r\n\tconst originToken = await fromUuid(originTokenUuid)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.intro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.loop.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.outro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\t\r\n}\r\nconst setHookMacros = async (actor, spawnedTokenUuid) => {\r\n\tconst userIsGM = game.users.find(user => user.id == game.userId).isTheGM\r\n\tif (!userIsGM) {\r\n\t\tawait socket.executeAsGM(\"setDeleteSummonConcentrationHook\", actor, spawnedTokenUuid)\r\n\t}\r\n\tconst deleteSummonConcentrationHookId = Hooks.on(\"deleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", deleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\r\n}\r\nconst setPostEffectsSequencer = async (template, token) => {\r\n\tconst sequencerPath = \"jb2a.impact.009.blue\"\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.fadeIn(250)\t\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\t\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t.play()\r\n\t\r\n}\r\nconst setPostSpawnEffects = async (spawnedTokenUuid, originTokenActorUuid) => {\r\n\tconst fromUuidActor = await fromUuid(originTokenActorUuid)\r\n\tawait setActorConcRemoveUuids(fromUuidActor, spawnedTokenUuid)\r\n\tawait setHookMacros(fromUuidActor, spawnedTokenUuid)\t\r\n}\r\nconst setSpawnedTokenId = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawn = {\r\n\t\ttoken: { name:\"Clairvoyance\"},\r\n\t\tactor: { name:\"Clairvoyance\"}\r\n\t}\r\n\tconst location = await getSpawnLocation(\"modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_Grey_Sphere_400x400.webm\", 1, 4, tokenUuid, itemRange, originToken)\r\n\tconst spawnedTokenId = await warpgate.spawnAt({x: location.x, y: location.y}, spawn.token.name, await getWarpgateUpdates(spawn, actor.system.attributes.senses, originToken.document.sight), await getWarpgateCallbacks(tokenUuid), await getWarpgateOptions(actor))\r\n\treturn spawnedTokenId[0]\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tawait setActorConcDeletion(actor)\r\n\t} else {\t\r\n\t\tconst spawnedTokenUuid = await getTokenSpawnIds(args[0].tokenUuid, 5280, actor, token)\t\t\r\n\t\tawait setPostSpawnEffects(spawnedTokenUuid, token.document.actor.uuid)\t\r\n\t}\r\n}\r\n\r\nexport const clairvoyance = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getTemplatesInRange, getTemplatesWithOverlap} from \"./helper-functions.js\"\r\nimport {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const setAreaEffectDeleteHook = async (range, x, y, ineligibleEffectNames, minSpellLevel, originTemplateActiveEffect, itemTemplatePositions) => {\r\n\tconst setAreaEffectDeleteHookId = Hooks.on(\"refreshMeasuredTemplate\", (templateData) => {\r\n\t\tconst template = templateData.document\t\t\r\n\t\tconst originFlag = template.flags?.dnd5e?.origin ?? false\r\n\t\tconst templateSpellLevel = template.flags?.dnd5e?.spellLevel ?? 0\r\n\t\tif (!originFlag || templateSpellLevel > minSpellLevel) return false\t\t\r\n\t\tconst origin = fromUuidSync(template.flags.dnd5e.origin)\r\n\t\tif (ineligibleEffectNames.includes(origin.name) || ineligibleEffectNames == \"all\") {\t\r\n\t\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\t\tconst gridTemplatePositions = canvas.grid.highlightLayers[gridTemplateId].positions\t\r\n\t\t\tconst templatesOverlap = itemTemplatePositions.intersection(gridTemplatePositions).size > 0 \r\n\t\t\tif (!templatesOverlap) return false\r\n\t\t\t//waiting for potential concentration effects to cycle through\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsocket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)\r\n\t\t\t}, 200)\t\t\t\t\r\n\t\t}\r\n\t})\r\n\tawait setAreaEffectDeleteHookOff(originTemplateActiveEffect, setAreaEffectDeleteHookId)\r\n}\r\nexport const setAreaEffectDeleteHookOff = async (templateEffect, setAreaEffectDeleteHookId) => {\r\n\tconst setAreaEffectDeleteHookOffId = Hooks.on(\"deleteActiveEffect\", (effect, config) => {\t\t\t\r\n\t\tif (effect.uuid == templateEffect.uuid) {\r\n\t\t\tHooks.off(\"createMeasuredTemplate\", setAreaEffectDeleteHookId)\r\n\t\t\tHooks.off(\"deleteActiveEffect\", setAreaEffectDeleteHookOffId)\r\n\t\t}\r\n\t})\r\n}","import {getDialogueButtonType, setActiveEffects, setTemplateDispels} from \"../../helper-functions.js\"\r\nimport {setAreaEffectDeleteHook} from \"../../hooks.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getEffectOriginData = async (originUuid, lightId) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\torigin: originUuid,\r\n\t\tchanges: [{key: \"macro.execute\", mode: 0, value: \"function.CHARNAME.macros.daylight.setSpellEffects\"}],\r\n\t\t\"flags.castData.daylight.lightId\": lightId,\r\n\t\t\"flags.dae.showIcon\": false,\t\t\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": true,\t\t\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectTokenData = async (originUuid) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\tduration: {rounds: 600},\r\n\t\torigin: originUuid,\r\n\t\tchanges: [\r\n\t\t\t{key: `ATL.light.dim`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [120]},\r\n\t\t\t{key: `ATL.light.bright`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [60]},\r\n\t\t\t{key: `ATL.light.attenuation`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [.35]}\r\n\t\t],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": false,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.showIcon\": true,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area of Effect\":\r\n\t\t\treturn \"icons/magic/air/weather-clouds-sunlight.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/air/weather-sunlight-sky.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst setAreaChoiceEffects = async (templateUuid, templateEffect, tokenActorUuid, itemUuid, positions) => {\r\n\tconst [x, y] = await setTemplateEffects(templateUuid, templateEffect, positions)\r\n\tconst lightParams = {\"x\": x, \"y\": y, \"config\": {\"bright\": 60, \"dim\": 120, \"attenuation\": .4}}\r\n\tconst [sanitizedLight] = await socket.executeAsGM(\"setAmbientLightCreate\", lightParams)\r\n\tconst [effect] = await setActiveEffects([tokenActorUuid], await getEffectOriginData(itemUuid, sanitizedLight._id))\t\r\n\tawait setAreaEffectDeleteHook(60, x, y, [\"Darkness\"], 9, effect, positions)\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token) => {\r\n\tif (!token) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation({\"x\": x, \"y\": y})\r\n\t\t\t.play()\t\t\t\t\r\n\t} else {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.attachTo(token)\r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst setInitChoice = async (itemUuid)  => {\r\n\tconst type = await getDialogueButtonType([\"Area of Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Daylight?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tconst target = game.user.targets.first()\r\n\t\tawait setActiveEffects([target.document.actor.uuid], await getEffectTokenData(itemUuid))\r\n\t\tawait setEffectsSequencer(0, 0, target.document.width, target)\r\n\t\treturn false\t\t\t\r\n\t}\t\r\n\treturn true\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tconst isAreaChoice = await setInitChoice(item.uuid)\r\n\t\tif (!isAreaChoice) return false\r\n\t} else if (args[0].tag == \"OnUse\" && args[0].macroPass == \"postActiveEffects\") {\r\n\t\tconst templateId = \"MeasuredTemplate.\" + args[0].templateId \r\n\t\tconst templatePositions = canvas.grid.highlightLayers[templateId].positions\r\n\t\tconst templateEffect = actor.effects.find(effect => effect.name == \"Daylight Template\")\r\n\t\tawait setAreaChoiceEffects(args[0].templateUuid, templateEffect, token.document.actor.uuid, item.uuid, templatePositions)\r\n\t} else if (args[0] == \"off\")  {\r\n\t\tconst lastArg = args[args.length - 1]\r\n\t\tawait socket.executeAsGM(\"setAmbientLightDelete\", lastArg.efData.flags.castData.daylight.lightId)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setTemplateEffects = async (templateUuid, templateEffect, templatePositions) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tawait setEffectsSequencer(template.x, template.y, 7, false)\r\n\tawait setTemplateDispels(template.x, template.y, \"Darkness\", templatePositions)\r\n\ttemplateEffect.delete()\r\n\treturn [template.x, template.y]\r\n}\r\n\r\nexport const daylight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getDialogueButtonType, getTemplatesInRange} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst deleteEffectsOnToken = async (casterToken, dispelAbility, dispelLevel) => {\r\n\tconst target = game.user.targets.first()\t\r\n\tconst [effectsLTE2DispelLevel, effectsGTDispelLevel] = await getTokenEffects(target, dispelLevel)\r\n\tconst effectsIdsToDelete = await getEffectsToDelete(casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel)\r\n\teffectsIdsToDelete.map(socket.executeAsGM(\"setActiveEffectDelete\", target.actor, effectsIdsToDelete[i]))\r\n}\r\nconst deleteTemplate = async (casterToken, dispelAbility, dispelLevel, selectedTemplate) => {\r\n\tconst spellLevel = selectedTemplate.flags.dnd5e.spellLevel\r\n\tconst templatesToDelete = dispelLevel < spellLevel ? await getTemplatesToDelete(casterToken, dispelAbility, [selectedTemplate]) : [selectedTemplate]\r\n\ttemplatesToDelete.map(template => socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid))\r\n}\r\nconst getEffectsToDelete = async (casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel) => {\r\n\tconst casterAbilityMod = casterToken.actor.system.abilities[dispelAbility].mod\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet effectCastLevel = 0\r\n\tfor (let i = 0; i < effectsGTDispelLevel.length; i++) {\r\n\t\teffectCastLevel = effectsGTDispelLevel[i].flags[\"midi-qol\"].castData.castLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > effectCastLevel + 10) arr.push(effectsGTDispelLevel[i])\t\t\r\n\t}\r\n\treturn effectsLTE2DispelLevel.concat(arr).map(effect => effect.id)\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area Effect\":\r\n\t\t\treturn \"icons/magic/air/air-burst-spiral-blue-gray.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/nature/plant-sprout-hand-blue.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelectedTemplate = async (casterToken) => {\r\n\tconst eligibleTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e.spellLevel > 0)\r\n\tconst inRangeEligibleTemplates = getTemplatesInRange(eligibleTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 120, casterToken.x, casterToken.y)\t\r\n\tlet originItem\r\n\tlet originItems = []\r\n\tfor (let i = 0; i < inRangeEligibleTemplates.length; i++) {\r\n\t\toriginItem = await fromUuid(inRangeEligibleTemplates[i].flags.dnd5e.origin)\r\n\t\toriginItems.push(originItem)\r\n\t}\r\n\treturn await getTemplateSelection(originItems, inRangeEligibleTemplates)\r\n}\r\nconst getTemplateSelection = async (items, inRangeEligibleTemplates) => {\r\n\tconst sortedTemplates = inRangeEligibleTemplates.sort((a, b) => {\r\n\t\tconst aOrig = fromUuidSync(a.flags.dnd5e.origin)\t\r\n\t\tconst bOrig = fromUuidSync(b.flags.dnd5e.origin)\r\n\t\treturn aOrig.name.localeCompare(bOrig.name)\r\n\t})\r\n\tconst templateSelections = items.map((item, i) => {\r\n\t\tconst itemOwnerName = canvas.scene.tokens?.find(token => token.actor.uuid == item.parent.uuid)?.name ?? \"unknown\"\r\n\t\tconst itemLabel = item.name + \" from \" + itemOwnerName\t\r\n\t\treturn {type: 'radio', label: itemLabel}\r\n\t}).sort((a, b) => a.label.localeCompare(b.label))\t\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: templateSelections\r\n\t\t},{\r\n\t\t\ttitle: \"Which template to dispel?\",\r\n\t\t\trender: (...args) => { console.log(...args); ui.notifications.info(\"render!\")},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100px\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn sortedTemplates[choices.inputs.indexOf(true)]\r\n}\r\nconst getTemplatesToDelete = async (casterToken, dispelAbility, potentialTemplates) => {\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet templateCastLevel = 0\r\n\tfor (let i = 0; i < potentialTemplates.length; i++) {\r\n\t\ttemplateCastLevel = potentialTemplates[i].flags.dnd5e.spellLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > potentialTemplates[i].flags.dnd5e.spellLevel + 10) arr.push(potentialTemplates[i])\t\t\r\n\t}\t\r\n\treturn arr\r\n}\r\nconst getTokenEffects = async (token, dispelLevel) => {\r\n\t//get two groups, 1: effects w/ spell levels lesser than or equal to the casted spell level of dispel magic; and 2: the same with greater than that level\r\n\tconst effectsLTE2DispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > 0 && effect.flags[\"midi-qol\"].castData.baseLevel <= dispelLevel)\r\n\tconst effectsGTDispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > dispelLevel)\r\n\treturn [effectsLTE2DispelLevel, effectsGTDispelLevel]\r\n} \r\nconst setInitChoice = async (casterUuid, dispelAbility, dispelLevel)  => {\r\n\tconst type = await getDialogueButtonType([\"Area Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Dispel Magic?\", getIconPaths, 60, 60)\r\n\tconst casterToken = await fromUuid(casterUuid)\t\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tdeleteEffectsOnToken(casterToken, dispelAbility, dispelLevel)\t\r\n\t} else if (type.value == \"Area Effect\") {\r\n\t\tconst selectedTemplate = await getSelectedTemplate(casterToken)\r\n\t\tdeleteTemplate(casterToken, dispelAbility, dispelLevel, selectedTemplate)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setSpellEffects = async ({args, item, workflow}) => {\r\n\tconst casterUuid = args[0].tokenUuid\r\n\tconst dispelAbility = args[0].actor.system.attributes.spellcasting\r\n\tconst dispelLevel = args[0].spellLevel < 3 ? 3 : args[0].spellLevel\r\n\tsetInitChoice(casterUuid, dispelAbility, dispelLevel)\r\n}\r\n\r\nexport const dispelMagic = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {conditionLabels} from \"../../constants.js\"\r\n\r\nconst main = async ({item, workflow, args}) => {\r\n\tconst hasCharm = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"charmed\"].includes(change.value.toLowerCase())))\r\n\tif (hasCharm) {\r\n\t\tworkflow.saveDetails.advantage = true\r\n\t}\r\n}\r\n\r\nexport const feyAncestry = {\r\n\tmain\r\n}","export const protectionFromPoison = {\r\n\tinitHeader: \t\t\"What do you want to cast?\"\r\n}\r\nexport const giantInsect = {\r\n\tchoices:\t\t\t[\"Ten Giant Centipedes\", \"Three Giant Spiders\", \"Five Giant Wasps\", \"One Giant Scorpion\"],\r\n\tdefaultIcons:\t\t\t\t[\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantCentipede.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantSpider.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantWasp.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantScorpion.webp\"\r\n\t\t\t\t\t\t],\r\n\tinitHeader:\t\t\t\"What do you want to create?\",\r\n\tpreEffectSeqPath:\t\"modules/jb2a_patreon/Library/2nd_Level/Misty_Step/MistyStep_01_Regular_Orange_400x400.webm\",\r\n\tspawnNames:\t\t\t[\"Giant Centipede\", \"Giant Spider\", \"Giant Wasp\", \"Giant Scorpion\"]\r\n}\r\nexport const summonCelestial = {\r\n\tchoices:\t\t\t[\"Celestial Avenger\", \"Celestial Defender\"],\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/celestial/SolarBow.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/celestial/Planetar.webp\"\r\n\t\t\t\t\t\t],\r\n\tinitHeader:\t\t\t\"What do you want to summon?\",\r\n\tspawnNames:\t\t\t[\"Celestial Avenger Spirit\", \"Celestial Defender Spirit\"]\r\n}\r\nexport const summonDraconicSpirit = {\r\n\tcircleColors:\t\t[\"green\", \"blue\", \"red\", \"yellow\", \"green\", \"blue\", \"green\", \"red\", \"yellow\", \"yellow\"],\r\n\tchoices:\t\t\t[\"Chromatic Draconic Spirit\", \"Gem Draconic Spirit\", \"Metallic Draconic Spirit\"],\t\t\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/dragon/RedDragonAdult.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/dragon/CopperDragonAdult.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/dragon/GoldDragonAdult.webp\"\r\n\t\t\t\t\t\t],\t\r\n\tinitHeader:\t\t\t\"Choose a draconic spirit to summon\",\r\n\timpactColors:\t\t[\"green\", \"blue\", \"01\", \"yellow\", \"green\", \"blue\", \"green\", \"red\", \"yellow\", \"yellow\"],\r\n\timpactNums:\t\t\t[\"003\", \"003\", \"fire\", \"003\", \"003\", \"003\", \"003\", \"003\", \"003\", \"003\"],\r\n\tresistChoices:\t\t[\"Acid\", \"Cold\", \"Fire\", \"Lightning\", \"Poison\", \"Force\", \"Necrotic\", \"Psychic\", \"Radiant\", \"Thunder\"],\r\n\tresistIcons:\t\t[\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-green.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-blue.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-red.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-blue-yellow.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-purple-pink.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-purple.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-green.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-purple-pink.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-blue-yellow.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-orange.webp\"\r\n\t\t\t\t\t\t],\r\n\tresistHeader:\t\t\"Choose your damage resist type\",\r\n\tresistValues:\t\t[\"acid\", \"cold\", \"fire\", \"lightning\", \"poison\", \"force\", \"necrotic\", \"psychic\", \"radiant\", \"thunder\"],\r\n\tspawnNames:\t\t\t[\"Chromatic Draconic Spirit\", \"Gem Draconic Spirit\", \"Metallic Draconic Spirit\"]\r\n}\r\nexport const summonElemental = {\r\n\tcircleColors:\t\t[\"green\", \"blue\", \"red\", \"yellow\"],\r\n\tchoices:\t\t\t[\"Air Elemental\", \"Earth Elemental\", \"Fire Elemental\", \"Water Elemental\"],\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Elemental/Air_Large_Elemental_01.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Elemental/Earth_Elemental_Large_Elemental_01.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Elemental/Fire_Elemental_Large_Elemental_A_01.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Elemental/Water_Large_Elemental_A_01.webp\"\r\n\t\t\t\t\t\t],\r\n\timpactColors:\t\t[\"white\", \"orange\", \"01\", \"blue\"],\r\n\timpactNums:\t\t\t[\"003\", \"003\", \"fire\", \"003\"],\t\t\t\t\t\t\r\n\tinitHeader:\t\t\t\"What do you want to summon?\",\r\n\tspawnNames:\t\t\t[\"Air Elemental Spirit\", \"Earth Elemental Spirit\", \"Fire Elemental Spirit\", \"Water Elemental Spirit\"]\r\n}\r\nexport const summonIceWolves = {\r\n\tchoices:\t\t\t[\"Ice Wolf\"],\r\n\tcircleColors:\t\t[\"blue\"],\r\n\tcircleSchool:\t\t[\"conjuration\"],\r\n\tdefaultIcons:\t\t[\"images/Tokens/Creatures/Monstrosity/Winter_Wolf_Large_Scale150_Monstrosity_05.webp\"],\r\n\timpactColors:\t\t[\"blue\"],\r\n\timpactNums:\t\t\t[\"011\"],\r\n\tpreEffectSeqPath:\t\"modules/jb2a_patreon/Library/2nd_Level/Misty_Step/MistyStep_01_Regular_Orange_400x400.webm\",\r\n\tspawnNames:\t\t\t[\"Ice Wolf\"]\r\n}\r\nexport const summonUndead = {\r\n\tauraName:\t\t\t\"Festering Aura\",\r\n\tauraTemplateSrc:\t\"modules/JB2A_DnD5e/Library/1st_Level/Fog_Cloud/FogCloud_01_White_800x800.webm\",\t\r\n\tcircleColors:\t\t[\"green\", \"green\", \"green\"],\r\n\tchoices:\t\t\t[\"Ghostly\", \"Putrid\", \"Skeletal\"],\r\n\t//defaultIcons:\t\t[\r\n\t//\t\t\t\t\t\t\"systems/dnd5e/tokens/undead/Ghost.webp\",\r\n\t//\t\t\t\t\t\t\"systems/dnd5e/tokens/undead/Zombie.webp\",\r\n\t//\t\t\t\t\t\t\"systems/dnd5e/tokens/undead/SkeletonClothes.webp\"\r\n\t//\t\t\t\t\t],\r\n\timpactColors:\t\t[\"green\", \"green\", \"green\"],\r\n\timpactNums:\t\t\t[\"003\", \"003\", \"003\"],\t\t\t\t\t\t\r\n\tinitHeader:\t\t\t\"What do you want to summon?\",\r\n\tspawnAttacks:\t\t[\"Deathly Touch\", \"Rotting Claw\", \"Grave Bolt\"],\r\n\tspawnNames:\t\t\t[\"Undead Spirit (Ghostly)\", \"Undead Spirit (Putrid)\", \"Undead Spirit (Skeletal)\"]\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {giantInsect as s} from \"../../strings/spells.js\"\r\nimport {summoning} from \"../../helpers/summons.js\"\r\n\r\nconst getOverrides = async () => {\r\n\treturn {\r\n\t\tgeneral: {\r\n\t\t\tamountToSpawnByIndex: [10, 3, 5, 1]\r\n\t\t}\r\n\t}\r\n}\r\nconst getSpellIconPaths = (choice) => {\r\n\tconst index = s.choices.indexOf(choice)\r\n\tconst actor = game.actors.find(actor => actor.name == s.spawnNames[index])\r\n\tconst icon = actor?.img ?? false\t\r\n\tif (!icon) return s.defaultIcons[index]\r\n\treturn icon\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst choice = await getDialogueButtonType(\r\n\t\ts.choices, \r\n\t\t{width: s.choices.length * 150, height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetSpellIconPaths, \r\n\t\t60, \r\n\t\t60, \r\n\t\t[]\r\n\t)\r\n\tconst overrides = await getOverrides(actor, workflow)\r\n\tsummoning.createSpawn(actor, choice.value, item, overrides, s, token) \r\n}\r\n\r\nexport const giantInsect = {\r\n\tonUse\r\n}","import {cloudSpellNames} from \"../../constants.js\"\r\n\r\nconst hordeStr = \"Horde\"\r\nconst getAoeOverlapPerc = async (args) => {\r\n\tif (!args[0].templateId) return 0\r\n\tconst creatureCoords = await getCreatureCoords(args[0].actor.token)\r\n\tconst templateCoords = await getTemplateCoords(args[0].templateId) ?? false\r\n\tif (!templateCoords) return 0\r\n\tconst overlap = creatureCoords.intersection(templateCoords)\r\n\treturn overlap.size / creatureCoords.size\r\n}\r\nconst getCreatureCoords = async (tokenDoc) => {\r\n\tconst gridSize = canvas.scene.grid.size\r\n\tlet set = new Set()\r\n\tlet position = \"\"\r\n\tfor (let i = 0; i < tokenDoc.height; i++) {\r\n\t\tfor (let j = 0; j < tokenDoc.width; j++) {\r\n\t\t\tposition = (tokenDoc.x + gridSize*i).toString() + \".\" + (tokenDoc.y + gridSize*j).toString() \r\n\t\t\tset.add(position)\r\n\t\t}\r\n\t}\r\n\treturn set\r\n}\r\nconst getNewDamage = async(hpDamage, hordeCount, multiplier, hasAreaTarget) => {\r\n\treturn hasAreaTarget ? Math.floor(hpDamage * hordeCount * multiplier) : hpDamage\r\n}\r\nconst getNewTokenSizeDiff = async (oldHealthPercentage, newHealthPercentage) => {\r\n\tif (oldHealthPercentage > 75 && newHealthPercentage <= 50 && newHealthPercentage > 25) {\r\n\t\treturn 2\r\n\t} else if (oldHealthPercentage > 75 && newHealthPercentage <= 25) {\r\n\t\treturn 3\r\n\t} else if (oldHealthPercentage <= 75 && oldHealthPercentage > 50 && newHealthPercentage <= 25) {\r\n\t\treturn 2\r\n\t} else {\r\n\t\treturn 1\r\n\t}\r\n}\r\nconst getTemplateCoords = async (templateId) => {\r\n\tconst templateIdStr = \"MeasuredTemplate.\" + templateId\r\n\treturn canvas.grid.highlightLayers[templateIdStr].positions\r\n}\r\nconst isSaveFailure = async ({args, item}) => {\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tconsole.log(await getAoeOverlapPerc(args))\r\n\tif (!item.system.hasAreaTarget || await getAoeOverlapPerc(args) <= .666) {\r\n\t\tHooks.once(\"createActiveEffect\", (effect) => {\t\t\t\r\n\t\t\teffect.delete()\r\n\t\t})\r\n\t}\t\r\n}\r\nconst preTargetDamageApplication = async ({actor, args, item, workflow, token}) => {\r\n\tif (workflow.hitTargets.size < 1) return false\r\n\tconst hordeItem = await fromUuid(actor.items.find(item => item.name == hordeStr).uuid)\r\n\tconst hordeItemUses = hordeItem.system.uses.value\r\n\tconst hordeItemUsesMax = hordeItem.system.uses.max\r\n\tconst liveTokenDoc = await fromUuid(token.document.uuid)\r\n\tconst hpDamage = workflow.damageItem.hpDamage\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tif (hpDamage > 0) setHpUpdateEffects(actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args)\r\n}\r\nconst setHpUpdateEffects = async (actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args) => {\r\n\tconst aoeOverlapPerc = await getAoeOverlapPerc(args)\r\n\tconst newHpDamage = await getNewDamage(hpDamage, hordeItemUses, aoeOverlapPerc, hasAreaTarget)\r\n\tworkflow.damageItem.hpDamage = newHpDamage\r\n\tsetPostDamageUpdates(actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax)\r\n}\r\nconst setLiveTokenDocSize = async (liveTokenDoc, tokenSizeDiff) => {\r\n\tif (liveTokenDoc.width - tokenSizeDiff < 4) {\r\n\t\tliveTokenDoc.actor.update({\r\n\t\t\t\"system.traits.size\": Object.keys(CONFIG.DND5E.actorSizes)[liveTokenDoc.width - tokenSizeDiff + 1]\r\n\t\t})\r\n\t}\r\n\tliveTokenDoc.update({\"width\": liveTokenDoc.width - tokenSizeDiff, \"height\": liveTokenDoc.height - tokenSizeDiff})\t\t\r\n}\r\nconst setLiveTokenDocUpdates = async (texture, hordeItem, hordeItemUsesMax, multiplier, liveTokenDoc, tokenSizeNum, tokenSizeDiff, maxHordeSize) => {\r\n\t\thordeItem.update({\"system.uses.value\": hordeItemUsesMax * multiplier})\r\n\t\tawait warpgate.wait(4000)\t\r\n\t\tsetSequencer(liveTokenDoc)\r\n\t\tawait warpgate.wait(200)\r\n\t\tconst newHordeUsesVal = (liveTokenDoc.actor.items.find(item => item.name == hordeStr)).system.uses.value\r\n\t\tsetNewHordeUses(liveTokenDoc, maxHordeSize, tokenSizeDiff)\r\n\t\tif (maxHordeSize == 4 && newHordeUsesVal == 3) {\r\n\t\t\t//do nothing\r\n\t\t} else if (tokenSizeNum > 2) {\r\n\t\t\tsetLiveTokenDocSize(liveTokenDoc, tokenSizeDiff)\r\n\t\t}\r\n\t\tliveTokenDoc.update({\"texture.src\": texture})\r\n}\r\nconst setNewHordeUses = async (liveTokenDoc, maxHordeSize, tokenSizeDiff) => {\r\n\tconst effect = liveTokenDoc.actor.effects.find(effect => effect.name == hordeStr)\r\n\tconst oldChanges = effect.changes\r\n\tlet attackBonus = oldChanges.find(change => change.key == \"system.bonuses.All-Attacks\")\r\n\tconst oldAttackBonusVal = attackBonus.value\r\n\tlet tempChanges = oldChanges.filter((change, i, arr) => i != arr.indexOf(attackBonus))\r\n\tattackBonus.value = oldAttackBonusVal - Math.floor(((maxHordeSize / 8) * tokenSizeDiff) + .5)\r\n\ttempChanges.push(attackBonus)\r\n\teffect.update({changes: tempChanges})\r\n}\r\n\r\nconst setPostDamageUpdates = async (actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax) => {\r\n\tconst oldHealthPercentage = actor.system.attributes.hp.value / actor.system.attributes.hp.max * 100\r\n\tconst newHealthPercentage = ((actor.system.attributes.hp.value - newHpDamage) / actor.system.attributes.hp.max) * 100\r\n\tconst tokenSizeNum = Object.keys(CONFIG.DND5E.actorSizes).indexOf(liveTokenDoc.actor.system.traits.size)\r\n\tconst tokenSizeDiff = await getNewTokenSizeDiff(oldHealthPercentage, newHealthPercentage)\r\n\tif (oldHealthPercentage > 75 && newHealthPercentage <= 75 && newHealthPercentage > 50) {\r\n\t\tsetLiveTokenDocUpdates(\r\n\t\t\tactor.flags[\"midi-qol\"].hordePassive.img1, \r\n\t\t\thordeItem, \r\n\t\t\thordeItemUsesMax, \r\n\t\t\t.75, \r\n\t\t\tliveTokenDoc, \r\n\t\t\ttokenSizeNum, \r\n\t\t\ttokenSizeDiff,\r\n\t\t\tactor.flags[\"midi-qol\"].hordePassive.maxHordeSize\r\n\t\t)\r\n\t} else if (oldHealthPercentage > 50 && newHealthPercentage <= 50 && newHealthPercentage > 25) {\r\n\t\tsetLiveTokenDocUpdates(\r\n\t\t\tactor.flags[\"midi-qol\"].hordePassive.img2, \r\n\t\t\thordeItem, \r\n\t\t\thordeItemUsesMax, \r\n\t\t\t.50, \r\n\t\t\tliveTokenDoc, \r\n\t\t\ttokenSizeNum,\r\n\t\t\ttokenSizeDiff,\r\n\t\t\tactor.flags[\"midi-qol\"].hordePassive.maxHordeSize\r\n\t\t)\r\n\t} else if (oldHealthPercentage > 25 && newHealthPercentage <= 25) {\r\n\t\tsetLiveTokenDocUpdates(\r\n\t\t\tactor.flags[\"midi-qol\"].hordePassive.img3, \r\n\t\t\thordeItem, \r\n\t\t\thordeItemUsesMax, \r\n\t\t\t.25, \r\n\t\t\tliveTokenDoc, \r\n\t\t\ttokenSizeNum,\r\n\t\t\ttokenSizeDiff,\r\n\t\t\tactor.flags[\"midi-qol\"].hordePassive.maxHordeSize\r\n\t\t)\r\n\t} \r\n}\r\nconst setSequencer = async (liveTokenDoc) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(liveTokenDoc.actor.flags[\"midi-qol\"].hordePassive.sequencerPath)\r\n\t\t\t.atLocation(liveTokenDoc)\r\n\t\t.play()\r\n}\r\n\r\nexport const hordePassive = {\r\n\tisSaveFailure,\r\n\tpreTargetDamageApplication\r\n}","export const insectCloud = {\r\n\tflagName:\t\t\t\t\"insectCloud\",\r\n\teffectName:\t\t\t\t\"Insect Cloud\",\r\n\ttemplateEffectName:\t\t\"Insect Cloud Template\"\r\n}","import {\r\n\tsetActiveEffects,\r\n\tsetAuraEffectUpdatesWhenDeleted,\r\n\tsetAuraEffectsWhenEntered,\r\n\tsetAuraEffectUpdatesWhenMoved,\r\n\tsetAuraEffectsWhenLeft,\r\n\tupdateAuraEffectsOnUse,\r\n\tupdateAuraFlags,\r\n\tupdateAuraWhenMoved\r\n} from \"../../../helper-functions.js\"\r\nimport {insectCloud as s} from \"../../../strings/features.js\"\r\n\r\nconst checkAttackerVision = (workflow) => {\r\n\tif (workflow.targets.first() == workflow.attackingToken) return false\r\n\tconst [target, bsRange, tsRange, units] = getCheckAttackerVisionParams(workflow)\r\n\tif (![\"ft\", \"m\", null].includes(units) && (bsRange > 0 || tsRange > 0)) return false \r\n\tconst attackerIsDefenderEffectOrigin = checkEffectOrigin(target, workflow.attackingToken)\r\n\tif (attackerIsDefenderEffectOrigin) return false\r\n\tconst inBsOrTsRange = getIfInBsOrTsRange(bsRange, tsRange, target, workflow)\r\n\tconst defenderIsOwnEffectOrigin = checkEffectOrigin(target, target)\r\n\tif (!inBsOrTsRange && defenderIsOwnEffectOrigin) return true\r\n\tconst attackerIsOwnEffectOrigin = checkEffectOrigin(workflow.attackingToken, workflow.attackingToken)\r\n\tif (!inBsOrTsRange && !attackerIsOwnEffectOrigin) return true\r\n\treturn false\r\n}\r\nconst checkDefenderVision = (workflow) => {\r\n\tif (workflow.targets.first() == workflow.attackingToken) return false\r\n\tconst [target, bsRange, tsRange, units] = getCheckDefenderVisionParams(workflow)\r\n\tif (![\"ft\", \"m\", null].includes(units) && (bsRange > 0 || tsRange > 0)) return false\r\n\tconst defenderIsAttackerEffectOrigin = checkEffectOrigin(workflow.attackingToken, target)\r\n\tif (defenderIsAttackerEffectOrigin) return false\r\n\tconst inBsOrTsRange = getIfInBsOrTsRange(bsRange, tsRange, target, workflow)\r\n\tconst defenderIsOwnEffectOrigin = checkEffectOrigin(target, target)\r\n\tif (inBsOrTsRange || defenderIsOwnEffectOrigin) return false\r\n\treturn true\r\n}\r\nconst checkEffectOrigin = (effectedToken, candidateToken) => {\r\n\tconst effect = effectedToken.actor.effects.find(effect => \r\n\t\ts.insectCloudEffectNames.includes(effect.name)\r\n\t)\r\n\tconst origin = effect?.origin ?? {}\r\n\treturn origin == candidateToken.actor.uuid\r\n}\r\nconst getCheckAttackerVisionParams = (workflow) => {\r\n\tconst target = workflow.targets.first()\r\n\tconst bsRange = workflow.actor.attributes.senses.blindsight\r\n\tconst tsRange = workflow.actor.attributes.senses.tremorsense\r\n\tconst units = workflow.actor.attributes.senses.units\t\r\n\treturn [target, bsRange, tsRange, units] \r\n}\r\nconst getCheckDefenderVisionParams = (workflow) => {\r\n\tconst target = workflow.targets.first()\r\n\tconst bsRange = target.actor.system.attributes.senses.blindsight\r\n\tconst tsRange = target.actor.system.attributes.senses.tremorsense\r\n\tconst units = target.actor.system.attributes.senses.units\t\r\n\treturn [target, bsRange, tsRange, units] \r\n}\r\nconst getEffectData = async (originUuid, templateUuid) => {\r\n\tconst duration = await getEffectDuration(templateUuid)\r\n\treturn {\r\n\t\tname: \"Insect Cloud\", \r\n\t\ticon: \"icons/creatures/invertebrates/wasp-swarm-movement.webp\", \r\n\t\torigin: originUuid,\r\n\t\tduration,\r\n\t\tchanges: [{\r\n\t\t\t\tkey: \"flags.midi-qol.grants.disadvantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkAttackerVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.advantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkDefenderVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.grants.advantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkDefenderVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.disadvantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkAttackerVision(workflow)`]\r\n\t\t}],\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectDuration = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tconst sourceActor = await fromUuid(template.flags[\"midi-qol\"].actorUuid)\r\n\tconst templateEffect = sourceActor.effects.find(effect => effect.name == s.templateEffectName)\r\n\treturn templateEffect.duration\r\n}\r\nconst getIfInBsOrTsRange = (bsRange, tsRange, target, workflow) => {\r\n\tconst maxBsOrTsRange = Math.max(bsRange, tsRange)\r\n\treturn MidiQOL.findNearby(\"all\", \r\n\t\ttarget, \r\n\t\tmaxBsOrTsRange, \r\n\t\t{canSee: true}\r\n\t).filter(token => \r\n\t\ttoken.actor.uuid == workflow.attackingToken.actor.uuid\r\n\t).length > 0 \t\r\n}\r\nconst getTokenActorUuids = async (template, token) => {\r\n\tconst tokenIds = game.modules.get(\"templatemacro\").api.findContained(template)\r\n\tconst elligibleTokens = tokenIds.map(id => \r\n\t\tcanvas.scene.collections.tokens.get(id)\r\n\t).filter(tokenDoc => token.document.uuid != tokenDoc.uuid)\r\n\tif (elligibleTokens.length < 1) return false\r\n\treturn elligibleTokens.filter(tokenDoc => {\r\n\t\tconst effects = tokenDoc.actor?.effects ?? []\r\n\t\treturn effects.filter(effect => \r\n\t\t\teffect.name != s.effectName\r\n\t\t).length > 0\r\n\t}).map(tokenDoc => tokenDoc.actor.uuid)\t\r\n}\r\nconst onUse = async ({actor, args, token}) => {\r\n\tconst template = await setTemplateAttachment(args, token)\r\n\tconst tokenActorUuids = await getTokenActorUuids(template, token)\r\n\tif (!tokenActorUuids) return false\r\n\tupdateAuraEffectsOnUse(actor, \r\n\t\targs, \r\n\t\ts.templateEffectName, \r\n\t\tgetEffectData, \r\n\t\ttokenActorUuids\r\n\t)\r\n\tupdateAuraFlags(s.flagName, template, tokenActorUuids)\r\n}\r\nconst setTemplateAttachment = async (args, token) => {\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\treturn template\r\n}\r\nconst whenDeleted = async (template) => {\r\n\tsetAuraEffectUpdatesWhenDeleted(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\ttemplate\r\n\t)\r\n}\r\nconst whenEntered = async (template, token) => {\r\n\tsetAuraEffectsWhenEntered(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\tgetEffectData, \r\n\t\ttemplate, \r\n\t\ttoken\r\n\t)\r\n}\r\nconst whenLeft = async (template, token) => {\r\n\tsetAuraEffectsWhenLeft(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\ttemplate, \r\n\t\ttoken\r\n\t)\r\n}\r\nconst whenMoved = async (template) => {\r\n\tconst dispositions = [-1, 0, 1]\r\n\tupdateAuraWhenMoved(\r\n\t\tdispositions, \r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\tgetEffectData, \r\n\t\ttemplate\r\n\t)\r\n}\r\n\r\nexport const insectCloud = {\r\n\tcheckAttackerVision,\r\n\tcheckDefenderVision,\r\n\tonUse,\r\n\twhenDeleted,\r\n\twhenEntered,\r\n\twhenLeft,\r\n\twhenMoved\t\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const ringOfSpellStoring = {\r\n\taddSpellErr:\t\t\"Your Ring of Spell Storing doesn't have enough room left for a spell!\",\r\n\tcastSpellErr:\t\t\"Your Ring of Spell Storing doesn't have any spells on it!\",\t\r\n\tcastSpellHeader:\t\"Which spell do you wan to cast?\",\r\n\tcharHeader: \t\t\"Who is casting onto the ring?\",\r\n\tcurrSpellBank:\t\t\"Current Spell Bank\",\r\n\tdescLevel: \t\t\t\", Level \",\r\n\tcharnamesExceptions:[\"Shadowfell Vine Strike\", \"Necrotic Blast\", \"Summon Shadow Clone\", \"Animate Shadow Servant\", \"Mud\", \"Taunt\"],\r\n\tinitChoices:\t\t[\"Add Spells\", \"Cast Spell\", \"Empty Spells\"],\r\n\tinitHeader: \t\t\"What do you want to cast?\",\r\n\tlevelHeader:\t\t\"What level spell do you want to add?\",\r\n\tlevelLabels:\t\t[\"One\", \"Two\", \"Three\", \"Four\", \"Five\"],\r\n\tspellHeader:\t\t\"Which spell is being cast onto the ring?\",\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tinstrumentSpellNames: {\r\n\t\tanstruthHarp: \t\t[\"Control Weather\", \"Cure Wounds\", \"Wall of Thorns\"],\r\n\t\tcanaithMandolin: \t[\"Cure Wounds\", \"Dispel Magic\", \"Protection from Energy (Lightning)\"],\r\n\t\tcliLyre: \t\t\t[\"Stone Shape\", \"Wall of Fire\", \"Wind Wall\"],\r\n\t\tdossLute: \t\t\t[\"Animal Friendship\", \"Protection from Energy (Fire)\", \"Protection from Poison\"],\r\n\t\tfochlucanBandore: \t[\"Entangle\", \"Faerie Fire\", \"Shillelagh\", \"Speak with Animals\"],\r\n\t\tgeneric: \t\t\t[\"Fly\", \"Invisibility\", \"Levitate\", \"Protection from Evil and Good\"],\r\n\t\tmacFuirmidhCittern: [\"Barkskin\", \"Cure Wounds\", \"Fog Cloud\"],\r\n\t\tollamhHarp: \t\t[\"Confusion\", \"Control Weather\", \"Fire Storm\"]\r\n\t},\r\n\tinitHeader: \t\t\t\"Choose a spell to cast!\"\r\n}\r\n\r\nexport const spellScroll = {\r\n\tlabels:\t\t\t\t\t[\"Spell Scroll:\", \"Spellwrought Tattoo:\"],\r\n\tinitHeader:\t\t\t\t\"Which Type of Item?\"\r\n}\r\n\r\nexport const staffOfSwarmingInsects = {\r\n\tallChoices: \t\t\t[\"Giant Insect\", \"Insect Cloud\", \"Insect Plague\", \"Melee (1h)\", \"Melee (2h)\"],\r\n\tdamageWeaponName:\t\t\"Staff of Swarming Insects - Damage\",\r\n\tflagName:\t\t\t\t\"staffOfSwarmingInsects\",\r\n\tinitHeader: \t\t\t\"What do you want to do?\",\r\n\tmeleeChoices: \t\t\t[\"Melee (1h)\", \"Melee (2h)\"],\r\n\tspellNames: \t\t\t[\"Giant Insect\", \"Insect Cloud\", \"Insect Plague\"],\r\n}","import {deleteTempItem as deleteItem, getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {instrumentOfTheBards as s} from \"../../strings/items.js\"\r\n\r\nconst castSpell = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst updates = await createCastWorkflow(spell, instrument, tokenActor, chosenIndex)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst [tempItem] = await createTempItem(spell, instrument, tokenActor, chosenIndex)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spell.activation)\r\n\tconst itemData = await getTempSpellItem(spell, instrument, updatedMacroNames, chosenIndex)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data, setDeleteItemFlags)\r\n}\r\nconst getCureWoundsData = async (spell, instrument) => {\r\n\tif (instrument.type == \"anstruthHarp\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [5, [\"5d8 + @mod\", \"healing\"]]\r\n\t} else if (instrument.type == \"canaithMandolin\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [3, [\"3d8 + @mod\", \"healing\"]]\r\n\t} else {\r\n\t\treturn [spell.system.level, spell.system.damage.parts]\r\n\t}\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getInstrumentSpells = async (instrument) => {\r\n\t//keeping this for reference\r\n\tswitch(instrument) {\r\n\t\tcase \"anstruthHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Control Weather\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Wall of Thorns\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"canaithMandolin\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Cure Wounds\", \r\n\t\t\t\t\"Dispel Magic\",\r\n\t\t\t\t\"Protection from Energy (Lightning)\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"cliLyre\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Stone Shape\", \r\n\t\t\t\t\"Wall of Fire\",\r\n\t\t\t\t\"Wind Wall\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"dossLute\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Animal Friendship\", \r\n\t\t\t\t\"Protection from Energy (Fire)\",\r\n\t\t\t\t\"Protection from Poison\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"fochlucanBandore\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Entangle\", \r\n\t\t\t\t\"Faerie Fire\",\r\n\t\t\t\t\"Shillelagh\",\r\n\t\t\t\t\"Speak with Animals\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"macFuirmidhCittern\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Barkskin\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Fog Cloud\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"ollamhHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Confusion\", \r\n\t\t\t\t\"Control Weather\",\r\n\t\t\t\t\"Fire Storm\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\treturn spell.img\r\n}\r\nconst getSpellsToCast = async (item, type) => {\r\n\tconst spellNames = [...s.instrumentSpellNames[\"generic\"], ...s.instrumentSpellNames[type]].sort()\r\n\tconst spellData = spellNames.map((name, i) => {\r\n\t\treturn {\"name\": name, id: i}\r\n\t}).filter(spell => item.flags.charname.instrumentOfTheBards.spells[spell.id].isCharged)\r\n\tconst spells = spellData.map(spell => game.items.find(item => item.name.toLowerCase() == spell.name.toLowerCase()))\t\r\n\tconst filteredSpellNames = spells.map(spell => spell.name)\r\n\treturn [spellData, spellNames, filteredSpellNames, spells]\r\n}\r\nconst getTempSpellItem = async (spell, instrument, updatedMacroNames, chosenIndex) => {\r\n\tconst [level, damage] = await getCureWoundsData(spell, instrument)\r\n\treturn mergeObject(duplicate(spell.toObject(false)), {\r\n\t\t\"flags.charname.instrumentOfTheBards.originInstrumentUuid\": instrument.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.originName\": spell.name,\r\n\t\t\"flags.charname.instrumentOfTheBards.originUuid\": spell.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.type\": \"spell\",\r\n\t\t\"flags.charname.instrumentOfTheBards.spellIndex\": chosenIndex,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.damage.parts\": damage,\r\n\t\t\"system.level\": level,\t\t\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.instrumentOfTheBards.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst main = async ({actor, args, token}) => {\r\n\t//\r\n}\r\nconst removeSpells = async (actor, instrument) => {\r\n\t//this erased everything on Nora lol\r\n\t\r\n\treturn Promise.all(actor.items.filter(item => {\r\n\t\tconst originName = item.flags?.charname?.instrumentOfTheBards?.originName ?? null\r\n\t\treturn instrument.spells.filter(spell => spell.name == originName).length > 0\r\n\t}).map(item => item.delete()))\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst instrument = await fromUuid(tempItem.flags.charname.instrumentOfTheBards.originInstrumentUuid)\r\n\tconst index = tempItem.flags.charname.instrumentOfTheBards.spellIndex\r\n\tupdateDeleteItemFlags(instrument, index)\r\n}\r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst updateDeleteItemFlags = async (instrument, index) => {\r\n\tconst updates = instrument.flags.charname.instrumentOfTheBards.spells.map((spell, i) => {\r\n\t\tif (i == index) {\r\n\t\t\treturn {name: spell.name, isCharged: false}\r\n\t\t} else {\r\n\t\t\treturn spell\r\n\t\t}\r\n\t})\r\n\tconst flaggedItem = await instrument.update({\r\n\t\t\"flags.charname.instrumentOfTheBards.spells\": updates\r\n\t})\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\tif (type == \"spell\") return false\t\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\t\t\r\n\tconst [spellData, spellNames, filteredSpellNames, spells] = await getSpellsToCast(liveItem, type)\r\n\tconst choice = await getDialogueButtonType(filteredSpellNames, {width: filteredSpellNames.length * 150, height: \"100%\"}, s.initHeader, getSpellIconPaths, 60, 60, spells)\r\n\tconst spell = spells.find(spell => spell.name == choice.value)\r\n\tconst chosenIndex = spellNames.indexOf(choice.value)\r\n\tcastSpell(spell, liveItem, tokenActor, chosenIndex)\t\r\n}\r\nconst onNewDay = async (actor, data) => {\r\n\tif (!data.newDay) return false\r\n\tconst instruments = actor.items.filter(item => {\r\n\t\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\t\treturn type != \"spell\"\r\n\t}) \r\n\trefreshInstruments(instruments)\r\n}\r\nconst refreshInstruments = async (instruments) => {\r\n\tinstruments.forEach(instrument => {\r\n\t\tconst spells = instrument.flags.charname.instrumentOfTheBards.spells\r\n\t\tconst update = spells.map(spell => {\r\n\t\t\tspell.isCharged = true\r\n\t\t\treturn spell\r\n\t\t})\r\n\t\tinstrument.update({\"flags.charname.instrumentOfTheBards.spells\": update})\r\n\t})\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tdeleteTempItem,\r\n\tonUse,\r\n\tonNewDay\r\n}","const getActorChoices = () => {\r\n\tconst activeUsers = game.users.filter(u => u.active && !u.isGM)\r\n\tconst actorsWithPlayerOwners = game.actors.filter(a => a.hasPlayerOwner == true)\r\n\treturn actorsWithPlayerOwners.filter(a => activeUsers.find(u => { \r\n\t\treturn a.ownership[u.id] == 3\r\n\t}))\r\n}\r\nconst getChoices = async (actors) => {\r\n\tconst actorContent = await getContent(actors)\r\n\treturn await Dialog.wait({\r\n\t\ttitle: 'LMRTFY Parameters',\r\n\t\tcontent: `\r\n\t\t\t<form class=\"flexcol\" name=\"charname_lmrtfy\">\r\n\t\t\t\t${actorContent}\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label for=\"advantage\">Advantage:</label>\r\n\t\t\t\t\t<select name=\"advantage\">\r\n\t\t\t\t\t<option value=\"0\">None</option>\r\n\t\t\t\t\t<option value=\"1\">Advantage</option>\r\n\t\t\t\t\t<option value=\"2\">Disadvantage</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label for=\"passive\">Passive Floor:</label>\r\n\t\t\t\t\t<select name=\"passive\">\r\n\t\t\t\t\t<option value=\"0\">Off</option>\r\n\t\t\t\t\t<option value=\"1\">On</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label for=\"take10\">Can Take 10:</label>\r\n\t\t\t\t\t<select name=\"take10\">\r\n\t\t\t\t\t<option value=\"false\">No</option>\r\n\t\t\t\t\t<option value=\"true\">Yes</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t`,\r\n\t\tbuttons: {\r\n\t\t\tenter: {\r\n\t\t\t\ticon: '<i class=\"fas fa-check\"></i>',\r\n\t\t\t\tlabel: 'Confirm',\r\n\t\t\t\tcallback: (html) => {\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\tactors.map(a => {\r\n\t\t\t\t\t\t\tconst name = a.name\t\r\n\t\t\t\t\t\t\treturn [\r\n\t\t\t\t\t\t\t\ta.name, \r\n\t\t\t\t\t\t\t\ta.id, \r\n\t\t\t\t\t\t\t\thtml.find(`[name=\"${name}\"]`)[0].checked == true\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}), \r\n\t\t\t\t\t\thtml.find(`[name=\"advantage\"]`).val(),\r\n\t\t\t\t\t\thtml.find(`[name=\"passive\"]`).val(),\r\n\t\t\t\t\t\thtml.find(`[name=\"take10\"]`).val()\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tdefault: 'enter',\r\n\t\tclose: () => {}\r\n\t})\r\n}\r\nconst getContent = async (actors) => {\r\n\treturn actors.reduce((choices, actor) => {\t\r\n\t\tconst choice = actor.name \r\n\t\treturn choices + \r\n\t\t    `<div class=\"form-group\">\r\n\t\t\t\t<label for=\"${choice}\">${choice}</label>\r\n\t\t\t\t<input name=\"${choice}\" label=\"${choice}\" type=\"checkbox\">\r\n\t\t\t</div>`\r\n\t}, ``)\r\n}\r\nconst getData = (abilities, skills, title, canFailChecks, actorIds, advantage, allowsTake10, customPageId, pageName, passiveFloor) => {\r\n\tconst advInt = parseInt(advantage)\r\n\tconst canFail = passiveFloor == 1 ? false : canFailChecks \r\n\tlet messageArr = pageName.split(\" \")\r\n\tmessageArr.shift()\r\n\tconst message = messageArr.join(\" \")\r\n\t//as far as I can tell, there's no way to make the fail roll options not show up without disabling them completely\r\n\t//leaving code since I may end up expanding this to no longer use lmrtfy soon \r\n\treturn {\r\n\t\t\"user\": \"character\",\r\n\t\t\"actors\": actorIds,\r\n\t\t\"abilities\": abilities,\r\n\t\t\"saves\": [],\r\n\t\t\"skills\": skills,\r\n\t\t\"advantage\": advInt,\r\n\t\t\"mode\": \"publicroll\",\r\n\t\t\"title\": title,\r\n\t\t\"message\": message,\r\n\t\t\"formula\": \"\",\r\n\t\t\"deathsave\": false,\r\n\t\t\"initiative\": false,\r\n\t\t\"tables\": [],\r\n\t\t\"chooseOne\": true,\r\n\t\t\"canFailChecks\": true\r\n\t}\t\r\n}\r\nconst getHookData = async (abilities, skills, title, canFailChecks, choices, customPageId, pageName) => {\r\n\tconst [actorChoices, advantage, passiveFloor, allowsTake10] = choices\r\n\tconst actorIds = actorChoices.filter(c => c[2]).map(c => c[1])\r\n\tconst data = getData(abilities, skills, title, canFailChecks, actorIds, advantage, allowsTake10, customPageId, pageName, passiveFloor)\r\n\tconst request = await game.socket.emit('module.lmrtfy', data)\r\n\treturn [actorIds, allowsTake10, data, passiveFloor, request]\r\n}\r\nconst getSessionData = (message, rollId) => {\r\n\tconst sessionId = \"lmrtfy_\" + rollId\r\n\tconst sessionOld = sessionStorage.getItem(sessionId) ?? \"\"\r\n\tconst split = sessionOld.split(\",\")\r\n\tconst sessionSet = new Set(split)\r\n\tconst sessionNew = sessionSet.add(message.speaker.actor)\r\n\treturn [sessionId, sessionNew]\r\n}\r\nconst main = async ([abilities, skills, title, canFailChecks, outcomes, pageName]) => {\r\n\tconst customPageId = pageName.split(\" \")[1]\r\n\tconst actorChoices = await getActorChoices()\r\n\tif (actorChoices.length < 1) return false\r\n\tconst choices = await getChoices(actorChoices)\r\n\tconst [actorIds, allowsTake10, data, passiveFloor, request] = await getHookData(abilities, skills, title, canFailChecks, choices, customPageId, pageName)\r\n\tsetHooks(actorIds, allowsTake10, data, outcomes, pageName, passiveFloor, request.id) \r\n}\r\nconst sendChatMessages = (content, userId) => {\r\n\tconsole.log(\"userId\")\r\n\tconsole.log(userId)\r\n\tconst userName = (game.users.find(user => user.id == userId)).name\r\n\tChatMessage.create({\r\n\t\tcontent: content,\r\n\t\twhisper: ChatMessage.getWhisperRecipients(userName),\r\n\t})\r\n}\r\nconst setHooks = async (actorIds, allowsTake10, data, outcomes, pageName, passiveFloor, rollId) => {\r\n\tconst date = new Date()\r\n\tconst time = date.getTime()\r\n\tlet messageArr = pageName.split(\" \")\r\n\tmessageArr.shift()\r\n\tconst ourMessage = messageArr.join(\" \")\t\r\n\tconst messageHookId = Hooks.on(\"createChatMessage\", (message, config, userId) => {\t\t\r\n\t\tconst lmrtfyMessage = message?.flags?.lmrtfy?.message ?? false\r\n\t\tif (!lmrtfyMessage) return false\r\n\t\t//give the players 30 seconds to answer the roll request or the request becomes invalid\r\n\t\tif (\r\n\t\t\tlmrtfyMessage == ourMessage\r\n\t\t\t&& data.skills.find(s => s == message.flags.dnd5e.roll.skillId) \r\n\t\t\t//leaving out saving throws for now b/c I'd rather use item/trap macros for that\r\n\t\t\t&& [\"check\", \"skill\"].includes(message.flags.dnd5e.roll.type)\r\n\t\t\t&& actorIds.includes(message.speaker.actor)\r\n\t\t) {\r\n\t\t\tconst [sessionId, sessionNew] = getSessionData(message, rollId)\r\n\t\t    updatePages(allowsTake10, data, message, message.user.id, outcomes, passiveFloor)\r\n\t\t\tif (sessionNew.size - 1 == actorIds.length\r\n\t\t\t\t|| time < message.timestamp - 30000\r\n\t\t\t) {\r\n\t\t\t\tHooks.off(\"createChatMessage\", messageHookId)\r\n\t\t\t\tsessionStorage.removeItem(sessionId)\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\tconst sessionUpdate = Array.from(sessionNew).join(\",\")\r\n\t\t\tsessionStorage.setItem(sessionId, sessionUpdate)\r\n\t\t}\r\n\t})\t\r\n}\r\nconst updateOwnership = (outcome, userId) => {\r\n\tgame.journal.forEach(e => e.pages.forEach(p => {\r\n\t\tconst pageId = p.name.split(\" \")[0]\r\n\t\tif (pageId == outcome.journalPageId) {\r\n\t\t\tlet ownership = p.ownership\t\r\n\t\t\townership[userId] = 2\r\n\t\t\tp.update({\"ownership\": ownership})\r\n\t\t\tsendChatMessages(p.text.content, userId)\r\n\t\t}\r\n\t}))\r\n}\r\nconst updatePages = (allowsTake10, data, message, userId, outcomes, passiveFloor) => {\r\n\tconst actor = game.actors.find(a => a.id == message.speaker.actor)\t\r\n\toutcomes.forEach(oc => {\r\n\t\tconst passiveSkill = actor.system.skills[message.flags.dnd5e.roll.skillId].passive\r\n\t\tif (\r\n\t\t\t(oc.skills.find(s => s == message.flags.dnd5e.roll.skillId) \r\n\t\t\t&& message.rolls[0]._total >= oc.score)\r\n\t\t\t|| (oc.skills.find(s => s == message.flags.dnd5e.roll.skillId) \r\n\t\t\t\t&& passiveSkill >= oc.score \r\n\t\t\t\t&& passiveFloor == 1\r\n\t\t\t\t&& !allowsTake10)\r\n\t\t\t|| (oc.skills.find(s => s == message.flags.dnd5e.roll.skillId) \r\n\t\t\t\t&& passiveSkill >= oc.score \r\n\t\t\t\t&& allowsTake10\r\n\t\t\t\t&& message.rolls[0]._total < -40)\t\t\t\t\r\n\t\t\t|| (oc.items.length > 0 \r\n\t\t\t\t&& actor.items.find(item => oc.items.includes(item.name)))\r\n\t\t\t|| (oc.races.length > 0 \r\n\t\t\t\t&& oc.races.includes(actor.system.details.race))\r\n\t\t) { \r\n\t\t\tupdateOwnership(oc, userId) \r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport const lmrtfyJournal = {\r\n\t\"main\": main\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {protectionFromPoison as s} from \"../../strings/spells.js\"\r\nimport {getDialogueButtonType, removeEffect} from \"../../helper-functions.js\"\r\n\r\nconst getChoices = async (effects) => {\r\n\treturn effects.reduce((acc, effect, i) => {\r\n\t\t\tconst nameAlreadyUsed = acc.find(choice => choice.name == effect.name)\r\n\t\t\tconst name = nameAlreadyUsed ? effect.name + \"-\" + i : effect.name\r\n\t\t\tconst choice = {name: name, icon: effect.icon, uuid: effect.uuid}\r\n\t\t\treturn [...acc, choice]\r\n\t}, [])\r\n}\r\nconst getChosenEffect = async (effects) => {\r\n\tconst choices = await getChoices(effects)\t\t\r\n\tconst buttonNames = choices.map(choice => choice.name)\t\t\r\n\tconst initChoice = await getDialogueButtonType(buttonNames, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60, choices)\r\n\treturn choices.find(effect => effect.name == initChoice.value)\t\r\n}\r\nconst getInitIconPaths = (choice, effects) => {\r\n\tconst chosenEffect = effects.find(effect => effect.name == choice)\r\n\treturn chosenEffect.icon\r\n}\r\nconst getPoisonEffects = () => {\r\n\tconst target = game.user.targets.first()\r\n\treturn target.actor.effects.filter(effect => {\r\n\t\tconst hasPoisonedName = conditionLabels[\"poisoned\"].includes(effect.name.toLowerCase())\r\n\t\tconst hasPoisonedConditions = effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase()))\r\n\t\treturn hasPoisonedName || hasPoisonedConditions\r\n\t})\t\r\n}\r\nconst onUse = async ({item, workflow, args, token}) => {\r\n\tconst poisonEffects = await getPoisonEffects()\r\n\tif (poisonEffects.length > 0) {\r\n\t\tconst chosenEffect = await getChosenEffect(poisonEffects)\r\n\t\tawait removeEffect(chosenEffect.uuid)\t\r\n\t}\r\n}\r\nconst preTargetSave = async ({item, workflow, args}) => {\r\n\tconst hasPoison = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())))\r\n\tif (hasPoison) workflow.saveDetails.advantage = true\r\n}\r\n\r\nexport const protectionFromPoison = {\r\n\tonUse,\r\n\tpreTargetSave\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {ringOfSpellStoring as s} from \"../../strings/items.js\"\r\n\r\nconst addSpell = async (item, tokenActor) => {\r\n\tconst notification = await setAddSpellNotification(item)\r\n\tif (notification) return false\r\n\tconst updates = await getAddSpellUpdates(item, tokenActor)\r\n\tsetAddSpellUpdates(item, updates, tokenActor)\r\n}\r\nconst castSpell = async (item, tokenActor) => {\r\n\tconst updates = await createCastWorkflow(item, tokenActor)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nconst createCastWorkflow = async (item, tokenActor) => {\r\n\tconst spellData = await getSpellToCast(item)\t\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, item)\r\n\tawait setPreUseItemHooks(tempItem, spellData)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, item)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spellData, tokenActor, liveItem) => {\r\n\tconst sourceItem = await fromUuid(spellData.uuid)\t\r\n\tconst sourceMacroNames = await getSourceMacroNames(sourceItem)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spellData.activation)\r\n\tconst itemData = await getTempItem(liveItem, sourceItem, spellData, updatedMacroNames)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async ({args, item, workflow}) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tawait setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nconst getAddCharChoice = async (eligibleSpellsByChar) => {\r\n\tconst charChoices = eligibleSpellsByChar.map(character => character.origin).toSorted()\t\r\n\treturn await getDialogueButtonType(charChoices, {width: 400, height: 150}, s.charHeader, getCharIconPaths, 60, 60, eligibleSpellsByChar)\r\n}\r\nconst getAddLevelChoice = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst levelChoices = await getLevelChoices(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst levelChoice = await getDialogueButtonType(levelChoices, {width: 400, height: 150}, s.levelHeader, getLevelIconPaths, 60, 60)\r\n\t//return value as int\r\n\treturn {value: s.levelLabels.indexOf(levelChoice.value) + 1}\r\n}\r\nconst getAddSpellChoice = async (charChoice, eligibleSpellsByChar, levelChoice) => {\r\n\tconst [spellChoices, spellIcons] = await getSpellChoices(charChoice, eligibleSpellsByChar, levelChoice)\r\n\treturn await getSpellChoice(spellChoices, s.spellHeader, getSpellIconPaths, spellIcons)\t\r\n}\r\nconst getAddSpellChoices = async (eligibleSpellsByChar, item, tokenActor) => {\r\n\tconst charChoice = await getAddCharChoice(eligibleSpellsByChar)\r\n\tconst levelChoice = await getAddLevelChoice(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst spellChoice = await getAddSpellChoice(charChoice, eligibleSpellsByChar, levelChoice.value)\r\n\treturn [charChoice.value, levelChoice.value, spellChoice.value]\r\n}\r\nconst getAddSpellUpdates = async (item, tokenActor) => {\r\n\tconst actors = await getLiveActors()\r\n\tconst eligibleSpellsByChar = await getEligibleSpells(actors)\t\r\n\tconst choices = await getAddSpellChoices(eligibleSpellsByChar, item, tokenActor)\t\r\n\treturn [choices, eligibleSpellsByChar]\r\n}\r\nconst getAttackBonus = (actor, item, ability) => {\r\n\tconst isRangedAttack = item.system.actionType == \"rsak\"\r\n\tconst isMeleeAttack = item.system.actionType == \"msak\"\r\n\tif (!isRangedAttack && !isMeleeAttack) {\r\n\t\treturn 0\r\n\t} else if (isRangedAttack) {\t\t\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.rsak.attack)\r\n\t} else if (isMeleeAttack) {\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.msak.attack)\r\n\t}\r\n}\r\nconst getCharIconPaths = (choice, iconData) => {\t\r\n\tconst match = iconData.find(item => item.origin == choice)\r\n\treturn match.icon\r\n}\r\nconst getDeleteItemFlagData = async (liveItem, tempItem) => {\r\n\tconst spellData = tempItem.flags.charname.ringOfSpellStoring.spellData\r\n\tconst spells = liveItem.flags.charname.ringOfSpellStoring.spells\t\r\n\tconst slotsUsed = liveItem.flags.charname.ringOfSpellStoring.slotsUsed\r\n\tconst usedSpell = spells.find(spell => {\r\n\t\treturn spell.level == spellData.level\r\n\t\t\t&& spell.name == spellData.name \r\n\t\t\t&& spell.dc == spellData.dc \r\n\t\t\t&& spell.ability == spellData.ability\r\n\t})\t\r\n\tconst deleteIndex = spells.indexOf(usedSpell)\r\n\treturn [deleteIndex, slotsUsed, spells, usedSpell.level]\r\n}\r\nconst getDeleteItemFlagUpdates = async (liveItem, tempItem) => {\r\n\tconst [deleteIndex, slotsUsed, spells, usedSpellLevel] = await getDeleteItemFlagData(liveItem, tempItem)\r\n\tconst newSlotsUsed = slotsUsed - usedSpellLevel\r\n\tconst newSpells = spells.filter((spell, i) => i != deleteIndex)\t\r\n\treturn [newSlotsUsed, newSpells]\r\n}\r\nconst getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nconst getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getEligibleLevelSpells = (actor, item) => {\r\n\tconst highestSpellLevel = getHighestSpellLevel(actor.system.spells)\r\n\tconst mode = item.system.preparation.mode\r\n\tlet eligibleLevelSpells = []\r\n\tlet spellData = {}\r\n\tfor (let i = item.system.level; i <= 5; i ++) {\r\n\t\tif (mode == \"atwill\" || mode == \"innate\") {\t\t\t\t\r\n\t\t\tif (i == item.system.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, item.system.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else if (mode == \"pact\") {\r\n\t\t\tif (i == actor.system.spells.pact.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, actor.system.spells.pact.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (i <= highestSpellLevel) {\r\n\t\t\t\tspellData = getSpellData(actor, item, i)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\t\t\r\n\treturn eligibleLevelSpells\r\n}\r\nconst getEligibleSpells = async (actors) => {\r\n\treturn actors.map(actor => {\r\n\r\n\t\tconst eligibleSpells = actor.items.filter(item => item.type == \"spell\" && item.system.level > 0 && item.system.level <= 5)\t\r\n\t\tconst actorSpells = eligibleSpells.reduce((spells, spell) => {\r\n\t\t\tconst eligibleLevelSpells = getEligibleLevelSpells(actor, spell)\r\n\t\t\treturn [...spells, ...eligibleLevelSpells]\r\n\t\t}, [])\r\n\t\treturn {origin: actor.prototypeToken.name, icon: actor.prototypeToken.texture.src, spells: actorSpells}\r\n\t})\r\n}\r\nconst getHighestSpellLevel = (spells) => {\r\n\tlet arr = []\r\n\tlet label\r\n\tfor (let i = 1; i <= 9; i++) {\r\n\t\tlabel = \"spell\" + i\r\n\t\tif (spells[label].max > 0) arr.push(i)\r\n\t}\r\n\treturn Math.max(...arr)\r\n}\r\nconst getInitIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.initChoices[0]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-diamond-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[1]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-pentagon-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[2]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-glowing-triangle-teal-purple.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst getLevelChoices = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst slotsRemaining = 5 - item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\r\n\tconst eligibleLevels = character.spells.map(spell => spell.level).filter(level => level <= slotsRemaining)\r\n\tconst spellLevels = new Set(eligibleLevels)\t\t\t\r\n\treturn Array.from(spellLevels).toSorted().map(level => s.levelLabels[level - 1])\r\n}\r\nconst getLevelIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.levelLabels[0]:\r\n\t\t\treturn \"icons/skills/ranged/target-bullseye-archer-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[1]:\r\n\t\t\treturn \"icons/skills/melee/weapons-crossed-daggers-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[2]:\r\n\t\t\treturn \"icons/skills/ranged/arrows-triple-yellow-red.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[3]:\r\n\t\t\treturn \"icons/skills/ranged/shuriken-thrown-yellow.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[4]:\r\n\t\t\treturn \"icons/skills/ranged/daggers-thrown-salvo-orange.webp\"\r\n\t\t\tbreak\t\t\t\t\r\n\t}\t\r\n}\r\nconst getLiveActors = async () => {\r\n\treturn game.users.filter(user => user.character).filter(user => {\r\n\t\treturn canvas.scene.tokens.find(token => token.actor.uuid == user.character.uuid)\r\n\t}).map(user => user.character)\r\n}\r\nconst getNewSlotsUsed = async(item, level) => {\r\n\tconst slots = item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\treturn slots + level\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellChoice = async (spellChoices, spellHeader, getSpellIconPaths, spellIcons) => {\r\n\tconst sortedChoices = spellChoices.toSorted()\r\n\tconst radioSelections = sortedChoices.map(choice => {\r\n\t\tconst data = spellIcons.find(spell => spell.name == choice)\r\n\t\tconst icon = data.icon\r\n\t\tconst label = `<img align=left src=${icon} width=\"15\" height=\"15\" style=\"border:0px\">${choice}`\r\n\t\treturn {type: \"radio\", label}\r\n\t})\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: radioSelections\r\n\t\t},{\r\n\t\t\ttitle: spellHeader,\r\n\t\t\trender: (...args) => {},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn {value: sortedChoices[choices.inputs.indexOf(true)]}\r\n}\r\nconst getSpellChoices = async (charChoice, eligibleSpellsByChar, levelChoiceInt) => {\t\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\t\r\n\tconst spells = character.spells.filter(spell => spell.level == levelChoiceInt && !s.charnamesExceptions.includes(spell.name))\r\n\tconst names = spells.map(spell => spell.name)\r\n\tconst icons = spells.map(spell => { return {name: spell.name, icon: spell.icon} })\r\n\treturn [names, icons]\r\n}\r\nconst getSpellData = (actor, item, i) => {\r\n\tconst name = item.name\r\n\tconst level = i\r\n\tconst dc = actor.system.attributes.spelldc\r\n\tconst ability = actor.system.attributes.spellcasting\r\n\tconst attackBonus = getAttackBonus(actor, item, ability)\r\n\tconst prof = actor.system.attributes.prof\t\r\n\tconst icon = item.img\r\n\tconst uuid = item.uuid\r\n\tconst activation = item.system.activation.type\r\n\tconst originUuid = actor.uuid\r\n\treturn {name, level, dc, ability, attackBonus, prof, icon, uuid, activation, originUuid}\r\n}\r\nconst getSpellIconPaths = (choice, iconData) => {\r\n\tconst match = iconData.find(item => item.name == choice)\r\n\treturn match.icon\t\r\n}\r\nconst getSpellToCast = async (item) => {\r\n\tconst spells = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tif (spells.length < 1) {\r\n\t\tui.notifications.info(s.castSpellErr)\r\n\t\treturn false\t\t\r\n\t}\t\r\n\tconst uniqueSpells = new Set(spells)\r\n\tconst spellsArr = Array.from(uniqueSpells)\r\n\tconst spellNames = spellsArr.map(spell => spell.name).toSorted()\r\n\tconst chosenSpell = await getDialogueButtonType(spellNames, {width: 400, height: \"100%\"}, s.castSpellHeader, getSpellIconPaths, 60, 60, spellsArr)\r\n\treturn spellsArr.find(spell => spell.name == chosenSpell.value)\r\n}\r\nconst getTempItem = async (liveItem, sourceItem, spellData, updatedMacroNames) => {\r\n\treturn mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\timg: liveItem.img,\r\n\t\t\"flags.charname.ringOfSpellStoring.ringUuid\": liveItem.uuid,\r\n\t\t\"flags.charname.ringOfSpellStoring.spellData\": spellData,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.ability\": \"none\",\r\n\t\t\"system.attackBonus\": spellData.attackBonus,\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t\t\"system.save.dc\": spellData.dc,\r\n\t\t\"system.save.scaling\": \"flat\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedDescription = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spells = item.flags.charname.ringOfSpellStoring.spells.reduce((spells, spell) => {\r\n\t\tconst newSpell = [\"<br />\" + spell.name + s.descLevel + spell.level]\r\n\t\treturn [...spells, ...newSpell]\r\n\t}, []).toSorted()\t\t\r\n\tconst newSpells = spells.reduce((descs, desc) => {\r\n\t\treturn descs + desc\r\n\t}, \"\")\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\r\n\tconst sanitizedDesc = desc.replace(spellBankStr, \"\")\t\r\n\treturn sanitizedDesc + \"<br />*******<br />\" + s.currSpellBank + \":<br />\" + newSpells + \"<br />*******\"\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.ringOfSpellStoring.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst getUpdateRingData = async (charName, eligibleSpellsByChar, item, level, spellName) => {\r\n\tconst chr = eligibleSpellsByChar.find(chr => chr.origin == charName)\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tconst newSlotsUsed = await getNewSlotsUsed(item, level)\r\n\tconst chosenSpell = [chr.spells.find(spell => spell.name == spellName && spell.level == level)]\t\t\r\n\tconst newSpellData = [...spellData, ...chosenSpell]\t\r\n\treturn [chosenSpell, newSlotsUsed, newSpellData]\r\n}\r\nconst main = async ({args, item}) => {\r\n\tconst initChoice = await getDialogueButtonType(s.initChoices, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\r\n\tif (initChoice.value == s.initChoices[0]) {\r\n\t\taddSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[1]) {\r\n\t\tcastSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[2]) {\r\n\t\tresetSpells(liveItem, tokenActor)\r\n\t}\r\n}\r\nconst resetSpells = async (item, tokenActor) => {\r\n\tsetResetSpellsDesc(item)\r\n\tconst tempItems = tokenActor.items.filter(item => item.flags?.charname?.ringOfSpellStoring?.ringUuid ?? false)\r\n\ttempItems.map(item => item.delete())\r\n}\r\nconst setAddSpellNotification = async (item) => {\r\n\tif (item.flags.charname.ringOfSpellStoring.slotsUsed == 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\t\r\n}\r\nconst setAddSpellUpdates = async (item, updates, tokenActor) => {\r\n\tconst [choices, eligibleSpellsByChar] = updates\r\n\tconst [spellData] = await updateRingItem(item, choices, eligibleSpellsByChar)\t\r\n\tif (spellData.activation == \"reaction\") setReactionUpdates(spellData, tokenActor, item)\t\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst liveItem = await fromUuid(tempItem.flags.charname.ringOfSpellStoring.ringUuid)\r\n\tconst updates = await getDeleteItemFlagUpdates(liveItem, tempItem)\r\n\tupdateDeleteItemFlags(liveItem, updates)\r\n}\r\nconst setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst setPreUseItemHooks = async (item, spellData) => {\r\n\tHooks.once(\"dnd5e.preUseItem\", (useItem, config) => {\r\n\t\tif (item.uuid != useItem.uuid) return false\t\r\n\t\tconfig.consumeResource = false\r\n\t\tconfig.consumeSpellSlot = false\r\n\t\tconfig.consumeUsage = false\r\n\t\tconfig.slotLevel = spellData.level\t\r\n\t\tconfig.system.prof._baseProficiency = spellData.prof\t\t\t\r\n\t})\t\t\r\n}\r\nconst setReactionHook = async ({item}) => {\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spellData ?? false\r\n\tif (!spellData) return false\r\n\tsetPreUseItemHooks(item, spellData)\r\n}\r\nconst setReactionUpdates = async (spellData, tokenActor, liveItem) => {\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, liveItem)\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n}\r\nconst setResetSpellsDesc = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\t\r\n\tconst updatedStr = \"<br />*******<br />\" + s.currSpellBank + \":<br /><br />*******\"\r\n\tconst updatedDesc = desc.replace(spellBankStr, updatedStr)\t\r\n\titem.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": [],\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": 0,\r\n\t\t\"system.description.value\": updatedDesc\r\n\t})\t\t\r\n}\r\nconst setRingUpdates = async (chosenSpell, item, newSlotsUsed, newSpellData) => {\r\n\tconst flagUpdate = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpellData,\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed\r\n\t})\t\r\n\tconst updatedDescription = await getUpdatedDescription(item)\t\r\n\tconst descUpdate = await item.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\r\n}\r\nconst setRingUpdatesNotification = async (item, level) => {\r\n\tconst slots = await getNewSlotsUsed(item, level)\r\n\tif (slots > 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\r\n\treturn false\r\n}\r\nconst updateDeleteItemFlags = async (item, updates) => {\r\n\tconst [newSlotsUsed, newSpells] = updates\r\n\tconst flaggedItem = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed,\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpells\r\n\t})\r\n\tconst updatedDescription = await getUpdatedDescription(flaggedItem)\t\r\n\tawait flaggedItem.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst updateRingItem = async (item, choices, eligibleSpellsByChar) => {\t\r\n\tconst [charName, level, spellName] = choices\r\n\tconst notification = await setRingUpdatesNotification(item, level)\r\n\tif (notification) return false\r\n\tconst [chosenSpell, newSlotsUsed, newSpellData] = await getUpdateRingData(charName, eligibleSpellsByChar, item, level, spellName)\r\n\tsetRingUpdates(chosenSpell, item, newSlotsUsed, newSpellData)\r\n\treturn chosenSpell\r\n}\r\n\r\nexport const ringOfSpellStoring = {\r\n\t\"main\": main,\r\n\t\"deleteTempItem\": deleteTempItem,\r\n\t\"setReactionHook\": setReactionHook\r\n}","import {spellScroll as s} from \"../../strings/items.js\"\r\nimport {getDialogueButtonType} from \"../../helper-functions.js\"\r\n\r\nconst checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nconst createCastWorkflow = async (item, tokenActor) => {\r\n\tconst {dc, attackBonus} = await getItemParams(item)\r\n\tconst spellData = {\r\n\t\tuuid: item.uuid,\r\n\t\tdc: dc,\r\n\t\tattackBonus: attackBonus,\r\n\t\tlevel: item.system.level, \r\n\t\tactivation: item.system.activation.type, \r\n\t\tprof: tokenActor.system.attributes.prof\r\n\t}\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, item)\r\n\tawait setPreUseItemHooks(tempItem, spellData)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, item)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createItem = async (item, config) => {\r\n\tconst label = await getLabel(item)\r\n\tif (item.name.slice(0,label.length) != label) return false\r\n\tconst defaultItem = game.items.find(defItem => \r\n\t\tdefItem.name == item.name.slice(label.length + 1)\r\n\t)\r\n\tconst liveItem = await fromUuid(item.uuid)\r\n\tconst initChoice = await getDialogueButtonType(s.labels, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60)\r\n\tconst type = initChoice.value == s.labels[0] ? s.labels[0] : s.labels[1]\r\n\tconst newLabel = initChoice.value + \" \" + defaultItem.name\r\n\tawait liveItem.update({\r\n\t\t\"name\": newLabel,\r\n\t\t\"flags.midi-qol.onUseMacroName\": \"function.CHARNAME.macros.spellScroll.onUse\",\r\n\t\t\"flags.autoanimations\": defaultItem.flags.autoanimations\r\n\t})\r\n}\r\nconst createTempItem = async (spellData, tokenActor, liveItem) => {\r\n\tconst sourceItem = await fromUuid(spellData.uuid)\t\r\n\tconst sourceMacroNames = await getSourceMacroNames(sourceItem)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spellData.activation)\r\n\tconst itemData = await getTempItem(liveItem, sourceItem, spellData, updatedMacroNames)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async ({args, item, workflow}) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nconst getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nconst getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getInitIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.labels[0]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-diamond-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.labels[1]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-pentagon-teal-purple.webp\"\r\n\t\t\tbreak\t\r\n\t}\r\n}\r\nconst getItemParams = async (item) => {\r\n\tconst level = item.system.level\r\n\tif (level == 0 || level == 1 || level == 2) {\r\n\t\treturn {dc: 13, attackBonus: 5}\r\n\t} else if (level == 3 || level == 4) {\r\n\t\treturn {dc: 15, attackBonus: 7}\r\n\t} else if (level == 5 || level == 6) {\r\n\t\treturn {dc: 17, attackBonus: 9}\r\n\t} else if (level == 7 || level == 8) {\r\n\t\treturn {dc: 18, attackBonus: 10}\r\n\t} else if (level == 9) {\r\n\t\treturn {dc: 19, attackBonus: 11}\r\n\t} else {\r\n\t\treturn {dc: 13, attackBonus: 5}\r\n\t}\r\n}\r\nconst getLabel = async (item) => {\r\n\tif (item.name.slice(0,s.labels[0].length) == s.labels[0]) {\r\n\t\treturn s.labels[0]\r\n\t} else if (item.name.slice(0,s.labels[1].length) == s.labels[1]) {\r\n\t\treturn s.labels[1]\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getTempItem = async (liveItem, sourceItem, spellData, updatedMacroNames) => {\r\n\treturn mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\timg: liveItem.img,\r\n\t\t\"flags.charname.spellScroll.ringUuid\": liveItem.uuid,\r\n\t\t\"flags.charname.spellScroll.spellData\": spellData,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.ability\": \"none\",\r\n\t\t\"system.attackBonus\": spellData.attackBonus,\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t\t\"system.save.dc\": spellData.dc,\r\n\t\t\"system.save.scaling\": \"flat\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.spellScroll.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.spellScroll.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.spellScroll.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst onUse = async ({args, item}) => {\r\n\tconst label = await getLabel(item)\r\n\tconst spell = game.items.find(spell => \r\n\t\tspell.name == item.name.slice(label.length + 1)\r\n\t)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst updates = await createCastWorkflow(spell, tokenActor)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {\r\n\t\tkey: \"flags.dae.deleteUuid\", \r\n\t\tmode: CONST.ACTIVE_EFFECT_MODES.ADD, \r\n\t\tvalue: [tempItem.uuid]\r\n\t}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst setPreUseItemHooks = async (item, spellData) => {\r\n\tHooks.once(\"dnd5e.preUseItem\", (useItem, config) => {\r\n\t\tif (item.uuid != useItem.uuid) return false\t\r\n\t\tconfig.consumeResource = false\r\n\t\tconfig.consumeSpellSlot = false\r\n\t\tconfig.consumeUsage = false\r\n\t\tconfig.slotLevel = spellData.level\t\r\n\t\tconfig.system.prof._baseProficiency = spellData.prof\t\t\t\r\n\t})\t\t\r\n}\r\nconst setReactionHook = async ({item}) => {\r\n\tconst spellData = item.flags?.charname?.spellScroll?.spellData ?? false\r\n\tif (!spellData) return false\r\n\tsetPreUseItemHooks(item, spellData)\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\n\r\nexport const spellScroll = {\r\n\tonUse,\r\n\tcreateItem,\r\n\tdeleteTempItem\r\n}","//refactor to import strings and merge them?\r\n//figure out if this can be a stand alone file somehow first \r\nexport const summonCelestial = {\r\n\tchoices:\t\t\t[\"Celestial Avenger\", \"Celestial Defender\"],\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Celestial/Solar_Large_Scale200_Celestial_A_11.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Celestial/Planetar_Large_Scale150_Celestial_11.webp\"\r\n\t\t\t\t\t\t],\t\r\n\texceptionActorNames:[\"Jakar\", \"Jakar (Test)\"],\r\n\tinitHeader:\t\t\t\"What do you want to summon?\",\r\n\tsequencerData:\t\t{\r\n\t\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\t\tcircleColor1: \"dark_purple\",\r\n\t\t\t\t\t\t\t\tcircleColor2: \"dark_purple\",\r\n\t\t\t\t\t\t\t\tcircleNum: \"02\",\r\n\t\t\t\t\t\t\t\timpactColor1: \"dark_purple\",\r\n\t\t\t\t\t\t\t\timpactColor2: \"dark_purple\",\r\n\t\t\t\t\t\t\t\tfadeIn: {ms: 400},\r\n\t\t\t\t\t\t\t\timpactNum1: \"011\",\r\n\t\t\t\t\t\t\t\timpactNum2: \"003\",\r\n\t\t\t\t\t\t\t\tscale: .15,\r\n\t\t\t\t\t\t\t\tschool: \"conjuration\",\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\tspawnNames:\t\t\t[\"Celestial Avenger Spirit\", \"Celestial Defender Spirit\"]\r\n}\r\nexport const summonDraconicSpirit = {\r\n\tcircleColors:\t\t[\"green\", \"blue\", \"red\", \"yellow\", \"green\", \"dark_purple\", \"dark_green\", \"pink\", \"dark_yellow\", \"yellow\"],\r\n\tchoices:\t\t\t[\"Chromatic Draconic Spirit\", \"Gem Draconic Spirit\", \"Metallic Draconic Spirit\"],\t\t\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"images/Tokens/Spirits/Spirit_Creatures/Young_Red_Dragon_Large_Scale200_Spirit_01.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Spirits/Spirit_Creatures/Young_Bronze_Dragon_Large_Scale200_Spirit_01.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Spirits/Spirit_Creatures/Young_Gold_Dragon_Large_Scale200_Spirit_01.webp\"\r\n\t\t\t\t\t\t],\t\r\n\texceptionActorNames:\"all\",\r\n\tinitHeader:\t\t\t\"Choose a draconic spirit to summon\",\r\n\timpactColors:\t\t[\"green\", \"blue\", \"01\", \"yellow\", \"green\", \"dark_purple\", \"green\", \"pinkpurple\", \"blue\", \"orange\"],\r\n\timpactNums:\t\t\t[\"003\", \"010\", \"fire\", \"011\", \"009\", \"003\", \"003\", \"003\", \"003\", \"003\"],\r\n\tresistChoices:\t\t[\"Acid\", \"Cold\", \"Fire\", \"Lightning\", \"Poison\", \"Force\", \"Necrotic\", \"Psychic\", \"Radiant\", \"Thunder\"],\r\n\tresistIcons:\t\t[\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-green.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-blue.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-red.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-blue-yellow.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-purple-pink.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-purple.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-green.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-purple-pink.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-blue-yellow.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-orange.webp\"\r\n\t\t\t\t\t\t],\r\n\tresistHeader:\t\t\"Choose your damage resist type\",\r\n\tresistValues:\t\t[\"acid\", \"cold\", \"fire\", \"lightning\", \"poison\", \"force\", \"necrotic\", \"psychic\", \"radiant\", \"thunder\"],\r\n\tspawnNames:\t\t\t[\"Chromatic Draconic Spirit\", \"Gem Draconic Spirit\", \"Metallic Draconic Spirit\"]\r\n}\r\nexport const summonElemental = {\r\n\tcircleColors:\t\t[\"yellow\", \"green\", \"yellow\", \"blue\"],\r\n\tchoices:\t\t\t[\"Air Elemental\", \"Earth Elemental\", \"Fire Elemental\", \"Water Elemental\"],\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Elemental/Air_Large_Elemental_01.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Elemental/Earth_Elemental_Large_Elemental_01.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Elemental/Fire_Elemental_Large_Elemental_A_01.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Elemental/Water_Large_Elemental_A_01.webp\"\r\n\t\t\t\t\t\t],\r\n\texceptionActorNames:\"all\",\t\t\t\t\t\t\r\n\timpactColors:\t\t[\"white\", \"orange\", \"01\", \"blue\"],\r\n\timpactNums:\t\t\t[\"009\", \"009\", \"fire\", \"009\"],\r\n\tinitHeader:\t\t\t\"What do you want to summon?\",\r\n\tspawnNames:\t\t\t[\"Air Elemental Spirit\", \"Earth Elemental Spirit\", \"Fire Elemental Spirit\", \"Water Elemental Spirit\"]\r\n}\r\nexport const summonUndead = {\r\n\tauraAbility:\t\t\"int\",\r\n\tauraName:\t\t\t\"Festering Aura\",\r\n\tauraTemplateSrc:\t\"modules/jb2a_patreon/Library/3rd_Level/Spirit_Guardians/SpiritGuardiansParticles_01_Light_Green_600x600.webm\",\r\n\tbaseHp:\t\t\t\t[30, 40],\r\n\tcircleColors:\t\t[\"dark_purple\", \"dark_purple\", \"dark_purple\"],\r\n\tchoices:\t\t\t[\"Ghostly\", \"Putrid\", \"Skeletal\"],\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"images/Tokens/My%20Heroes/jakar_clone.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/My%20Heroes/jakar_clone_green.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Adversaries/Skeletons/Skeleton_Caster_Robed_Hooded_03.webp\"\r\n\t\t\t\t\t\t],\r\n\texceptionActorNames:[\"Jakar\", \"Jakar (Test)\"],\r\n\timpactColors:\t\t[\"dark_purple\", \"dark_purple\", \"dark_purple\"],\r\n\timpactNums:\t\t\t[\"003\", \"003\", \"003\"],\r\n\tisException:\t\ttrue,\r\n\tinitHeader:\t\t\t\"What do you want to summon?\",\r\n\tspawnAttacks:\t\t[\"Deathly Touch\", \"Claw of Entropy\", \"Grave Bolt\"],\r\n\tspawnNames:\t\t\t[\"Shadow Clone (Ghostly)\", \"Shadow Clone (Putrid)\", \"Shadow Clone (Skeletal)\"],\r\n\ttokenTextures:\t\t[\"\", \"\", \"images/Tokens/Adversaries/Skeletons/Skeleton_Caster_Robed_Hooded_Magic_03.webp\"]\r\n}","import {getDialogueButtonType, getStringsOrExceptions} from \"../../helper-functions.js\"\r\nimport {summonCelestial as exceptionStrings} from \"../../exceptions\"\r\nimport {summonCelestial as defaultStrings} from \"../../strings/spells.js\"\r\nimport {summoning} from \"../../helpers/summons.js\"\r\n\r\nconst getCreateSpawnParams = async (actor, args, choice, s) => {\r\n\tconst spawnName = s.spawnNames[s.choices.indexOf(choice)]\r\n\tconst mutations = await getSpawnUpdates(\r\n\t\tactor, \r\n\t\targs,\r\n\t\tchoice,\r\n\t\ts,\r\n\t\tspawnName\r\n\t)\r\n\tconst overrides = await getOverrides(mutations, s)\t\r\n\treturn [mutations, overrides, spawnName]\r\n}\r\nconst getItemUpdates = async (s, spawnName, originAttack, level) => {\r\n\tif (spawnName == s.spawnNames[0]) {\r\n\t\treturn {\r\n\t\t\t'Radiant Bow': {\r\n\t\t\t\t'data.damage.parts' : [[`2d6 + 2 + ${level}`, `radiant`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn {\r\n\t\t\t'Radiant Sword': {\r\n\t\t\t\t'data.damage.parts' : [[`1d10 + 3 + ${level}`, `radiant`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nconst getOverrides = async (mutations, s) => {\r\n\tconst sequencer = await getSequencerData(s)\r\n\treturn {\r\n\t\twarpGate: {\r\n\t\t\tmutations\r\n\t\t},\r\n\t\tsequencer\r\n\t}\r\n}\r\nconst getSequencerData = async (s) => {\r\n\tif (s.sequencerData) return s.sequencerData\r\n\treturn {\r\n\t\toptions: {\r\n\t\t\tcircleColor1: \"blue\",\r\n\t\t\tcircleColor2: \"blue\",\r\n\t\t\tcircleNum: \"02\",\r\n\t\t\timpactColor1: \"blue\",\r\n\t\t\timpactColor2: \"blue\",\r\n\t\t\tfadeIn: {ms: 450},\r\n\t\t\timpactNum1: \"004\",\r\n\t\t\timpactNum2: \"003\",\r\n\t\t\tscale: .15,\r\n\t\t\tschool: \"conjuration\"\r\n\t\t}\r\n\t}\r\n}\r\nconst getSpawnBaseAc = async (s, spawnName) => {\r\n\treturn spawnName == s.spawnNames[0] ? 11 : 13\r\n}\r\nconst getSpawnDc = async (spawnName, originProf) => {\r\n\tconst spawnData = game.actors.find(actor => actor.name == spawnName)\r\n\tconst spawnMod = spawnData.system.abilities.wis.mod \r\n\treturn originProf + spawnMod + 8\r\n}\r\nconst getSpawnUpdates = async (actor, args, choice, s, spawnName) => {\r\n\tconst [\t\r\n\t\tac,\r\n\t\thp,\t\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDc,\r\n\t\ttexture\r\n\t] = await getSpawnParams(actor, args, choice, s, spawnName)\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"texture.src\": texture\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"data.attributes.ac.flat\" : ac,\r\n\t\t\t\"data.attributes.hp\" : hp,\r\n\t\t\t\"data.details.cr\" : originLevel,\r\n\t\t\t\"data.bonuses.spell.dc\": spawnDc,\r\n\t\t\t\"img\": texture\r\n\t\t},\r\n\t\tembedded: { \r\n\t\t\tItem: await getItemUpdates(s, spawnName, originAttack, level)\r\n\t\t}\t\t\r\n\t}\r\n}\r\nconst getSpawnParams = async (actor, args, choice, s, spawnName) => {\r\n\tconst originDc = actor.system.attributes.spelldc\r\n\tconst originAttack = originDc - 8\r\n\tconst originLevel = actor.system.details.level ?? actor.system.details.cr\r\n\tconst originProf = actor.system.attributes.prof\r\n\tconst texture =  s.defaultIcons[s.choices.indexOf(choice)]\r\n\tconst level = args[0].spellLevel\t\r\n\tconst ac = await getSpawnBaseAc(s, spawnName) + level\r\n\tconst hp = {value: 40+10*(level-5), max: 40+10*(level-5)}\r\n\tconst spawnDc = await getSpawnDc(spawnName, originProf)\t\r\n\treturn [\t\r\n\t\tac,\r\n\t\thp,\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDc,\r\n\t\ttexture\r\n\t]\r\n}\r\nconst getChoiceIconPaths = (choice, s) => {\r\n\tconst index = s.choices.indexOf(choice)\t\r\n\tif (s.exceptionActorNames) return s.defaultIcons[index]\r\n\tconst actor = game.actors.find(actor => actor.name == s.spawnNames[index])\r\n\tconst icon = actor?.img ?? false\t\r\n\tif (!icon) return s.defaultIcons[index]\r\n\treturn icon\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst s = await getStringsOrExceptions(actor, defaultStrings, exceptionStrings)\r\n\tconst choice = await getDialogueButtonType(\r\n\t\ts.choices, \r\n\t\t{width: \"125%\", height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetChoiceIconPaths, \r\n\t\t100, \r\n\t\t100, \r\n\t\ts\r\n\t)\r\n\tconst [\r\n\t\tmutations, \r\n\t\toverrides, \r\n\t\tspawnName\r\n\t] = await getCreateSpawnParams(actor, args, choice.value, s)\r\n\tsummoning.createSpawn(actor, choice.value, item, overrides, s, token) \r\n}\r\n\r\nexport const summonCelestial = {\r\n\tonUse\r\n}","import {getDialogueButtonType, getStringsOrExceptions} from \"../../helper-functions.js\"\r\nimport {summonDraconicSpirit as exceptionStrings} from \"../../exceptions\"\r\nimport {summonDraconicSpirit as defaultStrings} from \"../../strings/spells.js\"\r\nimport {summoning} from \"../../helpers/summons.js\"\r\n\r\nconst getCreateSpawnParams = async (actor, args, choice, resistValue, s) => {\r\n\tconst spawnName = s.spawnNames[s.choices.indexOf(choice)]\r\n\tconst mutations = await getSpawnUpdates(\r\n\t\tactor, \r\n\t\targs,\r\n\t\tchoice,\r\n\t\ts,\r\n\t\tspawnName\r\n\t)\r\n\tconst overrides = await getOverrides(mutations, resistValue, s)\t\r\n\treturn [mutations, overrides, spawnName]\r\n}\r\nconst getItemUpdates = async (s, spawnName, originAttack, level) => {\r\n\tif (spawnName == s.spawnNames[1]) {\r\n\t\treturn {\r\n\t\t\t'Rend': {\r\n\t\t\t\t'data.damage.parts' : [[`1d6 + 4 + ${level}`, `piercing`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Force Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Necrotic Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Psychic Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Radiant Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Thunder Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn {\r\n\t\t\t'Rend': {\r\n\t\t\t\t'data.damage.parts' : [[`1d6 + 4 + ${level}`, `piercing`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Acid Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Cold Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Fire Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Lightning Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Poison Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nconst getOverrides = async (mutations, resistValue, s) => {\r\n\tconst sequencer = await getSequencerData(s, resistValue)\r\n\treturn {\r\n\t\twarpGate: {\r\n\t\t\tmutations\r\n\t\t},\r\n\t\tsequencer\r\n\t}\r\n}\r\nconst getSequencerData = async (s, resistValue) => {\r\n\tif (s.sequencerData) return s.sequencerData\r\n\tconst circleColor = s.circleColors[s.resistValues.indexOf(resistValue)] \r\n\tconst impactColor = s.impactColors[s.resistValues.indexOf(resistValue)]\r\n\tconst impactNum = s.impactNums[s.resistValues.indexOf(resistValue)]\r\n\treturn {\r\n\t\toptions: {\r\n\t\t\tcircleColor1: circleColor,\r\n\t\t\tcircleColor2: circleColor,\r\n\t\t\tcircleNum: \"02\",\r\n\t\t\timpactColor1: impactColor,\r\n\t\t\timpactColor2: impactColor,\r\n\t\t\tfadeIn: {ms: 400},\r\n\t\t\timpactNum1: impactNum,\r\n\t\t\timpactNum2: impactNum,\r\n\t\t\tscale: .15,\r\n\t\t\tschool: \"conjuration\",\r\n\t\t}\r\n\t}\r\n}\r\nconst getSpawnDc = async (spawnName, originProf) => {\r\n\tconst spawnData = game.actors.find(actor => actor.name == spawnName)\r\n\tconst spawnMod = spawnData.system.abilities.wis.mod \r\n\treturn originProf + spawnMod + 8\r\n}\r\nconst getSpawnUpdates = async (actor, args, choice, s, spawnName) => {\r\n\tconst [\t\r\n\t\tac,\r\n\t\thp,\t\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDc,\r\n\t\ttexture\r\n\t] = await getSpawnParams(actor, args, choice, s, spawnName)\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"texture.src\": texture\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"data.attributes.ac.flat\" : ac,\r\n\t\t\t\"data.attributes.hp\" : hp,\r\n\t\t\t\"data.details.cr\" : originLevel,\r\n\t\t\t\"data.bonuses.spell.dc\": spawnDc,\r\n\t\t\t\"img\": texture\r\n\t\t},\r\n\t\tembedded: { \r\n\t\t\tItem: await getItemUpdates(s, spawnName, originAttack, level)\r\n\t\t}\t\t\r\n\t}\r\n}\r\nconst getSpawnParams = async (actor, args, choice, s, spawnName) => {\r\n\tconst originDc = actor.system.attributes.spelldc\r\n\tconst originAttack = originDc - 8\r\n\tconst originLevel = actor.system.details.level ?? actor.system.details.cr\r\n\tconst originProf = actor.system.attributes.prof\r\n\tconst texture =  s.defaultIcons[s.choices.indexOf(choice)]\r\n\tconst level = args[0].spellLevel\t\r\n\tconst ac = 14 + level\r\n\tconst hp = {value: 50+10*(level-5), max: 50+10*(level-5)}\r\n\tconst spawnDc = await getSpawnDc(spawnName, originProf)\t\r\n\treturn [\t\r\n\t\tac,\r\n\t\thp,\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDc,\r\n\t\ttexture\r\n\t]\r\n}\r\nconst getChoiceIconPaths = (choice, s) => {\r\n\tconst index = s.choices.indexOf(choice)\t\r\n\tif (s.exceptionActorNames) return s.defaultIcons[index]\r\n\tconst actor = game.actors.find(actor => actor.name == s.spawnNames[index])\r\n\tconst icon = actor?.img ?? false\t\r\n\tif (!icon) return s.defaultIcons[index]\r\n\treturn icon\r\n}\r\nconst getResistChoices = async (choice, s) => {\r\n\treturn s.choices.indexOf(choice) == 1 \r\n\t\t? s.resistChoices.slice(5, 10)\r\n\t\t: s.resistChoices.slice(0, 5)\r\n}\r\nconst getResistChoiceIconPaths = (choice, s) => {\r\n\tconst index = s.resistChoices.indexOf(choice)\t\r\n\treturn s.resistIcons[index]\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst s = await getStringsOrExceptions(actor, defaultStrings, exceptionStrings)\r\n\tconst choice = await getDialogueButtonType(\r\n\t\ts.choices, \r\n\t\t{width: \"100%\", height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetChoiceIconPaths, \r\n\t\t100, \r\n\t\t100, \r\n\t\ts\r\n\t)\r\n\tconst resistChoices = await getResistChoices(choice.value, s)\r\n\tconst resistChoice = await getDialogueButtonType(\r\n\t\tresistChoices, \r\n\t\t{width: \"100%\", height: \"100%\"}, \r\n\t\ts.resistHeader, \r\n\t\tgetResistChoiceIconPaths, \r\n\t\t100, \r\n\t\t100, \r\n\t\ts\r\n\t)\r\n\tconst resistValue = await setResistEffect(resistChoice.value, s, token)\r\n\tconst [\r\n\t\tmutations, \r\n\t\toverrides, \r\n\t\tspawnName\r\n\t] = await getCreateSpawnParams(actor, args, choice.value, resistValue, s)\r\n\tsummoning.createSpawn(actor, choice.value, item, overrides, s, token) \r\n}\r\nconst setResistEffect = async (choice, s, token) => {\r\n\tconst liveTokenActor = (await fromUuid(token.document.uuid)).actor\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(liveTokenActor)\r\n\tconst resistValue = s.resistValues[s.resistChoices.indexOf(choice)]\r\n\tconst newChange = [{\r\n\t\tkey: \"system.traits.dr.value\", \r\n\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\tvalue: [`${resistValue}`]\r\n\t}]\t\r\n\tconst newChanges = [...concEffect.changes, ...newChange]\r\n\tawait concEffect.update({\r\n\t\tchanges: newChanges,\r\n\t\t\"flags.dae\": {\"specialDuration\": [\"shortRest\", \"longRest\"]}\r\n\t})\r\n\treturn resistValue\r\n}\r\n\r\nexport const summonDraconicSpirit = {\r\n\tonUse\r\n}","import {getDialogueButtonType, getStringsOrExceptions} from \"../../helper-functions.js\"\r\nimport {summonElemental as exceptionStrings} from \"../../exceptions\"\r\nimport {summonElemental as defaultStrings} from \"../../strings/spells.js\"\r\nimport {summoning} from \"../../helpers/summons.js\"\r\n\r\nconst getCreateSpawnParams = async (actor, args, choice, s) => {\r\n\tconst spawnName = s.spawnNames[s.choices.indexOf(choice)]\r\n\tconst mutations = await getSpawnUpdates(\r\n\t\tactor, \r\n\t\targs,\r\n\t\tchoice,\r\n\t\ts,\r\n\t\tspawnName\r\n\t)\r\n\tconst overrides = await getOverrides(choice, mutations, s)\t\r\n\treturn [mutations, overrides, spawnName]\r\n}\r\nconst getItemUpdates = async (s, spawnName, originAttack, level) => {\r\n\tif (spawnName == s.spawnNames[2]) {\r\n\t\treturn {\r\n\t\t\t'Slam': {\r\n\t\t\t\t'data.damage.parts' : [[`1d10 + 4 + ${level}`, `fire`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn {\r\n\t\t\t'Slam': {\r\n\t\t\t\t'data.damage.parts' : [[`1d10 + 4 + ${level}`, `bludgeoning`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nconst getOverrides = async (choice, mutations, s) => {\r\n\tconst sequencer = await getSequencerData(choice, s)\r\n\treturn {\r\n\t\twarpGate: {\r\n\t\t\tmutations\r\n\t\t},\r\n\t\tsequencer\r\n\t}\r\n}\r\nconst getSequencerData = async (choice, s) => {\r\n\tif (s.sequencerData) return s.sequencerData\r\n\tconst circleColor = s.circleColors[s.choices.indexOf(choice)] \r\n\tconst impactColor = s.impactColors[s.choices.indexOf(choice)]\r\n\tconst impactNum = s.impactNums[s.choices.indexOf(choice)]\r\n\treturn {\r\n\t\toptions: {\r\n\t\t\tcircleColor1: circleColor,\r\n\t\t\tcircleColor2: circleColor,\r\n\t\t\tcircleNum: \"02\",\r\n\t\t\timpactColor1: impactColor,\r\n\t\t\timpactColor2: impactColor,\r\n\t\t\tfadeIn: {ms: 400},\r\n\t\t\timpactNum1: impactNum,\r\n\t\t\timpactNum2: impactNum,\r\n\t\t\tscale: .15,\r\n\t\t\tschool: \"conjuration\",\r\n\t\t}\r\n\t}\r\n}\r\nconst getSpawnDc = async (spawnName, originProf) => {\r\n\tconst spawnData = game.actors.find(actor => actor.name == spawnName)\r\n\tconst spawnMod = spawnData.system.abilities.wis.mod \r\n\treturn originProf + spawnMod + 8\r\n}\r\nconst getSpawnUpdates = async (actor, args, choice, s, spawnName) => {\r\n\tconst [\t\r\n\t\tac,\r\n\t\thp,\t\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDc,\r\n\t\ttexture\r\n\t] = await getSpawnParams(actor, args, choice, s, spawnName)\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"texture.src\": texture\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"data.attributes.ac.flat\" : ac,\r\n\t\t\t\"data.attributes.hp\" : hp,\r\n\t\t\t\"data.details.cr\" : originLevel,\r\n\t\t\t\"data.bonuses.spell.dc\": spawnDc,\r\n\t\t\t\"img\": texture\r\n\t\t},\r\n\t\tembedded: { \r\n\t\t\tItem: await getItemUpdates(s, spawnName, originAttack, level)\r\n\t\t}\t\t\r\n\t}\r\n}\r\nconst getSpawnParams = async (actor, args, choice, s, spawnName) => {\r\n\tconst originDc = actor.system.attributes.spelldc\r\n\tconst originAttack = originDc - 8\r\n\tconst originLevel = actor.system.details.level ?? actor.system.details.cr\r\n\tconst originProf = actor.system.attributes.prof\r\n\tconst texture =  s.defaultIcons[s.choices.indexOf(choice)]\r\n\tconst level = args[0].spellLevel\t\r\n\tconst ac = 11 + level\r\n\tconst hp = {value: 50+10*(level-4), max: 50+10*(level-4)}\r\n\tconst spawnDc = await getSpawnDc(spawnName, originProf)\t\r\n\treturn [\t\r\n\t\tac,\r\n\t\thp,\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDc,\r\n\t\ttexture\r\n\t]\r\n}\r\nconst getChoiceIconPaths = (choice, s) => {\r\n\tconst index = s.choices.indexOf(choice)\t\r\n\tif (s.exceptionActorNames) return s.defaultIcons[index]\r\n\tconst actor = game.actors.find(actor => actor.name == s.spawnNames[index])\r\n\tconst icon = actor?.img ?? false\t\r\n\tif (!icon) return s.defaultIcons[index]\r\n\treturn icon\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst s = await getStringsOrExceptions(actor, defaultStrings, exceptionStrings)\r\n\tconst choice = await getDialogueButtonType(\r\n\t\ts.choices, \r\n\t\t{width: \"125%\", height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetChoiceIconPaths, \r\n\t\t100, \r\n\t\t100, \r\n\t\ts\r\n\t)\r\n\tconst [\r\n\t\tmutations, \r\n\t\toverrides, \r\n\t\tspawnName\r\n\t] = await getCreateSpawnParams(actor, args, choice.value, s)\r\n\tsummoning.createSpawn(actor, choice.value, item, overrides, s, token) \r\n}\r\n\r\nexport const summonElemental = {\r\n\tonUse\r\n}","import {getDialogueButtonType} from \"../../../helper-functions.js\"\r\nimport {summonIceWolves as s} from \"../../../strings/spells.js\"\r\nimport {summoning} from \"../../../helpers/summons.js\"\r\n\r\nconst getOverrides = async () => {\r\n\tconst sequencer = await getSequencerData(s.spawnNames[0], s)\r\n\treturn {\r\n\t\tgeneral: {\r\n\t\t\tamountToSpawnByIndex: [4]\r\n\t\t},\r\n\t\tsequencer\r\n\t}\r\n}\r\nconst getSequencerData = async (choice, s) => {\r\n\tif (s.sequencerData) return s.sequencerData\r\n\tconst impactColor = s.impactColors[s.choices.indexOf(choice)]\r\n\tconst impactNum = s.impactNums[s.choices.indexOf(choice)]\r\n\tconst circleColor = s.circleColors[s.choices.indexOf(choice)]\r\n\tconst circleSchool = s.circleSchool[s.choices.indexOf(choice)]\r\n\treturn {\r\n\t\toptions: {\r\n\t\t\tcircleColor1: circleColor,\r\n\t\t\tcircleColor2: circleColor,\r\n\t\t\tcircleNum: \"02\",\r\n\t\t\timpactColor1: impactColor,\r\n\t\t\timpactColor2: impactColor,\r\n\t\t\tfadeIn: {ms: 400},\r\n\t\t\timpactNum1: impactNum,\r\n\t\t\timpactNum2: impactNum,\r\n\t\t\tscale: .15,\r\n\t\t\tschool: \"conjuration\",\r\n\t\t}\r\n\t}\r\n}\r\nconst getSpellIconPaths = (choice) => {\r\n\tconst index = s.choices.indexOf(choice)\r\n\tconst actor = game.actors.find(actor => actor.name == s.spawnNames[index])\r\n\tconst icon = actor?.img ?? false\t\r\n\tif (!icon) return s.defaultIcons[index]\r\n\treturn icon\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst overrides = await getOverrides(actor, workflow)\r\n\tsummoning.createSpawn(actor, s.spawnNames[0], item, overrides, s, token) \r\n}\r\n\r\n\r\n\r\nexport const summonIceWolves = {\r\n\tonUse\r\n}\r\n","import {conditionLabels} from \"../../constants.js\"\r\nimport {getDialogueButtonType, getStringsOrExceptions, setActiveEffects} from \"../../helper-functions.js\"\r\nimport {summonUndead as exceptionStrings} from \"../../exceptions\"\r\nimport {summonUndead as defaultStrings} from \"../../strings/spells.js\"\r\nimport {summoning} from \"../../helpers/summons.js\"\r\n\r\nconst createAura = async (s, spawnUuid) => {\r\n\tawait warpgate.wait(2500)\r\n\tconst tokenDoc = await fromUuid(spawnUuid)\r\n\tconst preAuraItem = tokenDoc.actor.items.find(item => s.auraName == item.name)\r\n\tconst update = {\r\n\t\tsystem: { \r\n\t\t\tsave: {\r\n\t\t\t\tability: \"\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst auraItem = await preAuraItem.update(update)\r\n\tif (!auraItem) return false\r\n\tawait auraItem.use()\r\n}\r\nconst festeringAuraOnUse = async ({actor, args, token}) => {\r\n\tconst summonerActorUuid = actor.flags?.charname?.summoning?.sourceActorUuid ?? false\r\n\tif (!summonerActorUuid) return false\r\n\tconst summonerActor = await fromUuid(summonerActorUuid)\r\n\tconst s = await getStringsOrExceptions(summonerActor, defaultStrings, exceptionStrings)\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tconst summonerDc = summonerActor.system.attributes.spelldc\r\n\tconst castTime = {round: game.combat.current.round, turn: game.combat.current.turn}\r\n\tawait setAuraSequencerEffects(s, template)\r\n\tconst ability = await getAbility(actor, s)\r\n\tconst update = {\r\n\t\t\"flags.charname.festeringAura.spelldc\": summonerDc,\r\n\t\t\"flags.charname.festeringAura.casterTokenId\": args[0].tokenUuid,\r\n\t\t\"flags.charname.festeringAura.summonerUuid\": token.actor.flags.charname.summonerUuid,\r\n\t\t\"flags.charname.festeringAura.castTime\": castTime,\r\n\t\tsystem: { \r\n\t\t\tsave: {\r\n\t\t\t\tability\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tawait template.update(update)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n}\r\nconst getAbility = async (actor, s) => {\r\n\tconst stringAbility = s?.auraAbility ?? null\r\n\tif (stringAbility) return stringAbility\r\n\tconst prototypeActor = game.actors.find(ptActor => actor.name == ptActor.name)\r\n\tconst protoItemAbility = prototypeActor.items.find(\r\n\t\titem => item.name == s.auraName\r\n\t)?.system?.save?.ability ?? null\r\n\tif (protoItemAbility) return protoItemAbility\r\n\tconst genericItemAbility = game.items.find(\r\n\t\titem => item.name == s.auraName\r\n\t)?.system?.save?.ability ?? null\r\n\tif (genericItemAbility) return genericItemAbility\r\n\treturn \"con\"\r\n}\r\nconst getAuraItemData = async (originActor, s, summoner) => {\r\n\tconst sourceItem = originActor.items.find(item => s.auraName == item.name)\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\t\"flags.midi-qol.onUseMacroName\": \"\",\r\n\t\tsystem: { \r\n\t\t\tduration: {\r\n\t\t\t\tvalue: \"\",\r\n\t\t\t\tunits: \"inst\"\r\n\t\t\t},\r\n\t\t\trange: {\r\n\t\t\t\tunits: \"any\",\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tsave: {\r\n\t\t\t\tability: await getAbility(originActor, s),\r\n\t\t\t\tdc: summoner.system.attributes.spelldc,\r\n\t\t\t\tscaling: \"flat\"\r\n\t\t\t},\r\n\t\t\ttarget: {\r\n\t\t\t\ttype: \"creature\",\r\n\t\t\t\tunits: \"\",\r\n\t\t\t\tvalue: 1,\r\n\t\t\t\twidth: null\r\n\t\t\t}\r\n\t\t},\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getChoiceIconPaths = (choice, s) => {\r\n\tconst index = s.choices.indexOf(choice)\t\r\n\tif (s.exceptionActorNames) return s.defaultIcons[index]\r\n\tconst actor = game.actors.find(actor => actor.name == s.spawnNames[index])\r\n\tconst icon = actor?.img ?? false\t\r\n\tif (!icon) return s.defaultIcons[index]\r\n\treturn icon\r\n}\r\nconst getCreateSpawnParams = async (actor, args, choice, s) => {\r\n\tconst spawnName = s.spawnNames[s.choices.indexOf(choice)]\r\n\tconst mutations = await getSpawnUpdates(\r\n\t\tactor, \r\n\t\targs,\r\n\t\tchoice,\r\n\t\ts,\r\n\t\tspawnName\r\n\t)\r\n\tconst overrides = await getOverrides(choice, mutations, s)\t\r\n\treturn [mutations, overrides, spawnName]\r\n}\r\nconst getEffectData = async (originUuid, effectType, s, spelldc, saveType) => {\r\n\tif (s.isException) {\r\n\t\treturn {\r\n\t\t\tname: \"Poisoned\", \r\n\t\t\tflags: {\r\n\t\t\t\t\"flags.charname.festeringAura.active\": true,\r\n\t\t\t\t\"flags.dae.stackable\": \"noneName\"\r\n\t\t\t},\r\n\t\t\ticon: \"modules/dfreds-convenient-effects/images/poisoned.svg\", \r\n\t\t\toriginUuid,\r\n\t\t\tduration: {rounds:1, turns: 0},\r\n\t\t\tchanges: [{\r\n\t\t\t\tkey: \"StatusEffect\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`Convenient Effect: Poisoned`]\r\n\t\t\t}, {\r\n\t\t\t\tkey: \"macro.execute\", mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, \r\n\t\t\t\tvalue: [`function.CHARNAME.macros.summonUndead.resetConditionImmunities`]\r\n\t\t\t}],\r\n\t\t\tdisabled: false\r\n\t\t}\t\t\r\n\t}\r\n\treturn {\r\n\t\t\tname: \"Poisoned\", \r\n\t\t\tflags: {\r\n\t\t\t\t\"flags.charname.festeringAura.active\": true,\r\n\t\t\t\t\"flags.dae.stackable\": \"noneName\"\r\n\t\t\t},\r\n\t\t\ticon: \"modules/dfreds-convenient-effects/images/poisoned.svg\", \r\n\t\t\toriginUuid,\r\n\t\t\tduration: {rounds:1, turns: 0},\r\n\t\t\tchanges: [{\r\n\t\t\t\tkey: \"StatusEffect\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`Convenient Effect: Poisoned`]\r\n\t\t\t}],\r\n\t\t\tdisabled: false\r\n\t}\r\n}\r\nconst getFailedSaveTokenDocs = async (originActor, s, summoner, tokenDocs) => {\r\n\tlet options = {}\r\n\tlet workflow = []\r\n\tlet newFailedSaveTokens = []\r\n\tconst item = await getAuraItemData(originActor, s, summoner)\r\n\tconst newItem = await item.update({\r\n\t\t\"flags.templatemacro\": null, \r\n\t\t\"flags.midi-qol\": {\r\n\t\t\tonUseMacroName: \"\",\r\n\t\t\tonUseMacroParts: null\r\n\t\t}\r\n\t})\r\n\tfor (let i = 0; i < tokenDocs.length; i++) {\r\n\t\tif (tokenDocs[i].actor.system.traits.ci.value.has(\"poisoned\") && tokenDocs[i].actor.system.details.type.value != \"undead\") continue\r\n\t\toptions = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [tokenDocs[i].uuid] }\r\n\t\tworkflow = await MidiQOL.completeItemUse(item, {}, options)\r\n\t\tif (Array.from(workflow.failedSaves).length > 0) newFailedSaveTokens.push(Array.from(workflow.failedSaves)[0])\r\n\t}\r\n\treturn newFailedSaveTokens\t\r\n}\r\nconst getHp = async (level, spawnName) => {\r\n\tconst hp = game.actors.find(\r\n\t\tactor => actor.name == spawnName\r\n\t).system.attributes.hp.max + (10 * (level-3))\r\n\treturn {value: hp, max: hp}\r\n}\r\nconst getItemUpdates = async (s, spawnName, originAttack, originDc, level) => {\r\n\tif (spawnName == s.spawnNames[0]) {\r\n\t\treturn {\r\n\t\t\t[s.spawnAttacks[0]]: {\r\n\t\t\t\t'data.damage.parts' : [[`1d6 + 3 + ${level}`, `slashing`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`,\r\n\t\t\t\t'data.save.dc': `${originDc}`\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (spawnName == s.spawnNames[1]) {\r\n\t\treturn {\r\n\t\t\t[s.spawnAttacks[1]]: {\r\n\t\t\t\t'data.damage.parts' : [[`2d4 + 3 + ${level}`, `necrotic`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (spawnName == s.spawnNames[2]) {\r\n\t\treturn {\r\n\t\t\t[s.spawnAttacks[2]]: {\r\n\t\t\t\t'data.damage.parts' : [[`2d4 + 3 + ${level}`, `necrotic`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nconst getOverrides = async (choice, mutations, s) => {\r\n\tconst sequencer = await getSequencerData(choice, s)\r\n\treturn {\r\n\t\twarpGate: {\r\n\t\t\tmutations\r\n\t\t},\r\n\t\tsequencer\r\n\t}\r\n}\r\nconst getParalyzeEffect = async (item) => {\r\n\treturn {\r\n\t\tname: \"Paralyzed\",\r\n\t\toriginUuid: item.uuid,\r\n\t\tduration: {rounds:1, turns: 1},\r\n\t\tchanges: [{key: \"StatusEffect\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [`Convenient Effect: Paralyzed`]}],\r\n\t\tdisabled: false\r\n\t}\t\r\n}\r\nconst getSequencerData = async (choice, s) => {\r\n\tif (s.sequencerData) return s.sequencerData\r\n\tconst circleColor = s.circleColors[s.choices.indexOf(choice)] \r\n\tconst impactColor = s.impactColors[s.choices.indexOf(choice)]\r\n\tconst impactNum = s.impactNums[s.choices.indexOf(choice)]\r\n\treturn {\r\n\t\toptions: {\r\n\t\t\tcircleColor1: circleColor,\r\n\t\t\tcircleColor2: circleColor,\r\n\t\t\tcircleNum: \"02\",\r\n\t\t\timpactColor1: impactColor,\r\n\t\t\timpactColor2: impactColor,\r\n\t\t\tfadeIn: {ms: 400},\r\n\t\t\timpactNum1: impactNum,\r\n\t\t\timpactNum2: impactNum,\r\n\t\t\tscale: .15,\r\n\t\t\tschool: \"necromancy\",\r\n\t\t}\r\n\t}\r\n}\r\nconst getSpawnUpdates = async (actor, args, choice, s, spawnName) => {\r\n\tconst [\t\r\n\t\tac,\r\n\t\thp,\t\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDcBonus\r\n\t] = await getSpawnParams(actor, args, choice, s, spawnName)\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"data.attributes.ac.flat\" : ac,\r\n\t\t\t\"data.attributes.hp\" : hp,\r\n\t\t\t\"data.details.cr\" : originLevel,\r\n\t\t\t\"data.bonuses.spell.dc\": spawnDcBonus\r\n\t\t},\r\n\t\tembedded: { \r\n\t\t\tItem: await getItemUpdates(s, spawnName, originAttack, originDc, level)\r\n\t\t}\t\t\r\n\t}\r\n}\r\nconst getSpawnParams = async (actor, args, choice, s, spawnName) => {\r\n\tconst originDc = actor.system.attributes.spelldc\r\n\tconst originAttack = originDc - 8\r\n\tconst originLevel = actor.system.details.level ?? actor.system.details.cr\r\n\tconst originProf = actor.system.attributes.prof\r\n\tconst level = args[0].spellLevel\t\r\n\tconst ac = 11 + level\r\n\tconst hp = await getHp(level, spawnName)\r\n\tconst spawnDcBonus = originDc - originProf - 8\r\n\treturn [\t\r\n\t\tac,\r\n\t\thp,\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDcBonus\r\n\t]\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst s = await getStringsOrExceptions(actor, defaultStrings, exceptionStrings)\r\n\tconst choice = await getDialogueButtonType(\r\n\t\ts.choices, \r\n\t\t{width: 150 * s.choices.length, height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetChoiceIconPaths, \r\n\t\t80, \r\n\t\t80, \r\n\t\ts\r\n\t)\r\n\tconst [\r\n\t\tmutations, \r\n\t\toverrides, \r\n\t\tspawnName\r\n\t] = await getCreateSpawnParams(actor, args, choice.value, s)\r\n\tconst [spawnUuid] = await summoning.createSpawn(\r\n\t\tactor, \r\n\t\tchoice.value, \r\n\t\titem, \r\n\t\toverrides, \r\n\t\ts, \r\n\t\ttoken\r\n\t) \r\n\tcreateAura(s, spawnUuid)\r\n}\r\nconst onTurnStart = async (template, token) => {\r\n\t//passed in from Festering Aura onTurnStart template macro\r\n\tconst originItem = await fromUuid(template.flags.dnd5e.origin)\r\n\tif (!originItem) return false\r\n\tconst originActor = await fromUuid(originItem.parent.uuid)\r\n\tconst summoner = await fromUuid(originActor.flags.charname.summoning.sourceActorUuid)\r\n\tif (\r\n\t\ttoken.actor.name == originActor.name \r\n\t\t|| token.actor.name == summoner.name\r\n\t) return false\t\r\n\tconst s = await getStringsOrExceptions(summoner, defaultStrings, exceptionStrings)\r\n\tconst failedSaveTokens = await getFailedSaveTokenDocs(originActor, s, summoner, [token.document])\r\n\tconst spelldc = template.flags.charname.festeringAura.spelldc\r\n\tif (failedSaveTokens.length < 1) return false\r\n\t//at some point refactor setConditionImmunity into a helper function \r\n\tif (s.isException) {\r\n\t\tawait setConditionImmunity(failedSaveTokens, \"poisoned\")\t\t\r\n\t}\r\n\tconst ability = await getAbility(originActor, s)\r\n\tconst failedSaveTokenUuids = failedSaveTokens.map(token => token.actor.uuid)\r\n\tconst effectData = await getEffectData(originActor, \"Poisoned\", s, spelldc, ability)\r\n\tconst tokenActor = await fromUuid(failedSaveTokens[0].actor.uuid)\r\n\tconst lastEffects = tokenActor.effects.find(effect => effect.name == \"poisoned\")\r\n\tawait tokenActor.createEmbeddedDocuments(\"ActiveEffect\", [effectData])\t\r\n}\r\nconst resetConditionImmunities = async ({args}) => {\r\n\tconst lastArg = args[args.length - 1]\r\n\tconst tokenDoc = await fromUuid(lastArg.tokenUuid)\r\n\tif (args[0] == \"on\") {\r\n\t}  else if (args[0] == \"off\") {\r\n\t\tconst tokenActorFlags = DAE.getFlag(tokenDoc.actor, \"charname\")\r\n\t\tconst effectUuids = tokenActorFlags.festeringAura.effectUuids\r\n\t\tconst oldImmunities = tokenActorFlags.festeringAura.oldImmunities\r\n\t\tif (tokenActorFlags.festeringAura.immune == \"poison\" \r\n\t\t\t&& oldImmunities.length > 0\r\n\t\t) tokenDoc.actor.update({\"system.traits.ci.value\": oldImmunities})\r\n\r\n\t}\t\r\n}\r\nconst rottingClaw = async ({actor, args, item, token, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && workflow.failedSaves.size > 0) {\r\n\t\tconst summonerActorUuid = token.actor?.flags?.charname?.summoning?.sourceActorUuid ?? false\r\n\t\tif (!summonerActorUuid) return false\r\n\t\tconst summonerActor = await fromUuid(summonerActorUuid)\r\n\t\tconst s = await getStringsOrExceptions(summonerActor, defaultStrings, exceptionStrings)\t\t\r\n\t\tif (workflow.failedSaves.length < 1) return false\r\n\t\tconst failedSaveUuid = Array.from(workflow.failedSaves)[0]\r\n\t\tconst target = Array.from(workflow.hitTargets)[0]\r\n\t\tconst uuid = target.actor.uuid\r\n\t\tconst hasEffectApplied = target.actor.effects.filter(effect => \r\n\t\t\tconditionLabels['poisoned'].includes(effect.name.toLowerCase())\r\n\t\t).length > 0\r\n\t\tconst isParalyzeImmune = target.actor.system.traits.ci.value.has('paralyzed')\r\n\t\tconst isUndead = target.actor.system.details.type.value == \"undead\"\t\t\r\n\t\tconst effect = await getParalyzeEffect(item)\r\n\t\tif (hasEffectApplied \r\n\t\t\t&& isParalyzeImmune \r\n\t\t\t&& isUndead \r\n\t\t\t&& s.isException\r\n\t\t) {\r\n\t\t\tgame.dfreds.effectInterface.addEffect({ effectName: \"Entropically Paralyzed\", uuid })\r\n\t\t} else if (hasEffectApplied) {\r\n\t\t\tawait setActiveEffects([uuid], effect)\r\n\t\t}\r\n\t}\t\r\n}\r\nconst setAuraSequencerEffects = async (s, template) => {\r\n\tconst fileLoc = s.auraTemplateSrc\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(fileLoc)\r\n\t\t\t.scale(.5)\r\n\t\t\t.opacity(1)\r\n\t\t\t.attachTo(template)\r\n\t\t\t.persist()\r\n\t\t.play()\t\r\n}\r\nconst setConditionImmunity = async (tokenDocs, value) => {\r\n\tlet values = new Set()\r\n\tlet oldValues = []\r\n\tlet newValues = []\r\n\tlet data = {}\r\n\tfor (let i = 0; i < tokenDocs.length; i++) {\r\n\t\tvalues = tokenDocs[i].actor.system.traits.ci.value\r\n\t\toldValues = Array.from(values)\r\n\t\tif (tokenDocs[i].actor.system.traits.ci.value.has(value) && tokenDocs[i].actor.system.details.type.value == \"undead\") {\r\n\t\t\tvalues.delete(value)\r\n\t\t\tnewValues = Array.from(values)\r\n\t\t\ttokenDocs[i].actor.system.traits.ci.value.clear()\r\n\t\t\tdata = {actorUuid: tokenDocs[i].actor.uuid, actorData: {\"system.traits.ci.value\": newValues}}\r\n\t\t\tawait MidiQOL.socket().executeAsGM(\"updateActor\", data)\r\n\t\t\tawait DAE.setFlag(tokenDocs[i].actor, \"charname\", {festeringAura: {immune: value, oldImmunities: oldValues}})\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const summonUndead = {\r\n\tfesteringAuraOnUse,\r\n\tonTurnStart,\r\n\tonUse,\r\n\tresetConditionImmunities,\r\n\trottingClaw\r\n}","import {\r\n\tdeleteTempItem as deleteItem, \r\n\tgetDialogueButtonType, \r\n\tgetSourceMacroNames, \r\n\tgetUpdatedMacroNames, \r\n\tsetCastSpellUpdates,\r\n} from \"../../helper-functions.js\"\r\nimport {staffOfSwarmingInsects as s} from \"../../strings/items.js\"\r\n\r\nconst castSpell = async (spell, staff, tokenActor, choice) => {\r\n\tconst updates = await createCastWorkflow(spell, staff, tokenActor, choice)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, staff, tokenActor, choice) => {\r\n\tconst [tempItem] = await createTempItem(spell, staff, tokenActor, choice)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, staff, tokenActor, choice) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, \"staffOfSwarmingInsects\", spell.activation)\r\n\tconst itemData = await getTempSpellItem(spell, staff, updatedMacroNames, choice)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data)\r\n}\r\nconst getChosenItem = async (choice, spells) => {\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn game.items.find(item => item.name == s.damageWeaponName)\r\n\t} else {\r\n\t\treturn spells.find(spell => spell.name == choice)\t\t\r\n\t}\t\r\n}\r\nconst getConsumptionAmount = async (choice) => {\r\n\tif (choice == s.allChoices[0]) {\r\n\t\treturn 4\r\n\t} else if (choice == s.allChoices[1]) {\r\n\t\treturn 1\r\n\t} else if (choice == s.allChoices[2]) {\r\n\t\treturn 5\r\n\t} else {\r\n\t\treturn 0\r\n\t}\r\n}\r\nconst getDamage = async (spell, choice) => {\r\n\tconst weapon = game.items.find(item => item.name == s.damageWeaponName)\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn choice == s.allChoices[4] \r\n\t\t\t? [\"1d8 + @mod\", \"bludgeoning\"] \r\n\t\t\t: [\"1d6 + @mod\", \"bludgeoning\"]\r\n\t} else {\r\n\t\treturn spell.system.damage.parts\r\n\t}\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn \"icons/weapons/staves/staff-simple-spiral-green.webp\"\r\n\t} else {\r\n\t\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\t\treturn spell.img\t\t\r\n\t}\r\n}\r\nconst getSpellsToCast = async (staff) => {\r\n\tconst spells = s.spellNames.map(spell => game.items.find(item => {\r\n\t\tif (!item.name) return false\r\n\t\treturn item.name.toLowerCase() == spell.toLowerCase()\r\n\t}))\t\r\n\tconst filteredSpellNames = s.spellNames.filter((spell, i, arr) => {\r\n\t\treturn ((spell == arr[0] && staff.system.uses.value >= 4)\r\n\t\t\t||  (spell == arr[1] && staff.system.uses.value >= 1)\r\n\t\t\t||  (spell == arr[2] && staff.system.uses.value >= 5))\r\n\t})\r\n\tconst choices = staff.system.attunement == 2 ? \r\n\t\t[...s.meleeChoices, ...filteredSpellNames].sort() : \r\n\t\ts.meleeChoices.sort()\r\n\treturn [choices, spells]\r\n}\r\nconst getTempSpellItem = async (spell, staff, updatedMacroNames, choice) => {\r\n\tconst [amount, damage, item, name, prep, type] = await getTempSpellItemMods(spell, staff, choice)\r\n\treturn mergeObject(duplicate(item.toObject(false)), {\r\n\t\tname: name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originItemName\": staff.name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originItemUuid\": staff.uuid,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originName\": item.name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originUuid\": item.uuid,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.consume.amount\": amount,\r\n\t\t\"system.consume.target\": staff.id,\r\n\t\t\"system.consume.type\": type,\r\n\t\t\"system.damage.parts\": damage,\t\r\n\t\t\"system.preparation.mode\": prep,\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getTempSpellItemMods = async (spell, staff, choice) => {\r\n\tconst amount = await getConsumptionAmount(choice)\r\n\tconst damage = await getDamage(spell, choice)\r\n\tconst item = choice == s.allChoices[3] || choice == s.allChoices[4] ? weapon : spell\r\n\tconst name = item.name == s.damageWeaponName ? staff.name : spell.name\r\n\tconst prep = choice == s.allChoices[3] || choice == s.allChoices[4] ? null : \"innate\"\r\n\tconst type = choice == s.allChoices[3] || choice == s.allChoices[4] ? null : \"charges\"\r\n\treturn [amount, damage, item, name, prep, type]\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst staff = await fromUuid(item.uuid)\r\n\tif (!staff.system.equipped) return false\r\n\tconst [choices, spells] = await getSpellsToCast(staff)\r\n\tconst choice = await getDialogueButtonType(\r\n\t\tchoices, \r\n\t\t{width: choices.length * 150, height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetSpellIconPaths, \r\n\t\t60, \r\n\t\t60, \r\n\t\tspells\r\n\t)\r\n\tconst chosenItem = await getChosenItem(choice.value, spells)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tcastSpell(chosenItem, staff, tokenActor, choice.value)\t\r\n}\r\n\r\nexport const staffOfSwarmingInsects = {\r\n\tdeleteTempItem,\r\n\tonUse\t\r\n}","import {getDialogueButtonType, setActiveEffects} from \"../../helper-functions.js\"\r\n\r\nconst getCommandItemData = async (originActor, type) => {\r\n\tconst sourceItem = type.value == \"Command: Flee\" ? await fromUuid(\"Item.TLqebf57ZF6HUkml\") : await fromUuid(\"Item.9iKDqMbCAERS9psP\")\r\n\tconsole.log(sourceItem)\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\t\t//name: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getFearItemData = async (originActor) => {\r\n\tconst sourceItem = await fromUuid(\"Item.DG5FfgOrf5IhvITt\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Fear\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-monster-purple-blue.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Flee\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-shadow-monster-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Prone\":\r\n\t\t\treturn \"icons/magic/control/silhouette-fall-slip-prone.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst onUse = async ({args, item, actor, token}) => {\r\n\tconst buttonOptions = item.system.uses.value > 1 ? [\"Fear\", \"Command: Flee\", \"Command: Prone\"] : [\"Command: Flee\", \"Command: Prone\"]\r\n\tconst type = await getDialogueButtonType(buttonOptions, {width: 400, height: 150}, \"What do you want to cast?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Fear\") {\r\n\t\tsetFearEffects(actor, item)\r\n\t} else {\r\n\t\tsetCommandEffects(actor, item, token, type)\r\n\t}\r\n}\r\nconst setCommandEffects = async (actor, item, token, type) => {\r\n\tconst commandItem = await getCommandItemData(actor, type)\r\n\tconst target = game.user.targets?.first() ?? false\r\n\tif (!target) return false\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [target.document.uuid]}\r\n\tconst commandWorkflow = await MidiQOL.completeItemUse(commandItem, {}, options)\t\r\n\tsetCommandEffectsSequencer(target)\r\n\tsetItemUsesUpdate(item.uuid, 1)\t\r\n}\r\nconst setCommandEffectsSequencer = async (token) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.enchantment.complete.dark_purple`)\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t\t.attachTo(token)\r\n\t\t\t.belowTokens()\r\n\t\t.play()\t\t\t\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token, template) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.detect_magic.cone.purple`)\r\n\t\t\t.scale(4.4)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\r\n\t\t\t.spriteOffset({x: 600, y:0}, {local: true})\r\n\t\t\t.rotate(-template.direction)\r\n\t\t.play()\t\t\t\r\n}\r\nconst setFearEffects = async (actor, item) => {\r\n\tconst fearItem = await getFearItemData(actor)\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false}\r\n\tconst fearWorkflow = await MidiQOL.completeItemUse(fearItem, {}, options)\t\r\n\tconst liveTemplate = await fromUuid(fearWorkflow.templateUuid)\r\n\tsetEffectsSequencer(0, 0, 1, false, liveTemplate)\r\n\tsetItemUsesUpdate(item.uuid, 2)\t\r\n}\r\nconst setItemUsesUpdate = async (itemUuid, usesUsed) => {\r\n\tconst liveItem = await fromUuid(itemUuid)\r\n\tliveItem.update({\"system.uses.value\": liveItem.system.uses.value - usesUsed})\r\n}\r\n\r\nexport const wandOfFear = {\r\n\tonUse\r\n}","import {auraOfPurity} from \"./macros/spells/aura-of-purity.js\"\r\nimport {blight} from \"./macros/spells/blight.js\"\r\nimport {chefRest} from \"./macros/features/misc/chef-rest.js\"\r\nimport {clairvoyance} from \"./macros/spells/clairvoyance.js\"\r\nimport {daylight} from \"./macros/spells/daylight.js\"\r\nimport {dispelMagic} from \"./macros/spells/dispel-magic.js\"\r\nimport {feyAncestry} from \"./macros/features/fey-ancestry.js\"\r\nimport {giantInsect} from \"./macros/spells/giant-insect.js\"\r\nimport {hordePassive} from \"./macros/features/horde-passive.js\"\r\nimport {insectCloud} from \"./macros/features/misc/insect-cloud.js\"\r\nimport {instrumentOfTheBards} from \"./macros/items/instrument-of-the-bards.js\"\r\nimport {lmrtfyJournal} from \"./macros/charname/lmrtfy-journal.js\"\r\nimport {protectionFromPoison} from \"./macros/spells/protection-from-poison.js\"\r\nimport {ringOfSpellStoring} from \"./macros/items/ring-of-spell-storing.js\"\r\nimport {songOfRest} from \"./macros/features/class/bard/song-of-rest.js\"\r\nimport {spellScroll} from \"./macros/items/spell-scroll.js\"\r\nimport {summonCelestial} from \"./macros/spells/summon-celestial.js\"\r\nimport {summonDraconicSpirit} from \"./macros/spells/summon-draconic-spirit.js\"\r\nimport {summonElemental} from \"./macros/spells/summon-elemental.js\"\r\nimport {summonIceWolves} from \"./macros/actions/creature/summon-ice-wolves.js\"\r\nimport {summonUndead} from \"./macros/spells/summon-undead.js\"\r\nimport {summoning} from \"./helpers/summons.js\"\r\nimport {staffOfSwarmingInsects} from \"./macros/items/staff-of-swarming-insects.js\"\r\nimport {wandOfFear} from \"./macros/items/wand-of-fear.js\"\r\n\r\nexport const macros = {\r\n\tauraOfPurity,\r\n\tblight,\r\n\tclairvoyance,\r\n\tchefRest,\r\n\tdaylight,\r\n\tdispelMagic,\r\n\tfeyAncestry,\r\n\tgiantInsect,\r\n\thordePassive,\r\n\tinsectCloud,\r\n\tinstrumentOfTheBards,\r\n\tlmrtfyJournal,\r\n\tprotectionFromPoison,\r\n\tringOfSpellStoring,\r\n\tsongOfRest,\r\n\tspellScroll,\r\n\tsummonCelestial,\r\n\tsummonDraconicSpirit,\r\n\tsummonElemental,\r\n\tsummonUndead,\r\n\tsummonIceWolves,\r\n\tsummoning,\r\n\tstaffOfSwarmingInsects,\r\n\twandOfFear\r\n}","const getItemData = (originActor, songLevel) => {\r\n\tconst sourceItem = fromUuidSync(\"Item.GvIIDEPRp3unaRVe\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Song of Rest\",\r\n\t\tsystem: { \r\n\t\t\tdamage: {\r\n\t\t\t\tparts: [[`1d${songLevel}`, \"healing\"]]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getOriginBardScale = (effectOriginUuid) => {\r\n\tconst effectOrigin = fromUuidSync(effectOriginUuid)\r\n\tconst originActor = fromUuidSync(effectOrigin.parent.uuid)\r\n\treturn originActor.system.scale.bard[\"song-of-rest\"].faces\r\n}\r\nconst main = (actor, data) => {\r\n\tconst songEffects = actor.effects.filter(effect => effect.name == \"Song of Rest\")\r\n\tconst songActorTokens = canvas.tokens.objects.children.filter(child => {\t\t\r\n\t\tif (!child.document.actor.system.scale.bard) return false\r\n\t\treturn child.document.actor.items.find(item => item.name == \"Song of Rest\") && child.document.disposition == 1\r\n\t})\r\n\tconst highestBardScale = songActorTokens.reduce((highestScale, token) => {\t\r\n\t\tif (token.document.actor.system.scale.bard[\"song-of-rest\"].faces > highestScale) { \r\n\t\t\treturn token.document.actor.system.scale.bard[\"song-of-rest\"].faces\r\n\t\t} else {\r\n\t\t\treturn highestScale\r\n\t\t}\r\n\t}, 0)\r\n\tif (data.dhd < 0 && songEffects.length > 0) {\t\r\n\t\tsongEffects.map(effect => {\r\n\t\t\tconst item = getItemData(actor, highestBardScale)\r\n\t\t\tconst token = MidiQOL.tokenForActor(actor.uuid)\r\n\t\t\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [token.document.uuid] }\r\n\t\t\tMidiQOL.completeItemUse(item, {}, options)\t\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const songOfRest = {\r\n\tmain\r\n}","import {setConfig} from './config.js';\r\nimport {macros} from \"./macros.js\"\r\nimport * as sf from \"./socket-functions.js\"\r\n\r\nexport let socket\r\n\r\nHooks.once(\"socketlib.ready\", () => {\r\n\tsocket = socketlib.registerModule(\"charnames-bag-of-macros\")\r\n\tsocket.register(\"setActiveEffectDelete\", sf.setActiveEffectDelete)\r\n\tsocket.register(\"setAmbientLightCreate\", sf.setAmbientLightCreate)\t\r\n\tsocket.register(\"setAmbientLightDelete\", sf.setAmbientLightDelete)\r\n\tsocket.register(\"setDeleteSummonConcentrationHook\", sf.setDeleteSummonConcentrationHook)\r\n\tsocket.register(\"setMeasuredTemplateDelete\", sf.setMeasuredTemplateDelete)\r\n\tsocket.register(\"setSpawnedTokensInitiative\", sf.setSpawnedTokensInitiative)\r\n})\r\n\r\nHooks.on(\"createItem\", (item, config) => {\r\n\tmacros.spellScroll.createItem(item, config)\r\n})\r\nHooks.on(\"dnd5e.restCompleted\", (actor, data) => {\r\n\tmacros.chefRest.onShortRest(actor, data)\r\n\tmacros.instrumentOfTheBards.onNewDay(actor, data)\r\n\tmacros.songOfRest.main(actor, data)\r\n})\r\n\r\nHooks.on(\"preDeleteToken\", (tokenDoc, config, user) => {\r\n\tmacros.summoning.onPreDeleteToken(tokenDoc, config, user)\r\n})\r\n\r\nglobalThis['CHARNAME'] = {\r\n    macros\r\n}","export const setAmbientLightCreate = async (params) => {\r\n\treturn await canvas.scene.createEmbeddedDocuments(\"AmbientLight\", [params])\r\n}\r\nexport const setAmbientLightDelete = async (ambientLightId) => {\r\n\tconst ambientLight = await canvas.scene.deleteEmbeddedDocuments(\"AmbientLight\", [ambientLightId])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn ambientLight\r\n}\r\nexport const setActiveEffectDelete = async (ownerActor, effectId) => {\t\r\n\tconst [deleteEffect] = ownerActor.effects.filter(effect => effect._id == effectId)\t\r\n\treturn await ownerActor.deleteEmbeddedDocuments(\"ActiveEffect\", [deleteEffect._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n}\r\nexport const setDeleteSummonConcentrationHook = async (actor, spawnedTokenUuid) => {\r\n\tconst preDeleteSummonConcentrationHookId = Hooks.on(\"preDeleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", preDeleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\t\r\n}\r\nexport const setMeasuredTemplateDelete = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid) ?? false\r\n\tif (!template) return false\r\n\tconst deletedMeasuredTemplate = await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [template._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn deletedMeasuredTemplate\r\n}\r\nexport const setSpawnedTokensInitiative = async (combatDocs, init) => {\r\n\tcombatDocs.forEach(doc => doc.update({\"initiative\": init}))\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(26);\n"],"names":["conditionLabels","blinded","charmed","concentrating","dead","deafened","exhaustion1","exhaustion2","exhaustion3","exhaustion4","exhaustion5","frightened","grappled","incapacitated","invisible","paralyzed","petrified","poisoned","prone","restrained","stunned","unconscious","wounded","cloudSpellNames","deleteTempItem","async","args","item","workflow","setDeleteItemFlags","tempItem","originTokenDoc","tokenActor","getDeleteItemData","logic","getDeleteItemLogic","setDeleteItemLogic","fromUuid","uuid","tokenUuid","actor","concEffect","MidiQOL","getConcentrationEffect","hasTemplate","templateUuid","hasSelfEffects","getSelfEffects","length","hasSelfTarget","hasEffects","effects","size","isSelfTargetItem","target","type","originTargetingSelf","hitTargetUuids","filter","checkSelfTarget","getDialogueButtonType","choices","dialogueOptions","title","getIconPathsFunc","buttonWidth","buttonHeight","iconData","Promise","resolve","buttons","getIconPaths","width","height","reduce","choice","i","icon","label","callback","value","getDialogueButtons","Dialog","render","effect","selfTarget","flags","dae","selfTargetAlways","getSourceMacroNames","onUseMacroName","getSpawnLocation","spawnIconPath","interval","itemRange","originToken","setCrosshairConfigs","distanceAvailable","crosshairsDistance","location","warpgate","crosshairs","show","inFlight","wait","ray","Ray","center","distance","Math","ceil","canvas","grid","measureDistances","gridSpaces","draw","cancelled","getStringsOrExceptions","defaultStrings","exceptionStrings","exceptionActorNames","includes","name","getTemplatesInRange","templates","gridSize","gridScale","range","x1","y1","template","a","b","x","y","sqrt","pow","itemRangeModified","getTokensInRange","tokens","token","tokenTopLeftCenterX","tokenTopLeftCenterY","tokenGridBorderCoords","j","push","xArr","map","coord","yArr","maxX","max","maxY","coords","x2","y2","getUpdatedMacroNames","macroNames","flagName","activation","update","removeEffect","effectUuid","socket","executeAsGM","setActiveEffects","tokenActorUuids","effectData","all","tokenActorUuid","actorUuid","createEffect","setActorConcDeletion","find","delete","setActorConcRemoveUuids","originActor","originActorConcentrationRemoveUuids","removeUuids","setAuraEffectUpdatesWhenDeleted","effectName","tokenActorsEffected","charname","forEach","fromUuidSync","setAuraEffectsWhenEntered","getEffectData","newActorUuids","insectCloud","flag","setAuraEffectsWhenLeft","tokenEffect","setCastSpellUpdates","updates","updateDeleteUuidEffects","callMacro","asGM","scene","adjustment","lockSize","lockPosition","tag","drawIcon","rememberControlled","activate","setDeleteUuids","tempItemEffect","origin","deletionChange","key","mode","CONST","ACTIVE_EFFECT_MODES","ADD","updatedChanges","changes","setTemplateDispels","itemTemplatePositions","potentialTemplates","dnd5e","originName","spellLevel","templatesWithOverlap","eligibleTemplates","gridTemplateId","id","templatePositions","highlightLayers","positions","Set","intersection","getTemplatesWithOverlap","updateAuraEffectsOnUse","appliedEffect","templateEffect","updateAuraFlags","updateAuraWhenMoved","dispositions","newTokenActorUuids","oldTokenActorUuids","game","modules","get","api","findContained","collections","tokenDoc","tokenId","disposition","getAuraParamsWhenMoved","originUuid","removalUuids","deleteAuraEffectsWhenMoved","newUuidsToEffect","setAuraEffectsWhenMoved","hasSysConc","system","components","concentration","hasMidiConc","midiProperties","isConcentration","isReactionItem","getDeleteUuidEffects","checkCombatActivity","combat","active","turns","doc","sourceCombatDoc","createSpawn","overrides","strings","getConcEffect","spawnUuids","createSpawnTokens","updateInitiatives","updateConcEffect","params","getSpawnParams","setWarpGateSpawn","getAmountToSpawn","overrideAmountToSpawn","general","amountToSpawnByIndex","indexOf","getCallbacks","spawnName","overrideCallbacks","warpGate","callbacks","eval","pre","loc","usePreEffectSequencer","post","spawnToken","usePostEffectSequencer","toLowerCase","getDefaultIconPath","index","stringIcons","defaultIcons","getPreDeleteParams","amountSpawned","summoning","sequencer","options","getPreEffectsSequencerParams","spawnSize","circleNum","color1","circleColor1","color2","circleColor2","school","scale","document","getSpawnDetails","actors","texturePath","getTexturePath","prototypeToken","controllingActor","spawnNames","amountToSpawn","getSpawnUpdates","overrideMutations","mutations","concEffectUuid","console","log","defaultMutations","mergeObject","overwrite","inlace","insertKeys","insertValues","combinedMutations","stringTextures","tokenTextures","stringTexture","defaultIconPath","texture","src","onPreDeleteToken","config","user","theGmUser","users","isTheGM","summonFlags","deleteOverrides","optionOverrides","useTokenDeleteSequencer","created","totalSpawnCreated","deleted","totalSpawnDeleted","delay","floor","random","newDeleted","updatedConc","setSpawnedTokensToActive","combatToken","placeables","toggleCombat","spawnIds","spawnAt","updateCombatDocs","activeTokenIds","init","combatDocs","deleteUuidChanges","spawnFlags","initiative","impactColor","impactColor1","impactNum","impactNum1","sequencerPath","fadeIn","ms","ease","Sequence","animation","on","opacity","play","file","atLocation","overrideSequencer","originScale","spawnScale","belowTokens","waitUntilFinished","color","impactColor2","impactNum2","auraOfPurity","preTargetSave","some","change","saveDetails","advantage","onUse","tokenAttacher","attachElementToToken","parent","tokenDocs","Array","from","values","eligibleTokenDocs","tokenDocuments","originX","originY","tokenDocsInRange","templateNonEffectedTokens","itemEffectName","statuses","has","getNonTemplateEffectedTokenDocs","getEligibleTokenDocuments","tokenEffectUuids","casterDisposition","effected","dfreds","effectInterface","addEffect","setTokenEffects","blight","speaker","character","scope","hitTargets","details","CUSTOM","disabled","getBlightEffectData","castLevel","Hooks","once","rolledItem","rollConfig","maxDamageString","String","parts","setBlightHook","castData","chefRest","onShortRest","data","chefEffects","dhd","sourceItem","itemData","attributes","prof","duplicate","toObject","damage","CONFIG","Item","documentClass","getItemData","showFullCard","createWorkflow","versatile","configureDialog","targetUuids","tokenForActor","completeItemUse","setSpawnedTokenId","spawn","spawnedTokenId","originActorSenses","originTokenSight","TOKEN_DISPLAY_MODES","HOVER","getWarpgateUpdates","senses","sight","originTokenUuid","setEffectsSequencer","setPostEffectsSequencer","getWarpgateCallbacks","getWarpgateOptions","clairvoyance","macroPass","spawnedTokenUuid","getTokenSpawnIds","originTokenActorUuid","fromUuidActor","userId","deleteSummonConcentrationHookId","off","setHookMacros","setPostSpawnEffects","buttonName","setAreaChoiceEffects","itemUuid","setTemplateEffects","lightParams","sanitizedLight","lightId","getEffectOriginData","_id","ineligibleEffectNames","minSpellLevel","originTemplateActiveEffect","setAreaEffectDeleteHookId","templateData","originFlag","templateSpellLevel","gridTemplatePositions","setTimeout","setAreaEffectDeleteHookOffId","setAreaEffectDeleteHookOff","setAreaEffectDeleteHook","attachTo","daylight","targets","first","duration","rounds","getEffectTokenData","setInitChoice","templateId","lastArg","efData","casterUuid","dispelAbility","dispelLevel","casterToken","effectsLTE2DispelLevel","effectsGTDispelLevel","baseLevel","getTokenEffects","effectsIdsToDelete","abilities","mod","abilityRoll","arr","effectCastLevel","rollAbilityTest","total","concat","getEffectsToDelete","deleteEffectsOnToken","selectedTemplate","inRangeEligibleTemplates","originItem","originItems","items","sortedTemplates","sort","aOrig","bOrig","localeCompare","templateSelections","itemOwnerName","menu","inputs","ui","notifications","info","getTemplateSelection","getSelectedTemplate","templateCastLevel","getTemplatesToDelete","deleteTemplate","dispelMagic","spellcasting","feyAncestry","main","giantInsect","initHeader","preEffectSeqPath","summonCelestial","summonDraconicSpirit","circleColors","impactColors","impactNums","resistChoices","resistIcons","resistHeader","resistValues","summonElemental","summonIceWolves","circleSchool","summonUndead","auraName","auraTemplateSrc","spawnAttacks","getSpellIconPaths","img","hordeStr","getAoeOverlapPerc","creatureCoords","getCreatureCoords","templateCoords","getTemplateCoords","set","position","toString","add","templateIdStr","setLiveTokenDocUpdates","hordeItem","hordeItemUsesMax","multiplier","liveTokenDoc","tokenSizeNum","tokenSizeDiff","maxHordeSize","setSequencer","newHordeUsesVal","uses","setNewHordeUses","Object","keys","DND5E","actorSizes","setLiveTokenDocSize","oldChanges","attackBonus","oldAttackBonusVal","tempChanges","setPostDamageUpdates","newHpDamage","oldHealthPercentage","hp","newHealthPercentage","traits","getNewTokenSizeDiff","hordePassive","img1","img2","img3","templateEffectName","checkEffectOrigin","effectedToken","candidateToken","insectCloudEffectNames","getEffectDuration","getIfInBsOrTsRange","bsRange","tsRange","maxBsOrTsRange","findNearby","canSee","attackingToken","ringOfSpellStoring","addSpellErr","castSpellErr","castSpellHeader","charHeader","currSpellBank","descLevel","charnamesExceptions","initChoices","levelHeader","levelLabels","spellHeader","instrumentOfTheBards","anstruthHarp","canaithMandolin","cliLyre","dossLute","fochlucanBandore","generic","macFuirmidhCittern","ollamhHarp","spellScroll","staffOfSwarmingInsects","allChoices","damageWeaponName","meleeChoices","spellNames","createTempItem","spell","instrument","chosenIndex","sourceMacroNames","updatedMacroNames","getTempSpellItem","createEmbeddedDocuments","spells","level","getCureWoundsData","originInstrumentUuid","spellIndex","updateDeleteItemFlags","isCharged","updatePages","allowsTake10","message","outcomes","passiveFloor","oc","passiveSkill","skills","roll","skillId","passive","s","rolls","_total","score","races","race","outcome","journal","e","pages","p","split","journalPageId","ownership","content","userName","ChatMessage","create","whisper","getWhisperRecipients","sendChatMessages","text","updateOwnership","getInitIconPaths","spellData","liveItem","getTempItem","getAddSpellChoices","eligibleSpellsByChar","charChoice","charChoices","toSorted","getCharIconPaths","getAddCharChoice","levelChoice","levelChoices","getLevelChoices","getLevelIconPaths","getAddLevelChoice","spellChoice","spellChoices","spellIcons","getSpellChoices","getSpellChoice","getAddSpellChoice","getEligibleSpells","actorSpells","eligibleLevelSpells","highestSpellLevel","getHighestSpellLevel","preparation","getSpellData","pact","getEligibleLevelSpells","slotsRemaining","slotsUsed","eligibleLevels","spellLevels","getLiveActors","getNewSlotsUsed","sortedChoices","radioSelections","levelChoiceInt","dc","spelldc","ability","isRangedAttack","actionType","isMeleeAttack","parseInt","bonuses","rsak","attack","msak","getAttackBonus","getSpellToCast","uniqueSpells","spellsArr","chosenSpell","getUpdatedDescription","desc","description","newSpells","descs","spellBankStr","substring","lastIndexOf","replace","setPreUseItemHooks","useItem","consumeResource","consumeSpellSlot","consumeUsage","slotLevel","_baseProficiency","setReactionUpdates","setResetSpellsDesc","updatedStr","updatedDesc","newSlotsUsed","flaggedItem","updatedDescription","updateRingItem","charName","spellName","notification","setRingUpdatesNotification","newSpellData","chr","getUpdateRingData","setRingUpdates","getLabel","slice","sequencerData","auraAbility","baseHp","isException","getItemUpdates","originAttack","getSequencerData","originDc","originLevel","cr","originProf","ac","getSpawnBaseAc","spawnDc","wis","getSpawnDc","getChoiceIconPaths","resistValue","circleColor","getResistChoiceIconPaths","getAbility","stringAbility","prototypeActor","ptActor","protoItemAbility","save","getHp","staff","amount","prep","getTempSpellItemMods","getConsumptionAmount","getDamage","weapon","equipped","filteredSpellNames","attunement","chosenItem","getChosenItem","setCommandEffectsSequencer","setItemUsesUpdate","usesUsed","wandOfFear","buttonOptions","fearItem","getFearItemData","fearWorkflow","spriteOffset","local","rotate","direction","setFearEffects","commandItem","getCommandItemData","setCommandEffects","macros","getOverrides","isSaveFailure","hasAreaTarget","preTargetDamageApplication","hordeItemUses","hpDamage","damageItem","aoeOverlapPerc","hordeCount","getNewDamage","setHpUpdateEffects","checkAttackerVision","units","blindsight","tremorsense","getCheckAttackerVisionParams","inBsOrTsRange","defenderIsOwnEffectOrigin","attackerIsOwnEffectOrigin","checkDefenderVision","getCheckDefenderVisionParams","setTemplateAttachment","elligibleTokens","getTokenActorUuids","whenDeleted","whenEntered","whenLeft","whenMoved","getSpellsToCast","createCastWorkflow","castSpell","onNewDay","newDay","instruments","refreshInstruments","lmrtfyJournal","canFailChecks","pageName","actorChoices","activeUsers","u","isGM","hasPlayerOwner","getActorChoices","actorContent","getContent","enter","html","checked","val","default","close","getChoices","actorIds","request","customPageId","c","advInt","messageArr","shift","join","getData","emit","getHookData","rollId","time","Date","getTime","ourMessage","messageHookId","lmrtfyMessage","lmrtfy","sessionId","sessionNew","sessionStorage","getItem","getSessionData","timestamp","removeItem","sessionUpdate","setItem","setHooks","protectionFromPoison","poisonEffects","hasPoisonedName","hasPoisonedConditions","chosenEffect","acc","nameAlreadyUsed","buttonNames","initChoice","getChosenEffect","setAddSpellNotification","getAddSpellUpdates","setAddSpellUpdates","addSpell","tempItems","ringUuid","resetSpells","deleteIndex","usedSpellLevel","usedSpell","getDeleteItemFlagData","getDeleteItemFlagUpdates","songOfRest","songEffects","highestBardScale","objects","children","child","bard","highestScale","faces","songLevel","getItemParams","createItem","defaultItem","defItem","newLabel","autoanimations","embedded","getCreateSpawnParams","getResistChoices","resistChoice","liveTokenActor","newChange","newChanges","setResistEffect","festeringAuraOnUse","summonerActorUuid","sourceActorUuid","summonerActor","summonerDc","castTime","round","current","turn","fileLoc","persist","setAuraSequencerEffects","summonerUuid","onTurnStart","summoner","failedSaveTokens","newFailedSaveTokens","scaling","getAuraItemData","onUseMacroParts","ci","failedSaves","getFailedSaveTokenDocs","festeringAura","oldValues","newValues","clear","actorData","DAE","setFlag","immune","oldImmunities","setConditionImmunity","effectType","saveType","OVERRIDE","spawnDcBonus","spawnUuid","preAuraItem","auraItem","use","createAura","resetConditionImmunities","tokenActorFlags","getFlag","effectUuids","rottingClaw","hasEffectApplied","isParalyzeImmune","isUndead","getParalyzeEffect","socketlib","registerModule","register","globalThis","setAmbientLightCreate","setAmbientLightDelete","ambientLightId","ambientLight","deleteEmbeddedDocuments","setActiveEffectDelete","ownerActor","effectId","deleteEffect","setDeleteSummonConcentrationHook","preDeleteSummonConcentrationHookId","setMeasuredTemplateDelete","deletedMeasuredTemplate","setSpawnedTokensInitiative","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__"],"sourceRoot":""}