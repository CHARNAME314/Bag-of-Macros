{"version":3,"file":"main.js","mappings":"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","sources":["webpack://CHARNAME's Bag of Macros/./src/scripts/constants.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helper-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helpers/summons.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/aura-of-purity.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/blight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/clairvoyance.js","webpack://CHARNAME's Bag of Macros/./src/scripts/hooks.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/daylight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/dispel-magic.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/fey-ancestry.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/spells.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/giant-insect.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/horde-passive.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/features.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/misc/insect-cloud.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/items.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/instrument-of-the-bards.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/protection-from-poison.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/ring-of-spell-storing.js","webpack://CHARNAME's Bag of Macros/./src/scripts/exceptions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/summon-celestial.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/summon-draconic-spirit.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/staff-of-swarming-insects.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/wand-of-fear.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/class/bard/song-of-rest.js","webpack://CHARNAME's Bag of Macros/./src/scripts/index.js","webpack://CHARNAME's Bag of Macros/./src/scripts/socket-functions.js","webpack://CHARNAME's Bag of Macros/webpack/bootstrap","webpack://CHARNAME's Bag of Macros/webpack/runtime/define property getters","webpack://CHARNAME's Bag of Macros/webpack/runtime/hasOwnProperty shorthand","webpack://CHARNAME's Bag of Macros/webpack/startup"],"sourcesContent":["export const conditionLabels = {\r\n\tblinded: [\"blinded\", \"convenient effect: blinded\"],\r\n\tcharmed: [\"charmed\", \"convenient effect: charmed\"],\r\n\tconcentrating: [\"concentrating\", \"convenient effect: concentrating\"],\r\n\tdead: [\"dead\", \"convenient effect: dead\"],\r\n\tdeafened: [\"deafened\", \"convenient effect: deafened\"],\r\n\texhaustion1: [\"exhaustion 1\", \"convenient effect: exhaustion 1\"],\r\n\texhaustion2: [\"exhaustion 2\", \"convenient effect: exhaustion 2\"],\r\n\texhaustion3: [\"exhaustion 3\", \"convenient effect: exhaustion 3\"],\r\n\texhaustion4: [\"exhaustion 4\", \"convenient effect: exhaustion 4\"],\r\n\texhaustion5: [\"exhaustion 5\", \"convenient effect: exhaustion 5\"],\r\n\tfrightened: [\"frightened\", \"convenient effect: frightened\"],\r\n\tgrappled: [\"grappled\", \"convenient effect: grappled\"],\r\n\tincapacitated: [\"incapacitated\", \"convenient effect: incapacitated\"],\r\n\tinvisible: [\"invisible\", \"convenient effect: invisible\"],\r\n\tparalyzed: [\"paralyzed\", \"convenient effect: paralyzed\"],\r\n\tpetrified: [\"petrified\", \"convenient effect: petrified\"],\r\n\tpoisoned: [\"poisoned\", \"convenient effect: poisoned\"],\r\n\tprone: [\"prone\", \"convenient effect: prone\"],\r\n\trestrained: [\"restrained\", \"convenient effect: restrained\"],\r\n\tstunned: [\"stunned\", \"convenient effect: stunned\"],\r\n\tunconscious: [\"unconscious\", \"convenient effect: unconscious\"],\r\n\twounded: [\"wounded\", \"convenient effect: wounded\"]\r\n}\r\n\r\nexport const cloudSpellNames = [\r\n\t\"Cloudkill\",\r\n\t\"Incendiary Cloud\",\r\n\t\"Insect Plague\",\r\n\t\"Moonbeam\",\r\n\t\"Spirit Guardians\"\r\n]","import {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nexport const deleteTempItem = async ({args, item, workflow}, setDeleteItemFlags) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tif (setDeleteItemFlags) await setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nexport const deleteAuraEffectsWhenMoved = async (effectName, newTokenActorUuids, oldTokenActorUuids, originUuid) => {\r\n\tconst removalUuids = oldTokenActorUuids.filter(uuid => !newTokenActorUuids.includes(uuid))\r\n\tawait removalUuids.forEach(actorUuid => {\r\n\t\tconst actor = fromUuidSync(actorUuid)\t\r\n\t\tconst tokenEffect = actor.effects.find(effect => \r\n\t\t\teffect.name == effectName\r\n\t\t && effect.origin == originUuid\r\n\t\t)\r\n\t\tif (!tokenEffect) return false\r\n\t\tremoveEffect(tokenEffect.uuid)\r\n\t})\t\r\n}\r\nexport const getAuraParamsWhenMoved = async (dispositions, getEffectData, template, flagName) => {\r\n\tconst effectData = await getEffectData(template.flags[\"midi-qol\"].actorUuid, template.uuid)\r\n\tconst newTokenIds = game.modules.get(\"templatemacro\").api.findContained(template)\r\n\tconst newTokens = newTokenIds.map(id => \r\n\t\tcanvas.scene.collections.tokens.get(id)\r\n\t).filter(tokenDoc => \r\n\t\ttokenDoc.id != template.flags[\"midi-qol\"].tokenId\r\n\t && dispositions.includes(tokenDoc.disposition)\r\n\t)\r\n\tconst newTokenActorUuids = newTokens.map(token => token.actor.uuid)\r\n\tconst oldTokenActorUuids = template.flags.charname[flagName].tokenActorsEffected\r\n\treturn [effectData, newTokenActorUuids, oldTokenActorUuids]\r\n}\r\nexport const getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nexport const getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nexport const getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst hasSysConc = item.system.components?.concentration ?? false\r\n\tconst hasMidiConc = item.flags?.midiProperties?.concentration ?? false\r\n\tconst isConcentration = hasSysConc || hasMidiConc\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nexport const getDialogueButtons = (resolve, choices, getIconPaths, width, height, iconData) => {\t\r\n\treturn choices.reduce((buttons, choice, i) => {\r\n\t\tconst icon = getIconPaths(choice, iconData)\r\n\t\tconst newButton = {[choice]: {\r\n\t\t\tlabel: `<img src=${icon} width=${width} height=${height} style=\"border:0px\"><br>${choice}`,\r\n\t\t\tcallback: () => {\r\n\t\t\t\tresolve({value: `${choice}`})\r\n\t\t\t}\r\n\t\t}}\r\n\t\treturn {...buttons, ...newButton}\r\n\t}, {})\r\n}\r\nexport const getDialogueButtonType = async (choices, dialogueOptions, title, getIconPathsFunc, buttonWidth, buttonHeight, iconData) => { \r\n\treturn await (new Promise( (resolve) => {\t\r\n\t\tconst buttons = getDialogueButtons(resolve, choices, getIconPathsFunc, buttonWidth, buttonHeight, iconData)\t\t\r\n\t\tnew Dialog({\r\n\t\t\ttitle: title,\r\n\t\t\tbuttons: buttons\r\n\t\t}, dialogueOptions).render(true)\r\n}))}\r\nexport const getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nexport const getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nexport const getSpawnLocation = async (spawnIconPath, size, interval, tokenUuid, itemRange, originToken) => {\r\n\tawait setCrosshairConfigs(tokenUuid, itemRange, size)\r\n\tconst distanceAvailable = itemRange\r\n\tlet crosshairsDistance = 0\r\n\tconst checkDistance = async (crosshairs) => {\r\n\t\twhile (crosshairs.inFlight) {\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t\tconst ray = new Ray(originToken.center, crosshairs)\r\n\t\t\tconst distance = Math.ceil(canvas.grid.measureDistances([{ ray }], { gridSpaces: false })[0] / 5) * 5\r\n\t\t\tif (crosshairsDistance !== distance) {\r\n\t\t\t\tcrosshairsDistance = distance;\r\n\t\t\t\tif (distance > distanceAvailable) {\r\n\t\t\t\t\tcrosshairs.icon = 'icons/svg/hazard.svg';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcrosshairs.icon = spawnIconPath\r\n\t\t\t\t}\r\n\t\t\t\tcrosshairs.draw();\r\n\t\t\t\tcrosshairs.label = `${distance} ft`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst location = await warpgate.crosshairs.show(\r\n\t\t{\r\n\t\t\tsize: size,\r\n\t\t\tinterval: interval,\r\n\t\t\ticon: spawnIconPath,\r\n\t\t\tlabel: '0 ft.',\r\n\t\t},\r\n\t\t{\r\n\t\t\tshow: checkDistance\r\n\t\t},\r\n\t)\r\n\tif (location.cancelled || crosshairsDistance > distanceAvailable) {\r\n\t\treturn\r\n\t} else {\r\n\t\treturn location\r\n\t}\r\n}\r\nexport const getStringsOrExceptions = async (actor, defaultStrings, exceptionStrings) => {\r\n\tconst exceptionActorNames = exceptionStrings?.exceptionActorNames ?? []\r\n\treturn  exceptionActorNames.includes(actor.name) || exceptionActorNames == \"all\"\r\n\t\t? exceptionStrings \r\n\t\t: defaultStrings\t\r\n}\r\nexport const getTemplatesInRange = (templates, gridSize, gridScale, range, x1, y1) => {\r\n\t//gets templates where center of template within range of a cast template\r\n\treturn templates.filter(template => {\r\n\t\tconst [a, b] = [x1 - template.x, y1 - template.y]\r\n\t\tconst c  = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\tconst templateCentersDistance = c / gridSize\t\r\n\t\tconst templateRangeModified = template.distance / gridScale\t\r\n\t\tconst itemRangeModified = range / gridScale\t\t\r\n\t\treturn templateCentersDistance < templateRangeModified + itemRangeModified\r\n\t})\r\n}\r\nexport const getTemplatesWithOverlap = (eligibleTemplates, itemTemplatePositions) => {\r\n\treturn eligibleTemplates.filter(template => {\r\n\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\tconst templatePositions = canvas.grid.highlightLayers[gridTemplateId]?.positions ?? new Set(\"-1\")\r\n\t\treturn itemTemplatePositions.intersection(templatePositions).size > 0\r\n\t})\r\n}\r\nexport const getTokensInRange = async (tokens, gridSize, gridScale, itemRange, x1, y1) => {\r\n\treturn tokens.filter(token => {\r\n\t\tconst tokenTopLeftCenterX = token.x + gridSize / 2\r\n\t\tconst tokenTopLeftCenterY = token.y + gridSize / 2\r\n\t\tlet tokenGridBorderCoords = []\r\n\t\t\r\n\t\tfor (let i = 0; i <= token.width * 2 - 1; i++) {\r\n\t\t\tfor (let j = 0; j <= token.width * 2  - 1; j++) {\r\n\t\t\t\ttokenGridBorderCoords.push({x: tokenTopLeftCenterX + gridSize / 2 * i, y: tokenTopLeftCenterY + gridSize / 2 * j})\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst xArr = tokenGridBorderCoords.map(coord => coord.x)\r\n\t\tconst yArr = tokenGridBorderCoords.map(coord => coord.y)\r\n\t\tconst maxX = Math.max(...xArr)\r\n\t\tconst maxY = Math.max(...yArr)\r\n\t\tconst tokenGridCoords = tokenGridBorderCoords.filter(coords => coords.x != maxX && coords.y != maxY)\r\n\t\t\r\n\t\tconst tokenGridCoordsInRange = tokenGridCoords.filter(coord => {\r\n\t\t\tconst [x2, y2] = [coord.x, coord.y]\r\n\t\t\tconst a = x1 - x2\r\n\t\t\tconst b = y1 - y2\r\n\t\t\tconst c = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\t\treturn c / gridSize <= itemRange / gridScale\r\n\t\t})\r\n\t\t\r\n\t\treturn tokenGridCoordsInRange.length > 0\r\n\t})\r\n}\r\nexport const getUpdatedMacroNames = async (macroNames, flagName, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + `,[postRollFinished]function.CHARNAME.macros.${flagName}.deleteTempItem` \r\n\t\t\t: `[postRollFinished]function.CHARNAME.macros.${flagName}.deleteTempItem`\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + `,[postActiveEffects]function.CHARNAME.macros.${flagName}.setReactionHook`\r\n\t} \r\n\treturn update\r\n}\r\nexport const removeEffect = async (effectUuid) => {\r\n\treturn await MidiQOL.socket().executeAsGM(\"removeEffect\", {effectUuid: effectUuid})\r\n}\r\nexport const removeEffects = async (effectUuids) => {\r\n\treturn await MidiQOL.socket().executeAsGM(\"removeEffects\", effectUuids\r\n)}\r\nexport const setActiveEffects = async (tokenActorUuids, effectData) => {\r\n\tconst createEffect = async (tokenActorUuid, effectData) => {return await MidiQOL.socket().executeAsGM(\"createEffects\", {actorUuid: tokenActorUuid, effects: [effectData]})}\r\n\tconst [effects] = await Promise.all(tokenActorUuids.map(tokenActorUuid => createEffect(tokenActorUuid, effectData)))\r\n\treturn effects\r\n}\r\nexport const setActorConcDeletion = async (actor) => {\r\n\tif (actor.effects.find(effect => effect.name == \"Concentrating\")) actor.effects.find(effect => effect.name == \"Concentrating\").delete()\r\n} \r\nexport const setActorConcRemoveUuids = async (originActor, uuid) => {\r\n\tlet originActorConcentrationRemoveUuids = originActor.flags[\"midi-qol\"][\"concentration-data\"]?.removeUuids || []\r\n\toriginActorConcentrationRemoveUuids.push(uuid)\t\r\n\tawait originActor.update({\"flags.midi-qol\": {\"concentration-data\": {removeUuids: originActorConcentrationRemoveUuids}}})\r\n\tconst concEffect = originActor.effects.find(effect => effect.name == \"Concentrating\")\r\n\tawait concEffect.update({\r\n\t\t\"flags.dae\": {\"specialDuration\": [\"shortRest\", \"longRest\"]}\r\n\t})\r\n}\r\nexport const setActorReagentCost = async (actorUuid, itemUuid) => {\r\n\tconst actor = await fromUuid(actorUuid)\r\n\tconst item = await fromUuid(itemUuid)\t\r\n\tif (settings.reagentsConsume = \"money\")  {\r\n\t\t//set this to pull from the lower denominations first\r\n\t\tconst newMoney = actor.system.currency.gp - item.system.materials.cost\r\n\t\tif (newMoney < 0) return false\r\n\t\tactor.update({\"system.currency.gp\": newMoney})\r\n\t} else if (settings.reagentsConsume = \"supply\") {\r\n\t\tconst newSupply = item.system.materials.supply - 1\r\n\t\tif (newSupply < 0) return false\r\n\t\titem.update({\"system.materials.supply\": newSupply})\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n\treturn true\r\n}\r\nexport const setAuraEffectUpdatesWhenDeleted = async (effectName, flagName, template) => {\r\n\tconst tokenActorsEffected = template.flags?.charname[flagName]?.tokenActorsEffected ?? []\r\n\tconst effectUuids = await tokenActorsEffected.forEach(actorUuid => {\r\n\t\tconst actor = fromUuidSync(actorUuid)\t\t\t\r\n\t\tconst effect = actor.effects.find(effect => effect.name == effectName)\t\r\n\t\tif (!effect) return false\r\n\t\tremoveEffect(effect.uuid)\r\n\t})\t\r\n}\r\nexport const setAuraEffectsWhenEntered = async (effectName, flagName, getEffectData, template, token) => {\r\n\tconst tokenEffect = token.actor?.effects.find(effect => effect.name == effectName) ?? false\r\n\tif (!tokenEffect) {\r\n\t\tconst effectData = await getEffectData(template.flags[\"midi-qol\"].actorUuid, template.uuid)\r\n\t\tsetActiveEffects([token.actor.uuid], effectData)\r\n\t\tconst newActorUuids = [\r\n\t\t\t...template.flags.charname.insectCloud.tokenActorsEffected, \r\n\t\t\ttoken.actor.uuid\r\n\t\t]\r\n\t\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\t\tconst updatedTemplate = await template.update({\r\n\t\t\t[flag]: newActorUuids\r\n\t\t})\t\t\t\r\n\t}\t\r\n}\r\nexport const setAuraEffectsWhenLeft = async (effectName, flagName, template, token) => {\r\n\tconst tokenEffect = token.actor?.effects.find(effect => effect.name == effectName) ?? false\r\n\tif (tokenEffect) {\r\n\t\tremoveEffect(tokenEffect.uuid)\r\n\t\tconst newActorUuids = template.flags.charname[flagName].tokenActorsEffected.filter(actorUuid => \r\n\t\t\tactorUuid != token.actor.uuid\r\n\t\t)\r\n\t\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\t\tconst updatedTemplate = await template.update({\r\n\t\t\t[flag]: newActorUuids\r\n\t\t})\t\t\t\r\n\t}\t\r\n}\r\nexport const setAuraEffectsWhenMoved = async (effectData, flagName, newTokenActorUuids, oldTokenActorUuids, template) => {\r\n\tconst newUuidsToEffect = newTokenActorUuids.filter(uuid => \r\n\t\t!oldTokenActorUuids.includes(uuid)\r\n\t)\r\n\tsetActiveEffects(newUuidsToEffect, effectData)\t\r\n\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\ttemplate.update({\r\n\t\t[flag]: newTokenActorUuids\r\n\t})\t\t\r\n}\r\nexport const setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nexport const setCrosshairConfigs = async (tokenUuid, itemRange, size) => {\r\n\tconst target = await fromUuid(tokenUuid)\r\n\tconst {distance} = canvas.scene.grid\r\n\tconst adjustment = size > 0 \r\n\t\t? (canvas.grid.size * .5 * size) \r\n\t\t: (canvas.grid.size * .5)\r\n\twarpgate.crosshairs.show({\r\n\t\tlockSize:true,\r\n\t\tlockPosition: true,\r\n\t\tsize: 2 * itemRange / distance,\r\n\t\ttag: 'range',\r\n\t\tdrawIcon:false,\r\n\t\tlabel: 'Valid Area',\r\n\t\tx: target.x + adjustment,\r\n\t\ty: target.y + adjustment,\r\n\t\trememberControlled: true\r\n\t})\t\r\n\tcanvas.tokens.activate()\r\n}\r\nexport const setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nexport const setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nexport const setTemplateDispels = async (x, y, name, itemTemplatePositions) => {\r\n\tconst dnd5eFlaggedTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e)\r\n\tconst potentialTemplates = dnd5eFlaggedTemplates.filter(template => {\r\n\t\tconst originName = fromUuidSync(template.flags.dnd5e.origin).name\r\n\t\tif (!name) {\r\n\t\t\treturn template.flags.dnd5e.spellLevel\r\n\t\t} else {\r\n\t\t\treturn template.flags.dnd5e.spellLevel && originName == name\t\r\n\t\t}\r\n\t})\r\n\tconst templatesInRange = getTemplatesInRange(potentialTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 60, x, y)\r\n\tconst templatesWithOverlap = getTemplatesWithOverlap(templatesInRange, itemTemplatePositions)\r\n\ttemplatesWithOverlap.map(template => {socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)})\r\n}\r\nexport const updateAuraEffectsOnUse = async (actor, args, effectName, getEffectData, tokenActorUuids) => {\r\n\tconst effectData = await getEffectData(actor.uuid, args[0].templateUuid)\r\n\tconst [appliedEffect] = await setActiveEffects(tokenActorUuids, effectData)\r\n\tconst liveActor = await fromUuid(actor.uuid)\r\n\tconst templateEffect = liveActor.effects.find(effect => effect.name == effectName)\r\n\tconst updatedChanges = [...templateEffect.changes, ...appliedEffect.changes]\r\n\ttemplateEffect.update({\"changes\": updatedChanges})\r\n}\r\nexport const updateAuraFlags = async (flagName, template, tokenActorUuids) => {\r\n\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\tconst updatedTemplate = await template.update({\r\n\t\t[flag]: tokenActorUuids\r\n\t})\t\t\r\n}\r\nexport const updateAuraWhenMoved = async (dispositions, effectName, flagName, getEffectData, template) => {\r\n\tconst [\r\n\t\teffectData, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids\r\n\t] = await getAuraParamsWhenMoved(dispositions, getEffectData, template, flagName)\r\n\tdeleteAuraEffectsWhenMoved(\r\n\t\teffectName, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids,\t\t\r\n\t\ttemplate.flags[\"midi-qol\"].actorUuid\r\n\t)\r\n\tsetAuraEffectsWhenMoved(\r\n\t\teffectData, \r\n\t\tflagName, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids, \r\n\t\ttemplate\r\n\t)\t\r\n}\r\nexport const updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}","import {conditionLabels as c} from \"../constants.js\"\r\nimport {getSpawnLocation} from \"../helper-functions.js\"\r\nimport {setSpawnedTokensInitiative}  from \"../socket-functions.js\"\r\n\r\n//review for later:\r\n//think about adding sounds to the sequencers?\r\n//see if you can fix the buggy useTokenDeleteSequencer Math.random thing\r\n//add the linear fade in thing for the sequencers\r\n\r\n//leaving as example of how override data is more or less laid out \r\n//don't forget to toString() your functions before passing them!\r\n//overrides: {\r\n//\tgeneral: {\r\n//\t\tamountToSpawnByIndex: [10, 3, 5, 1]\r\n//\t}\r\n//\tsequencer: {\r\n//\t\tpre: usePreEffectSequencer.toString(),\r\n//\t\tpost: usePostEffectSequencer.toString(),\r\n//\t\tdelete: useTokenDeleteSequencer.toString(),\r\n//\t\toptions: {\r\n//\t\t\tcircleNum: \"02\",\r\n//\t\t\tcolor: \"green\",\r\n//\t\t\timpactNum: \"011\"\r\n//\t\t\tscale: .15,\r\n//\t\t\tschool: \"conjuration\"\r\n//\t}},\r\n//\twarpGate: {\r\n//\t\tcallbacks: callbackFunc.toString()\r\n//\t\tmutations: {\r\n//\t\t\ttoken: {},\r\n//\t\t\tactor: {}\r\n//\t\t},\r\n//\t\toptions: {\r\n//\t\t\tcontrollingActor: actor\r\n//\t\t}\r\n//\t}\r\n//}\r\n\r\nconst checkCombatActivity = async (token) => {\r\n\tconst combatIsActive = game.combat?.active ?? false\r\n\tif (!combatIsActive) return false\r\n\tconst sourceCombatDoc = game.combat.turns.find(doc => doc.tokenId == token.id)\t\r\n\tif (!sourceCombatDoc) return false\t\r\n\treturn sourceCombatDoc\r\n}\r\nconst createSpawn = async (actor, choice, item, overrides, strings, token) => {\r\n\tconst concEffect = await getConcEffect(token)\r\n\tconst spawnUuids = await createSpawnTokens(actor, choice, concEffect, item, overrides, strings, token)\r\n\tif (!concEffect) return false\r\n\tupdateInitiatives(spawnUuids, token)\r\n\tupdateConcEffect(concEffect, spawnUuids, token)\r\n}\r\nconst createSpawnTokens = async (actor, choice, concEffect, item, overrides, strings, token) => {\r\n\tconst params = await getSpawnParams(\r\n\t\tactor, \r\n\t\tchoice, \r\n\t\tconcEffect, \r\n\t\titem, \r\n\t\toverrides,\r\n\t\tstrings,\r\n\t\ttoken\r\n\t)\t\r\n\tconst spawnIds = await setWarpGateSpawn(params, item, overrides, token)\t\t\r\n\treturn spawnIds.map(id => {\t\t\r\n\t\tconst token = canvas.scene.tokens.find(tokenDoc => tokenDoc.id == id)\t\r\n\t\treturn token.uuid\r\n\t})\t\r\n}\r\nconst getAmountToSpawn = async (choice, overrides, strings) => {\r\n\tconst overrideAmountToSpawn = overrides?.general?.amountToSpawnByIndex ?? 1\r\n\tif (typeof overrideAmountToSpawn == \"number\") return overrideAmountToSpawn\r\n\treturn overrideAmountToSpawn[strings.choices.indexOf(choice)]\t\r\n}\r\nconst getCallbacks = async (i, overrides, size, spawnName, originToken) => {\r\n\tconst overrideCallbacks = overrides?.warpGate?.callbacks ?? []\r\n\tif (overrideCallbacks.length > 0) return eval(overrideCallbacks)\r\n\treturn {\r\n\t\tpre: async (loc) => {\r\n\t\t\tusePreEffectSequencer(i, loc, originToken, size, overrides)\r\n\t\t\tawait warpgate.wait(200)\r\n\t\t},\r\n\t\tpost: async (loc, spawnToken) => {\r\n\t\t\tusePostEffectSequencer(loc, spawnToken, overrides)\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t}\r\n\t}\r\n}\r\nconst getConcEffect = async (token) => {\r\n\tconst liveActor = await fromUuid(token.actor.uuid)\r\n\treturn liveActor.effects.find(effect => \r\n\t\tc.concentrating.includes(effect.name.toLowerCase())\r\n\t)\t\t\r\n}\r\nconst getPreDeleteParams = async (tokenDoc) => {\r\n\tconst amountSpawned = tokenDoc.actor?.flags?.charname?.summoning?.amountSpawned ?? 1\t\r\n\tconst overrides = tokenDoc.actor?.flags?.charname?.summoning?.overrides ?? false\r\n\tconst deleteOverrides = tokenDoc.actor?.flags?.charname?.summoning?.overrides?.sequencer?.delete ?? false\t\r\n\tconst effectUuid = tokenDoc.actor?.flags?.charname?.summoning?.concEffect ?? false\r\n\tconst optionOverrides = tokenDoc.actor?.flags?.charname?.summoning?.overrides?.sequencer?.options ?? {}\t\r\n\treturn [amountSpawned, deleteOverrides, effectUuid, optionOverrides, overrides]\r\n}\r\nconst getPreEffectsSequencerParams = async (originToken, overrides, spawnSize) => {\r\n\tconst circleNum = overrides?.sequencer?.options?.circleNum ?? \"02\"\r\n\tconst color1 = overrides?.sequencer?.options?.circleColor1 ?? \"green\"\r\n\tconst color2 = overrides?.sequencer?.options?.circleColor2 ?? \"green\"\r\n\tconst school = overrides?.sequencer?.options?.school ?? \"conjuration\"\r\n\tconst scale = overrides?.sequencer?.options?.scale ?? .15\r\n\tconst originScale = Math.max(originToken.document.height, originToken.document.width) * scale\r\n\tconst spawnScale = spawnSize * scale\t\r\n\treturn [circleNum, color1, color2, school, originScale, spawnScale]\r\n}\r\nconst getSpawnDetails = async (choice, spawnName, strings) => {\r\n\tconst actor = game.actors.find(actor => actor.name == spawnName)\r\n\tconst iconPath = await getTexturePath(actor, choice, strings)//actor.prototypeToken.texture.src\r\n\tconst size = Math.max(actor.prototypeToken.height, actor.prototypeToken.height)\r\n\treturn [iconPath, size]\r\n}\r\nconst getSpawnParams = async (actor, choice, concEffect, item, overrides, strings, token) => {\r\n\tconst options = overrides?.warpGate?.options ?? {controllingActor: actor}\r\n\tconst spawnName = strings.spawnNames[strings.choices.indexOf(choice)]\r\n\tconst [iconPath, size] = await getSpawnDetails(choice, spawnName, strings)\r\n\tconst amountToSpawn = await getAmountToSpawn(choice, overrides, strings)\r\n\tconst updates = await getSpawnUpdates(amountToSpawn, concEffect, overrides, token)\r\n\tconst interval = size % 2 == 1 ? -1 : 1\r\n\treturn {amountToSpawn, iconPath, interval, options, size, spawnName, updates}\r\n}\r\nconst getSpawnUpdates = async (amountToSpawn, concEffect, overrides, token) => {\r\n\tconst concEffectUuid = !concEffect ? null : concEffect.uuid\r\n\tconst defaultMutations = {\r\n\t\ttoken: {\r\n\t\t\t\"alpha\": 0,\r\n\t\t\t\"disposition\": token.document.disposition\r\n\t\t}, \r\n\t\tactor: \r\n\t\t{\r\n\t\t\t\"flags.charname.summoning.amountSpawned\": amountToSpawn,\r\n\t\t\t\"flags.charname.summoning.concEffect\": concEffectUuid,\r\n\t\t\t\"flags.charname.summoning.overrides\": overrides\r\n\t\t}\r\n\t}\t\r\n\tconst combinedMutations = mergeObject(\r\n\t\tdefaultMutations, \r\n\t\toverrides.warpGate.mutations, \r\n\t\t{overwrite: true, inlace: true, insertKeys: true, insertValues: true}\r\n\t)\r\n\treturn combinedMutations\r\n}\r\nconst getTexturePath = async (actor, choice, strings) => {\r\n\tconst defaultIconPath = strings.defaultIcons[strings.choices.indexOf(choice)]\r\n\treturn defaultIconPath.length > 0 ? defaultIconPath : actor.prototypeToken.texture.src\r\n}\r\nconst onPreDeleteToken = async (tokenDoc, config, user) => {\r\n\tconst theGmUser = game.users.find(user => user.isTheGM)\r\n\tif (game.users.get(user).id != theGmUser.id) return false\t\r\n\tconst [\r\n\t\tamountSpawned, \r\n\t\tdeleteOverrides, \r\n\t\teffectUuid, \r\n\t\toptionOverrides,\r\n\t\toverrides\r\n\t] = await getPreDeleteParams(tokenDoc)\r\n\tif (!deleteOverrides) {\r\n\t\tuseTokenDeleteSequencer(tokenDoc, overrides)\r\n\t} else {\r\n\t\teval(overrides.delete)(tokenDoc, optionOverrides)\r\n\t}\r\n\tif (effectUuid) {\r\n\t\tlet concEffect = await fromUuid(effectUuid)\t\t\t\r\n\t\tlet created = concEffect.flags.charname.summoning.totalSpawnCreated\r\n\t\tlet deleted = concEffect.flags.charname.summoning.totalSpawnDeleted\t\t\r\n\t\t//adding random delay to account for multiple things trying to update all at once\r\n\t\t//refactor this later to see if you can get it to work by using a set or something\r\n\t\tconst delay = Math.floor(Math.random() * 800 * (created - deleted))\r\n\t\tawait warpgate.wait(delay)\t\t\t\r\n\t\tconcEffect = await fromUuid(effectUuid)\t\t\r\n\t\tcreated = concEffect.flags.charname.summoning.totalSpawnCreated\r\n\t\tdeleted = concEffect.flags.charname.summoning.totalSpawnDeleted\r\n\t\tconst newDeleted = deleted + 1\r\n\t\tif (created == newDeleted) {\r\n\t\t\tconcEffect.delete()\r\n\t\t\treturn false\r\n\t\t}\t\r\n\t\tconst updatedConc = await concEffect.update({\"flags\": {\"charname.summoning.totalSpawnDeleted\": newDeleted}})\r\n\t}\r\n}\r\nconst setSpawnedTokensToActive = async (spawnUuids, token) => {\r\n\treturn canvas.scene.tokens.filter(\r\n\t\ttoken => spawnUuids.includes(token.uuid)\r\n\t).map(tokenDoc => {\r\n\t\tconst combatToken = canvas.tokens.placeables.find(token => token.id == tokenDoc.id)\r\n\t\tcombatToken.toggleCombat()\r\n\t\treturn tokenDoc.id\r\n\t})\t\r\n}\r\nconst setWarpGateSpawn = async (params, item, overrides, token) => {\r\n\tconst {\r\n\t\tamountToSpawn, \r\n\t\ticonPath, \r\n\t\tinterval, \r\n\t\toptions, \r\n\t\tsize, \r\n\t\tspawnName, \r\n\t\tupdates\r\n\t} = params\r\n\tlet loc = {}\r\n\tlet spawnIds = []\r\n\tlet callbacks\r\n\tfor (let i = 0; i < amountToSpawn; i++) {\r\n\t\tloc = await getSpawnLocation(\r\n\t\t\ticonPath, \r\n\t\t\tsize, \r\n\t\t\tinterval, \r\n\t\t\ttoken.document.uuid, \r\n\t\t\titem.system.range.value, \r\n\t\t\ttoken\r\n\t\t)\r\n\t\tcallbacks = await getCallbacks(i, overrides, size, spawnName, token) \r\n\t\tspawnIds.push(await warpgate.spawnAt(\r\n\t\t\t{x: loc.x, y: loc.y}, \r\n\t\t\tspawnName, \r\n\t\t\tupdates, \r\n\t\t\tcallbacks, \r\n\t\t\toptions\r\n\t\t))\r\n\t}\r\n\treturn spawnIds\r\n}\r\nconst updateCombatDocs = async (activeTokenIds, init) => {\r\n\t//literally takes a moment to add token to combat\t\r\n\tawait warpgate.wait(1000) \t\r\n\tconst combatDocs = game.combat.turns.filter(doc => activeTokenIds.includes(doc.tokenId))\r\n\tsetSpawnedTokensInitiative(combatDocs, init)\t\r\n}\r\nconst updateConcEffect = async (concEffect, spawnUuids, token) => {\r\n\tconst deleteUuidChanges = spawnUuids.map(uuid => {\r\n\t\treturn {\r\n\t\t\t\"key\": \"flags.dae.deleteUuid\",\r\n\t\t\t\"mode\": 2,\r\n\t\t\t\"priority\": 20,\r\n\t\t\t\"value\": uuid\r\n\t\t}\r\n\t})\r\n\tconst changes = [...concEffect.changes, ...deleteUuidChanges]\r\n\tconst spawnFlags = {\r\n\t\t\"charname.summoning.totalSpawnCreated\": spawnUuids.length,\r\n\t\t\"charname.summoning.totalSpawnDeleted\": 0,\r\n\t\t\"charname.summoning.concEffect\": concEffect.uuid\r\n\t}\r\n\tconcEffect.update({\"changes\": changes, \"flags\": spawnFlags})\t\r\n}\r\nconst updateInitiatives = async (spawnUuids, token) => {\r\n\tconst sourceCombatDoc = await checkCombatActivity(token)\r\n\tif (!sourceCombatDoc) return false\r\n\tconst activeTokenIds = await setSpawnedTokensToActive(spawnUuids, token)\r\n\tconst init = sourceCombatDoc?.initiative ?? false\r\n\tif (!init) return false \r\n\tupdateCombatDocs(activeTokenIds, init)\r\n}\r\nconst usePostEffectSequencer = async (loc, token, overrides) => {\r\n\tconst sequencer = overrides?.sequencer?.post ?? \"\"\r\n\tif (sequencer.length > 0) {\r\n\t\teval(overrides.sequencer.post)(loc, token)\r\n\t\treturn false\r\n\t}\t\r\n\tawait warpgate.wait(2100)\r\n\tconst impactColor = overrides?.sequencer?.options?.impactColor1 ?? \"green\"\r\n\tconst impactNum = overrides?.sequencer?.options?.impactNum1 ?? \"003\"\r\n\tconst sequencerPath = `jb2a.impact.${impactNum}.${impactColor}`\r\n\tconst {ms, options} = overrides?.sequencer?.options?.fadeIn \r\n\t\t?? {ms: 600, options: {ease: \"easeInQuart\"}}\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t\t.fadeIn(ms, options)\r\n\t\t\t\t.opacity(1)\r\n\t\t.play()\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation(token)\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.opacity(1.0)\r\n\t\t.play()\t\t\r\n}\r\nconst usePreEffectSequencer = async (i, loc, originToken, spawnSize, overrides) => {\r\n\tconst overrideSequencer = overrides?.sequencer?.pre ?? \"\"\r\n\tif (overrideSequencer.length > 0) {\r\n\t\teval(overrides.sequencer.pre)(loc, token)\r\n\t\treturn false\r\n\t}\t\r\n\tconst [\r\n\t\tcircleNum, \r\n\t\tcolor1, \r\n\t\tcolor2,\r\n\t\tschool, \r\n\t\toriginScale, \r\n\t\tspawnScale\r\n\t] = await getPreEffectsSequencerParams(originToken, overrides, spawnSize)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.intro.${color2}`)\r\n\t\t\t.scale(spawnScale)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(loc)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.loop.${color2}`)\r\n\t\t\t.scale(spawnScale)\r\n\t\t\t.atLocation(loc)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.outro.${color2}`)\r\n\t\t\t.scale(spawnScale)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(loc)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\r\n\tif (i == 0) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.intro.${color1}`)\r\n\t\t\t\t.scale(originScale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation(originToken)\r\n\t\t\t\t.belowTokens() \r\n\t\t\t\t.waitUntilFinished(-1150)\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.loop.${color1}`)\r\n\t\t\t\t.scale(originScale)\r\n\t\t\t\t.atLocation(originToken)\r\n\t\t\t\t.belowTokens() \r\n\t\t\t\t.fadeIn(200)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.waitUntilFinished(-1150)\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.outro.${color1}`)\r\n\t\t\t\t.scale(originScale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation(originToken)\r\n\t\t\t\t.belowTokens() \r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst useTokenDeleteSequencer = async (token, overrides) => {\r\n\tconst overrideSequencer = overrides?.sequencer?.delete ?? \"\"\r\n\tif (overrideSequencer.length > 0) {\r\n\t\teval(overrides.sequencer.delete)(loc, token)\r\n\t\treturn false\r\n\t}\t\r\n\tconst color = overrides?.sequencer?.options?.impactColor2 ?? \"green\"\r\n\tconst impactNum = overrides?.sequencer?.options?.impactNum2 ?? \"003\"\r\n\tconst {ms, options} = overrides?.sequencer?.options?.fadeIn \r\n\t\t?? {ms: 600, options: {ease: \"easeInQuart\"}}\r\n\tconst sequencerPath = `jb2a.impact.${impactNum}.${color}`\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.fadeIn(ms, options)\r\n\t\t\t\t.opacity(1)\r\n\t\t.play()\t\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation(token)\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.opacity(1.0)\r\n\t\t.play()\t\t\r\n}\r\n\r\nexport const summoning = {\r\n\tcreateSpawn,\r\n\tonPreDeleteToken\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {getTokensInRange} from \"../../helper-functions.js\"\r\n\r\nasync function getEligibleTokenDocuments(tokenDocuments, scene, itemRange, originX, originY) {\r\n\tconst tokenDocsInRange = await getTokensInRange(tokenDocuments, scene.grid.size, scene.grid.distance, itemRange, originX, originY)\r\n\tif (!tokenDocsInRange) return false\r\n\tconst templateNonEffectedTokens = await getNonTemplateEffectedTokenDocs(tokenDocsInRange)\r\n\tif (!templateNonEffectedTokens) return false\r\n\treturn templateNonEffectedTokens\r\n}\r\nasync function getNonTemplateEffectedTokenDocs(tokenDocuments, itemEffectName) {\r\n\treturn tokenDocuments.filter(token => {\r\n\t\tconst effects = token.actor.statuses\r\n\t\treturn effects.has(itemEffectName) == false\r\n\t})\r\n}\r\nconst onUse = async ({args, workflow, item, actor, token}) => {\r\n\tconst itemEffectName = \"Convenient Effect: Aura of Purity\"\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\tconst scene = await fromUuid(template.parent.uuid)\r\n\tconst itemRange = args[0].item.system.target.value\r\n\tconst tokenDocs = Array.from(scene.collections.tokens.values())\r\n\t\r\n\tconst eligibleTokenDocs = await getEligibleTokenDocuments(tokenDocs, scene, itemRange, template.x, template.y)\r\n\tif (!eligibleTokenDocs) return false\r\n\r\n\tconst tokenEffectUuids = await setTokenEffects(eligibleTokenDocs, token.document.disposition)\r\n\tawait template.update({\r\n\t\t\"flags.castData.auraOfPurity.tokensEffected\": tokenEffectUuids\r\n\t})\r\n}\r\nconst preTargetSave = async ({args, workflow, item, actor}) => {\r\n\tconst itemHasEffect = item.effects.some(effect => effect.changes.some(change => {\r\n\t\treturn conditionLabels[\"blinded\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"charmed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"deafened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"frightened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"paralyzed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"stunned\"].includes(change.value.toLowerCase())\r\n\t}))\r\n\tif (itemHasEffect) workflow.saveDetails.advantage = true\r\n}\r\nasync function setTokenEffects(tokenDocs, casterDisposition) {\r\n\tlet effected = []\r\n\tlet uuid = \"\"\r\n\tfor (let i=0; i < tokenDocs.length; i++) {\r\n\t\tconsole.log(\"tokenDocs[i]\")\r\n\t\tconsole.log(tokenDocs[i])\r\n\t\tuuid = tokenDocs[i].actor.uuid\r\n\t\tif ((casterDisposition == 1 && tokenDocs[i].disposition != -1)\r\n\t\t\t|| (casterDisposition == -1  && tokenDocs[i].disposition != 1)) {\r\n\t\t\tgame.dfreds.effectInterface.addEffect( {effectName: 'Aura of Purity', uuid} )\r\n\t\t\teffected.push(uuid)\r\n\t\t}\r\n\t}\r\n\treturn effected\r\n}\r\n\r\nexport const auraOfPurity = {\r\n\tpreTargetSave,\r\n\tonUse\r\n}","const getBlightEffectData = async (origin) => {\r\n\treturn {\r\n\t\tname: `Blight Saving Throw Disadvantage`, \r\n\t\ticon: \"icons/magic/movement/chevrons-down-yellow.webp\", \r\n\t\torigin: origin,\r\n\t\tchanges: [{key: \"flags.midi-qol.disadvantage.ability.save.all\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [\"1\"], \"priority\": 20}],\r\n\t\t\"flags.dae.stackable\": \"noneName\",\r\n\t\t\"flags.times-up.isPassive\": true,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\", \"combatEnd\", \"isSave\"],\r\n\t\t\"flags.dae.showIcon\": false,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst setBlightHook = async (castLevel) => {\r\n\tconst blightPreDamageRollHookId = Hooks.once(\"dnd5e.preRollDamage\", (rolledItem, rollConfig) => {\r\n\t\tconst maxDamageRoll = 8 * castLevel + 32\r\n\t\tconst maxDamageString = String(maxDamageRoll) + \"[necrotic]\" \r\n\t\trollConfig.parts = [maxDamageString]\r\n\t})\t\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].hitTargets[0].actor.system.details.type.value == \"plant\") {\r\n\t\tconst effectData = await getBlightEffectData(args[0].item.uuid)\r\n\t\tawait MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: args[0].hitTargets[0].actor.uuid, effects: [effectData] })\r\n\t\tawait setBlightHook(args[0].castData.castLevel)\r\n\t}\t\r\n}\r\n\r\nexport const blight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getSpawnLocation, setActorConcDeletion, setActorConcRemoveUuids} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getSpawnUpdates = async (originActorSenses, originTokenSight) => {\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"alpha\": 0,\r\n\t\t\t\"sight\": originTokenSight\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"system.attributes.senses\": originActorSenses\r\n\t\t}\r\n\t}\r\n}\r\nconst getTokenSpawnIds = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawnedTokenId = await setSpawnedTokenId(tokenUuid, itemRange, actor, originToken)\r\n\tconst spawnedToken = canvas.scene.collections.tokens.get(spawnedTokenId)\r\n\treturn spawnedToken.uuid\r\n}\r\nconst getWarpgateCallbacks = async (tokenUuid) => {\r\n\treturn {\r\n\t\tpre: async (template,update,token) => {\r\n\t\t\tsetEffectsSequencer(template, update, token, tokenUuid)\r\n\t\t\tawait warpgate.wait(2650)\r\n\t\t},\r\n\t\tpost: async (template, token) => {\r\n\t\t\tsetPostEffectsSequencer(template,token)\r\n\t\t}\r\n\t}\r\n}\r\nconst getWarpgateOptions = async (actor) => {\r\n\treturn {controllingActor: actor}\r\n}\r\nconst getWarpgateUpdates = async (spawn, originActorSenses, originTokenSight) => {\r\n\tconst updates = await getSpawnUpdates(originActorSenses, originTokenSight)\r\n\treturn mergeObject(updates, spawn)\r\n}\r\nconst setEffectsSequencer = async (template, update, token, originTokenUuid) => {\r\n\tconst color = \"blue\"\r\n\tconst originToken = await fromUuid(originTokenUuid)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.intro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.loop.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.outro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\t\r\n}\r\nconst setHookMacros = async (actor, spawnedTokenUuid) => {\r\n\tconst userIsGM = game.users.find(user => user.id == game.userId).isTheGM\r\n\tif (!userIsGM) {\r\n\t\tawait socket.executeAsGM(\"setDeleteSummonConcentrationHook\", actor, spawnedTokenUuid)\r\n\t}\r\n\tconst deleteSummonConcentrationHookId = Hooks.on(\"deleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", deleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\r\n}\r\nconst setPostEffectsSequencer = async (template, token) => {\r\n\tconst sequencerPath = \"jb2a.impact.009.blue\"\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.fadeIn(250)\t\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\t\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t.play()\r\n\t\r\n}\r\nconst setPostSpawnEffects = async (spawnedTokenUuid, originTokenActorUuid) => {\r\n\tconst fromUuidActor = await fromUuid(originTokenActorUuid)\r\n\tawait setActorConcRemoveUuids(fromUuidActor, spawnedTokenUuid)\r\n\tawait setHookMacros(fromUuidActor, spawnedTokenUuid)\t\r\n}\r\nconst setSpawnedTokenId = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawn = {\r\n\t\ttoken: { name:\"Clairvoyance\"},\r\n\t\tactor: { name:\"Clairvoyance\"}\r\n\t}\r\n\tconst location = await getSpawnLocation(\"modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_Grey_Sphere_400x400.webm\", 1, 4, tokenUuid, itemRange, originToken)\r\n\tconst spawnedTokenId = await warpgate.spawnAt({x: location.x, y: location.y}, spawn.token.name, await getWarpgateUpdates(spawn, actor.system.attributes.senses, originToken.document.sight), await getWarpgateCallbacks(tokenUuid), await getWarpgateOptions(actor))\r\n\treturn spawnedTokenId[0]\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tawait setActorConcDeletion(actor)\r\n\t} else {\t\r\n\t\tconst spawnedTokenUuid = await getTokenSpawnIds(args[0].tokenUuid, 5280, actor, token)\t\t\r\n\t\tawait setPostSpawnEffects(spawnedTokenUuid, token.document.actor.uuid)\t\r\n\t}\r\n}\r\n\r\nexport const clairvoyance = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getTemplatesInRange, getTemplatesWithOverlap} from \"./helper-functions.js\"\r\nimport {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const setAreaEffectDeleteHook = async (range, x, y, ineligibleEffectNames, minSpellLevel, originTemplateActiveEffect, itemTemplatePositions) => {\r\n\tconst setAreaEffectDeleteHookId = Hooks.on(\"refreshMeasuredTemplate\", (templateData) => {\r\n\t\tconst template = templateData.document\t\t\r\n\t\tconst originFlag = template.flags?.dnd5e?.origin ?? false\r\n\t\tconst templateSpellLevel = template.flags?.dnd5e?.spellLevel ?? 0\r\n\t\tif (!originFlag || templateSpellLevel > minSpellLevel) return false\t\t\r\n\t\tconst origin = fromUuidSync(template.flags.dnd5e.origin)\r\n\t\tif (ineligibleEffectNames.includes(origin.name) || ineligibleEffectNames == \"all\") {\t\r\n\t\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\t\tconst gridTemplatePositions = canvas.grid.highlightLayers[gridTemplateId].positions\t\r\n\t\t\tconst templatesOverlap = itemTemplatePositions.intersection(gridTemplatePositions).size > 0 \r\n\t\t\tif (!templatesOverlap) return false\r\n\t\t\t//waiting for potential concentration effects to cycle through\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsocket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)\r\n\t\t\t}, 200)\t\t\t\t\r\n\t\t}\r\n\t})\r\n\tawait setAreaEffectDeleteHookOff(originTemplateActiveEffect, setAreaEffectDeleteHookId)\r\n}\r\nexport const setAreaEffectDeleteHookOff = async (templateEffect, setAreaEffectDeleteHookId) => {\r\n\tconst setAreaEffectDeleteHookOffId = Hooks.on(\"deleteActiveEffect\", (effect, config) => {\t\t\t\r\n\t\tif (effect.uuid == templateEffect.uuid) {\r\n\t\t\tHooks.off(\"createMeasuredTemplate\", setAreaEffectDeleteHookId)\r\n\t\t\tHooks.off(\"deleteActiveEffect\", setAreaEffectDeleteHookOffId)\r\n\t\t}\r\n\t})\r\n}","import {getDialogueButtonType, setActiveEffects, setTemplateDispels} from \"../../helper-functions.js\"\r\nimport {setAreaEffectDeleteHook} from \"../../hooks.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getEffectOriginData = async (originUuid, lightId) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\torigin: originUuid,\r\n\t\tchanges: [{key: \"macro.execute\", mode: 0, value: \"function.CHARNAME.macros.daylight.setSpellEffects\"}],\r\n\t\t\"flags.castData.daylight.lightId\": lightId,\r\n\t\t\"flags.dae.showIcon\": false,\t\t\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": true,\t\t\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectTokenData = async (originUuid) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\tduration: {rounds: 600},\r\n\t\torigin: originUuid,\r\n\t\tchanges: [\r\n\t\t\t{key: `ATL.light.dim`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [120]},\r\n\t\t\t{key: `ATL.light.bright`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [60]},\r\n\t\t\t{key: `ATL.light.attenuation`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [.35]}\r\n\t\t],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": false,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.showIcon\": true,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area of Effect\":\r\n\t\t\treturn \"icons/magic/air/weather-clouds-sunlight.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/air/weather-sunlight-sky.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst setAreaChoiceEffects = async (templateUuid, templateEffect, tokenActorUuid, itemUuid, positions) => {\r\n\tconst [x, y] = await setTemplateEffects(templateUuid, templateEffect, positions)\r\n\tconst lightParams = {\"x\": x, \"y\": y, \"config\": {\"bright\": 60, \"dim\": 120, \"attenuation\": .4}}\r\n\tconst [sanitizedLight] = await socket.executeAsGM(\"setAmbientLightCreate\", lightParams)\r\n\tconst [effect] = await setActiveEffects([tokenActorUuid], await getEffectOriginData(itemUuid, sanitizedLight._id))\t\r\n\tawait setAreaEffectDeleteHook(60, x, y, [\"Darkness\"], 9, effect, positions)\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token) => {\r\n\tif (!token) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation({\"x\": x, \"y\": y})\r\n\t\t\t.play()\t\t\t\t\r\n\t} else {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.attachTo(token)\r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst setInitChoice = async (itemUuid)  => {\r\n\tconst type = await getDialogueButtonType([\"Area of Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Daylight?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tconst target = game.user.targets.first()\r\n\t\tawait setActiveEffects([target.document.actor.uuid], await getEffectTokenData(itemUuid))\r\n\t\tawait setEffectsSequencer(0, 0, target.document.width, target)\r\n\t\treturn false\t\t\t\r\n\t}\t\r\n\treturn true\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tconst isAreaChoice = await setInitChoice(item.uuid)\r\n\t\tif (!isAreaChoice) return false\r\n\t} else if (args[0].tag == \"OnUse\" && args[0].macroPass == \"postActiveEffects\") {\r\n\t\tconst templateId = \"MeasuredTemplate.\" + args[0].templateId \r\n\t\tconst templatePositions = canvas.grid.highlightLayers[templateId].positions\r\n\t\tconst templateEffect = actor.effects.find(effect => effect.name == \"Daylight Template\")\r\n\t\tawait setAreaChoiceEffects(args[0].templateUuid, templateEffect, token.document.actor.uuid, item.uuid, templatePositions)\r\n\t} else if (args[0] == \"off\")  {\r\n\t\tconst lastArg = args[args.length - 1]\r\n\t\tawait socket.executeAsGM(\"setAmbientLightDelete\", lastArg.efData.flags.castData.daylight.lightId)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setTemplateEffects = async (templateUuid, templateEffect, templatePositions) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tawait setEffectsSequencer(template.x, template.y, 7, false)\r\n\tawait setTemplateDispels(template.x, template.y, \"Darkness\", templatePositions)\r\n\ttemplateEffect.delete()\r\n\treturn [template.x, template.y]\r\n}\r\n\r\nexport const daylight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getDialogueButtonType, getTemplatesInRange} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst deleteEffectsOnToken = async (casterToken, dispelAbility, dispelLevel) => {\r\n\tconst target = game.user.targets.first()\t\r\n\tconst [effectsLTE2DispelLevel, effectsGTDispelLevel] = await getTokenEffects(target, dispelLevel)\r\n\tconst effectsIdsToDelete = await getEffectsToDelete(casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel)\r\n\teffectsIdsToDelete.map(socket.executeAsGM(\"setActiveEffectDelete\", target.actor, effectsIdsToDelete[i]))\r\n}\r\nconst deleteTemplate = async (casterToken, dispelAbility, dispelLevel, selectedTemplate) => {\r\n\tconst spellLevel = selectedTemplate.flags.dnd5e.spellLevel\r\n\tconst templatesToDelete = dispelLevel < spellLevel ? await getTemplatesToDelete(casterToken, dispelAbility, [selectedTemplate]) : [selectedTemplate]\r\n\ttemplatesToDelete.map(template => socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid))\r\n}\r\nconst getEffectsToDelete = async (casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel) => {\r\n\tconst casterAbilityMod = casterToken.actor.system.abilities[dispelAbility].mod\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet effectCastLevel = 0\r\n\tfor (let i = 0; i < effectsGTDispelLevel.length; i++) {\r\n\t\teffectCastLevel = effectsGTDispelLevel[i].flags[\"midi-qol\"].castData.castLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > effectCastLevel + 10) arr.push(effectsGTDispelLevel[i])\t\t\r\n\t}\r\n\treturn effectsLTE2DispelLevel.concat(arr).map(effect => effect.id)\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area Effect\":\r\n\t\t\treturn \"icons/magic/air/air-burst-spiral-blue-gray.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/nature/plant-sprout-hand-blue.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelectedTemplate = async (casterToken) => {\r\n\tconst eligibleTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e.spellLevel > 0)\r\n\tconst inRangeEligibleTemplates = getTemplatesInRange(eligibleTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 120, casterToken.x, casterToken.y)\t\r\n\tlet originItem\r\n\tlet originItems = []\r\n\tfor (let i = 0; i < inRangeEligibleTemplates.length; i++) {\r\n\t\toriginItem = await fromUuid(inRangeEligibleTemplates[i].flags.dnd5e.origin)\r\n\t\toriginItems.push(originItem)\r\n\t}\r\n\treturn await getTemplateSelection(originItems, inRangeEligibleTemplates)\r\n}\r\nconst getTemplateSelection = async (items, inRangeEligibleTemplates) => {\r\n\tconst sortedTemplates = inRangeEligibleTemplates.sort((a, b) => {\r\n\t\tconst aOrig = fromUuidSync(a.flags.dnd5e.origin)\t\r\n\t\tconst bOrig = fromUuidSync(b.flags.dnd5e.origin)\r\n\t\treturn aOrig.name.localeCompare(bOrig.name)\r\n\t})\r\n\tconst templateSelections = items.map((item, i) => {\r\n\t\tconst itemOwnerName = canvas.scene.tokens?.find(token => token.actor.uuid == item.parent.uuid)?.name ?? \"unknown\"\r\n\t\tconst itemLabel = item.name + \" from \" + itemOwnerName\t\r\n\t\treturn {type: 'radio', label: itemLabel}\r\n\t}).sort((a, b) => a.label.localeCompare(b.label))\t\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: templateSelections\r\n\t\t},{\r\n\t\t\ttitle: \"Which template to dispel?\",\r\n\t\t\trender: (...args) => { console.log(...args); ui.notifications.info(\"render!\")},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100px\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn sortedTemplates[choices.inputs.indexOf(true)]\r\n}\r\nconst getTemplatesToDelete = async (casterToken, dispelAbility, potentialTemplates) => {\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet templateCastLevel = 0\r\n\tfor (let i = 0; i < potentialTemplates.length; i++) {\r\n\t\ttemplateCastLevel = potentialTemplates[i].flags.dnd5e.spellLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > potentialTemplates[i].flags.dnd5e.spellLevel + 10) arr.push(potentialTemplates[i])\t\t\r\n\t}\t\r\n\treturn arr\r\n}\r\nconst getTokenEffects = async (token, dispelLevel) => {\r\n\t//get two groups, 1: effects w/ spell levels lesser than or equal to the casted spell level of dispel magic; and 2: the same with greater than that level\r\n\tconst effectsLTE2DispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > 0 && effect.flags[\"midi-qol\"].castData.baseLevel <= dispelLevel)\r\n\tconst effectsGTDispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > dispelLevel)\r\n\treturn [effectsLTE2DispelLevel, effectsGTDispelLevel]\r\n} \r\nconst setInitChoice = async (casterUuid, dispelAbility, dispelLevel)  => {\r\n\tconst type = await getDialogueButtonType([\"Area Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Dispel Magic?\", getIconPaths, 60, 60)\r\n\tconst casterToken = await fromUuid(casterUuid)\t\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tdeleteEffectsOnToken(casterToken, dispelAbility, dispelLevel)\t\r\n\t} else if (type.value == \"Area Effect\") {\r\n\t\tconst selectedTemplate = await getSelectedTemplate(casterToken)\r\n\t\tdeleteTemplate(casterToken, dispelAbility, dispelLevel, selectedTemplate)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setSpellEffects = async ({args, item, workflow}) => {\r\n\tconst casterUuid = args[0].tokenUuid\r\n\tconst dispelAbility = args[0].actor.system.attributes.spellcasting\r\n\tconst dispelLevel = args[0].spellLevel < 3 ? 3 : args[0].spellLevel\r\n\tsetInitChoice(casterUuid, dispelAbility, dispelLevel)\r\n}\r\n\r\nexport const dispelMagic = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {conditionLabels} from \"../../constants.js\"\r\n\r\nconst main = async ({item, workflow, args}) => {\r\n\tconst hasCharm = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"charmed\"].includes(change.value.toLowerCase())))\r\n\tif (hasCharm) {\r\n\t\tworkflow.saveDetails.advantage = true\r\n\t}\r\n}\r\n\r\nexport const feyAncestry = {\r\n\tmain\r\n}","export const protectionFromPoison = {\r\n\tinitHeader: \t\t\"What do you want to cast?\"\r\n}\r\nexport const giantInsect = {\r\n\tchoices:\t\t\t[\"Ten Giant Centipedes\", \"Three Giant Spiders\", \"Five Giant Wasps\", \"One Giant Scorpion\"],\r\n\tdefaultIcons:\t\t\t\t[\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantCentipede.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantSpider.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantWasp.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantScorpion.webp\"\r\n\t\t\t\t\t\t],\r\n\tinitHeader:\t\t\t\"What do you want to create?\",\r\n\tpreEffectSeqPath:\t\"modules/jb2a_patreon/Library/2nd_Level/Misty_Step/MistyStep_01_Regular_Orange_400x400.webm\",\r\n\tspawnNames:\t\t\t[\"Giant Centipede\", \"Giant Spider\", \"Giant Wasp\", \"Giant Scorpion\"]\r\n}\r\nexport const summonCelestial = {\r\n\tchoices:\t\t\t[\"Celestial Avenger\", \"Celestial Defender\"],\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/celestial/SolarBow.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/celestial/Planetar.webp\"\r\n\t\t\t\t\t\t],\r\n\tinitHeader:\t\t\t\"What do you want to summon?\",\r\n\tspawnNames:\t\t\t[\"Celestial Avenger Spirit\", \"Celestial Defender Spirit\"]\r\n}\r\nexport const summonDraconicSpirit = {\r\n\tchoices:\t\t\t[\"Chromatic Draconic Spirit\", \"Gem Draconic Spirit\", \"Metallic Draconic Spirit\"],\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"images/Tokens/Spirits/Spirit_Creatures/Young_Red_Dragon_Large_Scale200_Spirit_01.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Spirits/Spirit_Creatures/Young_Bronze_Dragon_Large_Scale200_Spirit_01.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Spirits/Spirit_Creatures/Young_Gold_Dragon_Large_Scale200_Spirit_01.webp\"\r\n\t\t\t\t\t\t],\t\r\n\tinitHeader:\t\t\t\"Which draconic spirit?\",\r\n\tspawnNames:\t\t\t[\"Chromatic Draconic Spirit\", \"Gem Draconic Spirit\", \"Metallic Draconic Spirit\"]\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {giantInsect as s} from \"../../strings/spells.js\"\r\nimport {summoning} from \"../../helpers/summons.js\"\r\n\r\nconst getOverrides = async () => {\r\n\treturn {\r\n\t\tgeneral: {\r\n\t\t\tamountToSpawnByIndex: [10, 3, 5, 1]\r\n\t\t}\r\n\t}\r\n}\r\nconst getSpellIconPaths = (choice) => {\r\n\tconst index = s.choices.indexOf(choice)\r\n\tconst actor = game.actors.find(actor => actor.name == s.spawnNames[index])\r\n\tconst icon = actor?.img ?? false\t\r\n\tif (!icon) return s.defaultIcons[index]\r\n\treturn icon\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst choice = await getDialogueButtonType(\r\n\t\ts.choices, \r\n\t\t{width: s.choices.length * 150, height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetSpellIconPaths, \r\n\t\t60, \r\n\t\t60, \r\n\t\t[]\r\n\t)\r\n\tconst overrides = await getOverrides(actor, workflow)\r\n\tsummoning.createSpawn(actor, choice.value, item, overrides, s, token) \r\n}\r\n\r\nexport const giantInsect = {\r\n\tonUse\r\n}","import {cloudSpellNames} from \"../../constants.js\"\r\n\r\nconst getAoeOverlapPerc = async (args) => {\r\n\tconst creatureCoords = await getCreatureCoords(args[0].actor.token)\r\n\tconst templateCoords = await getTemplateCoords(args[0].templateId) ?? false\r\n\tif (!templateCoords) return 0\r\n\tconst overlap = creatureCoords.intersection(templateCoords)\r\n\treturn overlap.size / creatureCoords.size\r\n}\r\nconst getCreatureCoords = async (tokenDoc) => {\r\n\tconst gridSize = canvas.scene.grid.size\r\n\tlet set = new Set()\r\n\tlet position = \"\"\r\n\tfor (let i = 0; i < tokenDoc.height; i++) {\r\n\t\tfor (let j = 0; j < tokenDoc.width; j++) {\r\n\t\t\tposition = (tokenDoc.x + gridSize*i).toString() + \".\" + (tokenDoc.y + gridSize*j).toString() \r\n\t\t\tset.add(position)\r\n\t\t}\r\n\t}\r\n\treturn set\r\n}\r\nconst getNewDamage = async(hpDamage, hordeCount, multiplier, hasAreaTarget) => {\r\n\treturn hasAreaTarget ? Math.floor(hpDamage * hordeCount * multiplier) : hpDamage\r\n}\r\nconst getTemplateCoords = async (templateId) => {\r\n\tconst templateIdStr = \"MeasuredTemplate.\" + templateId\r\n\treturn canvas.grid.highlightLayers[templateIdStr].positions\r\n}\r\nconst isSaveFailure = async ({args, item}) => {\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tconsole.log(await getAoeOverlapPerc(args))\r\n\tif (!item.system.hasAreaTarget || await getAoeOverlapPerc(args) <= .666) {\r\n\t\tHooks.once(\"createActiveEffect\", (effect) => {\t\t\t\r\n\t\t\teffect.delete()\r\n\t\t})\r\n\t}\t\r\n}\r\nconst preTargetDamageApplication = async ({actor, args, item, workflow, token}) => {\r\n\tif (workflow.hitTargets.size < 1) return false\r\n\tconst hordeItem = await fromUuid(actor.items.find(item => item.name == \"Horde\").uuid)\r\n\tconst hordeItemUses = hordeItem.system.uses.value\r\n\tconst hordeItemUsesMax = hordeItem.system.uses.max\r\n\tconst liveTokenDoc = await fromUuid(token.document.uuid)\r\n\tconst hpDamage = workflow.damageItem.hpDamage\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tif (hpDamage > 0) setHpUpdateEffects(actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args)\r\n}\r\nconst setHpUpdateEffects = async (actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args) => {\r\n\tconst aoeOverlapPerc = await getAoeOverlapPerc(args)\r\n\tconst newHpDamage = await getNewDamage(hpDamage, hordeItemUses, aoeOverlapPerc, hasAreaTarget)\r\n\tworkflow.damageItem.hpDamage = newHpDamage\r\n\tsetPostDamageUpdates(actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax)\r\n}\r\nconst setLiveTokenDocUpdates = async (texture, hordeItem, hordeItemUsesMax, multiplier, liveTokenDoc, shouldReduce, tokenSizeNum) => {\r\n\t\thordeItem.update({\"system.uses.value\": hordeItemUsesMax * multiplier})\r\n\t\tif (tokenSizeNum > 2 && shouldReduce) {\r\n\t\t\tawait warpgate.wait(4000)\t\r\n\t\t\tsetSequencer(liveTokenDoc)\r\n\t\t\tawait warpgate.wait(200)\t\r\n\t\t\tif (liveTokenDoc.actor.system.traits.size != \"grg\" && liveTokenDoc.width <= 4 && liveTokenDoc.width <= 4) {\r\n\t\t\t\tliveTokenDoc.actor.update({\"system.traits.size\": Object.keys(CONFIG.DND5E.actorSizes)[tokenSizeNum - 1]})\r\n\t\t\t}\r\n\t\t\tliveTokenDoc.update({\"width\": liveTokenDoc.width - 1, \"height\": liveTokenDoc.width - 1})\t\r\n\t\t}\r\n\t\tliveTokenDoc.update({\"texture.src\": texture})\r\n}\r\nconst setPostDamageUpdates = async (actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax) => {\r\n\tconst newHealthPercentage = ((actor.system.attributes.hp.value - newHpDamage) / actor.system.attributes.hp.max) * 100\r\n\tconst tokenSizeNum = Object.keys(CONFIG.DND5E.actorSizes).indexOf(liveTokenDoc.actor.system.traits.size)\r\n\tlet shouldReduce = false\r\n\tif (75 >= newHealthPercentage && newHealthPercentage > 50) {\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img1, hordeItem, hordeItemUsesMax, .75, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (50 >= newHealthPercentage && newHealthPercentage > 25) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img2, hordeItem, hordeItemUsesMax, .50, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (25 >= newHealthPercentage && newHealthPercentage >= 0) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img3, hordeItem, hordeItemUsesMax, .25, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} \r\n}\r\nconst setSequencer = async (liveTokenDoc) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(liveTokenDoc.actor.flags[\"midi-qol\"].hordePassive.sequencerPath)\r\n\t\t\t.atLocation(liveTokenDoc)\r\n\t\t.play()\r\n}\r\n\r\nexport const hordePassive = {\r\n\tisSaveFailure,\r\n\tpreTargetDamageApplication\r\n}","export const insectCloud = {\r\n\tflagName:\t\t\t\t\"insectCloud\",\r\n\teffectName:\t\t\t\t\"Insect Cloud\",\r\n\ttemplateEffectName:\t\t\"Insect Cloud Template\"\r\n}","import {\r\n\tsetActiveEffects,\r\n\tsetAuraEffectUpdatesWhenDeleted,\r\n\tsetAuraEffectsWhenEntered,\r\n\tsetAuraEffectUpdatesWhenMoved,\r\n\tsetAuraEffectsWhenLeft,\r\n\tupdateAuraEffectsOnUse,\r\n\tupdateAuraFlags,\r\n\tupdateAuraWhenMoved\r\n} from \"../../../helper-functions.js\"\r\nimport {insectCloud as s} from \"../../../strings/features.js\"\r\n\r\nconst checkAttackerVision = (workflow) => {\r\n\tif (workflow.targets.first() == workflow.attackingToken) return false\r\n\tconst [target, bsRange, tsRange, units] = getCheckAttackerVisionParams(workflow)\r\n\tif (![\"ft\", \"m\", null].includes(units) && (bsRange > 0 || tsRange > 0)) return false \r\n\tconst attackerIsDefenderEffectOrigin = checkEffectOrigin(target, workflow.attackingToken)\r\n\tif (attackerIsDefenderEffectOrigin) return false\r\n\tconst inBsOrTsRange = getIfInBsOrTsRange(bsRange, tsRange, target, workflow)\r\n\tconst defenderIsOwnEffectOrigin = checkEffectOrigin(target, target)\r\n\tif (!inBsOrTsRange && defenderIsOwnEffectOrigin) return true\r\n\tconst attackerIsOwnEffectOrigin = checkEffectOrigin(workflow.attackingToken, workflow.attackingToken)\r\n\tif (!inBsOrTsRange && !attackerIsOwnEffectOrigin) return true\r\n\treturn false\r\n}\r\nconst checkDefenderVision = (workflow) => {\r\n\tif (workflow.targets.first() == workflow.attackingToken) return false\r\n\tconst [target, bsRange, tsRange, units] = getCheckDefenderVisionParams(workflow)\r\n\tif (![\"ft\", \"m\", null].includes(units) && (bsRange > 0 || tsRange > 0)) return false\r\n\tconst defenderIsAttackerEffectOrigin = checkEffectOrigin(workflow.attackingToken, target)\r\n\tif (defenderIsAttackerEffectOrigin) return false\r\n\tconst inBsOrTsRange = getIfInBsOrTsRange(bsRange, tsRange, target, workflow)\r\n\tconst defenderIsOwnEffectOrigin = checkEffectOrigin(target, target)\r\n\tif (inBsOrTsRange || defenderIsOwnEffectOrigin) return false\r\n\treturn true\r\n}\r\nconst checkEffectOrigin = (effectedToken, candidateToken) => {\r\n\tconst effect = effectedToken.actor.effects.find(effect => \r\n\t\ts.insectCloudEffectNames.includes(effect.name)\r\n\t)\r\n\tconst origin = effect?.origin ?? {}\r\n\treturn origin == candidateToken.actor.uuid\r\n}\r\nconst getCheckAttackerVisionParams = (workflow) => {\r\n\tconst target = workflow.targets.first()\r\n\tconst bsRange = workflow.actor.attributes.senses.blindsight\r\n\tconst tsRange = workflow.actor.attributes.senses.tremorsense\r\n\tconst units = workflow.actor.attributes.senses.units\t\r\n\treturn [target, bsRange, tsRange, units] \r\n}\r\nconst getCheckDefenderVisionParams = (workflow) => {\r\n\tconst target = workflow.targets.first()\r\n\tconst bsRange = target.actor.system.attributes.senses.blindsight\r\n\tconst tsRange = target.actor.system.attributes.senses.tremorsense\r\n\tconst units = target.actor.system.attributes.senses.units\t\r\n\treturn [target, bsRange, tsRange, units] \r\n}\r\nconst getEffectData = async (originUuid, templateUuid) => {\r\n\tconst duration = await getEffectDuration(templateUuid)\r\n\treturn {\r\n\t\tname: \"Insect Cloud\", \r\n\t\ticon: \"icons/creatures/invertebrates/wasp-swarm-movement.webp\", \r\n\t\torigin: originUuid,\r\n\t\tduration,\r\n\t\tchanges: [{\r\n\t\t\t\tkey: \"flags.midi-qol.grants.disadvantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkAttackerVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.advantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkDefenderVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.grants.advantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkDefenderVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.disadvantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkAttackerVision(workflow)`]\r\n\t\t}],\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectDuration = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tconst sourceActor = await fromUuid(template.flags[\"midi-qol\"].actorUuid)\r\n\tconst templateEffect = sourceActor.effects.find(effect => effect.name == s.templateEffectName)\r\n\treturn templateEffect.duration\r\n}\r\nconst getIfInBsOrTsRange = (bsRange, tsRange, target, workflow) => {\r\n\tconst maxBsOrTsRange = Math.max(bsRange, tsRange)\r\n\treturn MidiQOL.findNearby(\"all\", \r\n\t\ttarget, \r\n\t\tmaxBsOrTsRange, \r\n\t\t{canSee: true}\r\n\t).filter(token => \r\n\t\ttoken.actor.uuid == workflow.attackingToken.actor.uuid\r\n\t).length > 0 \t\r\n}\r\nconst getTokenActorUuids = async (template, token) => {\r\n\tconst tokenIds = game.modules.get(\"templatemacro\").api.findContained(template)\r\n\tconst elligibleTokens = tokenIds.map(id => \r\n\t\tcanvas.scene.collections.tokens.get(id)\r\n\t).filter(tokenDoc => token.document.uuid != tokenDoc.uuid)\r\n\tif (elligibleTokens.length < 1) return false\r\n\treturn elligibleTokens.filter(tokenDoc => {\r\n\t\tconst effects = tokenDoc.actor?.effects ?? []\r\n\t\treturn effects.filter(effect => \r\n\t\t\teffect.name != s.effectName\r\n\t\t).length > 0\r\n\t}).map(tokenDoc => tokenDoc.actor.uuid)\t\r\n}\r\nconst onUse = async ({actor, args, token}) => {\r\n\tconst template = await setTemplateAttachment(args, token)\r\n\tconst tokenActorUuids = await getTokenActorUuids(template, token)\r\n\tif (!tokenActorUuids) return false\r\n\tupdateAuraEffectsOnUse(actor, \r\n\t\targs, \r\n\t\ts.templateEffectName, \r\n\t\tgetEffectData, \r\n\t\ttokenActorUuids\r\n\t)\r\n\tupdateAuraFlags(s.flagName, template, tokenActorUuids)\r\n}\r\nconst setTemplateAttachment = async (args, token) => {\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\treturn template\r\n}\r\nconst whenDeleted = async (template) => {\r\n\tsetAuraEffectUpdatesWhenDeleted(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\ttemplate\r\n\t)\r\n}\r\nconst whenEntered = async (template, token) => {\r\n\tsetAuraEffectsWhenEntered(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\tgetEffectData, \r\n\t\ttemplate, \r\n\t\ttoken\r\n\t)\r\n}\r\nconst whenLeft = async (template, token) => {\r\n\tsetAuraEffectsWhenLeft(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\ttemplate, \r\n\t\ttoken\r\n\t)\r\n}\r\nconst whenMoved = async (template) => {\r\n\tconst dispositions = [-1, 0, 1]\r\n\tupdateAuraWhenMoved(\r\n\t\tdispositions, \r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\tgetEffectData, \r\n\t\ttemplate\r\n\t)\r\n}\r\n\r\nexport const insectCloud = {\r\n\tcheckAttackerVision,\r\n\tcheckDefenderVision,\r\n\tonUse,\r\n\twhenDeleted,\r\n\twhenEntered,\r\n\twhenLeft,\r\n\twhenMoved\t\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const ringOfSpellStoring = {\r\n\taddSpellErr:\t\t\"Your Ring of Spell Storing doesn't have enough room left for a spell!\",\r\n\tcastSpellErr:\t\t\"Your Ring of Spell Storing doesn't have any spells on it!\",\t\r\n\tcastSpellHeader:\t\"Which spell do you wan to cast?\",\r\n\tcharHeader: \t\t\"Who is casting onto the ring?\",\r\n\tcurrSpellBank:\t\t\"Current Spell Bank\",\r\n\tdescLevel: \t\t\t\", Level \",\r\n\tcharnamesExceptions:[\"Shadowfell Vine Strike\", \"Necrotic Blast\", \"Summon Shadow Clone\", \"Animate Shadow Servant\", \"Mud\", \"Taunt\"],\r\n\tinitChoices:\t\t[\"Add Spells\", \"Cast Spell\", \"Empty Spells\"],\r\n\tinitHeader: \t\t\"What do you want to cast?\",\r\n\tlevelHeader:\t\t\"What level spell do you want to add?\",\r\n\tlevelLabels:\t\t[\"One\", \"Two\", \"Three\", \"Four\", \"Five\"],\r\n\tspellHeader:\t\t\"Which spell is being cast onto the ring?\",\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tinstrumentSpellNames: {\r\n\t\tanstruthHarp: \t\t[\"Control Weather\", \"Cure Wounds\", \"Wall of Thorns\"],\r\n\t\tcanaithMandolin: \t[\"Cure Wounds\", \"Dispel Magic\", \"Protection from Energy (Lightning)\"],\r\n\t\tcliLyre: \t\t\t[\"Stone Shape\", \"Wall of Fire\", \"Wind Wall\"],\r\n\t\tdossLute: \t\t\t[\"Animal Friendship\", \"Protection from Energy (Fire)\", \"Protection from Poison\"],\r\n\t\tfochlucanBandore: \t[\"Entangle\", \"Faerie Fire\", \"Shillelagh\", \"Speak with Animals\"],\r\n\t\tgeneric: \t\t\t[\"Fly\", \"Invisibility\", \"Levitate\", \"Protection from Evil and Good\"],\r\n\t\tmacFuirmidhCittern: [\"Barkskin\", \"Cure Wounds\", \"Fog Cloud\"],\r\n\t\tollamhHarp: \t\t[\"Confusion\", \"Control Weather\", \"Fire Storm\"]\r\n\t},\r\n\tinitHeader: \t\t\t\"Choose a spell to cast!\"\r\n}\r\n\r\nexport const staffOfSwarmingInsects = {\r\n\tallChoices: \t\t\t[\"Giant Insect\", \"Insect Cloud\", \"Insect Plague\", \"Melee (1h)\", \"Melee (2h)\"],\r\n\tdamageWeaponName:\t\t\"Staff of Swarming Insects - Damage\",\r\n\tflagName:\t\t\t\t\"staffOfSwarmingInsects\",\r\n\tinitHeader: \t\t\t\"What do you want to do?\",\r\n\tmeleeChoices: \t\t\t[\"Melee (1h)\", \"Melee (2h)\"],\r\n\tspellNames: \t\t\t[\"Giant Insect\", \"Insect Cloud\", \"Insect Plague\"],\r\n}","import {deleteTempItem as deleteItem, getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {instrumentOfTheBards as s} from \"../../strings/items.js\"\r\n\r\nconst castSpell = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst updates = await createCastWorkflow(spell, instrument, tokenActor, chosenIndex)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst [tempItem] = await createTempItem(spell, instrument, tokenActor, chosenIndex)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spell.activation)\r\n\tconst itemData = await getTempSpellItem(spell, instrument, updatedMacroNames, chosenIndex)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data, setDeleteItemFlags)\r\n}\r\nconst getCureWoundsData = async (spell, instrument) => {\r\n\tif (instrument.type == \"anstruthHarp\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [5, [\"5d8 + @mod\", \"healing\"]]\r\n\t} else if (instrument.type == \"canaithMandolin\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [3, [\"3d8 + @mod\", \"healing\"]]\r\n\t} else {\r\n\t\treturn [spell.system.level, spell.system.damage.parts]\r\n\t}\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getInstrumentSpells = async (instrument) => {\r\n\t//keeping this for reference\r\n\tswitch(instrument) {\r\n\t\tcase \"anstruthHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Control Weather\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Wall of Thorns\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"canaithMandolin\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Cure Wounds\", \r\n\t\t\t\t\"Dispel Magic\",\r\n\t\t\t\t\"Protection from Energy (Lightning)\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"cliLyre\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Stone Shape\", \r\n\t\t\t\t\"Wall of Fire\",\r\n\t\t\t\t\"Wind Wall\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"dossLute\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Animal Friendship\", \r\n\t\t\t\t\"Protection from Energy (Fire)\",\r\n\t\t\t\t\"Protection from Poison\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"fochlucanBandore\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Entangle\", \r\n\t\t\t\t\"Faerie Fire\",\r\n\t\t\t\t\"Shillelagh\",\r\n\t\t\t\t\"Speak with Animals\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"macFuirmidhCittern\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Barkskin\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Fog Cloud\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"ollamhHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Confusion\", \r\n\t\t\t\t\"Control Weather\",\r\n\t\t\t\t\"Fire Storm\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\treturn spell.img\r\n}\r\nconst getSpellsToCast = async (item, type) => {\r\n\tconst spellNames = [...s.instrumentSpellNames[\"generic\"], ...s.instrumentSpellNames[type]].sort()\r\n\tconst spellData = spellNames.map((name, i) => {\r\n\t\treturn {\"name\": name, id: i}\r\n\t}).filter(spell => item.flags.charname.instrumentOfTheBards.spells[spell.id].isCharged)\r\n\tconst spells = spellData.map(spell => game.items.find(item => item.name.toLowerCase() == spell.name.toLowerCase()))\t\r\n\tconst filteredSpellNames = spells.map(spell => spell.name)\r\n\treturn [spellData, spellNames, filteredSpellNames, spells]\r\n}\r\nconst getTempSpellItem = async (spell, instrument, updatedMacroNames, chosenIndex) => {\r\n\tconst [level, damage] = await getCureWoundsData(spell, instrument)\r\n\treturn mergeObject(duplicate(spell.toObject(false)), {\r\n\t\t\"flags.charname.instrumentOfTheBards.originInstrumentUuid\": instrument.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.originName\": spell.name,\r\n\t\t\"flags.charname.instrumentOfTheBards.originUuid\": spell.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.type\": \"spell\",\r\n\t\t\"flags.charname.instrumentOfTheBards.spellIndex\": chosenIndex,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.damage.parts\": damage,\r\n\t\t\"system.level\": level,\t\t\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.instrumentOfTheBards.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst main = async ({actor, args, token}) => {\r\n\t//\r\n}\r\nconst removeSpells = async (actor, instrument) => {\r\n\t//this erased everything on Nora lol\r\n\t\r\n\treturn Promise.all(actor.items.filter(item => {\r\n\t\tconst originName = item.flags?.charname?.instrumentOfTheBards?.originName ?? null\r\n\t\treturn instrument.spells.filter(spell => spell.name == originName).length > 0\r\n\t}).map(item => item.delete()))\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst instrument = await fromUuid(tempItem.flags.charname.instrumentOfTheBards.originInstrumentUuid)\r\n\tconst index = tempItem.flags.charname.instrumentOfTheBards.spellIndex\r\n\tupdateDeleteItemFlags(instrument, index)\r\n}\r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst updateDeleteItemFlags = async (instrument, index) => {\r\n\tconst updates = instrument.flags.charname.instrumentOfTheBards.spells.map((spell, i) => {\r\n\t\tif (i == index) {\r\n\t\t\treturn {name: spell.name, isCharged: false}\r\n\t\t} else {\r\n\t\t\treturn spell\r\n\t\t}\r\n\t})\r\n\tconst flaggedItem = await instrument.update({\r\n\t\t\"flags.charname.instrumentOfTheBards.spells\": updates\r\n\t})\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\tif (type == \"spell\") return false\t\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\t\t\r\n\tconst [spellData, spellNames, filteredSpellNames, spells] = await getSpellsToCast(liveItem, type)\r\n\tconst choice = await getDialogueButtonType(filteredSpellNames, {width: filteredSpellNames.length * 150, height: \"100%\"}, s.initHeader, getSpellIconPaths, 60, 60, spells)\r\n\tconst spell = spells.find(spell => spell.name == choice.value)\r\n\tconst chosenIndex = spellNames.indexOf(choice.value)\r\n\tcastSpell(spell, liveItem, tokenActor, chosenIndex)\t\r\n}\r\nconst onNewDay = async (actor, data) => {\r\n\tif (!data.newDay) return false\r\n\tconst instruments = actor.items.filter(item => {\r\n\t\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\t\treturn type != \"spell\"\r\n\t}) \r\n\trefreshInstruments(instruments)\r\n}\r\nconst refreshInstruments = async (instruments) => {\r\n\tinstruments.forEach(instrument => {\r\n\t\tconst spells = instrument.flags.charname.instrumentOfTheBards.spells\r\n\t\tconst update = spells.map(spell => {\r\n\t\t\tspell.isCharged = true\r\n\t\t\treturn spell\r\n\t\t})\r\n\t\tinstrument.update({\"flags.charname.instrumentOfTheBards.spells\": update})\r\n\t})\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tdeleteTempItem,\r\n\tonUse,\r\n\tonNewDay\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {protectionFromPoison as s} from \"../../strings/spells.js\"\r\nimport {getDialogueButtonType, removeEffect} from \"../../helper-functions.js\"\r\n\r\nconst getChoices = async (effects) => {\r\n\treturn effects.reduce((acc, effect, i) => {\r\n\t\t\tconst nameAlreadyUsed = acc.find(choice => choice.name == effect.name)\r\n\t\t\tconst name = nameAlreadyUsed ? effect.name + \"-\" + i : effect.name\r\n\t\t\tconst choice = {name: name, icon: effect.icon, uuid: effect.uuid}\r\n\t\t\treturn [...acc, choice]\r\n\t}, [])\r\n}\r\nconst getChosenEffect = async (effects) => {\r\n\tconst choices = await getChoices(effects)\t\t\r\n\tconst buttonNames = choices.map(choice => choice.name)\t\t\r\n\tconst initChoice = await getDialogueButtonType(buttonNames, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60, choices)\r\n\treturn choices.find(effect => effect.name == initChoice.value)\t\r\n}\r\nconst getInitIconPaths = (choice, effects) => {\r\n\tconst chosenEffect = effects.find(effect => effect.name == choice)\r\n\treturn chosenEffect.icon\r\n}\r\nconst getPoisonEffects = () => {\r\n\tconst target = game.user.targets.first()\r\n\treturn target.actor.effects.filter(effect => {\r\n\t\tconst hasPoisonedName = conditionLabels[\"poisoned\"].includes(effect.name.toLowerCase())\r\n\t\tconst hasPoisonedConditions = effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase()))\r\n\t\treturn hasPoisonedName || hasPoisonedConditions\r\n\t})\t\r\n}\r\nconst onUse = async ({item, workflow, args, token}) => {\r\n\tconst poisonEffects = await getPoisonEffects()\r\n\tif (poisonEffects.length > 0) {\r\n\t\tconst chosenEffect = await getChosenEffect(poisonEffects)\r\n\t\tawait removeEffect(chosenEffect.uuid)\t\r\n\t}\r\n}\r\nconst preTargetSave = async ({item, workflow, args}) => {\r\n\tconst hasPoison = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())))\r\n\tif (hasPoison) workflow.saveDetails.advantage = true\r\n}\r\n\r\nexport const protectionFromPoison = {\r\n\tonUse,\r\n\tpreTargetSave\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {ringOfSpellStoring as s} from \"../../strings/items.js\"\r\n\r\nconst addSpell = async (item, tokenActor) => {\r\n\tconst notification = await setAddSpellNotification(item)\r\n\tif (notification) return false\r\n\tconst updates = await getAddSpellUpdates(item, tokenActor)\r\n\tsetAddSpellUpdates(item, updates, tokenActor)\r\n}\r\nconst castSpell = async (item, tokenActor) => {\r\n\tconst updates = await createCastWorkflow(item, tokenActor)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nconst createCastWorkflow = async (item, tokenActor) => {\r\n\tconst spellData = await getSpellToCast(item)\t\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, item)\r\n\tawait setPreUseItemHooks(tempItem, spellData)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, item)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spellData, tokenActor, liveItem) => {\r\n\tconst sourceItem = await fromUuid(spellData.uuid)\t\r\n\tconst sourceMacroNames = await getSourceMacroNames(sourceItem)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spellData.activation)\r\n\tconst itemData = await getTempItem(liveItem, sourceItem, spellData, updatedMacroNames)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async ({args, item, workflow}) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tawait setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nconst getAddCharChoice = async (eligibleSpellsByChar) => {\r\n\tconst charChoices = eligibleSpellsByChar.map(character => character.origin).toSorted()\t\r\n\treturn await getDialogueButtonType(charChoices, {width: 400, height: 150}, s.charHeader, getCharIconPaths, 60, 60, eligibleSpellsByChar)\r\n}\r\nconst getAddLevelChoice = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst levelChoices = await getLevelChoices(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst levelChoice = await getDialogueButtonType(levelChoices, {width: 400, height: 150}, s.levelHeader, getLevelIconPaths, 60, 60)\r\n\t//return value as int\r\n\treturn {value: s.levelLabels.indexOf(levelChoice.value) + 1}\r\n}\r\nconst getAddSpellChoice = async (charChoice, eligibleSpellsByChar, levelChoice) => {\r\n\tconst [spellChoices, spellIcons] = await getSpellChoices(charChoice, eligibleSpellsByChar, levelChoice)\r\n\treturn await getSpellChoice(spellChoices, s.spellHeader, getSpellIconPaths, spellIcons)\t\r\n}\r\nconst getAddSpellChoices = async (eligibleSpellsByChar, item, tokenActor) => {\r\n\tconst charChoice = await getAddCharChoice(eligibleSpellsByChar)\r\n\tconst levelChoice = await getAddLevelChoice(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst spellChoice = await getAddSpellChoice(charChoice, eligibleSpellsByChar, levelChoice.value)\r\n\treturn [charChoice.value, levelChoice.value, spellChoice.value]\r\n}\r\nconst getAddSpellUpdates = async (item, tokenActor) => {\r\n\tconst actors = await getLiveActors()\r\n\tconst eligibleSpellsByChar = await getEligibleSpells(actors)\t\r\n\tconst choices = await getAddSpellChoices(eligibleSpellsByChar, item, tokenActor)\t\r\n\treturn [choices, eligibleSpellsByChar]\r\n}\r\nconst getAttackBonus = (actor, item, ability) => {\r\n\tconst isRangedAttack = item.system.actionType == \"rsak\"\r\n\tconst isMeleeAttack = item.system.actionType == \"msak\"\r\n\tif (!isRangedAttack && !isMeleeAttack) {\r\n\t\treturn 0\r\n\t} else if (isRangedAttack) {\t\t\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.rsak.attack)\r\n\t} else if (isMeleeAttack) {\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.msak.attack)\r\n\t}\r\n}\r\nconst getCharIconPaths = (choice, iconData) => {\t\r\n\tconst match = iconData.find(item => item.origin == choice)\r\n\treturn match.icon\r\n}\r\nconst getDeleteItemFlagData = async (liveItem, tempItem) => {\r\n\tconst spellData = tempItem.flags.charname.ringOfSpellStoring.spellData\r\n\tconst spells = liveItem.flags.charname.ringOfSpellStoring.spells\t\r\n\tconst slotsUsed = liveItem.flags.charname.ringOfSpellStoring.slotsUsed\r\n\tconst usedSpell = spells.find(spell => {\r\n\t\treturn spell.level == spellData.level\r\n\t\t\t&& spell.name == spellData.name \r\n\t\t\t&& spell.dc == spellData.dc \r\n\t\t\t&& spell.ability == spellData.ability\r\n\t})\t\r\n\tconst deleteIndex = spells.indexOf(usedSpell)\r\n\treturn [deleteIndex, slotsUsed, spells, usedSpell.level]\r\n}\r\nconst getDeleteItemFlagUpdates = async (liveItem, tempItem) => {\r\n\tconst [deleteIndex, slotsUsed, spells, usedSpellLevel] = await getDeleteItemFlagData(liveItem, tempItem)\r\n\tconst newSlotsUsed = slotsUsed - usedSpellLevel\r\n\tconst newSpells = spells.filter((spell, i) => i != deleteIndex)\t\r\n\treturn [newSlotsUsed, newSpells]\r\n}\r\nconst getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nconst getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getEligibleLevelSpells = (actor, item) => {\r\n\tconst highestSpellLevel = getHighestSpellLevel(actor.system.spells)\r\n\tconst mode = item.system.preparation.mode\r\n\tlet eligibleLevelSpells = []\r\n\tlet spellData = {}\r\n\tfor (let i = item.system.level; i <= 5; i ++) {\r\n\t\tif (mode == \"atwill\" || mode == \"innate\") {\t\t\t\t\r\n\t\t\tif (i == item.system.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, item.system.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else if (mode == \"pact\") {\r\n\t\t\tif (i == actor.system.spells.pact.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, actor.system.spells.pact.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (i <= highestSpellLevel) {\r\n\t\t\t\tspellData = getSpellData(actor, item, i)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\t\t\r\n\treturn eligibleLevelSpells\r\n}\r\nconst getEligibleSpells = async (actors) => {\r\n\treturn actors.map(actor => {\r\n\r\n\t\tconst eligibleSpells = actor.items.filter(item => item.type == \"spell\" && item.system.level > 0 && item.system.level <= 5)\t\r\n\t\tconst actorSpells = eligibleSpells.reduce((spells, spell) => {\r\n\t\t\tconst eligibleLevelSpells = getEligibleLevelSpells(actor, spell)\r\n\t\t\treturn [...spells, ...eligibleLevelSpells]\r\n\t\t}, [])\r\n\t\treturn {origin: actor.prototypeToken.name, icon: actor.prototypeToken.texture.src, spells: actorSpells}\r\n\t})\r\n}\r\nconst getHighestSpellLevel = (spells) => {\r\n\tlet arr = []\r\n\tlet label\r\n\tfor (let i = 1; i <= 9; i++) {\r\n\t\tlabel = \"spell\" + i\r\n\t\tif (spells[label].max > 0) arr.push(i)\r\n\t}\r\n\treturn Math.max(...arr)\r\n}\r\nconst getInitIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.initChoices[0]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-diamond-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[1]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-pentagon-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[2]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-glowing-triangle-teal-purple.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst getLevelChoices = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst slotsRemaining = 5 - item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\r\n\tconst eligibleLevels = character.spells.map(spell => spell.level).filter(level => level <= slotsRemaining)\r\n\tconst spellLevels = new Set(eligibleLevels)\t\t\t\r\n\treturn Array.from(spellLevels).toSorted().map(level => s.levelLabels[level - 1])\r\n}\r\nconst getLevelIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.levelLabels[0]:\r\n\t\t\treturn \"icons/skills/ranged/target-bullseye-archer-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[1]:\r\n\t\t\treturn \"icons/skills/melee/weapons-crossed-daggers-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[2]:\r\n\t\t\treturn \"icons/skills/ranged/arrows-triple-yellow-red.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[3]:\r\n\t\t\treturn \"icons/skills/ranged/shuriken-thrown-yellow.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[4]:\r\n\t\t\treturn \"icons/skills/ranged/daggers-thrown-salvo-orange.webp\"\r\n\t\t\tbreak\t\t\t\t\r\n\t}\t\r\n}\r\nconst getLiveActors = async () => {\r\n\treturn game.users.filter(user => user.character).filter(user => {\r\n\t\treturn canvas.scene.tokens.find(token => token.actor.uuid == user.character.uuid)\r\n\t}).map(user => user.character)\r\n}\r\nconst getNewSlotsUsed = async(item, level) => {\r\n\tconst slots = item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\treturn slots + level\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellChoice = async (spellChoices, spellHeader, getSpellIconPaths, spellIcons) => {\r\n\tconst sortedChoices = spellChoices.toSorted()\r\n\tconst radioSelections = sortedChoices.map(choice => {\r\n\t\tconst data = spellIcons.find(spell => spell.name == choice)\r\n\t\tconst icon = data.icon\r\n\t\tconst label = `<img align=left src=${icon} width=\"15\" height=\"15\" style=\"border:0px\">${choice}`\r\n\t\treturn {type: \"radio\", label}\r\n\t})\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: radioSelections\r\n\t\t},{\r\n\t\t\ttitle: spellHeader,\r\n\t\t\trender: (...args) => {},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn {value: sortedChoices[choices.inputs.indexOf(true)]}\r\n}\r\nconst getSpellChoices = async (charChoice, eligibleSpellsByChar, levelChoiceInt) => {\t\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\t\r\n\tconst spells = character.spells.filter(spell => spell.level == levelChoiceInt && !s.charnamesExceptions.includes(spell.name))\r\n\tconst names = spells.map(spell => spell.name)\r\n\tconst icons = spells.map(spell => { return {name: spell.name, icon: spell.icon} })\r\n\treturn [names, icons]\r\n}\r\nconst getSpellData = (actor, item, i) => {\r\n\tconst name = item.name\r\n\tconst level = i\r\n\tconst dc = actor.system.attributes.spelldc\r\n\tconst ability = actor.system.attributes.spellcasting\r\n\tconst attackBonus = getAttackBonus(actor, item, ability)\r\n\tconst prof = actor.system.attributes.prof\t\r\n\tconst icon = item.img\r\n\tconst uuid = item.uuid\r\n\tconst activation = item.system.activation.type\r\n\tconst originUuid = actor.uuid\r\n\treturn {name, level, dc, ability, attackBonus, prof, icon, uuid, activation, originUuid}\r\n}\r\nconst getSpellIconPaths = (choice, iconData) => {\r\n\tconst match = iconData.find(item => item.name == choice)\r\n\treturn match.icon\t\r\n}\r\nconst getSpellToCast = async (item) => {\r\n\tconst spells = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tif (spells.length < 1) {\r\n\t\tui.notifications.info(s.castSpellErr)\r\n\t\treturn false\t\t\r\n\t}\t\r\n\tconst uniqueSpells = new Set(spells)\r\n\tconst spellsArr = Array.from(uniqueSpells)\r\n\tconst spellNames = spellsArr.map(spell => spell.name).toSorted()\r\n\tconst chosenSpell = await getDialogueButtonType(spellNames, {width: 400, height: \"100%\"}, s.castSpellHeader, getSpellIconPaths, 60, 60, spellsArr)\r\n\treturn spellsArr.find(spell => spell.name == chosenSpell.value)\r\n}\r\nconst getTempItem = async (liveItem, sourceItem, spellData, updatedMacroNames) => {\r\n\treturn mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\timg: liveItem.img,\r\n\t\t\"flags.charname.ringOfSpellStoring.ringUuid\": liveItem.uuid,\r\n\t\t\"flags.charname.ringOfSpellStoring.spellData\": spellData,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.ability\": \"none\",\r\n\t\t\"system.attackBonus\": spellData.attackBonus,\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t\t\"system.save.dc\": spellData.dc,\r\n\t\t\"system.save.scaling\": \"flat\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedDescription = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spells = item.flags.charname.ringOfSpellStoring.spells.reduce((spells, spell) => {\r\n\t\tconst newSpell = [\"<br />\" + spell.name + s.descLevel + spell.level]\r\n\t\treturn [...spells, ...newSpell]\r\n\t}, []).toSorted()\t\t\r\n\tconst newSpells = spells.reduce((descs, desc) => {\r\n\t\treturn descs + desc\r\n\t}, \"\")\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\r\n\tconst sanitizedDesc = desc.replace(spellBankStr, \"\")\t\r\n\treturn sanitizedDesc + \"<br />*******<br />\" + s.currSpellBank + \":<br />\" + newSpells + \"<br />*******\"\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.ringOfSpellStoring.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst getUpdateRingData = async (charName, eligibleSpellsByChar, item, level, spellName) => {\r\n\tconst chr = eligibleSpellsByChar.find(chr => chr.origin == charName)\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tconst newSlotsUsed = await getNewSlotsUsed(item, level)\r\n\tconst chosenSpell = [chr.spells.find(spell => spell.name == spellName && spell.level == level)]\t\t\r\n\tconst newSpellData = [...spellData, ...chosenSpell]\t\r\n\treturn [chosenSpell, newSlotsUsed, newSpellData]\r\n}\r\nconst main = async ({args, item}) => {\r\n\tconst initChoice = await getDialogueButtonType(s.initChoices, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\r\n\tif (initChoice.value == s.initChoices[0]) {\r\n\t\taddSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[1]) {\r\n\t\tcastSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[2]) {\r\n\t\tresetSpells(liveItem, tokenActor)\r\n\t}\r\n}\r\nconst resetSpells = async (item, tokenActor) => {\r\n\tsetResetSpellsDesc(item)\r\n\tconst tempItems = tokenActor.items.filter(item => item.flags?.charname?.ringOfSpellStoring?.ringUuid ?? false)\r\n\ttempItems.map(item => item.delete())\r\n}\r\nconst setAddSpellNotification = async (item) => {\r\n\tif (item.flags.charname.ringOfSpellStoring.slotsUsed == 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\t\r\n}\r\nconst setAddSpellUpdates = async (item, updates, tokenActor) => {\r\n\tconst [choices, eligibleSpellsByChar] = updates\r\n\tconst [spellData] = await updateRingItem(item, choices, eligibleSpellsByChar)\t\r\n\tif (spellData.activation == \"reaction\") setReactionUpdates(spellData, tokenActor, item)\t\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst liveItem = await fromUuid(tempItem.flags.charname.ringOfSpellStoring.ringUuid)\r\n\tconst updates = await getDeleteItemFlagUpdates(liveItem, tempItem)\r\n\tupdateDeleteItemFlags(liveItem, updates)\r\n}\r\nconst setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst setPreUseItemHooks = async (item, spellData) => {\r\n\tHooks.once(\"dnd5e.preUseItem\", (useItem, config) => {\r\n\t\tif (item.uuid != useItem.uuid) return false\t\r\n\t\tconfig.consumeResource = false\r\n\t\tconfig.consumeSpellSlot = false\r\n\t\tconfig.consumeUsage = false\r\n\t\tconfig.slotLevel = spellData.level\t\r\n\t\tconfig.system.prof._baseProficiency = spellData.prof\t\t\t\r\n\t})\t\t\r\n}\r\nconst setReactionHook = async ({item}) => {\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spellData ?? false\r\n\tif (!spellData) return false\r\n\tsetPreUseItemHooks(item, spellData)\r\n}\r\nconst setReactionUpdates = async (spellData, tokenActor, liveItem) => {\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, liveItem)\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n}\r\nconst setResetSpellsDesc = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\t\r\n\tconst updatedStr = \"<br />*******<br />\" + s.currSpellBank + \":<br /><br />*******\"\r\n\tconst updatedDesc = desc.replace(spellBankStr, updatedStr)\t\r\n\titem.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": [],\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": 0,\r\n\t\t\"system.description.value\": updatedDesc\r\n\t})\t\t\r\n}\r\nconst setRingUpdates = async (chosenSpell, item, newSlotsUsed, newSpellData) => {\r\n\tconst flagUpdate = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpellData,\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed\r\n\t})\t\r\n\tconst updatedDescription = await getUpdatedDescription(item)\t\r\n\tconst descUpdate = await item.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\r\n}\r\nconst setRingUpdatesNotification = async (item, level) => {\r\n\tconst slots = await getNewSlotsUsed(item, level)\r\n\tif (slots > 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\r\n\treturn false\r\n}\r\nconst updateDeleteItemFlags = async (item, updates) => {\r\n\tconst [newSlotsUsed, newSpells] = updates\r\n\tconst flaggedItem = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed,\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpells\r\n\t})\r\n\tconst updatedDescription = await getUpdatedDescription(flaggedItem)\t\r\n\tawait flaggedItem.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst updateRingItem = async (item, choices, eligibleSpellsByChar) => {\t\r\n\tconst [charName, level, spellName] = choices\r\n\tconst notification = await setRingUpdatesNotification(item, level)\r\n\tif (notification) return false\r\n\tconst [chosenSpell, newSlotsUsed, newSpellData] = await getUpdateRingData(charName, eligibleSpellsByChar, item, level, spellName)\r\n\tsetRingUpdates(chosenSpell, item, newSlotsUsed, newSpellData)\r\n\treturn chosenSpell\r\n}\r\n\r\nexport const ringOfSpellStoring = {\r\n\t\"main\": main,\r\n\t\"deleteTempItem\": deleteTempItem,\r\n\t\"setReactionHook\": setReactionHook\r\n}","//refactor to import strings and merge them?\r\n//figure out if this can be a stand alone file somehow first \r\nexport const summonCelestial = {\r\n\tchoices:\t\t\t[\"Celestial Avenger\", \"Celestial Defender\"],\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Celestial/Solar_Large_Scale200_Celestial_A_11.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Celestial/Planetar_Large_Scale150_Celestial_11.webp\"\r\n\t\t\t\t\t\t],\t\r\n\texceptionActorNames:[\"Jakar\", \"Jakar (Test)\"],\r\n\tinitHeader:\t\t\t\"What do you want to summon?\",\r\n\tsequencerData:\t\t{\r\n\t\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\t\tcircleColor1: \"dark_purple\",\r\n\t\t\t\t\t\t\t\tcircleColor2: \"dark_purple\",\r\n\t\t\t\t\t\t\t\tcircleNum: \"02\",\r\n\t\t\t\t\t\t\t\timpactColor1: \"dark_purple\",\r\n\t\t\t\t\t\t\t\timpactColor2: \"dark_purple\",\r\n\t\t\t\t\t\t\t\tfadeIn: {ms: 400},\r\n\t\t\t\t\t\t\t\timpactNum1: \"011\",\r\n\t\t\t\t\t\t\t\timpactNum2: \"003\",\r\n\t\t\t\t\t\t\t\tscale: .15,\r\n\t\t\t\t\t\t\t\tschool: \"conjuration\",\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\tspawnNames:\t\t\t[\"Celestial Avenger Spirit\", \"Celestial Defender Spirit\"]\r\n}\r\n//don't forget to move over and fix up for strings/spells.js\r\nexport const summonDraconicSpirit = {\r\n\tcircleColors:\t\t[\"green\", \"blue\", \"red\", \"yellow\", \"green\", \"dark_purple\", \"dark_green\", \"pink\", \"dark_yellow\", \"yellow\"],\r\n\tchoices:\t\t\t[\"Chromatic Draconic Spirit\", \"Gem Draconic Spirit\", \"Metallic Draconic Spirit\"],\t\t\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"images/Tokens/Spirits/Spirit_Creatures/Young_Red_Dragon_Large_Scale200_Spirit_01.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Spirits/Spirit_Creatures/Young_Bronze_Dragon_Large_Scale200_Spirit_01.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Spirits/Spirit_Creatures/Young_Gold_Dragon_Large_Scale200_Spirit_01.webp\"\r\n\t\t\t\t\t\t],\t\r\n\texceptionActorNames:\"all\",\r\n\tinitHeader:\t\t\t\"Choose a draconic spirit to summon\",\r\n\timpactColors:\t\t[\"green\", \"blue\", \"01\", \"yellow\", \"green\", \"dark_purple\", \"green\", \"pinkpurple\", \"blue\", \"orange\"],\r\n\timpactNums:\t\t\t[\"003\", \"010\", \"fire\", \"011\", \"009\", \"003\", \"003\", \"003\", \"003\", \"003\"],\r\n\tresistChoices:\t\t[\"Acid\", \"Cold\", \"Fire\", \"Lightning\", \"Poison\", \"Force\", \"Necrotic\", \"Psychic\", \"Radiant\", \"Thunder\"],\r\n\tresistIcons:\t\t[\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-green.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-blue.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-red.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-blue-yellow.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-purple-pink.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-purple.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-green.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-purple-pink.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-blue-yellow.webp\",\r\n\t\t\t\t\t\t\t\"icons/magic/fire/dagger-rune-enchant-flame-strong-orange.webp\"\r\n\t\t\t\t\t\t],\r\n\tresistHeader:\t\t\"Choose your damage resist type\",\r\n\tresistValues:\t\t[\"acid\", \"cold\", \"fire\", \"lightning\", \"poison\", \"force\", \"necrotic\", \"psychic\", \"radiant\", \"thunder\"],\r\n\t//sequencerData:\t\t{\r\n\t//\t\t\t\t\t\toptions: {\r\n\t//\t\t\t\t\t\t\tcircleColor1: \"dark_purple\",\r\n\t//\t\t\t\t\t\t\tcircleColor2: \"dark_purple\",\r\n\t//\t\t\t\t\t\t\tcircleNum: \"02\",\r\n\t//\t\t\t\t\t\t\timpactColor1: \"dark_purple\",\r\n\t//\t\t\t\t\t\t\timpactColor2: \"dark_purple\",\r\n\t//\t\t\t\t\t\t\tfadeIn: {ms: 400},\r\n\t//\t\t\t\t\t\t\timpactNum1: \"011\",\r\n\t//\t\t\t\t\t\t\timpactNum2: \"003\",\r\n\t//\t\t\t\t\t\t\tscale: .15,\r\n\t//\t\t\t\t\t\t\tschool: \"conjuration\",\r\n\t//\t\t\t\t\t\t}\r\n\t//\t\t\t\t\t},\r\n\tspawnNames:\t\t\t[\"Chromatic Draconic Spirit\", \"Gem Draconic Spirit\", \"Metallic Draconic Spirit\"]\r\n}","import {getDialogueButtonType, getStringsOrExceptions} from \"../../helper-functions.js\"\r\nimport {summonCelestial as exceptionStrings} from \"../../exceptions\"\r\nimport {summonCelestial as defaultStrings} from \"../../strings/spells.js\"\r\nimport {summoning} from \"../../helpers/summons.js\"\r\n\r\nconst getCreateSpawnParams = async (actor, args, choice, s) => {\r\n\tconst spawnName = s.spawnNames[s.choices.indexOf(choice)]\r\n\tconst mutations = await getSpawnUpdates(\r\n\t\tactor, \r\n\t\targs,\r\n\t\tchoice,\r\n\t\ts,\r\n\t\tspawnName\r\n\t)\r\n\tconst overrides = await getOverrides(mutations, s)\t\r\n\treturn [mutations, overrides, spawnName]\r\n}\r\nconst getItemUpdates = async (s, spawnName, originAttack, level) => {\r\n\tif (spawnName == s.spawnNames[0]) {\r\n\t\treturn {\r\n\t\t\t'Radiant Bow': {\r\n\t\t\t\t'data.damage.parts' : [[`2d6 + 2 + ${level}`, `radiant`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn {\r\n\t\t\t'Radiant Sword': {\r\n\t\t\t\t'data.damage.parts' : [[`1d10 + 3 + ${level}`, `radiant`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nconst getOverrides = async (mutations, s) => {\r\n\tconst sequencer = await getSequencerData(s)\r\n\treturn {\r\n\t\twarpGate: {\r\n\t\t\tmutations\r\n\t\t},\r\n\t\tsequencer\r\n\t}\r\n}\r\nconst getSequencerData = async (s) => {\r\n\tif (s.sequencerData) return s.sequencerData\r\n\treturn {\r\n\t\toptions: {\r\n\t\t\tcircleColor1: \"blue\",\r\n\t\t\tcircleColor2: \"blue\",\r\n\t\t\tcircleNum: \"02\",\r\n\t\t\timpactColor1: \"blue\",\r\n\t\t\timpactColor2: \"blue\",\r\n\t\t\tfadeIn: {ms: 450},\r\n\t\t\timpactNum1: \"004\",\r\n\t\t\timpactNum2: \"003\",\r\n\t\t\tscale: .15,\r\n\t\t\tschool: \"conjuration\"\r\n\t\t}\r\n\t}\r\n}\r\nconst getSpawnBaseAc = async (s, spawnName) => {\r\n\treturn spawnName == s.spawnNames[0] ? 11 : 13\r\n}\r\nconst getSpawnDc = async (spawnName, originProf) => {\r\n\tconst spawnData = game.actors.find(actor => actor.name == spawnName)\r\n\tconst spawnMod = spawnData.system.abilities.wis.mod \r\n\treturn originProf + spawnMod + 8\r\n}\r\nconst getSpawnUpdates = async (actor, args, choice, s, spawnName) => {\r\n\tconst [\t\r\n\t\tac,\r\n\t\thp,\t\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDc,\r\n\t\ttexture\r\n\t] = await getSpawnParams(actor, args, choice, s, spawnName)\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"texture.src\": texture\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"data.attributes.ac.flat\" : ac,\r\n\t\t\t\"data.attributes.hp\" : hp,\r\n\t\t\t\"data.details.cr\" : originLevel,\r\n\t\t\t\"data.bonuses.spell.dc\": spawnDc,\r\n\t\t\t\"img\": texture\r\n\t\t},\r\n\t\tembedded: { \r\n\t\t\tItem: await getItemUpdates(s, spawnName, originAttack, level)\r\n\t\t}\t\t\r\n\t}\r\n}\r\nconst getSpawnParams = async (actor, args, choice, s, spawnName) => {\r\n\tconst originDc = actor.system.attributes.spelldc\r\n\tconst originAttack = originDc - 8\r\n\tconst originLevel = actor.system.details.level ?? actor.system.details.cr\r\n\tconst originProf = actor.system.attributes.prof\r\n\tconst texture =  s.defaultIcons[s.choices.indexOf(choice)]\r\n\tconst level = args[0].spellLevel\t\r\n\tconst ac = await getSpawnBaseAc(s, spawnName) + level\r\n\tconst hp = {value: 40+10*(level-5), max: 40+10*(level-5)}\r\n\tconst spawnDc = await getSpawnDc(spawnName, originProf)\t\r\n\treturn [\t\r\n\t\tac,\r\n\t\thp,\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDc,\r\n\t\ttexture\r\n\t]\r\n}\r\nconst getChoiceIconPaths = (choice, s) => {\r\n\tconst index = s.choices.indexOf(choice)\t\r\n\tif (s.exceptionActorNames) return s.defaultIcons[index]\r\n\tconst actor = game.actors.find(actor => actor.name == s.spawnNames[index])\r\n\tconst icon = actor?.img ?? false\t\r\n\tif (!icon) return s.defaultIcons[index]\r\n\treturn icon\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst s = await getStringsOrExceptions(actor, defaultStrings, exceptionStrings)\r\n\tconst choice = await getDialogueButtonType(\r\n\t\ts.choices, \r\n\t\t{width: \"125%\", height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetChoiceIconPaths, \r\n\t\t100, \r\n\t\t100, \r\n\t\ts\r\n\t)\r\n\tconst [\r\n\t\tmutations, \r\n\t\toverrides, \r\n\t\tspawnName\r\n\t] = await getCreateSpawnParams(actor, args, choice.value, s)\r\n\tsummoning.createSpawn(actor, choice.value, item, overrides, s, token) \r\n}\r\n\r\nexport const summonCelestial = {\r\n\tonUse\r\n}","import {getDialogueButtonType, getStringsOrExceptions} from \"../../helper-functions.js\"\r\nimport {summonDraconicSpirit as exceptionStrings} from \"../../exceptions\"\r\nimport {summonDraconicSpirit as defaultStrings} from \"../../strings/spells.js\"\r\nimport {summoning} from \"../../helpers/summons.js\"\r\n\r\nconst getCreateSpawnParams = async (actor, args, choice, resistValue, s) => {\r\n\tconst spawnName = s.spawnNames[s.choices.indexOf(choice)]\r\n\tconst mutations = await getSpawnUpdates(\r\n\t\tactor, \r\n\t\targs,\r\n\t\tchoice,\r\n\t\ts,\r\n\t\tspawnName\r\n\t)\r\n\tconst overrides = await getOverrides(mutations, resistValue, s)\t\r\n\treturn [mutations, overrides, spawnName]\r\n}\r\nconst getItemUpdates = async (s, spawnName, originAttack, level) => {\r\n\tif (spawnName == s.spawnNames[1]) {\r\n\t\treturn {\r\n\t\t\t'Rend': {\r\n\t\t\t\t'data.damage.parts' : [[`1d6 + 4 + ${level}`, `piercing`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Force Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Necrotic Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Psychic Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Radiant Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Thunder Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn {\r\n\t\t\t'Rend': {\r\n\t\t\t\t'data.damage.parts' : [[`1d6 + 4 + ${level}`, `piercing`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Acid Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Cold Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Fire Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Lightning Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t},\r\n\t\t\t'Poison Breath': {\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nconst getOverrides = async (mutations, resistValue, s) => {\r\n\tconst sequencer = await getSequencerData(s, resistValue)\r\n\treturn {\r\n\t\twarpGate: {\r\n\t\t\tmutations\r\n\t\t},\r\n\t\tsequencer\r\n\t}\r\n}\r\nconst getSequencerData = async (s, resistValue) => {\r\n\tif (s.sequencerData) return s.sequencerData\r\n\tconst circleColor = s.circleColors[s.resistValues.indexOf(resistValue)] \r\n\tconst impactColor = s.impactColors[s.resistValues.indexOf(resistValue)]\r\n\tconst impactNum = s.impactNums[s.resistValues.indexOf(resistValue)]\r\n\treturn {\r\n\t\toptions: {\r\n\t\t\tcircleColor1: circleColor,\r\n\t\t\tcircleColor2: circleColor,\r\n\t\t\tcircleNum: \"02\",\r\n\t\t\timpactColor1: impactColor,\r\n\t\t\timpactColor2: impactColor,\r\n\t\t\tfadeIn: {ms: 400},\r\n\t\t\timpactNum1: impactNum,\r\n\t\t\timpactNum2: impactNum,\r\n\t\t\tscale: .15,\r\n\t\t\tschool: \"conjuration\",\r\n\t\t}\r\n\t}\r\n}\r\nconst getSpawnDc = async (spawnName, originProf) => {\r\n\tconst spawnData = game.actors.find(actor => actor.name == spawnName)\r\n\tconst spawnMod = spawnData.system.abilities.wis.mod \r\n\treturn originProf + spawnMod + 8\r\n}\r\nconst getSpawnUpdates = async (actor, args, choice, s, spawnName) => {\r\n\tconst [\t\r\n\t\tac,\r\n\t\thp,\t\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDc,\r\n\t\ttexture\r\n\t] = await getSpawnParams(actor, args, choice, s, spawnName)\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"texture.src\": texture\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"data.attributes.ac.flat\" : ac,\r\n\t\t\t\"data.attributes.hp\" : hp,\r\n\t\t\t\"data.details.cr\" : originLevel,\r\n\t\t\t\"data.bonuses.spell.dc\": spawnDc,\r\n\t\t\t\"img\": texture\r\n\t\t},\r\n\t\tembedded: { \r\n\t\t\tItem: await getItemUpdates(s, spawnName, originAttack, level)\r\n\t\t}\t\t\r\n\t}\r\n}\r\nconst getSpawnParams = async (actor, args, choice, s, spawnName) => {\r\n\tconst originDc = actor.system.attributes.spelldc\r\n\tconst originAttack = originDc - 8\r\n\tconst originLevel = actor.system.details.level ?? actor.system.details.cr\r\n\tconst originProf = actor.system.attributes.prof\r\n\tconst texture =  s.defaultIcons[s.choices.indexOf(choice)]\r\n\tconst level = args[0].spellLevel\t\r\n\tconst ac = 14 + level\r\n\tconst hp = {value: 50+10*(level-5), max: 50+10*(level-5)}\r\n\tconst spawnDc = await getSpawnDc(spawnName, originProf)\t\r\n\treturn [\t\r\n\t\tac,\r\n\t\thp,\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDc,\r\n\t\ttexture\r\n\t]\r\n}\r\nconst getChoiceIconPaths = (choice, s) => {\r\n\tconst index = s.choices.indexOf(choice)\t\r\n\tif (s.exceptionActorNames) return s.defaultIcons[index]\r\n\tconst actor = game.actors.find(actor => actor.name == s.spawnNames[index])\r\n\tconst icon = actor?.img ?? false\t\r\n\tif (!icon) return s.defaultIcons[index]\r\n\treturn icon\r\n}\r\nconst getResistChoices = async (choice, s) => {\r\n\treturn s.choices.indexOf(choice) == 1 \r\n\t\t? s.resistChoices.slice(5, 10)\r\n\t\t: s.resistChoices.slice(0, 5)\r\n}\r\nconst getResistChoiceIconPaths = (choice, s) => {\r\n\tconst index = s.resistChoices.indexOf(choice)\t\r\n\treturn s.resistIcons[index]\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst s = await getStringsOrExceptions(actor, defaultStrings, exceptionStrings)\r\n\tconst choice = await getDialogueButtonType(\r\n\t\ts.choices, \r\n\t\t{width: \"100%\", height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetChoiceIconPaths, \r\n\t\t100, \r\n\t\t100, \r\n\t\ts\r\n\t)\r\n\tconst resistChoices = await getResistChoices(choice.value, s)\r\n\tconst resistChoice = await getDialogueButtonType(\r\n\t\tresistChoices, \r\n\t\t{width: \"100%\", height: \"100%\"}, \r\n\t\ts.resistHeader, \r\n\t\tgetResistChoiceIconPaths, \r\n\t\t100, \r\n\t\t100, \r\n\t\ts\r\n\t)\r\n\tconst resistValue = await setResistEffect(resistChoice.value, s, token)\r\n\tconst [\r\n\t\tmutations, \r\n\t\toverrides, \r\n\t\tspawnName\r\n\t] = await getCreateSpawnParams(actor, args, choice.value, resistValue, s)\r\n\tsummoning.createSpawn(actor, choice.value, item, overrides, s, token) \r\n}\r\nconst setResistEffect = async (choice, s, token) => {\r\n\tconst liveTokenActor = (await fromUuid(token.document.uuid)).actor\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(liveTokenActor)\r\n\tconst resistValue = s.resistValues[s.resistChoices.indexOf(choice)]\r\n\tconst newChange = [{\r\n\t\tkey: \"system.traits.dr.value\", \r\n\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\tvalue: [`${resistValue}`]\r\n\t}]\t\r\n\tconst newChanges = [...concEffect.changes, ...newChange]\r\n\tawait concEffect.update({\r\n\t\tchanges: newChanges,\r\n\t\t\"flags.dae\": {\"specialDuration\": [\"shortRest\", \"longRest\"]}\r\n\t})\r\n\treturn resistValue\r\n}\r\n\r\nexport const summonDraconicSpirit = {\r\n\tonUse\r\n}","import {\r\n\tdeleteTempItem as deleteItem, \r\n\tgetDialogueButtonType, \r\n\tgetSourceMacroNames, \r\n\tgetUpdatedMacroNames, \r\n\tsetCastSpellUpdates,\r\n} from \"../../helper-functions.js\"\r\nimport {staffOfSwarmingInsects as s} from \"../../strings/items.js\"\r\n\r\nconst castSpell = async (spell, staff, tokenActor, choice) => {\r\n\tconst updates = await createCastWorkflow(spell, staff, tokenActor, choice)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, staff, tokenActor, choice) => {\r\n\tconst [tempItem] = await createTempItem(spell, staff, tokenActor, choice)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, staff, tokenActor, choice) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, \"staffOfSwarmingInsects\", spell.activation)\r\n\tconst itemData = await getTempSpellItem(spell, staff, updatedMacroNames, choice)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data)\r\n}\r\nconst getChosenItem = async (choice, spells) => {\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn game.items.find(item => item.name == s.damageWeaponName)\r\n\t} else {\r\n\t\treturn spells.find(spell => spell.name == choice)\t\t\r\n\t}\t\r\n}\r\nconst getConsumptionAmount = async (choice) => {\r\n\tif (choice == s.allChoices[0]) {\r\n\t\treturn 4\r\n\t} else if (choice == s.allChoices[1]) {\r\n\t\treturn 1\r\n\t} else if (choice == s.allChoices[2]) {\r\n\t\treturn 5\r\n\t} else {\r\n\t\treturn 0\r\n\t}\r\n}\r\nconst getDamage = async (spell, choice) => {\r\n\tconst weapon = game.items.find(item => item.name == s.damageWeaponName)\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn choice == s.allChoices[4] \r\n\t\t\t? [\"1d8 + @mod\", \"bludgeoning\"] \r\n\t\t\t: [\"1d6 + @mod\", \"bludgeoning\"]\r\n\t} else {\r\n\t\treturn spell.system.damage.parts\r\n\t}\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn \"icons/weapons/staves/staff-simple-spiral-green.webp\"\r\n\t} else {\r\n\t\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\t\treturn spell.img\t\t\r\n\t}\r\n}\r\nconst getSpellsToCast = async (staff) => {\r\n\tconst spells = s.spellNames.map(spell => game.items.find(item => {\r\n\t\tif (!item.name) return false\r\n\t\treturn item.name.toLowerCase() == spell.toLowerCase()\r\n\t}))\t\r\n\tconst filteredSpellNames = s.spellNames.filter((spell, i, arr) => {\r\n\t\treturn ((spell == arr[0] && staff.system.uses.value >= 4)\r\n\t\t\t||  (spell == arr[1] && staff.system.uses.value >= 1)\r\n\t\t\t||  (spell == arr[2] && staff.system.uses.value >= 5))\r\n\t})\r\n\tconst choices = staff.system.attunement == 2 ? \r\n\t\t[...s.meleeChoices, ...filteredSpellNames].sort() : \r\n\t\ts.meleeChoices.sort()\r\n\treturn [choices, spells]\r\n}\r\nconst getTempSpellItem = async (spell, staff, updatedMacroNames, choice) => {\r\n\tconst [amount, damage, item, name, prep, type] = await getTempSpellItemMods(spell, staff, choice)\r\n\treturn mergeObject(duplicate(item.toObject(false)), {\r\n\t\tname: name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originItemName\": staff.name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originItemUuid\": staff.uuid,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originName\": item.name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originUuid\": item.uuid,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.consume.amount\": amount,\r\n\t\t\"system.consume.target\": staff.id,\r\n\t\t\"system.consume.type\": type,\r\n\t\t\"system.damage.parts\": damage,\t\r\n\t\t\"system.preparation.mode\": prep,\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getTempSpellItemMods = async (spell, staff, choice) => {\r\n\tconst amount = await getConsumptionAmount(choice)\r\n\tconst damage = await getDamage(spell, choice)\r\n\tconst item = choice == s.allChoices[3] || choice == s.allChoices[4] ? weapon : spell\r\n\tconst name = item.name == s.damageWeaponName ? staff.name : spell.name\r\n\tconst prep = choice == s.allChoices[3] || choice == s.allChoices[4] ? null : \"innate\"\r\n\tconst type = choice == s.allChoices[3] || choice == s.allChoices[4] ? null : \"charges\"\r\n\treturn [amount, damage, item, name, prep, type]\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst staff = await fromUuid(item.uuid)\r\n\tif (!staff.system.equipped) return false\r\n\tconst [choices, spells] = await getSpellsToCast(staff)\r\n\tconst choice = await getDialogueButtonType(\r\n\t\tchoices, \r\n\t\t{width: choices.length * 150, height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetSpellIconPaths, \r\n\t\t60, \r\n\t\t60, \r\n\t\tspells\r\n\t)\r\n\tconst chosenItem = await getChosenItem(choice.value, spells)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tcastSpell(chosenItem, staff, tokenActor, choice.value)\t\r\n}\r\n\r\nexport const staffOfSwarmingInsects = {\r\n\tdeleteTempItem,\r\n\tonUse\t\r\n}","import {getDialogueButtonType, setActiveEffects} from \"../../helper-functions.js\"\r\n\r\nconst getCommandItemData = async (originActor, type) => {\r\n\tconst sourceItem = type.value == \"Command: Flee\" ? await fromUuid(\"Item.TLqebf57ZF6HUkml\") : await fromUuid(\"Item.9iKDqMbCAERS9psP\")\r\n\tconsole.log(sourceItem)\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\t\t//name: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getFearItemData = async (originActor) => {\r\n\tconst sourceItem = await fromUuid(\"Item.DG5FfgOrf5IhvITt\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Fear\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-monster-purple-blue.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Flee\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-shadow-monster-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Prone\":\r\n\t\t\treturn \"icons/magic/control/silhouette-fall-slip-prone.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst onUse = async ({args, item, actor, token}) => {\r\n\tconst buttonOptions = item.system.uses.value > 1 ? [\"Fear\", \"Command: Flee\", \"Command: Prone\"] : [\"Command: Flee\", \"Command: Prone\"]\r\n\tconst type = await getDialogueButtonType(buttonOptions, {width: 400, height: 150}, \"What do you want to cast?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Fear\") {\r\n\t\tsetFearEffects(actor, item)\r\n\t} else {\r\n\t\tsetCommandEffects(actor, item, token, type)\r\n\t}\r\n}\r\nconst setCommandEffects = async (actor, item, token, type) => {\r\n\tconst commandItem = await getCommandItemData(actor, type)\r\n\tconst target = game.user.targets?.first() ?? false\r\n\tif (!target) return false\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [target.document.uuid]}\r\n\tconst commandWorkflow = await MidiQOL.completeItemUse(commandItem, {}, options)\t\r\n\tsetCommandEffectsSequencer(target)\r\n\tsetItemUsesUpdate(item.uuid, 1)\t\r\n}\r\nconst setCommandEffectsSequencer = async (token) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.enchantment.complete.dark_purple`)\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t\t.attachTo(token)\r\n\t\t\t.belowTokens()\r\n\t\t.play()\t\t\t\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token, template) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.detect_magic.cone.purple`)\r\n\t\t\t.scale(4.4)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\r\n\t\t\t.spriteOffset({x: 600, y:0}, {local: true})\r\n\t\t\t.rotate(-template.direction)\r\n\t\t.play()\t\t\t\r\n}\r\nconst setFearEffects = async (actor, item) => {\r\n\tconst fearItem = await getFearItemData(actor)\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false}\r\n\tconst fearWorkflow = await MidiQOL.completeItemUse(fearItem, {}, options)\t\r\n\tconst liveTemplate = await fromUuid(fearWorkflow.templateUuid)\r\n\tsetEffectsSequencer(0, 0, 1, false, liveTemplate)\r\n\tsetItemUsesUpdate(item.uuid, 2)\t\r\n}\r\nconst setItemUsesUpdate = async (itemUuid, usesUsed) => {\r\n\tconst liveItem = await fromUuid(itemUuid)\r\n\tliveItem.update({\"system.uses.value\": liveItem.system.uses.value - usesUsed})\r\n}\r\n\r\nexport const wandOfFear = {\r\n\tonUse\r\n}","import {auraOfPurity} from \"./macros/spells/aura-of-purity.js\"\r\nimport {blight} from \"./macros/spells/blight.js\"\r\nimport {clairvoyance} from \"./macros/spells/clairvoyance.js\"\r\nimport {daylight} from \"./macros/spells/daylight.js\"\r\nimport {dispelMagic} from \"./macros/spells/dispel-magic.js\"\r\nimport {feyAncestry} from \"./macros/features/fey-ancestry.js\"\r\nimport {giantInsect} from \"./macros/spells/giant-insect.js\"\r\nimport {hordePassive} from \"./macros/features/horde-passive.js\"\r\nimport {insectCloud} from \"./macros/features/misc/insect-cloud.js\"\r\nimport {instrumentOfTheBards} from \"./macros/items/instrument-of-the-bards.js\"\r\nimport {protectionFromPoison} from \"./macros/spells/protection-from-poison.js\"\r\nimport {ringOfSpellStoring} from \"./macros/items/ring-of-spell-storing.js\"\r\nimport {songOfRest} from \"./macros/features/class/bard/song-of-rest.js\"\r\nimport {summonCelestial} from \"./macros/spells/summon-celestial.js\"\r\nimport {summonDraconicSpirit} from \"./macros/spells/summon-draconic-spirit.js\"\r\nimport {summoning} from \"./helpers/summons.js\"\r\nimport {staffOfSwarmingInsects} from \"./macros/items/staff-of-swarming-insects.js\"\r\nimport {wandOfFear} from \"./macros/items/wand-of-fear.js\"\r\n\r\nexport const macros = {\r\n\tauraOfPurity,\r\n\tblight,\r\n\tclairvoyance,\r\n\tdaylight,\r\n\tdispelMagic,\r\n\tfeyAncestry,\r\n\tgiantInsect,\r\n\thordePassive,\r\n\tinsectCloud,\r\n\tinstrumentOfTheBards,\r\n\tprotectionFromPoison,\r\n\tringOfSpellStoring,\r\n\tsongOfRest,\r\n\tsummonCelestial,\r\n\tsummonDraconicSpirit,\r\n\tsummoning,\r\n\tstaffOfSwarmingInsects,\r\n\twandOfFear\r\n}","const getItemData = (originActor, songLevel) => {\r\n\tconst sourceItem = fromUuidSync(\"Item.GvIIDEPRp3unaRVe\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Song of Rest\",\r\n\t\tsystem: { \r\n\t\t\tdamage: {\r\n\t\t\t\tparts: [[`1d${songLevel}`, \"healing\"]]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getOriginBardScale = (effectOriginUuid) => {\r\n\tconst effectOrigin = fromUuidSync(effectOriginUuid)\r\n\tconst originActor = fromUuidSync(effectOrigin.parent.uuid)\r\n\treturn originActor.system.scale.bard[\"song-of-rest\"].faces\r\n}\r\nconst main = (actor, data) => {\r\n\tconst songEffects = actor.effects.filter(effect => effect.name == \"Song of Rest\")\r\n\tif (data.dhd < 0 && songEffects.length > 0) {\r\n\t\tsongEffects.map(effect => {\r\n\t\t\tconst originBardScale = getOriginBardScale(effect.origin)\r\n\t\t\tconst item = getItemData(actor, originBardScale)\r\n\t\t\tconst token = MidiQOL.tokenForActor(actor.uuid)\r\n\t\t\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [token.document.uuid] }\r\n\t\t\tMidiQOL.completeItemUse(item, {}, options)\t\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const songOfRest = {\r\n\tmain\r\n}","import {setConfig} from './config.js';\r\nimport {macros} from \"./macros.js\"\r\nimport * as sf from \"./socket-functions.js\"\r\n\r\nexport let socket\r\n\r\nHooks.once(\"socketlib.ready\", () => {\r\n\tsocket = socketlib.registerModule(\"charnames-bag-of-macros\")\r\n\tsocket.register(\"setActiveEffectDelete\", sf.setActiveEffectDelete)\r\n\tsocket.register(\"setAmbientLightCreate\", sf.setAmbientLightCreate)\t\r\n\tsocket.register(\"setAmbientLightDelete\", sf.setAmbientLightDelete)\r\n\tsocket.register(\"setDeleteSummonConcentrationHook\", sf.setDeleteSummonConcentrationHook)\r\n\tsocket.register(\"setMeasuredTemplateDelete\", sf.setMeasuredTemplateDelete)\r\n\tsocket.register(\"setSpawnedTokensInitiative\", sf.setSpawnedTokensInitiative)\r\n})\r\n\r\nHooks.on(\"dnd5e.restCompleted\", (actor, data) => {\r\n\tmacros.instrumentOfTheBards.onNewDay(actor, data)\r\n\tmacros.songOfRest.main(actor, data)\r\n})\r\n\r\nHooks.on(\"preDeleteToken\", (tokenDoc, config, user) => {\r\n\tmacros.summoning.onPreDeleteToken(tokenDoc, config, user)\r\n})\r\n\r\nglobalThis['CHARNAME'] = {\r\n    macros\r\n}","export const setAmbientLightCreate = async (params) => {\r\n\treturn await canvas.scene.createEmbeddedDocuments(\"AmbientLight\", [params])\r\n}\r\nexport const setAmbientLightDelete = async (ambientLightId) => {\r\n\tconst ambientLight = await canvas.scene.deleteEmbeddedDocuments(\"AmbientLight\", [ambientLightId])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn ambientLight\r\n}\r\nexport const setActiveEffectDelete = async (ownerActor, effectId) => {\t\r\n\tconst [deleteEffect] = ownerActor.effects.filter(effect => effect._id == effectId)\t\r\n\treturn await ownerActor.deleteEmbeddedDocuments(\"ActiveEffect\", [deleteEffect._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n}\r\nexport const setDeleteSummonConcentrationHook = async (actor, spawnedTokenUuid) => {\r\n\tconst preDeleteSummonConcentrationHookId = Hooks.on(\"preDeleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", preDeleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\t\r\n}\r\nexport const setMeasuredTemplateDelete = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid) ?? false\r\n\tif (!template) return false\r\n\tconst deletedMeasuredTemplate = await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [template._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn deletedMeasuredTemplate\r\n}\r\nexport const setSpawnedTokensInitiative = async (combatDocs, init) => {\r\n\tcombatDocs.forEach(doc => doc.update({\"initiative\": init}))\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(249);\n"],"names":["conditionLabels","blinded","charmed","concentrating","dead","deafened","exhaustion1","exhaustion2","exhaustion3","exhaustion4","exhaustion5","frightened","grappled","incapacitated","invisible","paralyzed","petrified","poisoned","prone","restrained","stunned","unconscious","wounded","cloudSpellNames","deleteTempItem","async","args","item","workflow","setDeleteItemFlags","tempItem","originTokenDoc","tokenActor","getDeleteItemData","logic","getDeleteItemLogic","setDeleteItemLogic","fromUuid","uuid","tokenUuid","actor","concEffect","MidiQOL","getConcentrationEffect","hasTemplate","templateUuid","hasSelfEffects","getSelfEffects","length","hasSelfTarget","hasEffects","effects","size","isSelfTargetItem","target","type","originTargetingSelf","hitTargetUuids","filter","checkSelfTarget","getDialogueButtonType","choices","dialogueOptions","title","getIconPathsFunc","buttonWidth","buttonHeight","iconData","Promise","resolve","buttons","getIconPaths","width","height","reduce","choice","i","icon","label","callback","value","getDialogueButtons","Dialog","render","effect","selfTarget","flags","dae","selfTargetAlways","getSourceMacroNames","onUseMacroName","getSpawnLocation","spawnIconPath","interval","itemRange","originToken","setCrosshairConfigs","distanceAvailable","crosshairsDistance","location","warpgate","crosshairs","show","inFlight","wait","ray","Ray","center","distance","Math","ceil","canvas","grid","measureDistances","gridSpaces","draw","cancelled","getStringsOrExceptions","defaultStrings","exceptionStrings","exceptionActorNames","includes","name","getTemplatesInRange","templates","gridSize","gridScale","range","x1","y1","template","a","b","x","y","sqrt","pow","itemRangeModified","getTokensInRange","tokens","token","tokenTopLeftCenterX","tokenTopLeftCenterY","tokenGridBorderCoords","j","push","xArr","map","coord","yArr","maxX","max","maxY","coords","x2","y2","getUpdatedMacroNames","macroNames","flagName","activation","update","removeEffect","effectUuid","socket","executeAsGM","setActiveEffects","tokenActorUuids","effectData","all","tokenActorUuid","actorUuid","createEffect","setActorConcDeletion","find","delete","setActorConcRemoveUuids","originActor","originActorConcentrationRemoveUuids","removeUuids","setAuraEffectUpdatesWhenDeleted","effectName","tokenActorsEffected","charname","forEach","fromUuidSync","setAuraEffectsWhenEntered","getEffectData","newActorUuids","insectCloud","flag","setAuraEffectsWhenLeft","tokenEffect","setCastSpellUpdates","updates","updateDeleteUuidEffects","callMacro","asGM","scene","adjustment","lockSize","lockPosition","tag","drawIcon","rememberControlled","activate","setDeleteUuids","tempItemEffect","origin","deletionChange","key","mode","CONST","ACTIVE_EFFECT_MODES","ADD","updatedChanges","changes","setTemplateDispels","itemTemplatePositions","potentialTemplates","dnd5e","originName","spellLevel","templatesWithOverlap","eligibleTemplates","gridTemplateId","id","templatePositions","highlightLayers","positions","Set","intersection","getTemplatesWithOverlap","updateAuraEffectsOnUse","appliedEffect","templateEffect","updateAuraFlags","updateAuraWhenMoved","dispositions","newTokenActorUuids","oldTokenActorUuids","game","modules","get","api","findContained","collections","tokenDoc","tokenId","disposition","getAuraParamsWhenMoved","originUuid","removalUuids","deleteAuraEffectsWhenMoved","newUuidsToEffect","setAuraEffectsWhenMoved","hasSysConc","system","components","concentration","hasMidiConc","midiProperties","isConcentration","isReactionItem","getDeleteUuidEffects","checkCombatActivity","combat","active","turns","doc","sourceCombatDoc","createSpawn","overrides","strings","getConcEffect","spawnUuids","createSpawnTokens","updateInitiatives","updateConcEffect","params","getSpawnParams","setWarpGateSpawn","getAmountToSpawn","overrideAmountToSpawn","general","amountToSpawnByIndex","indexOf","getCallbacks","spawnName","overrideCallbacks","warpGate","callbacks","eval","pre","loc","usePreEffectSequencer","post","spawnToken","usePostEffectSequencer","toLowerCase","getPreDeleteParams","amountSpawned","summoning","sequencer","options","getPreEffectsSequencerParams","spawnSize","circleNum","color1","circleColor1","color2","circleColor2","school","scale","document","getSpawnDetails","actors","getTexturePath","prototypeToken","controllingActor","spawnNames","iconPath","amountToSpawn","getSpawnUpdates","concEffectUuid","defaultMutations","mergeObject","mutations","overwrite","inlace","insertKeys","insertValues","combinedMutations","defaultIconPath","defaultIcons","texture","src","onPreDeleteToken","config","user","theGmUser","users","isTheGM","deleteOverrides","optionOverrides","useTokenDeleteSequencer","created","totalSpawnCreated","deleted","totalSpawnDeleted","delay","floor","random","newDeleted","updatedConc","setSpawnedTokensToActive","combatToken","placeables","toggleCombat","spawnIds","spawnAt","updateCombatDocs","activeTokenIds","init","combatDocs","deleteUuidChanges","spawnFlags","initiative","impactColor","impactColor1","impactNum","impactNum1","sequencerPath","fadeIn","ms","ease","Sequence","animation","on","opacity","play","file","atLocation","overrideSequencer","originScale","spawnScale","belowTokens","waitUntilFinished","color","impactColor2","impactNum2","auraOfPurity","preTargetSave","some","change","saveDetails","advantage","onUse","tokenAttacher","attachElementToToken","parent","tokenDocs","Array","from","values","eligibleTokenDocs","tokenDocuments","originX","originY","tokenDocsInRange","templateNonEffectedTokens","itemEffectName","statuses","has","getNonTemplateEffectedTokenDocs","getEligibleTokenDocuments","tokenEffectUuids","casterDisposition","effected","console","log","dfreds","effectInterface","addEffect","setTokenEffects","blight","speaker","character","scope","hitTargets","details","CUSTOM","disabled","getBlightEffectData","castLevel","Hooks","once","rolledItem","rollConfig","maxDamageString","String","parts","setBlightHook","castData","setSpawnedTokenId","spawn","spawnedTokenId","originActorSenses","originTokenSight","TOKEN_DISPLAY_MODES","HOVER","getWarpgateUpdates","attributes","senses","sight","originTokenUuid","setEffectsSequencer","setPostEffectsSequencer","getWarpgateCallbacks","getWarpgateOptions","clairvoyance","macroPass","spawnedTokenUuid","getTokenSpawnIds","originTokenActorUuid","fromUuidActor","userId","deleteSummonConcentrationHookId","off","setHookMacros","setPostSpawnEffects","buttonName","setAreaChoiceEffects","itemUuid","setTemplateEffects","lightParams","sanitizedLight","lightId","getEffectOriginData","_id","ineligibleEffectNames","minSpellLevel","originTemplateActiveEffect","setAreaEffectDeleteHookId","templateData","originFlag","templateSpellLevel","gridTemplatePositions","setTimeout","setAreaEffectDeleteHookOffId","setAreaEffectDeleteHookOff","setAreaEffectDeleteHook","attachTo","daylight","targets","first","duration","rounds","getEffectTokenData","setInitChoice","templateId","lastArg","efData","casterUuid","dispelAbility","dispelLevel","casterToken","effectsLTE2DispelLevel","effectsGTDispelLevel","baseLevel","getTokenEffects","effectsIdsToDelete","abilities","mod","abilityRoll","arr","effectCastLevel","rollAbilityTest","total","concat","getEffectsToDelete","deleteEffectsOnToken","selectedTemplate","inRangeEligibleTemplates","originItem","originItems","items","sortedTemplates","sort","aOrig","bOrig","localeCompare","templateSelections","itemOwnerName","menu","inputs","ui","notifications","info","getTemplateSelection","getSelectedTemplate","templateCastLevel","getTemplatesToDelete","deleteTemplate","dispelMagic","spellcasting","feyAncestry","main","giantInsect","initHeader","preEffectSeqPath","summonCelestial","summonDraconicSpirit","getSpellIconPaths","index","img","getAoeOverlapPerc","creatureCoords","getCreatureCoords","templateCoords","getTemplateCoords","set","position","toString","add","templateIdStr","setLiveTokenDocUpdates","hordeItem","hordeItemUsesMax","multiplier","liveTokenDoc","shouldReduce","tokenSizeNum","setSequencer","traits","Object","keys","CONFIG","DND5E","actorSizes","setPostDamageUpdates","newHpDamage","newHealthPercentage","hp","hordePassive","img1","img2","img3","templateEffectName","checkEffectOrigin","effectedToken","candidateToken","insectCloudEffectNames","getEffectDuration","getIfInBsOrTsRange","bsRange","tsRange","maxBsOrTsRange","findNearby","canSee","attackingToken","ringOfSpellStoring","addSpellErr","castSpellErr","castSpellHeader","charHeader","currSpellBank","descLevel","charnamesExceptions","initChoices","levelHeader","levelLabels","spellHeader","instrumentOfTheBards","anstruthHarp","canaithMandolin","cliLyre","dossLute","fochlucanBandore","generic","macFuirmidhCittern","ollamhHarp","staffOfSwarmingInsects","allChoices","damageWeaponName","meleeChoices","spellNames","createTempItem","spell","instrument","chosenIndex","sourceMacroNames","updatedMacroNames","itemData","getTempSpellItem","createEmbeddedDocuments","spells","level","damage","getCureWoundsData","duplicate","toObject","originInstrumentUuid","spellIndex","updateDeleteItemFlags","isCharged","getInitIconPaths","spellData","liveItem","sourceItem","getTempItem","getAddSpellChoices","eligibleSpellsByChar","charChoice","charChoices","toSorted","getCharIconPaths","getAddCharChoice","levelChoice","levelChoices","getLevelChoices","getLevelIconPaths","getAddLevelChoice","spellChoice","spellChoices","spellIcons","getSpellChoices","getSpellChoice","getAddSpellChoice","getEligibleSpells","actorSpells","eligibleLevelSpells","highestSpellLevel","getHighestSpellLevel","preparation","getSpellData","pact","getEligibleLevelSpells","slotsRemaining","slotsUsed","eligibleLevels","spellLevels","getLiveActors","getNewSlotsUsed","sortedChoices","radioSelections","levelChoiceInt","dc","spelldc","ability","attackBonus","isRangedAttack","actionType","isMeleeAttack","parseInt","bonuses","rsak","attack","msak","getAttackBonus","prof","getSpellToCast","uniqueSpells","spellsArr","chosenSpell","getUpdatedDescription","desc","description","newSpells","descs","spellBankStr","substring","lastIndexOf","replace","setPreUseItemHooks","useItem","consumeResource","consumeSpellSlot","consumeUsage","slotLevel","_baseProficiency","setReactionUpdates","setResetSpellsDesc","updatedStr","updatedDesc","newSlotsUsed","flaggedItem","updatedDescription","updateRingItem","charName","spellName","notification","setRingUpdatesNotification","newSpellData","chr","getUpdateRingData","setRingUpdates","sequencerData","circleColors","impactColors","impactNums","resistChoices","resistIcons","resistHeader","resistValues","getItemUpdates","s","originAttack","getSequencerData","originDc","originLevel","cr","originProf","ac","getSpawnBaseAc","spawnDc","wis","getSpawnDc","getChoiceIconPaths","resistValue","circleColor","getResistChoiceIconPaths","staff","amount","prep","getTempSpellItemMods","getConsumptionAmount","getDamage","weapon","data","equipped","filteredSpellNames","uses","attunement","chosenItem","getChosenItem","completeItemUse","setCommandEffectsSequencer","setItemUsesUpdate","usesUsed","wandOfFear","buttonOptions","fearItem","Item","documentClass","getFearItemData","fearWorkflow","showFullCard","createWorkflow","versatile","configureDialog","spriteOffset","local","rotate","direction","setFearEffects","commandItem","getCommandItemData","targetUuids","setCommandEffects","macros","getOverrides","isSaveFailure","hasAreaTarget","preTargetDamageApplication","hordeItemUses","hpDamage","damageItem","aoeOverlapPerc","hordeCount","getNewDamage","setHpUpdateEffects","checkAttackerVision","units","blindsight","tremorsense","getCheckAttackerVisionParams","inBsOrTsRange","defenderIsOwnEffectOrigin","attackerIsOwnEffectOrigin","checkDefenderVision","getCheckDefenderVisionParams","setTemplateAttachment","elligibleTokens","getTokenActorUuids","whenDeleted","whenEntered","whenLeft","whenMoved","getSpellsToCast","createCastWorkflow","castSpell","onNewDay","newDay","instruments","refreshInstruments","protectionFromPoison","poisonEffects","hasPoisonedName","hasPoisonedConditions","chosenEffect","acc","nameAlreadyUsed","getChoices","buttonNames","initChoice","getChosenEffect","setAddSpellNotification","getAddSpellUpdates","setAddSpellUpdates","addSpell","tempItems","ringUuid","resetSpells","deleteIndex","usedSpellLevel","usedSpell","getDeleteItemFlagData","getDeleteItemFlagUpdates","songOfRest","songEffects","dhd","originBardScale","effectOriginUuid","effectOrigin","bard","faces","getOriginBardScale","songLevel","getItemData","tokenForActor","embedded","getCreateSpawnParams","slice","getResistChoices","resistChoice","liveTokenActor","newChange","newChanges","setResistEffect","socketlib","registerModule","register","globalThis","setAmbientLightCreate","setAmbientLightDelete","ambientLightId","ambientLight","deleteEmbeddedDocuments","setActiveEffectDelete","ownerActor","effectId","deleteEffect","setDeleteSummonConcentrationHook","preDeleteSummonConcentrationHookId","setMeasuredTemplateDelete","deletedMeasuredTemplate","setSpawnedTokensInitiative","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__"],"sourceRoot":""}