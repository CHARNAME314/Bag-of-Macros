{"version":3,"file":"main.js","mappings":"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","sources":["webpack://CHARNAME's Bag of Macros/webpack/bootstrap","webpack://CHARNAME's Bag of Macros/webpack/runtime/define property getters","webpack://CHARNAME's Bag of Macros/webpack/runtime/hasOwnProperty shorthand","webpack://CHARNAME's Bag of Macros/./src/scripts/constants.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helper-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/aura-of-purity.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/clairvoyance.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/daylight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/hooks.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/dispel-magic.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/horde-passive.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/items.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/ring-of-spell-storing.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/wand-of-fear.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/blight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/fey-ancestry.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/class/bard/song-of-rest.js","webpack://CHARNAME's Bag of Macros/./src/scripts/socket-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export const conditionLabels = {\r\n\tblinded: [\"blinded\", \"convenient effect: blinded\"],\r\n\tcharmed: [\"charmed\", \"convenient effect: charmed\"],\r\n\tconcentrating: [\"concentrating\", \"convenient effect: concentrating\"],\r\n\tdead: [\"dead\", \"convenient effect: dead\"],\r\n\tdeafened: [\"deafened\", \"convenient effect: deafened\"],\r\n\texhaustion1: [\"exhaustion 1\", \"convenient effect: exhaustion 1\"],\r\n\texhaustion2: [\"exhaustion 2\", \"convenient effect: exhaustion 2\"],\r\n\texhaustion3: [\"exhaustion 3\", \"convenient effect: exhaustion 3\"],\r\n\texhaustion4: [\"exhaustion 4\", \"convenient effect: exhaustion 4\"],\r\n\texhaustion5: [\"exhaustion 5\", \"convenient effect: exhaustion 5\"],\r\n\tfrightened: [\"frightened\", \"convenient effect: frightened\"],\r\n\tgrappled: [\"grappled\", \"convenient effect: grappled\"],\r\n\tincapacitated: [\"incapacitated\", \"convenient effect: incapacitated\"],\r\n\tinvisible: [\"invisible\", \"convenient effect: invisible\"],\r\n\tparalyzed: [\"paralyzed\", \"convenient effect: paralyzed\"],\r\n\tpetrified: [\"petrified\", \"convenient effect: petrified\"],\r\n\tpoisoned: [\"poisoned\", \"convenient effect: poisoned\"],\r\n\tprone: [\"prone\", \"convenient effect: prone\"],\r\n\trestrained: [\"restrained\", \"convenient effect: restrained\"],\r\n\tstunned: [\"stunned\", \"convenient effect: stunned\"],\r\n\tunconscious: [\"unconscious\", \"convenient effect: unconscious\"],\r\n\twounded: [\"wounded\", \"convenient effect: wounded\"]\r\n}\r\n\r\nexport const cloudSpellNames = [\r\n\t\"Cloudkill\",\r\n\t\"Incendiary Cloud\",\r\n\t\"Insect Plague\",\r\n\t\"Moonbeam\",\r\n\t\"Spirit Guardians\"\r\n]","import {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const getDialogueButtons = (resolve, choices, getIconPaths, width, height, iconData) => {\t\r\n\treturn choices.reduce((buttons, choice, i) => {\r\n\t\tconst icon = getIconPaths(choice, iconData)\r\n\t\tconst newButton = {[choice]: {\r\n\t\t\tlabel: `<img src=${icon} width=${width} height=${height} style=\"border:0px\"><br>${choice}`,\r\n\t\t\tcallback: () => {\r\n\t\t\t\tresolve({value: `${choice}`})\r\n\t\t\t}\r\n\t\t}}\r\n\t\treturn {...buttons, ...newButton}\r\n\t}, {})\r\n}\r\nexport const getDialogueButtonType = async (choices, dialogueOptions, title, getIconPathsFunc, buttonWidth, buttonHeight, iconData) => { \r\n\treturn await (new Promise( (resolve) => {\t\r\n\t\tconst buttons = getDialogueButtons(resolve, choices, getIconPathsFunc, buttonWidth, buttonHeight, iconData)\t\t\r\n\t\tnew Dialog({\r\n\t\t\ttitle: title,\r\n\t\t\tbuttons: buttons\r\n\t\t}, dialogueOptions).render(true)\r\n}))}\r\nexport const getSpawnLocation = async (spawnIconPath, size, interval, tokenUuid, itemRange, originToken) => {\r\n\tawait setCrosshairConfigs(tokenUuid, itemRange)\r\n\tconst distanceAvailable = itemRange\r\n\tlet crosshairsDistance = 0\r\n\tconst checkDistance = async (crosshairs) => {\r\n\t\twhile (crosshairs.inFlight) {\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t\tconst ray = new Ray(originToken.center, crosshairs)\r\n\t\t\tconst distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0]\r\n\t\t\tif (crosshairsDistance !== distance) {\r\n\t\t\t\tcrosshairsDistance = distance;\r\n\t\t\t\tif (distance > distanceAvailable) {\r\n\t\t\t\t\tcrosshairs.icon = 'icons/svg/hazard.svg';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcrosshairs.icon = spawnIconPath\r\n\t\t\t\t}\r\n\t\t\t\tcrosshairs.draw();\r\n\t\t\t\tcrosshairs.label = `${distance} ft`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst location = await warpgate.crosshairs.show(\r\n\t\t{\r\n\t\t\tsize: size,\r\n\t\t\tinterval: interval,\r\n\t\t\ticon: spawnIconPath,\r\n\t\t\tlabel: '0 ft.',\r\n\t\t},\r\n\t\t{\r\n\t\t\tshow: checkDistance\r\n\t\t},\r\n\t)\r\n\tif (location.cancelled || crosshairsDistance > distanceAvailable) {\r\n\t\treturn\r\n\t} else {\r\n\t\treturn location\r\n\t}\r\n}\r\nexport const getTemplatesInRange = (templates, gridSize, gridScale, range, x1, y1) => {\r\n\t//gets templates where center of template within range of a cast template\r\n\treturn templates.filter(template => {\r\n\t\tconst [a, b] = [x1 - template.x, y1 - template.y]\r\n\t\tconst c  = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\tconst templateCentersDistance = c / gridSize\t\r\n\t\tconst templateRangeModified = template.distance / gridScale\t\r\n\t\tconst itemRangeModified = range / gridScale\t\t\r\n\t\treturn templateCentersDistance < templateRangeModified + itemRangeModified\r\n\t})\r\n}\r\nexport const getTemplatesWithOverlap = (eligibleTemplates, itemTemplatePositions) => {\r\n\treturn eligibleTemplates.filter(template => {\r\n\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\tconst templatePositions = canvas.grid.highlightLayers[gridTemplateId]?.positions ?? new Set(\"-1\")\r\n\t\treturn itemTemplatePositions.intersection(templatePositions).size > 0\r\n\t})\r\n}\r\nexport const getTokensInRange = async (tokens, gridSize, gridScale, itemRange, x1, y1) => {\r\n\treturn tokens.filter(token => {\r\n\t\tconst tokenTopLeftCenterX = token.x + gridSize / 2\r\n\t\tconst tokenTopLeftCenterY = token.y + gridSize / 2\r\n\t\tlet tokenGridBorderCoords = []\r\n\t\t\r\n\t\tfor (let i = 0; i <= token.width * 2 - 1; i++) {\r\n\t\t\tfor (let j = 0; j <= token.width * 2  - 1; j++) {\r\n\t\t\t\ttokenGridBorderCoords.push({x: tokenTopLeftCenterX + gridSize / 2 * i, y: tokenTopLeftCenterY + gridSize / 2 * j})\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst xArr = tokenGridBorderCoords.map(coord => coord.x)\r\n\t\tconst yArr = tokenGridBorderCoords.map(coord => coord.y)\r\n\t\tconst maxX = Math.max(...xArr)\r\n\t\tconst maxY = Math.max(...yArr)\r\n\t\tconst tokenGridCoords = tokenGridBorderCoords.filter(coords => coords.x != maxX && coords.y != maxY)\r\n\t\t\r\n\t\tconst tokenGridCoordsInRange = tokenGridCoords.filter(coord => {\r\n\t\t\tconst [x2, y2] = [coord.x, coord.y]\r\n\t\t\tconst a = x1 - x2\r\n\t\t\tconst b = y1 - y2\r\n\t\t\tconst c = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\t\treturn c / gridSize <= itemRange / gridScale\r\n\t\t})\r\n\t\t\r\n\t\treturn tokenGridCoordsInRange.length > 0\r\n\t})\r\n}\r\nexport const setActiveEffects = async (tokenActorUuids, effectData) => {\r\n\tconst createEffect = async (tokenActorUuid, effectData) => {return await MidiQOL.socket().executeAsGM(\"createEffects\", {actorUuid: tokenActorUuid, effects: [effectData]})}\r\n\tconst [effects] = await Promise.all(tokenActorUuids.map(tokenActorUuid => createEffect(tokenActorUuid, effectData)))\r\n\treturn effects\r\n}\r\nexport const setActorConcDeletion = async (actor) => {\r\n\tif (actor.effects.find(effect => effect.name == \"Concentrating\")) actor.effects.find(effect => effect.name == \"Concentrating\").delete()\r\n} \r\nexport const setActorConcRemoveUuids = async (originActor, uuid) => {\r\n\tlet originActorConcentrationRemoveUuids = originActor.flags[\"midi-qol\"][\"concentration-data\"]?.removeUuids || []\r\n\toriginActorConcentrationRemoveUuids.push(uuid)\t\r\n\tawait originActor.update({\"flags.midi-qol\": {\"concentration-data\": {removeUuids: originActorConcentrationRemoveUuids}}})\r\n\tconst concEffect = originActor.effects.find(effect => effect.name == \"Concentrating\")\r\n\tawait concEffect.update({\r\n\t\t\"flags.dae\": {\"specialDuration\": [\"shortRest\", \"longRest\"]}\r\n\t})\r\n}\r\nexport const setActorReagentCost = async (actorUuid, itemUuid) => {\r\n\tconst actor = await fromUuid(actorUuid)\r\n\tconst item = await fromUuid(itemUuid)\t\r\n\tif (settings.reagentsConsume = \"money\")  {\r\n\t\t//set this to pull from the lower denominations first\r\n\t\tconst newMoney = actor.system.currency.gp - item.system.materials.cost\r\n\t\tif (newMoney < 0) return false\r\n\t\tactor.update({\"system.currency.gp\": newMoney})\r\n\t} else if (settings.reagentsConsume = \"supply\") {\r\n\t\tconst newSupply = item.system.materials.supply - 1\r\n\t\tif (newSupply < 0) return false\r\n\t\titem.update({\"system.materials.supply\": newSupply})\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n\treturn true\r\n}\r\nexport const setCrosshairConfigs = async (tokenUuid, itemRange) => {\r\n\tconst target = await fromUuid(tokenUuid)\r\n\tconst {distance} = canvas.scene.grid\r\n\twarpgate.crosshairs.show({\r\n\t\tlockSize:true,\r\n\t\tlockPosition: true,\r\n\t\tsize: target.width + (2*itemRange/distance),\r\n\t\ttag: 'range',\r\n\t\tdrawIcon:false,\r\n\t\tlabel: 'Valid Area',\r\n\t\tx: target.x,\r\n\t\ty: target.y,\r\n\t\trememberControlled: true\r\n\t})\t\r\n\tcanvas.tokens.activate()\r\n}\r\nexport const setTemplateDispels = async (x, y, name, itemTemplatePositions) => {\r\n\tconst dnd5eFlaggedTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e)\r\n\tconst potentialTemplates = dnd5eFlaggedTemplates.filter(template => {\r\n\t\tconst originName = fromUuidSync(template.flags.dnd5e.origin).name\r\n\t\tif (!name) {\r\n\t\t\treturn template.flags.dnd5e.spellLevel\r\n\t\t} else {\r\n\t\t\treturn template.flags.dnd5e.spellLevel && originName == name\t\r\n\t\t}\r\n\t})\r\n\tconst templatesInRange = getTemplatesInRange(potentialTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 60, x, y)\r\n\tconst templatesWithOverlap = getTemplatesWithOverlap(templatesInRange, itemTemplatePositions)\r\n\ttemplatesWithOverlap.map(template => {socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)})\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {getTokensInRange} from \"../../helper-functions.js\"\r\n\r\nasync function getEligibleTokenDocuments(tokenDocuments, scene, itemRange, originX, originY) {\r\n\tconst tokenDocsInRange = await getTokensInRange(tokenDocuments, scene.grid.size, scene.grid.distance, itemRange, originX, originY)\r\n\tif (!tokenDocsInRange) return false\r\n\tconst templateNonEffectedTokens = await getNonTemplateEffectedTokenDocs(tokenDocsInRange)\r\n\tif (!templateNonEffectedTokens) return false\r\n\treturn templateNonEffectedTokens\r\n}\r\nasync function getNonTemplateEffectedTokenDocs(tokenDocuments, itemEffectName) {\r\n\treturn tokenDocuments.filter(token => {\r\n\t\tconst effects = token.actor.statuses\r\n\t\treturn effects.has(itemEffectName) == false\r\n\t})\r\n}\r\nconst onUse = async ({args, workflow, item, actor, token}) => {\r\n\tconst itemEffectName = \"Convenient Effect: Aura of Purity\"\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\tconst scene = await fromUuid(template.parent.uuid)\r\n\tconst itemRange = args[0].item.system.target.value\r\n\tconst tokenDocs = Array.from(scene.collections.tokens.values())\r\n\t\r\n\tconst eligibleTokenDocs = await getEligibleTokenDocuments(tokenDocs, scene, itemRange, template.x, template.y)\r\n\tif (!eligibleTokenDocs) return false\r\n\r\n\tconst tokenEffectUuids = await setTokenEffects(eligibleTokenDocs, token.document.disposition)\r\n\tawait template.update({\r\n\t\t\"flags.castData.auraOfPurity.tokensEffected\": tokenEffectUuids\r\n\t})\r\n}\r\nconst preTargetSave = async ({args, workflow, item, actor}) => {\r\n\tconst itemHasEffect = item.effects.some(effect => effect.changes.some(change => {\r\n\t\treturn conditionLabels[\"blinded\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"charmed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"deafened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"frightened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"paralyzed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"stunned\"].includes(change.value.toLowerCase())\r\n\t}))\r\n\tif (itemHasEffect) workflow.saveDetails.advantage = true\r\n}\r\nasync function setTokenEffects(tokenDocs, casterDisposition) {\r\n\tlet effected = []\r\n\tlet uuid = \"\"\r\n\tfor (let i=0; i < tokenDocs.length; i++) {\r\n\t\tconsole.log(\"tokenDocs[i]\")\r\n\t\tconsole.log(tokenDocs[i])\r\n\t\tuuid = tokenDocs[i].actor.uuid\r\n\t\tif ((casterDisposition == 1 && tokenDocs[i].disposition != -1)\r\n\t\t\t|| (casterDisposition == -1  && tokenDocs[i].disposition != 1)) {\r\n\t\t\tgame.dfreds.effectInterface.addEffect( {effectName: 'Aura of Purity', uuid} )\r\n\t\t\teffected.push(uuid)\r\n\t\t}\r\n\t}\r\n\treturn effected\r\n}\r\n\r\nexport const auraOfPurity = {\r\n\tpreTargetSave,\r\n\tonUse\r\n}","import {getSpawnLocation, setActorConcDeletion, setActorConcRemoveUuids} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getSpawnUpdates = async (originActorSenses, originTokenSight) => {\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"alpha\": 0,\r\n\t\t\t\"sight\": originTokenSight\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"system.attributes.senses\": originActorSenses\r\n\t\t}\r\n\t}\r\n}\r\nconst getTokenSpawnIds = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawnedTokenId = await setSpawnedTokenId(tokenUuid, itemRange, actor, originToken)\r\n\tconst spawnedToken = canvas.scene.collections.tokens.get(spawnedTokenId)\r\n\treturn spawnedToken.uuid\r\n}\r\nconst getWarpgateCallbacks = async (tokenUuid) => {\r\n\treturn {\r\n\t\tpre: async (template,update,token) => {\r\n\t\t\tsetEffectsSequencer(template, update, token, tokenUuid)\r\n\t\t\tawait warpgate.wait(2650)\r\n\t\t},\r\n\t\tpost: async (template, token) => {\r\n\t\t\tsetPostEffectsSequencer(template,token)\r\n\t\t}\r\n\t}\r\n}\r\nconst getWarpgateOptions = async (actor) => {\r\n\treturn {controllingActor: actor}\r\n}\r\nconst getWarpgateUpdates = async (spawn, originActorSenses, originTokenSight) => {\r\n\tconst updates = await getSpawnUpdates(originActorSenses, originTokenSight)\r\n\treturn mergeObject(updates, spawn)\r\n}\r\nconst setEffectsSequencer = async (template, update, token, originTokenUuid) => {\r\n\tconst color = \"blue\"\r\n\tconst originToken = await fromUuid(originTokenUuid)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.intro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.loop.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.outro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\t\r\n}\r\nconst setHookMacros = async (actor, spawnedTokenUuid) => {\r\n\tconst userIsGM = game.users.find(user => user.id == game.userId).isTheGM\r\n\tif (!userIsGM) {\r\n\t\tawait socket.executeAsGM(\"setDeleteSummonConcentrationHook\", actor, spawnedTokenUuid)\r\n\t}\r\n\tconst deleteSummonConcentrationHookId = Hooks.on(\"deleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", deleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\r\n}\r\nconst setPostEffectsSequencer = async (template, token) => {\r\n\tconst sequencerPath = \"jb2a.impact.009.blue\"\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.fadeIn(250)\t\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\t\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t.play()\r\n\t\r\n}\r\nconst setPostSpawnEffects = async (spawnedTokenUuid, originTokenActorUuid) => {\r\n\tconst fromUuidActor = await fromUuid(originTokenActorUuid)\r\n\tawait setActorConcRemoveUuids(fromUuidActor, spawnedTokenUuid)\r\n\tawait setHookMacros(fromUuidActor, spawnedTokenUuid)\t\r\n}\r\nconst setSpawnedTokenId = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawn = {\r\n\t\ttoken: { name:\"Clairvoyance\"},\r\n\t\tactor: { name:\"Clairvoyance\"}\r\n\t}\r\n\tconst location = await getSpawnLocation(\"modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_Grey_Sphere_400x400.webm\", 1, 4, tokenUuid, itemRange, originToken)\r\n\tconst spawnedTokenId = await warpgate.spawnAt({x: location.x, y: location.y}, spawn.token.name, await getWarpgateUpdates(spawn, actor.system.attributes.senses, originToken.document.sight), await getWarpgateCallbacks(tokenUuid), await getWarpgateOptions(actor))\r\n\treturn spawnedTokenId[0]\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tawait setActorConcDeletion(actor)\r\n\t} else {\t\r\n\t\tconst spawnedTokenUuid = await getTokenSpawnIds(args[0].tokenUuid, 5280, actor, token)\t\t\r\n\t\tawait setPostSpawnEffects(spawnedTokenUuid, token.document.actor.uuid)\t\r\n\t}\r\n}\r\n\r\nexport const clairvoyance = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getDialogueButtonType, setActiveEffects, setTemplateDispels} from \"../../helper-functions.js\"\r\nimport {setAreaEffectDeleteHook} from \"../../hooks.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getEffectOriginData = async (originUuid, lightId) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\torigin: originUuid,\r\n\t\tchanges: [{key: \"macro.execute\", mode: 0, value: \"function.CHARNAME.macros.daylight.setSpellEffects\"}],\r\n\t\t\"flags.castData.daylight.lightId\": lightId,\r\n\t\t\"flags.dae.showIcon\": false,\t\t\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": true,\t\t\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectTokenData = async (originUuid) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\tduration: {rounds: 600},\r\n\t\torigin: originUuid,\r\n\t\tchanges: [\r\n\t\t\t{key: `ATL.light.dim`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [120]},\r\n\t\t\t{key: `ATL.light.bright`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [60]},\r\n\t\t\t{key: `ATL.light.attenuation`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [.35]}\r\n\t\t],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": false,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.showIcon\": true,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area of Effect\":\r\n\t\t\treturn \"icons/magic/air/weather-clouds-sunlight.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/air/weather-sunlight-sky.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst setAreaChoiceEffects = async (templateUuid, templateEffect, tokenActorUuid, itemUuid, positions) => {\r\n\tconst [x, y] = await setTemplateEffects(templateUuid, templateEffect, positions)\r\n\tconst lightParams = {\"x\": x, \"y\": y, \"config\": {\"bright\": 60, \"dim\": 120, \"attenuation\": .4}}\r\n\tconst [sanitizedLight] = await socket.executeAsGM(\"setAmbientLightCreate\", lightParams)\r\n\tconst [effect] = await setActiveEffects([tokenActorUuid], await getEffectOriginData(itemUuid, sanitizedLight._id))\t\r\n\tawait setAreaEffectDeleteHook(60, x, y, [\"Darkness\"], 9, effect, positions)\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token) => {\r\n\tif (!token) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation({\"x\": x, \"y\": y})\r\n\t\t\t.play()\t\t\t\t\r\n\t} else {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.attachTo(token)\r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst setInitChoice = async (itemUuid)  => {\r\n\tconst type = await getDialogueButtonType([\"Area of Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Daylight?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tconst target = game.user.targets.first()\r\n\t\tawait setActiveEffects([target.document.actor.uuid], await getEffectTokenData(itemUuid))\r\n\t\tawait setEffectsSequencer(0, 0, target.document.width, target)\r\n\t\treturn false\t\t\t\r\n\t}\t\r\n\treturn true\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tconst isAreaChoice = await setInitChoice(item.uuid)\r\n\t\tif (!isAreaChoice) return false\r\n\t} else if (args[0].tag == \"OnUse\" && args[0].macroPass == \"postActiveEffects\") {\r\n\t\tconst templateId = \"MeasuredTemplate.\" + args[0].templateId \r\n\t\tconst templatePositions = canvas.grid.highlightLayers[templateId].positions\r\n\t\tconst templateEffect = actor.effects.find(effect => effect.name == \"Daylight Template\")\r\n\t\tawait setAreaChoiceEffects(args[0].templateUuid, templateEffect, token.document.actor.uuid, item.uuid, templatePositions)\r\n\t} else if (args[0] == \"off\")  {\r\n\t\tconst lastArg = args[args.length - 1]\r\n\t\tawait socket.executeAsGM(\"setAmbientLightDelete\", lastArg.efData.flags.castData.daylight.lightId)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setTemplateEffects = async (templateUuid, templateEffect, templatePositions) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tawait setEffectsSequencer(template.x, template.y, 7, false)\r\n\tawait setTemplateDispels(template.x, template.y, \"Darkness\", templatePositions)\r\n\ttemplateEffect.delete()\r\n\treturn [template.x, template.y]\r\n}\r\n\r\nexport const daylight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getTemplatesInRange, getTemplatesWithOverlap} from \"./helper-functions.js\"\r\nimport {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const setAreaEffectDeleteHook = async (range, x, y, ineligibleEffectNames, minSpellLevel, originTemplateActiveEffect, itemTemplatePositions) => {\r\n\tconst setAreaEffectDeleteHookId = Hooks.on(\"refreshMeasuredTemplate\", (templateData) => {\r\n\t\tconst template = templateData.document\t\t\r\n\t\tconst originFlag = template.flags?.dnd5e?.origin ?? false\r\n\t\tconst templateSpellLevel = template.flags?.dnd5e?.spellLevel ?? 0\r\n\t\tif (!originFlag || templateSpellLevel > minSpellLevel) return false\t\t\r\n\t\tconst origin = fromUuidSync(template.flags.dnd5e.origin)\r\n\t\tif (ineligibleEffectNames.includes(origin.name) || ineligibleEffectNames == \"all\") {\t\r\n\t\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\t\tconst gridTemplatePositions = canvas.grid.highlightLayers[gridTemplateId].positions\t\r\n\t\t\tconst templatesOverlap = itemTemplatePositions.intersection(gridTemplatePositions).size > 0 \r\n\t\t\tif (!templatesOverlap) return false\r\n\t\t\t//waiting for potential concentration effects to cycle through\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsocket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)\r\n\t\t\t}, 200)\t\t\t\t\r\n\t\t}\r\n\t})\r\n\tawait setAreaEffectDeleteHookOff(originTemplateActiveEffect, setAreaEffectDeleteHookId)\r\n}\r\nexport const setAreaEffectDeleteHookOff = async (templateEffect, setAreaEffectDeleteHookId) => {\r\n\tconst setAreaEffectDeleteHookOffId = Hooks.on(\"deleteActiveEffect\", (effect, config) => {\t\t\t\r\n\t\tif (effect.uuid == templateEffect.uuid) {\r\n\t\t\tHooks.off(\"createMeasuredTemplate\", setAreaEffectDeleteHookId)\r\n\t\t\tHooks.off(\"deleteActiveEffect\", setAreaEffectDeleteHookOffId)\r\n\t\t}\r\n\t})\r\n}","import {getDialogueButtonType, getTemplatesInRange} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst deleteEffectsOnToken = async (casterToken, dispelAbility, dispelLevel) => {\r\n\tconst target = game.user.targets.first()\t\r\n\tconst [effectsLTE2DispelLevel, effectsGTDispelLevel] = await getTokenEffects(target, dispelLevel)\r\n\tconst effectsIdsToDelete = await getEffectsToDelete(casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel)\r\n\teffectsIdsToDelete.map(socket.executeAsGM(\"setActiveEffectDelete\", target.actor, effectsIdsToDelete[i]))\r\n}\r\nconst deleteTemplate = async (casterToken, dispelAbility, dispelLevel, selectedTemplate) => {\r\n\tconst spellLevel = selectedTemplate.flags.dnd5e.spellLevel\r\n\tconst templatesToDelete = dispelLevel < spellLevel ? await getTemplatesToDelete(casterToken, dispelAbility, [selectedTemplate]) : [selectedTemplate]\r\n\ttemplatesToDelete.map(template => socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid))\r\n}\r\nconst getEffectsToDelete = async (casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel) => {\r\n\tconst casterAbilityMod = casterToken.actor.system.abilities[dispelAbility].mod\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet effectCastLevel = 0\r\n\tfor (let i = 0; i < effectsGTDispelLevel.length; i++) {\r\n\t\teffectCastLevel = effectsGTDispelLevel[i].flags[\"midi-qol\"].castData.castLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > effectCastLevel + 10) arr.push(effectsGTDispelLevel[i])\t\t\r\n\t}\r\n\treturn effectsLTE2DispelLevel.concat(arr).map(effect => effect.id)\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area Effect\":\r\n\t\t\treturn \"icons/magic/air/air-burst-spiral-blue-gray.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/nature/plant-sprout-hand-blue.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelectedTemplate = async (casterToken) => {\r\n\tconst eligibleTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e.spellLevel > 0)\r\n\tconst inRangeEligibleTemplates = getTemplatesInRange(eligibleTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 120, casterToken.x, casterToken.y)\t\r\n\tlet originItem\r\n\tlet originItems = []\r\n\tfor (let i = 0; i < inRangeEligibleTemplates.length; i++) {\r\n\t\toriginItem = await fromUuid(inRangeEligibleTemplates[i].flags.dnd5e.origin)\r\n\t\toriginItems.push(originItem)\r\n\t}\r\n\treturn await getTemplateSelection(originItems, inRangeEligibleTemplates)\r\n}\r\nconst getTemplateSelection = async (items, inRangeEligibleTemplates) => {\r\n\tconst sortedTemplates = inRangeEligibleTemplates.sort((a, b) => {\r\n\t\tconst aOrig = fromUuidSync(a.flags.dnd5e.origin)\t\r\n\t\tconst bOrig = fromUuidSync(b.flags.dnd5e.origin)\r\n\t\treturn aOrig.name.localeCompare(bOrig.name)\r\n\t})\r\n\tconst templateSelections = items.map((item, i) => {\r\n\t\tconst itemOwnerName = canvas.scene.tokens?.find(token => token.actor.uuid == item.parent.uuid)?.name ?? \"unknown\"\r\n\t\tconst itemLabel = item.name + \" from \" + itemOwnerName\t\r\n\t\treturn {type: 'radio', label: itemLabel}\r\n\t}).sort((a, b) => a.label.localeCompare(b.label))\t\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: templateSelections\r\n\t\t},{\r\n\t\t\ttitle: \"Which template to dispel?\",\r\n\t\t\trender: (...args) => { console.log(...args); ui.notifications.info(\"render!\")},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100px\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn sortedTemplates[choices.inputs.indexOf(true)]\r\n}\r\nconst getTemplatesToDelete = async (casterToken, dispelAbility, potentialTemplates) => {\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet templateCastLevel = 0\r\n\tfor (let i = 0; i < potentialTemplates.length; i++) {\r\n\t\ttemplateCastLevel = potentialTemplates[i].flags.dnd5e.spellLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > potentialTemplates[i].flags.dnd5e.spellLevel + 10) arr.push(potentialTemplates[i])\t\t\r\n\t}\t\r\n\treturn arr\r\n}\r\nconst getTokenEffects = async (token, dispelLevel) => {\r\n\t//get two groups, 1: effects w/ spell levels lesser than or equal to the casted spell level of dispel magic; and 2: the same with greater than that level\r\n\tconst effectsLTE2DispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > 0 && effect.flags[\"midi-qol\"].castData.baseLevel <= dispelLevel)\r\n\tconst effectsGTDispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > dispelLevel)\r\n\treturn [effectsLTE2DispelLevel, effectsGTDispelLevel]\r\n} \r\nconst setInitChoice = async (casterUuid, dispelAbility, dispelLevel)  => {\r\n\tconst type = await getDialogueButtonType([\"Area Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Dispel Magic?\", getIconPaths, 60, 60)\r\n\tconst casterToken = await fromUuid(casterUuid)\t\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tdeleteEffectsOnToken(casterToken, dispelAbility, dispelLevel)\t\r\n\t} else if (type.value == \"Area Effect\") {\r\n\t\tconst selectedTemplate = await getSelectedTemplate(casterToken)\r\n\t\tdeleteTemplate(casterToken, dispelAbility, dispelLevel, selectedTemplate)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setSpellEffects = async ({args, item, workflow}) => {\r\n\tconst casterUuid = args[0].tokenUuid\r\n\tconst dispelAbility = args[0].actor.system.attributes.spellcasting\r\n\tconst dispelLevel = args[0].spellLevel < 3 ? 3 : args[0].spellLevel\r\n\tsetInitChoice(casterUuid, dispelAbility, dispelLevel)\r\n}\r\n\r\nexport const dispelMagic = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {cloudSpellNames} from \"../../constants.js\"\r\n\r\nconst getAoeOverlapPerc = async (args) => {\r\n\tconst creatureCoords = await getCreatureCoords(args[0].actor.token)\r\n\tconst templateCoords = await getTemplateCoords(args[0].templateId) ?? false\r\n\tif (!templateCoords) return 0\r\n\tconst overlap = creatureCoords.intersection(templateCoords)\r\n\treturn overlap.size / creatureCoords.size\r\n}\r\nconst getCreatureCoords = async (tokenDoc) => {\r\n\tconst gridSize = canvas.scene.grid.size\r\n\tlet set = new Set()\r\n\tlet position = \"\"\r\n\tfor (let i = 0; i < tokenDoc.height; i++) {\r\n\t\tfor (let j = 0; j < tokenDoc.width; j++) {\r\n\t\t\tposition = (tokenDoc.x + gridSize*i).toString() + \".\" + (tokenDoc.y + gridSize*j).toString() \r\n\t\t\tset.add(position)\r\n\t\t}\r\n\t}\r\n\treturn set\r\n}\r\nconst getNewDamage = async(hpDamage, hordeCount, multiplier, hasAreaTarget) => {\r\n\treturn hasAreaTarget ? Math.floor(hpDamage * hordeCount * multiplier) : hpDamage\r\n}\r\nconst getTemplateCoords = async (templateId) => {\r\n\tconst templateIdStr = \"MeasuredTemplate.\" + templateId\r\n\treturn canvas.grid.highlightLayers[templateIdStr].positions\r\n}\r\nconst isSaveFailure = async ({args, item}) => {\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tconsole.log(await getAoeOverlapPerc(args))\r\n\tif (!item.system.hasAreaTarget || await getAoeOverlapPerc(args) <= .666) {\r\n\t\tHooks.once(\"createActiveEffect\", (effect) => {\t\t\t\r\n\t\t\teffect.delete()\r\n\t\t})\r\n\t}\t\r\n}\r\nconst preTargetDamageApplication = async ({actor, args, item, workflow, token}) => {\r\n\tif (workflow.hitTargets.size < 1) return false\r\n\tconst hordeItem = await fromUuid(actor.items.find(item => item.name == \"Horde\").uuid)\r\n\tconst hordeItemUses = hordeItem.system.uses.value\r\n\tconst hordeItemUsesMax = hordeItem.system.uses.max\r\n\tconst liveTokenDoc = await fromUuid(token.document.uuid)\r\n\tconst hpDamage = workflow.damageItem.hpDamage\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tif (hpDamage > 0) setHpUpdateEffects(actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args)\r\n}\r\nconst setHpUpdateEffects = async (actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args) => {\r\n\tconst aoeOverlapPerc = await getAoeOverlapPerc(args)\r\n\tconst newHpDamage = await getNewDamage(hpDamage, hordeItemUses, aoeOverlapPerc, hasAreaTarget)\r\n\tworkflow.damageItem.hpDamage = newHpDamage\r\n\tsetPostDamageUpdates(actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax)\r\n}\r\nconst setLiveTokenDocUpdates = async (texture, hordeItem, hordeItemUsesMax, multiplier, liveTokenDoc, shouldReduce, tokenSizeNum) => {\r\n\t\thordeItem.update({\"system.uses.value\": hordeItemUsesMax * multiplier})\r\n\t\tif (tokenSizeNum > 2 && shouldReduce) {\r\n\t\t\tawait warpgate.wait(4000)\t\r\n\t\t\tsetSequencer(liveTokenDoc)\r\n\t\t\tawait warpgate.wait(200)\t\r\n\t\t\tif (liveTokenDoc.actor.system.traits.size != \"grg\" && liveTokenDoc.width <= 4 && liveTokenDoc.width <= 4) {\r\n\t\t\t\tliveTokenDoc.actor.update({\"system.traits.size\": Object.keys(CONFIG.DND5E.actorSizes)[tokenSizeNum - 1]})\r\n\t\t\t}\r\n\t\t\tliveTokenDoc.update({\"width\": liveTokenDoc.width - 1, \"height\": liveTokenDoc.width - 1})\t\r\n\t\t}\r\n\t\tliveTokenDoc.update({\"texture.src\": texture})\r\n}\r\nconst setPostDamageUpdates = async (actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax) => {\r\n\tconst newHealthPercentage = ((actor.system.attributes.hp.value - newHpDamage) / actor.system.attributes.hp.max) * 100\r\n\tconst tokenSizeNum = Object.keys(CONFIG.DND5E.actorSizes).indexOf(liveTokenDoc.actor.system.traits.size)\r\n\tlet shouldReduce = false\r\n\tif (75 >= newHealthPercentage && newHealthPercentage > 50) {\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img1, hordeItem, hordeItemUsesMax, .75, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (50 >= newHealthPercentage && newHealthPercentage > 25) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img2, hordeItem, hordeItemUsesMax, .50, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (25 >= newHealthPercentage && newHealthPercentage >= 0) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img3, hordeItem, hordeItemUsesMax, .25, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} \r\n}\r\nconst setSequencer = async (liveTokenDoc) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(liveTokenDoc.actor.flags[\"midi-qol\"].hordePassive.sequencerPath)\r\n\t\t\t.atLocation(liveTokenDoc)\r\n\t\t.play()\r\n}\r\n\r\nexport const hordePassive = {\r\n\tisSaveFailure,\r\n\tpreTargetDamageApplication\r\n}","export const ringOfSpellStoring = {\r\n\taddSpellErr:\t\t\"Your Ring of Spell Storing doesn't have enough room left for a spell!\",\r\n\tcastSpellErr:\t\t\"Your Ring of Spell Storing doesn't have any spells on it!\",\t\r\n\tcastSpellHeader:\t\"Which spell do you wan to cast?\",\r\n\tcharHeader: \t\t\"Who is casting onto the ring?\",\r\n\tcurrSpellBank:\t\t\"Current Spell Bank\",\r\n\tdescLevel: \t\t\t\", Level \",\r\n\tcharnamesExceptions:[\"Shadowfell Vine Strike\", \"Necrotic Blast\", \"Summon Shadow Clone\", \"Animate Shadow Servant\", \"Mud\", \"Taunt\"],\r\n\tinitChoices:\t\t[\"Add Spells\", \"Cast Spell\", \"Empty Spells\"],\r\n\tinitHeader: \t\t\"What do you want to cast?\",\r\n\tlevelHeader:\t\t\"What level spell do you want to add?\",\r\n\tlevelLabels:\t\t[\"One\", \"Two\", \"Three\", \"Four\", \"Five\"],\r\n\tspellHeader:\t\t\"Which spell is being cast onto the ring?\",\r\n}","//TODO:\r\n//add reaction handling for spells like shield?  Or add them directly to the character sheet?\r\n\r\nimport {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {ringOfSpellStoring as s} from \"../../strings/items.js\"\r\n\r\nconst addSpell = async (tokenActor, item) => {\r\n\tif (item.flags.charname.ringOfSpellStoring.slotsUsed == 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn false\r\n\t}\t\r\n\tconst actors = await getLiveActors()\r\n\tconst eligibleSpellsByChar = await getEligibleSpells(actors)\t\r\n\tconst charChoices = eligibleSpellsByChar.map(character => character.origin).toSorted()\r\n\tconst charChoice = await getDialogueButtonType(charChoices, {width: 400, height: 150}, s.charHeader, getCharIconPaths, 60, 60, eligibleSpellsByChar)\r\n\tconst levelChoices = await getLevelChoices(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst levelChoice = await getDialogueButtonType(levelChoices, {width: 400, height: 150}, s.levelHeader, getLevelIconPaths, 60, 60)\r\n\tconst levelChoiceInt = s.levelLabels.indexOf(levelChoice.value) + 1\r\n\tconst [spellChoices, spellIcons] = await getSpellChoices(charChoice, eligibleSpellsByChar, levelChoiceInt)\r\n\tconst spellChoice = await getSpellChoice(spellChoices, s.spellHeader, getSpellIconPaths, spellIcons)\r\n\tupdateRingItem(item, charChoice.value, levelChoiceInt, spellChoice.value, eligibleSpellsByChar)\r\n}\r\nconst castSpell = async (tokenActor, liveItem) => {\r\n\tconst spellData = await getSpellToCast(liveItem)\t\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor)\t\r\n\tHooks.once(\"dnd5e.preUseItem\", (item, config) => {\r\n\t\tif (item.uuid != tempItem.uuid) return false\t\r\n\t\tconfig.consumeResource = false\r\n\t\tconfig.consumeSpellSlot = false\r\n\t\tconfig.consumeUsage = false\r\n\t\tconfig.slotLevel = spellData.level\t\r\n\t\tconfig.system.prof._baseProficiency = spellData.prof\t\t\t\r\n\t})\t\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, liveItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n\tif (workflow) await deleteTempItem(template, liveItem, tempItem, spellData, tokenActor)\t\r\n}\r\nconst createTempItem = async (spellData, tokenActor) => {\r\n\tconst sourceItem = await fromUuid(spellData.uuid)\t\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Ring of Spell Storing: \" + spellData.name,\r\n\t\t\"system.ability\": \"none\",\r\n\t\t\"system.attackBonus\": spellData.attackBonus,\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t\t\"system.save.dc\": spellData.dc,\r\n\t\t\"system.save.scaling\": \"flat\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (template, liveItem, tempItem, spellData, tokenActor) => {\t\r\n\tsetDeleteItemFlags(liveItem, spellData)\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tif (concEffect) {\r\n\t\tHooks.once(\"deleteActiveEffect\", (deletedEffect) => {\r\n\t\t\tif (deletedEffect.uuid == concEffect.uuid) {\r\n\t\t\t\tconst tempItemExists = fromUuidSync(tempItem.uuid)\r\n\t\t\t\tif (tempItemExists) tempItem.delete()\r\n\t\t\t}\r\n\t\t})\r\n\t} else if (!concEffect && template) {\r\n\t\tHooks.once(\"deleteMeasuredTemplate\", (deletedTemplate) => {\r\n\t\t\tif (deletedTemplate.uuid == template.uuid) {\r\n\t\t\t\tconst tempItemExists = fromUuidSync(tempItem.uuid)\r\n\t\t\t\tif (tempItemExists) tempItem.delete()\r\n\t\t\t}\r\n\t\t})\r\n\t} else {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}\r\nconst getAttackBonus = (actor, item, ability) => {\r\n\tconst isRangedAttack = item.system.actionType == \"rsak\"\r\n\tconst isMeleeAttack = item.system.actionType == \"msak\"\r\n\tif (!isRangedAttack && !isMeleeAttack) {\r\n\t\treturn 0\r\n\t} else if (isRangedAttack) {\t\t\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.rsak.attack)\r\n\t} else if (isMeleeAttack) {\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.msak.attack)\r\n\t}\r\n}\r\nconst getCharIconPaths = (choice, iconData) => {\t\r\n\tconst match = iconData.find(item => item.origin == choice)\r\n\treturn match.icon\r\n}\r\nconst getEligibleSpells = async (actors) => {\r\n\treturn actors.map(actor => {\r\n\t\tconst highestSpellLevel = getHighestSpellLevel(actor.system.spells)\r\n\t\tconst eligibleItems = actor.items.filter(item => item.type == \"spell\" && item.system.level > 0 && item.system.level <= 5)\t\r\n\t\tconst actorSpells = eligibleItems.reduce((items, item) => {\r\n\t\t\tlet arr = []\r\n\t\t\tlet spellData = {}\r\n\t\t\tfor (let i = item.system.level; i <= 5; i ++) {\r\n\t\t\t\tif (item.system.preparation.mode == \"atwill\" || item.system.preparation.mode == \"innate\") {\t\t\t\t\r\n\t\t\t\t\tif (i == item.system.level) {\r\n\t\t\t\t\t\tspellData = getSpellData(actor, item, item.system.level)\r\n\t\t\t\t\t\tarr.push(spellData)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (item.system.preparation.mode == \"pact\") {\r\n\t\t\t\t\tif (i == actor.system.spells.pact.level) {\r\n\t\t\t\t\t\tspellData = getSpellData(actor, item, actor.system.spells.pact.level)\r\n\t\t\t\t\t\tarr.push(spellData)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (i <= highestSpellLevel) {\r\n\t\t\t\t\t\tspellData = getSpellData(actor, item, i)\r\n\t\t\t\t\t\tarr.push(spellData)\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t}\t\t\r\n\t\t\treturn [...items, ...arr]\r\n\t\t}, [])\r\n\t\treturn {origin: actor.prototypeToken.name, icon: actor.prototypeToken.texture.src, spells: actorSpells}\r\n\t})\r\n}\r\nconst getHighestSpellLevel = (spells) => {\r\n\tlet arr = []\r\n\tlet label\r\n\tfor (let i = 1; i <= 9; i++) {\r\n\t\tlabel = \"spell\" + i\r\n\t\tif (spells[label].max > 0) arr.push(i)\r\n\t}\r\n\treturn Math.max(...arr)\r\n}\r\nconst getInitIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.initChoices[0]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-diamond-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[1]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-pentagon-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[2]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-glowing-triangle-teal-purple.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst getLevelChoices = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst slotsRemaining = 5 - item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\r\n\tconst eligibleLevels = character.spells.map(spell => spell.level).filter(level => level <= slotsRemaining)\r\n\tconst spellLevels = new Set(eligibleLevels)\t\t\t\r\n\treturn Array.from(spellLevels).toSorted().map(level => s.levelLabels[level - 1])\r\n}\r\nconst getLevelIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.levelLabels[0]:\r\n\t\t\treturn \"icons/skills/ranged/target-bullseye-archer-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[1]:\r\n\t\t\treturn \"icons/skills/melee/weapons-crossed-daggers-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[2]:\r\n\t\t\treturn \"icons/skills/ranged/arrows-triple-yellow-red.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[3]:\r\n\t\t\treturn \"icons/skills/ranged/shuriken-thrown-yellow.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[4]:\r\n\t\t\treturn \"icons/skills/ranged/daggers-thrown-salvo-orange.webp\"\r\n\t\t\tbreak\t\t\t\t\r\n\t}\t\r\n}\r\nconst getLiveActors = async () => {\r\n\treturn game.users.filter(user => user.character).filter(user => {\r\n\t\treturn canvas.scene.tokens.find(token => token.actor.uuid == user.character.uuid)\r\n\t}).map(user => user.character)\r\n}\r\nconst getSpellChoice = async (spellChoices, spellHeader, getSpellIconPaths, spellIcons) => {\r\n\tconst sortedChoices = spellChoices.toSorted()\r\n\tconst radioSelections = sortedChoices.map(choice => {\r\n\t\tconst data = spellIcons.find(spell => spell.name == choice)\r\n\t\tconst icon = data.icon\r\n\t\tconst label = `<img align=left src=${icon} width=\"15\" height=\"15\" style=\"border:0px\">${choice}`\r\n\t\treturn {type: \"radio\", label}\r\n\t})\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: radioSelections\r\n\t\t},{\r\n\t\t\ttitle: spellHeader,\r\n\t\t\trender: (...args) => {},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn {value: sortedChoices[choices.inputs.indexOf(true)]}\r\n}\r\nconst getSpellChoices = async (charChoice, eligibleSpellsByChar, levelChoiceInt) => {\t\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\t\r\n\tconst spells = character.spells.filter(spell => spell.level == levelChoiceInt && !s.charnamesExceptions.includes(spell.name))\r\n\tconst names = spells.map(spell => spell.name)\r\n\tconst icons = spells.map(spell => { return {name: spell.name, icon: spell.icon} })\r\n\treturn [names, icons]\r\n}\r\nconst getSpellData = (actor, item, i) => {\r\n\tconst name = item.name\r\n\tconst level = i\r\n\tconst dc = actor.system.attributes.spelldc\r\n\tconst ability = actor.system.attributes.spellcasting\r\n\tconst attackBonus = getAttackBonus(actor, item, ability)\r\n\tconst prof = actor.system.attributes.prof\t\r\n\tconst icon = item.img\r\n\tconst uuid = item.uuid\r\n\tconst activation = item.system.activation.type\r\n\treturn {name, level, dc, ability, attackBonus, prof, icon, uuid, activation}\r\n}\r\nconst getSpellIconPaths = (choice, iconData) => {\r\n\tconst match = iconData.find(item => item.name == choice)\r\n\treturn match.icon\t\r\n}\r\nconst getSpellToCast = async (item) => {\r\n\tconst spells = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tif (spells.length < 1) {\r\n\t\tui.notifications.info(s.castSpellErr)\r\n\t\treturn false\t\t\r\n\t}\t\r\n\tconst uniqueSpells = new Set(spells)\r\n\tconst spellsArr = Array.from(uniqueSpells)\r\n\tconst spellNames = spellsArr.map(spell => spell.name).toSorted()\r\n\tconst chosenSpell = await getDialogueButtonType(spellNames, {width: 400, height: \"100%\"}, s.castSpellHeader, getSpellIconPaths, 60, 60, spellsArr)\r\n\treturn spellsArr.find(spell => spell.name == chosenSpell.value)\r\n}\r\nconst getUpdatedDescription = async (item) => {\r\nconst desc = item.system.description.value\r\n\tconst spells = item.flags.charname.ringOfSpellStoring.spells.reduce((spells, spell) => {\r\n\t\tconsole.log(\"spell\")\r\n\t\tconsole.log(spell)\t\r\n\t\tconst newSpell = [\"<br />\" + spell.name + s.descLevel + spell.level]\r\n\t\treturn [...spells, ...newSpell]\r\n\t}, []).toSorted()\t\t\r\n\tconst newSpells = spells.reduce((descs, desc) => {\r\n\t\treturn descs + desc\r\n\t}, \"\")\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\r\n\tconst sanitizedDesc = desc.replace(spellBankStr, \"\")\t\r\n\treturn sanitizedDesc + \"<br />*******<br />\" + s.currSpellBank + \":<br />\" + newSpells + \"<br />*******\"\r\n}\r\nconst main = async ({args, item}) => {\r\n\tconst initChoice = await getDialogueButtonType(s.initChoices, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\r\n\tif (initChoice.value == s.initChoices[0]) {\r\n\t\taddSpell(tokenActor, liveItem)\r\n\t} else if (initChoice.value == s.initChoices[1]) {\r\n\t\tcastSpell(tokenActor, liveItem)\r\n\t} else if (initChoice.value == s.initChoices[2]) {\r\n\t\tresetSpells(liveItem)\r\n\t}\r\n}\r\nconst updateRingItem = async (item, charName, level, spellName, eligibleSpellsByChar) => {\t\r\n\tconst slots = item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\tconst newSlotsUsed = slots + level\r\n\tif (newSlotsUsed > 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn false\r\n\t}\r\n\tconst chr = eligibleSpellsByChar.find(chr => chr.origin == charName)\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tconst chosenSpell = [chr.spells.find(spell => spell.name == spellName && spell.level == level)]\t\t\r\n\tconst newSpellData = [...spellData, ...chosenSpell]\r\n\tconst flagUpdate = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpellData,\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed\r\n\t})\t\r\n\tconst updatedDescription = await getUpdatedDescription(item)\t\r\n\tconst descUpdate = await item.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\r\n}\r\nconst resetSpells = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\t\r\n\tconst updatedStr = \"<br />*******<br />\" + s.currSpellBank + \":<br /><br />*******\"\r\n\tconst updatedDesc = desc.replace(spellBankStr, updatedStr)\t\r\n\tawait item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": [],\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": 0,\r\n\t\t\"system.description.value\": updatedDesc\r\n\t})\t\r\n}\r\nconst setDeleteItemFlags = async (liveItem, spellData) => {\r\n\tconst spells = liveItem.flags.charname.ringOfSpellStoring.spells\t\r\n\tconst slotsUsed = liveItem.flags.charname.ringOfSpellStoring.slotsUsed\r\n\tconst usedSpell = spells.find(spell => {\r\n\t\treturn spell.level == spellData.level\r\n\t\t\t&& spell.name == spellData.name \r\n\t\t\t&& spell.dc == spellData.dc \r\n\t\t\t&& spell.ability == spellData.ability\r\n\t})\t\r\n\tconst deleteIndex = spells.indexOf(usedSpell)\r\n\tconst newSlotsUsed = slotsUsed - usedSpell.level\r\n\tconst newSpells = spells.filter((spell, i) => i != deleteIndex)\r\n\tconst flaggedItem = await liveItem.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpells,\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed\r\n\t})\r\n\tconst updatedDescription = await getUpdatedDescription(flaggedItem)\t\r\n\tconst descUpdate = await flaggedItem.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\r\n}\r\n\r\nexport const ringOfSpellStoring = {\r\n\t\"main\": main\r\n}","import {getDialogueButtonType, setActiveEffects} from \"../../helper-functions.js\"\r\n\r\nconst getCommandItemData = async (originActor, type) => {\r\n\tconst sourceItem = type.value == \"Command: Flee\" ? await fromUuid(\"Item.TLqebf57ZF6HUkml\") : await fromUuid(\"Item.9iKDqMbCAERS9psP\")\r\n\tconsole.log(sourceItem)\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\t\t//name: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getFearItemData = async (originActor) => {\r\n\tconst sourceItem = await fromUuid(\"Item.DG5FfgOrf5IhvITt\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Fear\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-monster-purple-blue.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Flee\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-shadow-monster-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Prone\":\r\n\t\t\treturn \"icons/magic/control/silhouette-fall-slip-prone.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst onUse = async ({args, item, actor, token}) => {\r\n\tconst buttonOptions = item.system.uses.value > 1 ? [\"Fear\", \"Command: Flee\", \"Command: Prone\"] : [\"Command: Flee\", \"Command: Prone\"]\r\n\tconst type = await getDialogueButtonType(buttonOptions, {width: 400, height: 150}, \"What do you want to cast?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Fear\") {\r\n\t\tsetFearEffects(actor, item)\r\n\t} else {\r\n\t\tsetCommandEffects(actor, item, token, type)\r\n\t}\r\n}\r\nconst setCommandEffects = async (actor, item, token, type) => {\r\n\tconst commandItem = await getCommandItemData(actor, type)\r\n\tconst target = game.user.targets?.first() ?? false\r\n\tif (!target) return false\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [target.document.uuid]}\r\n\tconst commandWorkflow = await MidiQOL.completeItemUse(commandItem, {}, options)\t\r\n\tsetCommandEffectsSequencer(target)\r\n\tsetItemUsesUpdate(item.uuid, 1)\t\r\n}\r\nconst setCommandEffectsSequencer = async (token) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.enchantment.complete.dark_purple`)\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t\t.attachTo(token)\r\n\t\t\t.belowTokens()\r\n\t\t.play()\t\t\t\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token, template) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.detect_magic.cone.purple`)\r\n\t\t\t.scale(4.4)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\r\n\t\t\t.spriteOffset({x: 600, y:0}, {local: true})\r\n\t\t\t.rotate(-template.direction)\r\n\t\t.play()\t\t\t\r\n}\r\nconst setFearEffects = async (actor, item) => {\r\n\tconst fearItem = await getFearItemData(actor)\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false}\r\n\tconst fearWorkflow = await MidiQOL.completeItemUse(fearItem, {}, options)\t\r\n\tconst liveTemplate = await fromUuid(fearWorkflow.templateUuid)\r\n\tsetEffectsSequencer(0, 0, 1, false, liveTemplate)\r\n\tsetItemUsesUpdate(item.uuid, 2)\t\r\n}\r\nconst setItemUsesUpdate = async (itemUuid, usesUsed) => {\r\n\tconst liveItem = await fromUuid(itemUuid)\r\n\tliveItem.update({\"system.uses.value\": liveItem.system.uses.value - usesUsed})\r\n}\r\n\r\nexport const wandOfFear = {\r\n\tonUse\r\n}","import {auraOfPurity} from \"./macros/spells/aura-of-purity.js\"\r\nimport {blight} from \"./macros/spells/blight.js\"\r\nimport {clairvoyance} from \"./macros/spells/clairvoyance.js\"\r\nimport {daylight} from \"./macros/spells/daylight.js\"\r\nimport {dispelMagic} from \"./macros/spells/dispel-magic.js\"\r\nimport {feyAncestry} from \"./macros/features/fey-ancestry.js\"\r\nimport {hordePassive} from \"./macros/features/horde-passive.js\"\r\nimport {ringOfSpellStoring} from \"./macros/items/ring-of-spell-storing.js\"\r\nimport {songOfRest} from \"./macros/features/class/bard/song-of-rest.js\"\r\nimport {wandOfFear} from \"./macros/items/wand-of-fear.js\"\r\n\r\nexport const macros = {\r\n\tauraOfPurity,\r\n\tblight,\r\n\tclairvoyance,\r\n\tdaylight,\r\n\tdispelMagic,\r\n\tfeyAncestry,\r\n\thordePassive,\r\n\tringOfSpellStoring,\r\n\tsongOfRest,\r\n\twandOfFear\r\n}","const getBlightEffectData = async (origin) => {\r\n\treturn {\r\n\t\tname: `Blight Saving Throw Disadvantage`, \r\n\t\ticon: \"icons/magic/movement/chevrons-down-yellow.webp\", \r\n\t\torigin: origin,\r\n\t\tchanges: [{key: \"flags.midi-qol.disadvantage.ability.save.all\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [\"1\"], \"priority\": 20}],\r\n\t\t\"flags.dae.stackable\": \"noneName\",\r\n\t\t\"flags.times-up.isPassive\": true,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\", \"combatEnd\", \"isSave\"],\r\n\t\t\"flags.dae.showIcon\": false,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst setBlightHook = async (castLevel) => {\r\n\tconst blightPreDamageRollHookId = Hooks.once(\"dnd5e.preRollDamage\", (rolledItem, rollConfig) => {\r\n\t\tconst maxDamageRoll = 8 * castLevel + 32\r\n\t\tconst maxDamageString = String(maxDamageRoll) + \"[necrotic]\" \r\n\t\trollConfig.parts = [maxDamageString]\r\n\t})\t\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].hitTargets[0].actor.system.details.type.value == \"plant\") {\r\n\t\tconst effectData = await getBlightEffectData(args[0].item.uuid)\r\n\t\tawait MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: args[0].hitTargets[0].actor.uuid, effects: [effectData] })\r\n\t\tawait setBlightHook(args[0].castData.castLevel)\r\n\t}\t\r\n}\r\n\r\nexport const blight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {conditionLabels} from \"../../constants.js\"\r\n\r\nconst main = async ({item, workflow, args}) => {\r\n\tconst hasCharm = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"charmed\"].includes(change.value.toLowerCase())))\r\n\tif (hasCharm) {\r\n\t\tworkflow.saveDetails.advantage = true\r\n\t}\r\n}\r\n\r\nexport const feyAncestry = {\r\n\tmain\r\n}","const getItemData = (originActor, songLevel) => {\r\n\tconst sourceItem = fromUuidSync(\"Item.GvIIDEPRp3unaRVe\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Song of Rest\",\r\n\t\tsystem: { \r\n\t\t\tdamage: {\r\n\t\t\t\tparts: [[`1d${songLevel}`, \"healing\"]]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getOriginBardScale = (effectOriginUuid) => {\r\n\tconst effectOrigin = fromUuidSync(effectOriginUuid)\r\n\tconst originActor = fromUuidSync(effectOrigin.parent.uuid)\r\n\treturn originActor.system.scale.bard[\"song-of-rest\"].faces\r\n}\r\nconst main = (actor, data) => {\r\n\tconst songEffects = actor.effects.filter(effect => effect.name == \"Song of Rest\")\r\n\tif (data.dhd < 0 && songEffects.length > 0) {\r\n\t\tsongEffects.map(effect => {\r\n\t\t\tconst originBardScale = getOriginBardScale(effect.origin)\r\n\t\t\tconst item = getItemData(actor, originBardScale)\r\n\t\t\tconst token = MidiQOL.tokenForActor(actor.uuid)\r\n\t\t\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [token.document.uuid] }\r\n\t\t\tMidiQOL.completeItemUse(item, {}, options)\t\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const songOfRest = {\r\n\tmain\r\n}","export const setAmbientLightCreate = async (params) => {\r\n\treturn await canvas.scene.createEmbeddedDocuments(\"AmbientLight\", [params])\r\n}\r\nexport const setAmbientLightDelete = async (ambientLightId) => {\r\n\tconst ambientLight = await canvas.scene.deleteEmbeddedDocuments(\"AmbientLight\", [ambientLightId])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn ambientLight\r\n}\r\nexport const setMeasuredTemplateDelete = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid) ?? false\r\n\tif (!template) return false\r\n\tconst deletedMeasuredTemplate = await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [template._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn deletedMeasuredTemplate\r\n}\r\nexport const setActiveEffectDelete = async (ownerActor, effectId) => {\t\r\n\tconst [deleteEffect] = ownerActor.effects.filter(effect => effect._id == effectId)\t\r\n\treturn await ownerActor.deleteEmbeddedDocuments(\"ActiveEffect\", [deleteEffect._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n}\r\nexport const setDeleteSummonConcentrationHook = async (actor, spawnedTokenUuid) => {\r\n\tconst preDeleteSummonConcentrationHookId = Hooks.on(\"preDeleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", preDeleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\t\r\n}","import {setConfig} from './config.js';\r\nimport {macros} from \"./macros.js\"\r\nimport * as sf from \"./socket-functions.js\"\r\n\r\nexport let socket\r\n\r\nHooks.once(\"socketlib.ready\", () => {\r\n\tsocket = socketlib.registerModule(\"charnames-bag-of-macros\")\r\n\tsocket.register(\"setActiveEffectDelete\", sf.setActiveEffectDelete)\r\n\tsocket.register(\"setAmbientLightCreate\", sf.setAmbientLightCreate)\t\r\n\tsocket.register(\"setAmbientLightDelete\", sf.setAmbientLightDelete)\r\n\tsocket.register(\"setDeleteSummonConcentrationHook\", sf.setDeleteSummonConcentrationHook)\r\n\tsocket.register(\"setMeasuredTemplateDelete\", sf.setMeasuredTemplateDelete)\r\n})\r\n\r\nHooks.on(\"dnd5e.restCompleted\", (actor, data) => {\r\n\tmacros.songOfHealing.main(actor, data)\r\n})\r\n\r\nglobalThis['CHARNAME'] = {\r\n    macros\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","conditionLabels","blinded","charmed","concentrating","dead","deafened","exhaustion1","exhaustion2","exhaustion3","exhaustion4","exhaustion5","frightened","grappled","incapacitated","invisible","paralyzed","petrified","poisoned","prone","restrained","stunned","unconscious","wounded","cloudSpellNames","getDialogueButtonType","async","choices","dialogueOptions","title","getIconPathsFunc","buttonWidth","buttonHeight","iconData","Promise","resolve","buttons","getIconPaths","width","height","reduce","choice","i","icon","label","callback","value","getDialogueButtons","Dialog","render","getTemplatesInRange","templates","gridSize","gridScale","range","x1","y1","filter","template","a","b","x","y","Math","sqrt","pow","distance","itemRangeModified","setActiveEffects","tokenActorUuids","effectData","effects","all","map","tokenActorUuid","MidiQOL","socket","executeAsGM","actorUuid","createEffect","setSpawnedTokenId","tokenUuid","itemRange","actor","originToken","spawn","token","name","location","spawnIconPath","size","interval","target","fromUuid","canvas","scene","grid","warpgate","crosshairs","show","lockSize","lockPosition","tag","drawIcon","rememberControlled","tokens","activate","setCrosshairConfigs","distanceAvailable","crosshairsDistance","inFlight","wait","ray","Ray","center","measureDistances","gridSpaces","draw","cancelled","getSpawnLocation","spawnedTokenId","spawnAt","originActorSenses","originTokenSight","updates","CONST","TOKEN_DISPLAY_MODES","HOVER","getSpawnUpdates","mergeObject","getWarpgateUpdates","system","attributes","senses","document","sight","pre","update","originTokenUuid","color","Sequence","effect","file","scale","opacity","atLocation","belowTokens","waitUntilFinished","fadeIn","play","setEffectsSequencer","post","animation","on","setPostEffectsSequencer","getWarpgateCallbacks","controllingActor","getWarpgateOptions","buttonName","setAreaChoiceEffects","templateUuid","templateEffect","itemUuid","positions","setTemplateEffects","lightParams","sanitizedLight","originUuid","lightId","origin","changes","mode","disabled","getEffectOriginData","_id","ineligibleEffectNames","minSpellLevel","originTemplateActiveEffect","itemTemplatePositions","setAreaEffectDeleteHookId","Hooks","templateData","originFlag","flags","dnd5e","templateSpellLevel","spellLevel","fromUuidSync","includes","gridTemplateId","id","gridTemplatePositions","highlightLayers","intersection","setTimeout","uuid","setAreaEffectDeleteHookOffId","config","off","setAreaEffectDeleteHookOff","setAreaEffectDeleteHook","attachTo","templatePositions","potentialTemplates","originName","templatesWithOverlap","eligibleTemplates","Set","getTemplatesWithOverlap","setTemplateDispels","delete","casterUuid","dispelAbility","dispelLevel","type","casterToken","game","user","targets","first","effectsLTE2DispelLevel","effectsGTDispelLevel","castData","baseLevel","getTokenEffects","effectsIdsToDelete","abilities","mod","abilityRoll","arr","effectCastLevel","length","castLevel","rollAbilityTest","total","push","concat","getEffectsToDelete","deleteEffectsOnToken","selectedTemplate","inRangeEligibleTemplates","originItem","originItems","items","sortedTemplates","sort","aOrig","bOrig","localeCompare","templateSelections","item","itemOwnerName","find","parent","menu","inputs","args","console","log","ui","notifications","info","options","indexOf","getTemplateSelection","getSelectedTemplate","templateCastLevel","getTemplatesToDelete","deleteTemplate","getAoeOverlapPerc","creatureCoords","getCreatureCoords","templateCoords","getTemplateCoords","templateId","tokenDoc","set","position","j","toString","add","templateIdStr","setLiveTokenDocUpdates","texture","hordeItem","hordeItemUsesMax","multiplier","liveTokenDoc","shouldReduce","tokenSizeNum","setSequencer","traits","keys","CONFIG","DND5E","actorSizes","setPostDamageUpdates","newHpDamage","newHealthPercentage","hp","max","hordePassive","img1","img2","img3","sequencerPath","ringOfSpellStoring","addSpellErr","castSpellErr","castSpellHeader","charHeader","currSpellBank","descLevel","charnamesExceptions","initChoices","initHeader","levelHeader","levelLabels","spellHeader","getCharIconPaths","getHighestSpellLevel","spells","getInitIconPaths","getLevelIconPaths","getSpellData","level","dc","spelldc","ability","spellcasting","attackBonus","isRangedAttack","actionType","isMeleeAttack","parseInt","bonuses","rsak","attack","msak","getAttackBonus","prof","img","activation","getSpellIconPaths","getUpdatedDescription","desc","description","newSpells","charname","spell","toSorted","descs","spellBankStr","substring","lastIndexOf","replace","setDeleteItemFlags","liveItem","spellData","slotsUsed","usedSpell","deleteIndex","newSlotsUsed","flaggedItem","updatedDescription","setCommandEffectsSequencer","setItemUsesUpdate","usesUsed","uses","macros","auraOfPurity","preTargetSave","workflow","some","change","toLowerCase","saveDetails","advantage","onUse","tokenAttacher","attachElementToToken","tokenDocs","Array","from","collections","values","eligibleTokenDocs","tokenDocuments","originX","originY","tokenDocsInRange","tokenTopLeftCenterX","tokenTopLeftCenterY","tokenGridBorderCoords","xArr","coord","yArr","maxX","maxY","coords","x2","y2","getTokensInRange","templateNonEffectedTokens","itemEffectName","statuses","has","getNonTemplateEffectedTokenDocs","getEligibleTokenDocuments","tokenEffectUuids","casterDisposition","effected","disposition","dfreds","effectInterface","addEffect","effectName","setTokenEffects","blight","speaker","character","scope","hitTargets","details","ACTIVE_EFFECT_MODES","CUSTOM","getBlightEffectData","once","rolledItem","rollConfig","maxDamageString","String","parts","setBlightHook","clairvoyance","macroPass","setActorConcDeletion","spawnedTokenUuid","getTokenSpawnIds","originTokenActorUuid","fromUuidActor","originActor","originActorConcentrationRemoveUuids","removeUuids","concEffect","setActorConcRemoveUuids","users","userId","isTheGM","deleteSummonConcentrationHookId","setHookMacros","setPostSpawnEffects","daylight","duration","rounds","getEffectTokenData","setInitChoice","lastArg","efData","dispelMagic","feyAncestry","main","isSaveFailure","hasAreaTarget","preTargetDamageApplication","hordeItemUses","hpDamage","damageItem","aoeOverlapPerc","hordeCount","floor","getNewDamage","setHpUpdateEffects","initChoice","tokenActor","actors","getLiveActors","eligibleSpellsByChar","highestSpellLevel","actorSpells","preparation","pact","prototypeToken","src","getEligibleSpells","charChoices","charChoice","levelChoices","slotsRemaining","eligibleLevels","spellLevels","getLevelChoices","levelChoice","levelChoiceInt","spellChoices","spellIcons","getSpellChoices","spellChoice","sortedChoices","radioSelections","getSpellChoice","charName","spellName","chr","newSpellData","updateRingItem","addSpell","uniqueSpells","spellsArr","spellNames","chosenSpell","getSpellToCast","tempItem","sourceItem","itemData","duplicate","toObject","overwrite","inlace","insertKeys","insertValues","createEmbeddedDocuments","createTempItem","consumeResource","consumeSpellSlot","consumeUsage","slotLevel","_baseProficiency","completeItemUse","callMacro","asGM","getConcentrationEffect","deletedEffect","deletedTemplate","deleteTempItem","castSpell","updatedStr","updatedDesc","resetSpells","songOfRest","data","songEffects","dhd","originBardScale","effectOriginUuid","effectOrigin","bard","faces","getOriginBardScale","songLevel","damage","Item","documentClass","getItemData","showFullCard","createWorkflow","versatile","configureDialog","targetUuids","tokenForActor","wandOfFear","buttonOptions","fearItem","getFearItemData","fearWorkflow","spriteOffset","local","rotate","direction","setFearEffects","commandItem","getCommandItemData","setCommandEffects","setAmbientLightCreate","params","setAmbientLightDelete","ambientLightId","ambientLight","deleteEmbeddedDocuments","setMeasuredTemplateDelete","deletedMeasuredTemplate","setActiveEffectDelete","ownerActor","effectId","deleteEffect","setDeleteSummonConcentrationHook","preDeleteSummonConcentrationHookId","socketlib","registerModule","register","songOfHealing","globalThis"],"sourceRoot":""}