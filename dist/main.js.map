{"version":3,"file":"main.js","mappings":"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","sources":["webpack://CHARNAME's Bag of Macros/webpack/bootstrap","webpack://CHARNAME's Bag of Macros/webpack/runtime/define property getters","webpack://CHARNAME's Bag of Macros/webpack/runtime/hasOwnProperty shorthand","webpack://CHARNAME's Bag of Macros/./src/scripts/constants.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helper-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/aura-of-purity.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/clairvoyance.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/daylight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/hooks.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/doss-lute.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/dispel-magic.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/horde-passive.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/protection-from-poison.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/items.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/ring-of-spell-storing.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/wand-of-fear.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/blight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/fey-ancestry.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/spells.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/class/bard/song-of-rest.js","webpack://CHARNAME's Bag of Macros/./src/scripts/socket-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export const conditionLabels = {\r\n\tblinded: [\"blinded\", \"convenient effect: blinded\"],\r\n\tcharmed: [\"charmed\", \"convenient effect: charmed\"],\r\n\tconcentrating: [\"concentrating\", \"convenient effect: concentrating\"],\r\n\tdead: [\"dead\", \"convenient effect: dead\"],\r\n\tdeafened: [\"deafened\", \"convenient effect: deafened\"],\r\n\texhaustion1: [\"exhaustion 1\", \"convenient effect: exhaustion 1\"],\r\n\texhaustion2: [\"exhaustion 2\", \"convenient effect: exhaustion 2\"],\r\n\texhaustion3: [\"exhaustion 3\", \"convenient effect: exhaustion 3\"],\r\n\texhaustion4: [\"exhaustion 4\", \"convenient effect: exhaustion 4\"],\r\n\texhaustion5: [\"exhaustion 5\", \"convenient effect: exhaustion 5\"],\r\n\tfrightened: [\"frightened\", \"convenient effect: frightened\"],\r\n\tgrappled: [\"grappled\", \"convenient effect: grappled\"],\r\n\tincapacitated: [\"incapacitated\", \"convenient effect: incapacitated\"],\r\n\tinvisible: [\"invisible\", \"convenient effect: invisible\"],\r\n\tparalyzed: [\"paralyzed\", \"convenient effect: paralyzed\"],\r\n\tpetrified: [\"petrified\", \"convenient effect: petrified\"],\r\n\tpoisoned: [\"poisoned\", \"convenient effect: poisoned\"],\r\n\tprone: [\"prone\", \"convenient effect: prone\"],\r\n\trestrained: [\"restrained\", \"convenient effect: restrained\"],\r\n\tstunned: [\"stunned\", \"convenient effect: stunned\"],\r\n\tunconscious: [\"unconscious\", \"convenient effect: unconscious\"],\r\n\twounded: [\"wounded\", \"convenient effect: wounded\"]\r\n}\r\n\r\nexport const cloudSpellNames = [\r\n\t\"Cloudkill\",\r\n\t\"Incendiary Cloud\",\r\n\t\"Insect Plague\",\r\n\t\"Moonbeam\",\r\n\t\"Spirit Guardians\"\r\n]","import {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const getDialogueButtons = (resolve, choices, getIconPaths, width, height, iconData) => {\t\r\n\treturn choices.reduce((buttons, choice, i) => {\r\n\t\tconst icon = getIconPaths(choice, iconData)\r\n\t\tconst newButton = {[choice]: {\r\n\t\t\tlabel: `<img src=${icon} width=${width} height=${height} style=\"border:0px\"><br>${choice}`,\r\n\t\t\tcallback: () => {\r\n\t\t\t\tresolve({value: `${choice}`})\r\n\t\t\t}\r\n\t\t}}\r\n\t\treturn {...buttons, ...newButton}\r\n\t}, {})\r\n}\r\nexport const getDialogueButtonType = async (choices, dialogueOptions, title, getIconPathsFunc, buttonWidth, buttonHeight, iconData) => { \r\n\treturn await (new Promise( (resolve) => {\t\r\n\t\tconst buttons = getDialogueButtons(resolve, choices, getIconPathsFunc, buttonWidth, buttonHeight, iconData)\t\t\r\n\t\tnew Dialog({\r\n\t\t\ttitle: title,\r\n\t\t\tbuttons: buttons\r\n\t\t}, dialogueOptions).render(true)\r\n}))}\r\nexport const getSpawnLocation = async (spawnIconPath, size, interval, tokenUuid, itemRange, originToken) => {\r\n\tawait setCrosshairConfigs(tokenUuid, itemRange)\r\n\tconst distanceAvailable = itemRange\r\n\tlet crosshairsDistance = 0\r\n\tconst checkDistance = async (crosshairs) => {\r\n\t\twhile (crosshairs.inFlight) {\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t\tconst ray = new Ray(originToken.center, crosshairs)\r\n\t\t\tconst distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0]\r\n\t\t\tif (crosshairsDistance !== distance) {\r\n\t\t\t\tcrosshairsDistance = distance;\r\n\t\t\t\tif (distance > distanceAvailable) {\r\n\t\t\t\t\tcrosshairs.icon = 'icons/svg/hazard.svg';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcrosshairs.icon = spawnIconPath\r\n\t\t\t\t}\r\n\t\t\t\tcrosshairs.draw();\r\n\t\t\t\tcrosshairs.label = `${distance} ft`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst location = await warpgate.crosshairs.show(\r\n\t\t{\r\n\t\t\tsize: size,\r\n\t\t\tinterval: interval,\r\n\t\t\ticon: spawnIconPath,\r\n\t\t\tlabel: '0 ft.',\r\n\t\t},\r\n\t\t{\r\n\t\t\tshow: checkDistance\r\n\t\t},\r\n\t)\r\n\tif (location.cancelled || crosshairsDistance > distanceAvailable) {\r\n\t\treturn\r\n\t} else {\r\n\t\treturn location\r\n\t}\r\n}\r\nexport const getTemplatesInRange = (templates, gridSize, gridScale, range, x1, y1) => {\r\n\t//gets templates where center of template within range of a cast template\r\n\treturn templates.filter(template => {\r\n\t\tconst [a, b] = [x1 - template.x, y1 - template.y]\r\n\t\tconst c  = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\tconst templateCentersDistance = c / gridSize\t\r\n\t\tconst templateRangeModified = template.distance / gridScale\t\r\n\t\tconst itemRangeModified = range / gridScale\t\t\r\n\t\treturn templateCentersDistance < templateRangeModified + itemRangeModified\r\n\t})\r\n}\r\nexport const getTemplatesWithOverlap = (eligibleTemplates, itemTemplatePositions) => {\r\n\treturn eligibleTemplates.filter(template => {\r\n\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\tconst templatePositions = canvas.grid.highlightLayers[gridTemplateId]?.positions ?? new Set(\"-1\")\r\n\t\treturn itemTemplatePositions.intersection(templatePositions).size > 0\r\n\t})\r\n}\r\nexport const getTokensInRange = async (tokens, gridSize, gridScale, itemRange, x1, y1) => {\r\n\treturn tokens.filter(token => {\r\n\t\tconst tokenTopLeftCenterX = token.x + gridSize / 2\r\n\t\tconst tokenTopLeftCenterY = token.y + gridSize / 2\r\n\t\tlet tokenGridBorderCoords = []\r\n\t\t\r\n\t\tfor (let i = 0; i <= token.width * 2 - 1; i++) {\r\n\t\t\tfor (let j = 0; j <= token.width * 2  - 1; j++) {\r\n\t\t\t\ttokenGridBorderCoords.push({x: tokenTopLeftCenterX + gridSize / 2 * i, y: tokenTopLeftCenterY + gridSize / 2 * j})\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst xArr = tokenGridBorderCoords.map(coord => coord.x)\r\n\t\tconst yArr = tokenGridBorderCoords.map(coord => coord.y)\r\n\t\tconst maxX = Math.max(...xArr)\r\n\t\tconst maxY = Math.max(...yArr)\r\n\t\tconst tokenGridCoords = tokenGridBorderCoords.filter(coords => coords.x != maxX && coords.y != maxY)\r\n\t\t\r\n\t\tconst tokenGridCoordsInRange = tokenGridCoords.filter(coord => {\r\n\t\t\tconst [x2, y2] = [coord.x, coord.y]\r\n\t\t\tconst a = x1 - x2\r\n\t\t\tconst b = y1 - y2\r\n\t\t\tconst c = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\t\treturn c / gridSize <= itemRange / gridScale\r\n\t\t})\r\n\t\t\r\n\t\treturn tokenGridCoordsInRange.length > 0\r\n\t})\r\n}\r\nexport const removeEffect = async (effectUuid) => {return await MidiQOL.socket().executeAsGM(\"removeEffect\", {effectUuid: effectUuid})}\r\nexport const setActiveEffects = async (tokenActorUuids, effectData) => {\r\n\tconst createEffect = async (tokenActorUuid, effectData) => {return await MidiQOL.socket().executeAsGM(\"createEffects\", {actorUuid: tokenActorUuid, effects: [effectData]})}\r\n\tconst [effects] = await Promise.all(tokenActorUuids.map(tokenActorUuid => createEffect(tokenActorUuid, effectData)))\r\n\treturn effects\r\n}\r\nexport const setActorConcDeletion = async (actor) => {\r\n\tif (actor.effects.find(effect => effect.name == \"Concentrating\")) actor.effects.find(effect => effect.name == \"Concentrating\").delete()\r\n} \r\nexport const setActorConcRemoveUuids = async (originActor, uuid) => {\r\n\tlet originActorConcentrationRemoveUuids = originActor.flags[\"midi-qol\"][\"concentration-data\"]?.removeUuids || []\r\n\toriginActorConcentrationRemoveUuids.push(uuid)\t\r\n\tawait originActor.update({\"flags.midi-qol\": {\"concentration-data\": {removeUuids: originActorConcentrationRemoveUuids}}})\r\n\tconst concEffect = originActor.effects.find(effect => effect.name == \"Concentrating\")\r\n\tawait concEffect.update({\r\n\t\t\"flags.dae\": {\"specialDuration\": [\"shortRest\", \"longRest\"]}\r\n\t})\r\n}\r\nexport const setActorReagentCost = async (actorUuid, itemUuid) => {\r\n\tconst actor = await fromUuid(actorUuid)\r\n\tconst item = await fromUuid(itemUuid)\t\r\n\tif (settings.reagentsConsume = \"money\")  {\r\n\t\t//set this to pull from the lower denominations first\r\n\t\tconst newMoney = actor.system.currency.gp - item.system.materials.cost\r\n\t\tif (newMoney < 0) return false\r\n\t\tactor.update({\"system.currency.gp\": newMoney})\r\n\t} else if (settings.reagentsConsume = \"supply\") {\r\n\t\tconst newSupply = item.system.materials.supply - 1\r\n\t\tif (newSupply < 0) return false\r\n\t\titem.update({\"system.materials.supply\": newSupply})\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n\treturn true\r\n}\r\nexport const setCrosshairConfigs = async (tokenUuid, itemRange) => {\r\n\tconst target = await fromUuid(tokenUuid)\r\n\tconst {distance} = canvas.scene.grid\r\n\twarpgate.crosshairs.show({\r\n\t\tlockSize:true,\r\n\t\tlockPosition: true,\r\n\t\tsize: target.width + (2*itemRange/distance),\r\n\t\ttag: 'range',\r\n\t\tdrawIcon:false,\r\n\t\tlabel: 'Valid Area',\r\n\t\tx: target.x,\r\n\t\ty: target.y,\r\n\t\trememberControlled: true\r\n\t})\t\r\n\tcanvas.tokens.activate()\r\n}\r\nexport const setTemplateDispels = async (x, y, name, itemTemplatePositions) => {\r\n\tconst dnd5eFlaggedTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e)\r\n\tconst potentialTemplates = dnd5eFlaggedTemplates.filter(template => {\r\n\t\tconst originName = fromUuidSync(template.flags.dnd5e.origin).name\r\n\t\tif (!name) {\r\n\t\t\treturn template.flags.dnd5e.spellLevel\r\n\t\t} else {\r\n\t\t\treturn template.flags.dnd5e.spellLevel && originName == name\t\r\n\t\t}\r\n\t})\r\n\tconst templatesInRange = getTemplatesInRange(potentialTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 60, x, y)\r\n\tconst templatesWithOverlap = getTemplatesWithOverlap(templatesInRange, itemTemplatePositions)\r\n\ttemplatesWithOverlap.map(template => {socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)})\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {getTokensInRange} from \"../../helper-functions.js\"\r\n\r\nasync function getEligibleTokenDocuments(tokenDocuments, scene, itemRange, originX, originY) {\r\n\tconst tokenDocsInRange = await getTokensInRange(tokenDocuments, scene.grid.size, scene.grid.distance, itemRange, originX, originY)\r\n\tif (!tokenDocsInRange) return false\r\n\tconst templateNonEffectedTokens = await getNonTemplateEffectedTokenDocs(tokenDocsInRange)\r\n\tif (!templateNonEffectedTokens) return false\r\n\treturn templateNonEffectedTokens\r\n}\r\nasync function getNonTemplateEffectedTokenDocs(tokenDocuments, itemEffectName) {\r\n\treturn tokenDocuments.filter(token => {\r\n\t\tconst effects = token.actor.statuses\r\n\t\treturn effects.has(itemEffectName) == false\r\n\t})\r\n}\r\nconst onUse = async ({args, workflow, item, actor, token}) => {\r\n\tconst itemEffectName = \"Convenient Effect: Aura of Purity\"\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\tconst scene = await fromUuid(template.parent.uuid)\r\n\tconst itemRange = args[0].item.system.target.value\r\n\tconst tokenDocs = Array.from(scene.collections.tokens.values())\r\n\t\r\n\tconst eligibleTokenDocs = await getEligibleTokenDocuments(tokenDocs, scene, itemRange, template.x, template.y)\r\n\tif (!eligibleTokenDocs) return false\r\n\r\n\tconst tokenEffectUuids = await setTokenEffects(eligibleTokenDocs, token.document.disposition)\r\n\tawait template.update({\r\n\t\t\"flags.castData.auraOfPurity.tokensEffected\": tokenEffectUuids\r\n\t})\r\n}\r\nconst preTargetSave = async ({args, workflow, item, actor}) => {\r\n\tconst itemHasEffect = item.effects.some(effect => effect.changes.some(change => {\r\n\t\treturn conditionLabels[\"blinded\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"charmed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"deafened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"frightened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"paralyzed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"stunned\"].includes(change.value.toLowerCase())\r\n\t}))\r\n\tif (itemHasEffect) workflow.saveDetails.advantage = true\r\n}\r\nasync function setTokenEffects(tokenDocs, casterDisposition) {\r\n\tlet effected = []\r\n\tlet uuid = \"\"\r\n\tfor (let i=0; i < tokenDocs.length; i++) {\r\n\t\tconsole.log(\"tokenDocs[i]\")\r\n\t\tconsole.log(tokenDocs[i])\r\n\t\tuuid = tokenDocs[i].actor.uuid\r\n\t\tif ((casterDisposition == 1 && tokenDocs[i].disposition != -1)\r\n\t\t\t|| (casterDisposition == -1  && tokenDocs[i].disposition != 1)) {\r\n\t\t\tgame.dfreds.effectInterface.addEffect( {effectName: 'Aura of Purity', uuid} )\r\n\t\t\teffected.push(uuid)\r\n\t\t}\r\n\t}\r\n\treturn effected\r\n}\r\n\r\nexport const auraOfPurity = {\r\n\tpreTargetSave,\r\n\tonUse\r\n}","import {getSpawnLocation, setActorConcDeletion, setActorConcRemoveUuids} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getSpawnUpdates = async (originActorSenses, originTokenSight) => {\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"alpha\": 0,\r\n\t\t\t\"sight\": originTokenSight\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"system.attributes.senses\": originActorSenses\r\n\t\t}\r\n\t}\r\n}\r\nconst getTokenSpawnIds = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawnedTokenId = await setSpawnedTokenId(tokenUuid, itemRange, actor, originToken)\r\n\tconst spawnedToken = canvas.scene.collections.tokens.get(spawnedTokenId)\r\n\treturn spawnedToken.uuid\r\n}\r\nconst getWarpgateCallbacks = async (tokenUuid) => {\r\n\treturn {\r\n\t\tpre: async (template,update,token) => {\r\n\t\t\tsetEffectsSequencer(template, update, token, tokenUuid)\r\n\t\t\tawait warpgate.wait(2650)\r\n\t\t},\r\n\t\tpost: async (template, token) => {\r\n\t\t\tsetPostEffectsSequencer(template,token)\r\n\t\t}\r\n\t}\r\n}\r\nconst getWarpgateOptions = async (actor) => {\r\n\treturn {controllingActor: actor}\r\n}\r\nconst getWarpgateUpdates = async (spawn, originActorSenses, originTokenSight) => {\r\n\tconst updates = await getSpawnUpdates(originActorSenses, originTokenSight)\r\n\treturn mergeObject(updates, spawn)\r\n}\r\nconst setEffectsSequencer = async (template, update, token, originTokenUuid) => {\r\n\tconst color = \"blue\"\r\n\tconst originToken = await fromUuid(originTokenUuid)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.intro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.loop.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.outro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\t\r\n}\r\nconst setHookMacros = async (actor, spawnedTokenUuid) => {\r\n\tconst userIsGM = game.users.find(user => user.id == game.userId).isTheGM\r\n\tif (!userIsGM) {\r\n\t\tawait socket.executeAsGM(\"setDeleteSummonConcentrationHook\", actor, spawnedTokenUuid)\r\n\t}\r\n\tconst deleteSummonConcentrationHookId = Hooks.on(\"deleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", deleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\r\n}\r\nconst setPostEffectsSequencer = async (template, token) => {\r\n\tconst sequencerPath = \"jb2a.impact.009.blue\"\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.fadeIn(250)\t\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\t\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t.play()\r\n\t\r\n}\r\nconst setPostSpawnEffects = async (spawnedTokenUuid, originTokenActorUuid) => {\r\n\tconst fromUuidActor = await fromUuid(originTokenActorUuid)\r\n\tawait setActorConcRemoveUuids(fromUuidActor, spawnedTokenUuid)\r\n\tawait setHookMacros(fromUuidActor, spawnedTokenUuid)\t\r\n}\r\nconst setSpawnedTokenId = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawn = {\r\n\t\ttoken: { name:\"Clairvoyance\"},\r\n\t\tactor: { name:\"Clairvoyance\"}\r\n\t}\r\n\tconst location = await getSpawnLocation(\"modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_Grey_Sphere_400x400.webm\", 1, 4, tokenUuid, itemRange, originToken)\r\n\tconst spawnedTokenId = await warpgate.spawnAt({x: location.x, y: location.y}, spawn.token.name, await getWarpgateUpdates(spawn, actor.system.attributes.senses, originToken.document.sight), await getWarpgateCallbacks(tokenUuid), await getWarpgateOptions(actor))\r\n\treturn spawnedTokenId[0]\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tawait setActorConcDeletion(actor)\r\n\t} else {\t\r\n\t\tconst spawnedTokenUuid = await getTokenSpawnIds(args[0].tokenUuid, 5280, actor, token)\t\t\r\n\t\tawait setPostSpawnEffects(spawnedTokenUuid, token.document.actor.uuid)\t\r\n\t}\r\n}\r\n\r\nexport const clairvoyance = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getDialogueButtonType, setActiveEffects, setTemplateDispels} from \"../../helper-functions.js\"\r\nimport {setAreaEffectDeleteHook} from \"../../hooks.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getEffectOriginData = async (originUuid, lightId) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\torigin: originUuid,\r\n\t\tchanges: [{key: \"macro.execute\", mode: 0, value: \"function.CHARNAME.macros.daylight.setSpellEffects\"}],\r\n\t\t\"flags.castData.daylight.lightId\": lightId,\r\n\t\t\"flags.dae.showIcon\": false,\t\t\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": true,\t\t\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectTokenData = async (originUuid) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\tduration: {rounds: 600},\r\n\t\torigin: originUuid,\r\n\t\tchanges: [\r\n\t\t\t{key: `ATL.light.dim`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [120]},\r\n\t\t\t{key: `ATL.light.bright`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [60]},\r\n\t\t\t{key: `ATL.light.attenuation`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [.35]}\r\n\t\t],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": false,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.showIcon\": true,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area of Effect\":\r\n\t\t\treturn \"icons/magic/air/weather-clouds-sunlight.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/air/weather-sunlight-sky.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst setAreaChoiceEffects = async (templateUuid, templateEffect, tokenActorUuid, itemUuid, positions) => {\r\n\tconst [x, y] = await setTemplateEffects(templateUuid, templateEffect, positions)\r\n\tconst lightParams = {\"x\": x, \"y\": y, \"config\": {\"bright\": 60, \"dim\": 120, \"attenuation\": .4}}\r\n\tconst [sanitizedLight] = await socket.executeAsGM(\"setAmbientLightCreate\", lightParams)\r\n\tconst [effect] = await setActiveEffects([tokenActorUuid], await getEffectOriginData(itemUuid, sanitizedLight._id))\t\r\n\tawait setAreaEffectDeleteHook(60, x, y, [\"Darkness\"], 9, effect, positions)\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token) => {\r\n\tif (!token) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation({\"x\": x, \"y\": y})\r\n\t\t\t.play()\t\t\t\t\r\n\t} else {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.attachTo(token)\r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst setInitChoice = async (itemUuid)  => {\r\n\tconst type = await getDialogueButtonType([\"Area of Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Daylight?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tconst target = game.user.targets.first()\r\n\t\tawait setActiveEffects([target.document.actor.uuid], await getEffectTokenData(itemUuid))\r\n\t\tawait setEffectsSequencer(0, 0, target.document.width, target)\r\n\t\treturn false\t\t\t\r\n\t}\t\r\n\treturn true\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tconst isAreaChoice = await setInitChoice(item.uuid)\r\n\t\tif (!isAreaChoice) return false\r\n\t} else if (args[0].tag == \"OnUse\" && args[0].macroPass == \"postActiveEffects\") {\r\n\t\tconst templateId = \"MeasuredTemplate.\" + args[0].templateId \r\n\t\tconst templatePositions = canvas.grid.highlightLayers[templateId].positions\r\n\t\tconst templateEffect = actor.effects.find(effect => effect.name == \"Daylight Template\")\r\n\t\tawait setAreaChoiceEffects(args[0].templateUuid, templateEffect, token.document.actor.uuid, item.uuid, templatePositions)\r\n\t} else if (args[0] == \"off\")  {\r\n\t\tconst lastArg = args[args.length - 1]\r\n\t\tawait socket.executeAsGM(\"setAmbientLightDelete\", lastArg.efData.flags.castData.daylight.lightId)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setTemplateEffects = async (templateUuid, templateEffect, templatePositions) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tawait setEffectsSequencer(template.x, template.y, 7, false)\r\n\tawait setTemplateDispels(template.x, template.y, \"Darkness\", templatePositions)\r\n\ttemplateEffect.delete()\r\n\treturn [template.x, template.y]\r\n}\r\n\r\nexport const daylight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getTemplatesInRange, getTemplatesWithOverlap} from \"./helper-functions.js\"\r\nimport {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const setAreaEffectDeleteHook = async (range, x, y, ineligibleEffectNames, minSpellLevel, originTemplateActiveEffect, itemTemplatePositions) => {\r\n\tconst setAreaEffectDeleteHookId = Hooks.on(\"refreshMeasuredTemplate\", (templateData) => {\r\n\t\tconst template = templateData.document\t\t\r\n\t\tconst originFlag = template.flags?.dnd5e?.origin ?? false\r\n\t\tconst templateSpellLevel = template.flags?.dnd5e?.spellLevel ?? 0\r\n\t\tif (!originFlag || templateSpellLevel > minSpellLevel) return false\t\t\r\n\t\tconst origin = fromUuidSync(template.flags.dnd5e.origin)\r\n\t\tif (ineligibleEffectNames.includes(origin.name) || ineligibleEffectNames == \"all\") {\t\r\n\t\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\t\tconst gridTemplatePositions = canvas.grid.highlightLayers[gridTemplateId].positions\t\r\n\t\t\tconst templatesOverlap = itemTemplatePositions.intersection(gridTemplatePositions).size > 0 \r\n\t\t\tif (!templatesOverlap) return false\r\n\t\t\t//waiting for potential concentration effects to cycle through\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsocket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)\r\n\t\t\t}, 200)\t\t\t\t\r\n\t\t}\r\n\t})\r\n\tawait setAreaEffectDeleteHookOff(originTemplateActiveEffect, setAreaEffectDeleteHookId)\r\n}\r\nexport const setAreaEffectDeleteHookOff = async (templateEffect, setAreaEffectDeleteHookId) => {\r\n\tconst setAreaEffectDeleteHookOffId = Hooks.on(\"deleteActiveEffect\", (effect, config) => {\t\t\t\r\n\t\tif (effect.uuid == templateEffect.uuid) {\r\n\t\t\tHooks.off(\"createMeasuredTemplate\", setAreaEffectDeleteHookId)\r\n\t\t\tHooks.off(\"deleteActiveEffect\", setAreaEffectDeleteHookOffId)\r\n\t\t}\r\n\t})\r\n}","//on equip, appropriate spells are added to spellbook as innate spells\r\n\r\n//on unequip, spells are removed \r\n//gives advantage on casting charmed spells \r\n//update this to be generic - the flag on the item will be what determines the spells you get \r\n//don't forget to test anstruthHarp && canaithMandolin\r\n//fix CHARNAME flag on instrument \r\n\r\n\r\n//Animal friendship\r\n//\r\n//Charm monster\r\n//\r\n//Charm person\r\n//\r\n//Crown of madness\r\n//\r\n//Dominate beast\r\n//\r\n//Dominate monster\r\n//\r\n//Dominate person\r\n//\r\n//Hypnotic pattern\r\n//\r\n//Modify memory\r\n\r\nconst addSpells = async (actor, spells) => {\r\n\treturn await Promise.all(spells.map(spell => actor.createEmbeddedDocuments(\"Item\", [spell])))\r\n}\r\nconst dossLuteExample = {\r\n\t//keeping for when I make the other instruments \r\n\t\"type\": \"dossLute\",\r\n\t\"spells\": [\r\n\t\t{name: \"Animal Friendship\", isCharged: 1},\r\n\t\t{name: \"Fly\", isCharged: 1},\r\n\t\t{name: \"Invisibility\",  isCharged: 1},\r\n\t\t{name: \"Levitate\", isCharged: 1},\r\n\t\t{name: \"Protection from Energy (Fire)\", isCharged: 1},\r\n\t\t{name: \"Protection from Evil and Good\",\t isCharged: 1},\r\n\t\t{name: \"Protection from Poison\", isCharged: 1}\r\n\t]\r\n}\r\nconst createTempSpell = async (item, originActor, instrument, originUuid) => {\r\n\t//console.log(item)\r\n\t//removing and readding the instrument item will reset the charges, may want to address that \r\n\t//current idea: add flags to the actual instrument to flip between 1 and 0 depending on when a spell is used \r\n\t//how this works:\r\n\t//**add flags to instrument first, default is 1\r\n\t//set up a single hook to update the flags on the instrument upon the items uses changing \r\n\t//**would need to add one more flag with the source instrument uuid \r\n\t//**hook needs to run only for the person with the instrument \r\n\tconst [level, damage] = await getCureWoundsData(item, instrument)\r\n\tconst itemData = mergeObject(duplicate(item.toObject(false)), {\r\n\t\t\"flags.charname.instrumentOfTheBards.originInstrumentUuid\": originUuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.originName\": item.name,\r\n\t\t\"flags.charname.instrumentOfTheBards.originUuid\": item.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.type\": \"spell\",\r\n\t\t\"system.damage.parts\": damage,\r\n\t\t\"system.level\": level,\t\t\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t\t\"system.uses.max\": \"1\",\r\n\t\t\"system.uses.per\": \"day\",\r\n\t\t\"system.uses.value\": \"1\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst createTempSpells = async (actor, instrument, item) => {\r\n\tconst spellData = instrument.spells.map(spell => game.items.find(item => item.name.toLowerCase() == spell.name.toLowerCase()))\r\n\treturn await Promise.all(spellData.map(spell => createTempSpell(spell, actor, instrument, item.uuid)))\r\n}\r\nconst getCureWoundsData = async (item, instrument) => {\r\n\tif (instrument.type == \"anstruthHarp\" && item.name == \"Cure Wounds\") {\r\n\t\treturn [5, [\"5d8 + @mod\", \"healing\"]]\r\n\t} else if (instrument.type == \"canaithMandolin\" && item.name == \"Cure Wounds\") {\r\n\t\treturn [3, [\"3d8 + @mod\", \"healing\"]]\r\n\t} else {\r\n\t\treturn [item.system.level, item.system.damage.parts]\r\n\t}\r\n}\r\nconst getInstrumentSpells = async (instrument) => {\r\n\t//keeping this for reference\r\n\tswitch(instrument) {\r\n\t\tcase \"anstruthHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Control Weather\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Wall of Thorns\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"canaithMandolin\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Cure Wounds\", \r\n\t\t\t\t\"Dispel Magic\",\r\n\t\t\t\t\"Protection from Energy (Lightning)\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"cliLyre\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Stone Shape\", \r\n\t\t\t\t\"Wall of Fire\",\r\n\t\t\t\t\"Wind Wall\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"dossLute\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Animal Friendship\", \r\n\t\t\t\t\"Protection from Energy (Fire)\",\r\n\t\t\t\t\"Protection from Poison\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"fochlucanBandore\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Entangle\", \r\n\t\t\t\t\"Faerie Fire\",\r\n\t\t\t\t\"Shillelagh\",\r\n\t\t\t\t\"Speak with Animals\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"macFuirmidhCittern\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Barkskin\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Fog Cloud\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"ollamhHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Confusion\", \r\n\t\t\t\t\"Control Weather\",\r\n\t\t\t\t\"Fire Storm\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSpellList = async (instrument) => {\r\n\t//keeping for reference for now\r\n\tconst generic = [\r\n\t\t\"Fly\", \r\n\t\t\"Invisibility\", \r\n\t\t\"Levitate\",\r\n\t\t\"Protection from Evil and Good\",\r\n\t]\r\n\tconst instrumentSpells = await getInstrumentSpells(instrument)\r\n\treturn [...generic, ...instrumentSpells]\r\n} \r\nconst main = async ({actor, args, token}) => {\r\n\t//\r\n}\r\nconst removeSpells = async (actor, instrument) => {\r\n\treturn Promise.all(actor.items.filter(item => {\r\n\t\tconst originName = item.flags?.charname?.instrumentOfTheBards?.originName ?? null\r\n\t\treturn instrument.spells.filter(spell => spell.name == originName).length > 0\r\n\t}).map(item => item.delete()))\r\n}\r\nconst updateActorSpellList = async (item, update, instrument) => {\r\n\tconst actor = await fromUuid(item.parent.uuid)\r\n\tconst equipUpdate = update?.system?.equipped ?? null\r\n\tconst attunementUpdate = update?.system?.attunement ?? null\t\r\n\tif ((equipUpdate == true && item.system.attunement == 2) || (attunementUpdate == 2 && item.system.equipped == true)) {\t\r\n\t\tconst spells = await createTempSpells(item.parent, instrument, item)\t\r\n\t\tawait addSpells(actor, spells)\t\t\r\n\t} else if (equipUpdate === false || attunementUpdate == 1) {\r\n\t\tawait removeSpells(actor, instrument)\t\r\n\t}\r\n}\r\nconst updateItem = async (item, update) => {\r\n\tconst type = item.flags?.charname?.instrumentOfTheBards ?? false\r\n\tif (!type) {\r\n\t\treturn false\t\r\n\t} else if (type == \"spell\") {\r\n\t\tconst newUses = update?.uses?.value ?? false\r\n\t\tif (!newUses) return false\r\n\t\tconst originItem = await fromUuid(item.flags.charname.instrumentOfTheBards.originInstrumentUuid)\r\n\t\tconst newFlag = originItem.flags.charname.instrumentOfTheBards.spells.find(spell => spell.name == item.name)\r\n\t\t//newUses\r\n\t\tconst itemName = item.name\r\n\t\tconst test = `flags.charname.instrumentOfTheBards.spells.${itemName}.isCharged`\r\n\t\tconst bunss = await originItem.update({\r\n\t\t\t[test]: 1 \r\n\t\t})\r\n\t\tconsole.log(\"bunss\")\r\n\t\tconsole.log(bunss)\r\n\t} else {\r\n\t\tupdateActorSpellList(item, update, type)\t\t\r\n\t}\r\n}\r\n\r\nexport const dossLute = {\r\n\tmain,\r\n\tupdateItem\r\n}\r\n\r\n","import {getDialogueButtonType, getTemplatesInRange} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst deleteEffectsOnToken = async (casterToken, dispelAbility, dispelLevel) => {\r\n\tconst target = game.user.targets.first()\t\r\n\tconst [effectsLTE2DispelLevel, effectsGTDispelLevel] = await getTokenEffects(target, dispelLevel)\r\n\tconst effectsIdsToDelete = await getEffectsToDelete(casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel)\r\n\teffectsIdsToDelete.map(socket.executeAsGM(\"setActiveEffectDelete\", target.actor, effectsIdsToDelete[i]))\r\n}\r\nconst deleteTemplate = async (casterToken, dispelAbility, dispelLevel, selectedTemplate) => {\r\n\tconst spellLevel = selectedTemplate.flags.dnd5e.spellLevel\r\n\tconst templatesToDelete = dispelLevel < spellLevel ? await getTemplatesToDelete(casterToken, dispelAbility, [selectedTemplate]) : [selectedTemplate]\r\n\ttemplatesToDelete.map(template => socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid))\r\n}\r\nconst getEffectsToDelete = async (casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel) => {\r\n\tconst casterAbilityMod = casterToken.actor.system.abilities[dispelAbility].mod\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet effectCastLevel = 0\r\n\tfor (let i = 0; i < effectsGTDispelLevel.length; i++) {\r\n\t\teffectCastLevel = effectsGTDispelLevel[i].flags[\"midi-qol\"].castData.castLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > effectCastLevel + 10) arr.push(effectsGTDispelLevel[i])\t\t\r\n\t}\r\n\treturn effectsLTE2DispelLevel.concat(arr).map(effect => effect.id)\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area Effect\":\r\n\t\t\treturn \"icons/magic/air/air-burst-spiral-blue-gray.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/nature/plant-sprout-hand-blue.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelectedTemplate = async (casterToken) => {\r\n\tconst eligibleTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e.spellLevel > 0)\r\n\tconst inRangeEligibleTemplates = getTemplatesInRange(eligibleTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 120, casterToken.x, casterToken.y)\t\r\n\tlet originItem\r\n\tlet originItems = []\r\n\tfor (let i = 0; i < inRangeEligibleTemplates.length; i++) {\r\n\t\toriginItem = await fromUuid(inRangeEligibleTemplates[i].flags.dnd5e.origin)\r\n\t\toriginItems.push(originItem)\r\n\t}\r\n\treturn await getTemplateSelection(originItems, inRangeEligibleTemplates)\r\n}\r\nconst getTemplateSelection = async (items, inRangeEligibleTemplates) => {\r\n\tconst sortedTemplates = inRangeEligibleTemplates.sort((a, b) => {\r\n\t\tconst aOrig = fromUuidSync(a.flags.dnd5e.origin)\t\r\n\t\tconst bOrig = fromUuidSync(b.flags.dnd5e.origin)\r\n\t\treturn aOrig.name.localeCompare(bOrig.name)\r\n\t})\r\n\tconst templateSelections = items.map((item, i) => {\r\n\t\tconst itemOwnerName = canvas.scene.tokens?.find(token => token.actor.uuid == item.parent.uuid)?.name ?? \"unknown\"\r\n\t\tconst itemLabel = item.name + \" from \" + itemOwnerName\t\r\n\t\treturn {type: 'radio', label: itemLabel}\r\n\t}).sort((a, b) => a.label.localeCompare(b.label))\t\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: templateSelections\r\n\t\t},{\r\n\t\t\ttitle: \"Which template to dispel?\",\r\n\t\t\trender: (...args) => { console.log(...args); ui.notifications.info(\"render!\")},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100px\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn sortedTemplates[choices.inputs.indexOf(true)]\r\n}\r\nconst getTemplatesToDelete = async (casterToken, dispelAbility, potentialTemplates) => {\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet templateCastLevel = 0\r\n\tfor (let i = 0; i < potentialTemplates.length; i++) {\r\n\t\ttemplateCastLevel = potentialTemplates[i].flags.dnd5e.spellLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > potentialTemplates[i].flags.dnd5e.spellLevel + 10) arr.push(potentialTemplates[i])\t\t\r\n\t}\t\r\n\treturn arr\r\n}\r\nconst getTokenEffects = async (token, dispelLevel) => {\r\n\t//get two groups, 1: effects w/ spell levels lesser than or equal to the casted spell level of dispel magic; and 2: the same with greater than that level\r\n\tconst effectsLTE2DispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > 0 && effect.flags[\"midi-qol\"].castData.baseLevel <= dispelLevel)\r\n\tconst effectsGTDispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > dispelLevel)\r\n\treturn [effectsLTE2DispelLevel, effectsGTDispelLevel]\r\n} \r\nconst setInitChoice = async (casterUuid, dispelAbility, dispelLevel)  => {\r\n\tconst type = await getDialogueButtonType([\"Area Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Dispel Magic?\", getIconPaths, 60, 60)\r\n\tconst casterToken = await fromUuid(casterUuid)\t\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tdeleteEffectsOnToken(casterToken, dispelAbility, dispelLevel)\t\r\n\t} else if (type.value == \"Area Effect\") {\r\n\t\tconst selectedTemplate = await getSelectedTemplate(casterToken)\r\n\t\tdeleteTemplate(casterToken, dispelAbility, dispelLevel, selectedTemplate)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setSpellEffects = async ({args, item, workflow}) => {\r\n\tconst casterUuid = args[0].tokenUuid\r\n\tconst dispelAbility = args[0].actor.system.attributes.spellcasting\r\n\tconst dispelLevel = args[0].spellLevel < 3 ? 3 : args[0].spellLevel\r\n\tsetInitChoice(casterUuid, dispelAbility, dispelLevel)\r\n}\r\n\r\nexport const dispelMagic = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {cloudSpellNames} from \"../../constants.js\"\r\n\r\nconst getAoeOverlapPerc = async (args) => {\r\n\tconst creatureCoords = await getCreatureCoords(args[0].actor.token)\r\n\tconst templateCoords = await getTemplateCoords(args[0].templateId) ?? false\r\n\tif (!templateCoords) return 0\r\n\tconst overlap = creatureCoords.intersection(templateCoords)\r\n\treturn overlap.size / creatureCoords.size\r\n}\r\nconst getCreatureCoords = async (tokenDoc) => {\r\n\tconst gridSize = canvas.scene.grid.size\r\n\tlet set = new Set()\r\n\tlet position = \"\"\r\n\tfor (let i = 0; i < tokenDoc.height; i++) {\r\n\t\tfor (let j = 0; j < tokenDoc.width; j++) {\r\n\t\t\tposition = (tokenDoc.x + gridSize*i).toString() + \".\" + (tokenDoc.y + gridSize*j).toString() \r\n\t\t\tset.add(position)\r\n\t\t}\r\n\t}\r\n\treturn set\r\n}\r\nconst getNewDamage = async(hpDamage, hordeCount, multiplier, hasAreaTarget) => {\r\n\treturn hasAreaTarget ? Math.floor(hpDamage * hordeCount * multiplier) : hpDamage\r\n}\r\nconst getTemplateCoords = async (templateId) => {\r\n\tconst templateIdStr = \"MeasuredTemplate.\" + templateId\r\n\treturn canvas.grid.highlightLayers[templateIdStr].positions\r\n}\r\nconst isSaveFailure = async ({args, item}) => {\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tconsole.log(await getAoeOverlapPerc(args))\r\n\tif (!item.system.hasAreaTarget || await getAoeOverlapPerc(args) <= .666) {\r\n\t\tHooks.once(\"createActiveEffect\", (effect) => {\t\t\t\r\n\t\t\teffect.delete()\r\n\t\t})\r\n\t}\t\r\n}\r\nconst preTargetDamageApplication = async ({actor, args, item, workflow, token}) => {\r\n\tif (workflow.hitTargets.size < 1) return false\r\n\tconst hordeItem = await fromUuid(actor.items.find(item => item.name == \"Horde\").uuid)\r\n\tconst hordeItemUses = hordeItem.system.uses.value\r\n\tconst hordeItemUsesMax = hordeItem.system.uses.max\r\n\tconst liveTokenDoc = await fromUuid(token.document.uuid)\r\n\tconst hpDamage = workflow.damageItem.hpDamage\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tif (hpDamage > 0) setHpUpdateEffects(actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args)\r\n}\r\nconst setHpUpdateEffects = async (actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args) => {\r\n\tconst aoeOverlapPerc = await getAoeOverlapPerc(args)\r\n\tconst newHpDamage = await getNewDamage(hpDamage, hordeItemUses, aoeOverlapPerc, hasAreaTarget)\r\n\tworkflow.damageItem.hpDamage = newHpDamage\r\n\tsetPostDamageUpdates(actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax)\r\n}\r\nconst setLiveTokenDocUpdates = async (texture, hordeItem, hordeItemUsesMax, multiplier, liveTokenDoc, shouldReduce, tokenSizeNum) => {\r\n\t\thordeItem.update({\"system.uses.value\": hordeItemUsesMax * multiplier})\r\n\t\tif (tokenSizeNum > 2 && shouldReduce) {\r\n\t\t\tawait warpgate.wait(4000)\t\r\n\t\t\tsetSequencer(liveTokenDoc)\r\n\t\t\tawait warpgate.wait(200)\t\r\n\t\t\tif (liveTokenDoc.actor.system.traits.size != \"grg\" && liveTokenDoc.width <= 4 && liveTokenDoc.width <= 4) {\r\n\t\t\t\tliveTokenDoc.actor.update({\"system.traits.size\": Object.keys(CONFIG.DND5E.actorSizes)[tokenSizeNum - 1]})\r\n\t\t\t}\r\n\t\t\tliveTokenDoc.update({\"width\": liveTokenDoc.width - 1, \"height\": liveTokenDoc.width - 1})\t\r\n\t\t}\r\n\t\tliveTokenDoc.update({\"texture.src\": texture})\r\n}\r\nconst setPostDamageUpdates = async (actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax) => {\r\n\tconst newHealthPercentage = ((actor.system.attributes.hp.value - newHpDamage) / actor.system.attributes.hp.max) * 100\r\n\tconst tokenSizeNum = Object.keys(CONFIG.DND5E.actorSizes).indexOf(liveTokenDoc.actor.system.traits.size)\r\n\tlet shouldReduce = false\r\n\tif (75 >= newHealthPercentage && newHealthPercentage > 50) {\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img1, hordeItem, hordeItemUsesMax, .75, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (50 >= newHealthPercentage && newHealthPercentage > 25) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img2, hordeItem, hordeItemUsesMax, .50, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (25 >= newHealthPercentage && newHealthPercentage >= 0) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img3, hordeItem, hordeItemUsesMax, .25, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} \r\n}\r\nconst setSequencer = async (liveTokenDoc) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(liveTokenDoc.actor.flags[\"midi-qol\"].hordePassive.sequencerPath)\r\n\t\t\t.atLocation(liveTokenDoc)\r\n\t\t.play()\r\n}\r\n\r\nexport const hordePassive = {\r\n\tisSaveFailure,\r\n\tpreTargetDamageApplication\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {protectionFromPoison as s} from \"../../strings/spells.js\"\r\nimport {getDialogueButtonType, removeEffect} from \"../../helper-functions.js\"\r\n\r\nconst getChoices = async (effects) => {\r\n\treturn effects.reduce((acc, effect, i) => {\r\n\t\tconst nameAlreadyUsed = acc.find(choice => choice.name == effect.name)\r\n\t\tconst name = nameAlreadyUsed ? effect.name + \"-\" + i : effect.name\r\n\t\tconst choice = {name: name, icon: effect.icon, uuid: effect.uuid}\r\n\t\treturn [...acc, choice]\r\n\t}, [])\r\n}\r\nconst getChosenEffect = async (effects) => {\r\n\tconst choices = await getChoices(effects)\t\t\r\n\tconst buttonNames = choices.map(choice => choice.name)\t\t\r\n\tconst initChoice = await getDialogueButtonType(buttonNames, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60, choices)\r\n\treturn choices.find(effect => effect.name == initChoice.value)\t\r\n}\r\nconst getInitIconPaths = (choice, effects) => {\r\n\tconst chosenEffect = effects.find(effect => effect.name == choice)\r\n\treturn chosenEffect.icon\r\n}\r\nconst getPoisonEffects = () => {\r\n\tconst target = game.user.targets.first()\r\n\treturn target.actor.effects.filter(effect => {\r\n\t\tconst hasPoisonedName = conditionLabels[\"poisoned\"].includes(effect.name.toLowerCase())\r\n\t\tconst hasPoisonedConditions = effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase()))\r\n\t\treturn hasPoisonedName || hasPoisonedConditions\r\n\t})\t\r\n}\r\nconst onUse = async () => {\r\n\tconst poisonEffects = await getPoisonEffects()\r\n\tif (poisonEffects.length > 0) {\r\n\t\tconst chosenEffect = await getChosenEffect(poisonEffects)\r\n\t\tawait removeEffect(chosenEffect.uuid)\t\r\n\t}\r\n}\r\nconst preTargetSave = async ({item, workflow}) => {\r\n\tconst hasPoison = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())))\r\n\tif (hasPoison) workflow.saveDetails.advantage = true\r\n}\r\n\r\nexport const protectionFromPoison = {\r\n\tonUse,\r\n\tpreTargetSave\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const ringOfSpellStoring = {\r\n\taddSpellErr:\t\t\"Your Ring of Spell Storing doesn't have enough room left for a spell!\",\r\n\tcastSpellErr:\t\t\"Your Ring of Spell Storing doesn't have any spells on it!\",\t\r\n\tcastSpellHeader:\t\"Which spell do you wan to cast?\",\r\n\tcharHeader: \t\t\"Who is casting onto the ring?\",\r\n\tcurrSpellBank:\t\t\"Current Spell Bank\",\r\n\tdescLevel: \t\t\t\", Level \",\r\n\tcharnamesExceptions:[\"Shadowfell Vine Strike\", \"Necrotic Blast\", \"Summon Shadow Clone\", \"Animate Shadow Servant\", \"Mud\", \"Taunt\"],\r\n\tinitChoices:\t\t[\"Add Spells\", \"Cast Spell\", \"Empty Spells\"],\r\n\tinitHeader: \t\t\"What do you want to cast?\",\r\n\tlevelHeader:\t\t\"What level spell do you want to add?\",\r\n\tlevelLabels:\t\t[\"One\", \"Two\", \"Three\", \"Four\", \"Five\"],\r\n\tspellHeader:\t\t\"Which spell is being cast onto the ring?\",\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {ringOfSpellStoring as s} from \"../../strings/items.js\"\r\n\r\nconst addSpell = async (item, tokenActor) => {\r\n\tconst notification = await setAddSpellNotification(item)\r\n\tif (notification) return false\r\n\tconst updates = await getAddSpellUpdates(item, tokenActor)\r\n\tsetAddSpellUpdates(item, updates, tokenActor)\r\n}\r\nconst castSpell = async (item, tokenActor) => {\r\n\tconst updates = await createCastWorkflow(item, tokenActor)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nconst createCastWorkflow = async (item, tokenActor) => {\r\n\tconst spellData = await getSpellToCast(item)\t\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, item)\r\n\tawait setPreUseItemHooks(tempItem, spellData)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, item)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spellData, tokenActor, liveItem) => {\r\n\tconst sourceItem = await fromUuid(spellData.uuid)\t\r\n\tconst sourceMacroNames = await getSourceMacroNames(sourceItem)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spellData.activation)\r\n\tconst itemData = await getTempItem(liveItem, sourceItem, spellData, updatedMacroNames)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async ({args, item, workflow}) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tawait setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nconst getAddCharChoice = async (eligibleSpellsByChar) => {\r\n\tconst charChoices = eligibleSpellsByChar.map(character => character.origin).toSorted()\t\r\n\treturn await getDialogueButtonType(charChoices, {width: 400, height: 150}, s.charHeader, getCharIconPaths, 60, 60, eligibleSpellsByChar)\r\n}\r\nconst getAddLevelChoice = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst levelChoices = await getLevelChoices(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst levelChoice = await getDialogueButtonType(levelChoices, {width: 400, height: 150}, s.levelHeader, getLevelIconPaths, 60, 60)\r\n\t//return value as int\r\n\treturn {value: s.levelLabels.indexOf(levelChoice.value) + 1}\r\n}\r\nconst getAddSpellChoice = async (charChoice, eligibleSpellsByChar, levelChoice) => {\r\n\tconst [spellChoices, spellIcons] = await getSpellChoices(charChoice, eligibleSpellsByChar, levelChoice)\r\n\treturn await getSpellChoice(spellChoices, s.spellHeader, getSpellIconPaths, spellIcons)\t\r\n}\r\nconst getAddSpellChoices = async (eligibleSpellsByChar, item, tokenActor) => {\r\n\tconst charChoice = await getAddCharChoice(eligibleSpellsByChar)\r\n\tconst levelChoice = await getAddLevelChoice(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst spellChoice = await getAddSpellChoice(charChoice, eligibleSpellsByChar, levelChoice.value)\r\n\treturn [charChoice.value, levelChoice.value, spellChoice.value]\r\n}\r\nconst getAddSpellUpdates = async (item, tokenActor) => {\r\n\tconst actors = await getLiveActors()\r\n\tconst eligibleSpellsByChar = await getEligibleSpells(actors)\t\r\n\tconst choices = await getAddSpellChoices(eligibleSpellsByChar, item, tokenActor)\t\r\n\treturn [choices, eligibleSpellsByChar]\r\n}\r\nconst getAttackBonus = (actor, item, ability) => {\r\n\tconst isRangedAttack = item.system.actionType == \"rsak\"\r\n\tconst isMeleeAttack = item.system.actionType == \"msak\"\r\n\tif (!isRangedAttack && !isMeleeAttack) {\r\n\t\treturn 0\r\n\t} else if (isRangedAttack) {\t\t\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.rsak.attack)\r\n\t} else if (isMeleeAttack) {\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.msak.attack)\r\n\t}\r\n}\r\nconst getCharIconPaths = (choice, iconData) => {\t\r\n\tconst match = iconData.find(item => item.origin == choice)\r\n\treturn match.icon\r\n}\r\nconst getDeleteItemFlagData = async (liveItem, tempItem) => {\r\n\tconst spellData = tempItem.flags.charname.ringOfSpellStoring.spellData\r\n\tconst spells = liveItem.flags.charname.ringOfSpellStoring.spells\t\r\n\tconst slotsUsed = liveItem.flags.charname.ringOfSpellStoring.slotsUsed\r\n\tconst usedSpell = spells.find(spell => {\r\n\t\treturn spell.level == spellData.level\r\n\t\t\t&& spell.name == spellData.name \r\n\t\t\t&& spell.dc == spellData.dc \r\n\t\t\t&& spell.ability == spellData.ability\r\n\t})\t\r\n\tconst deleteIndex = spells.indexOf(usedSpell)\r\n\treturn [deleteIndex, slotsUsed, spells, usedSpell.level]\r\n}\r\nconst getDeleteItemFlagUpdates = async (liveItem, tempItem) => {\r\n\tconst [deleteIndex, slotsUsed, spells, usedSpellLevel] = await getDeleteItemFlagData(liveItem, tempItem)\r\n\tconst newSlotsUsed = slotsUsed - usedSpellLevel\r\n\tconst newSpells = spells.filter((spell, i) => i != deleteIndex)\t\r\n\treturn [newSlotsUsed, newSpells]\r\n}\r\nconst getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nconst getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getEligibleLevelSpells = (actor, item) => {\r\n\tconst highestSpellLevel = getHighestSpellLevel(actor.system.spells)\r\n\tconst mode = item.system.preparation.mode\r\n\tlet eligibleLevelSpells = []\r\n\tlet spellData = {}\r\n\tfor (let i = item.system.level; i <= 5; i ++) {\r\n\t\tif (mode == \"atwill\" || mode == \"innate\") {\t\t\t\t\r\n\t\t\tif (i == item.system.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, item.system.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else if (mode == \"pact\") {\r\n\t\t\tif (i == actor.system.spells.pact.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, actor.system.spells.pact.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (i <= highestSpellLevel) {\r\n\t\t\t\tspellData = getSpellData(actor, item, i)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\t\t\r\n\treturn eligibleLevelSpells\r\n}\r\nconst getEligibleSpells = async (actors) => {\r\n\treturn actors.map(actor => {\r\n\r\n\t\tconst eligibleSpells = actor.items.filter(item => item.type == \"spell\" && item.system.level > 0 && item.system.level <= 5)\t\r\n\t\tconst actorSpells = eligibleSpells.reduce((spells, spell) => {\r\n\t\t\tconst eligibleLevelSpells = getEligibleLevelSpells(actor, spell)\r\n\t\t\treturn [...spells, ...eligibleLevelSpells]\r\n\t\t}, [])\r\n\t\treturn {origin: actor.prototypeToken.name, icon: actor.prototypeToken.texture.src, spells: actorSpells}\r\n\t})\r\n}\r\nconst getHighestSpellLevel = (spells) => {\r\n\tlet arr = []\r\n\tlet label\r\n\tfor (let i = 1; i <= 9; i++) {\r\n\t\tlabel = \"spell\" + i\r\n\t\tif (spells[label].max > 0) arr.push(i)\r\n\t}\r\n\treturn Math.max(...arr)\r\n}\r\nconst getInitIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.initChoices[0]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-diamond-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[1]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-pentagon-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[2]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-glowing-triangle-teal-purple.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst getLevelChoices = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst slotsRemaining = 5 - item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\r\n\tconst eligibleLevels = character.spells.map(spell => spell.level).filter(level => level <= slotsRemaining)\r\n\tconst spellLevels = new Set(eligibleLevels)\t\t\t\r\n\treturn Array.from(spellLevels).toSorted().map(level => s.levelLabels[level - 1])\r\n}\r\nconst getLevelIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.levelLabels[0]:\r\n\t\t\treturn \"icons/skills/ranged/target-bullseye-archer-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[1]:\r\n\t\t\treturn \"icons/skills/melee/weapons-crossed-daggers-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[2]:\r\n\t\t\treturn \"icons/skills/ranged/arrows-triple-yellow-red.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[3]:\r\n\t\t\treturn \"icons/skills/ranged/shuriken-thrown-yellow.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[4]:\r\n\t\t\treturn \"icons/skills/ranged/daggers-thrown-salvo-orange.webp\"\r\n\t\t\tbreak\t\t\t\t\r\n\t}\t\r\n}\r\nconst getLiveActors = async () => {\r\n\treturn game.users.filter(user => user.character).filter(user => {\r\n\t\treturn canvas.scene.tokens.find(token => token.actor.uuid == user.character.uuid)\r\n\t}).map(user => user.character)\r\n}\r\nconst getNewSlotsUsed = async(item, level) => {\r\n\tconst slots = item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\treturn slots + level\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellChoice = async (spellChoices, spellHeader, getSpellIconPaths, spellIcons) => {\r\n\tconst sortedChoices = spellChoices.toSorted()\r\n\tconst radioSelections = sortedChoices.map(choice => {\r\n\t\tconst data = spellIcons.find(spell => spell.name == choice)\r\n\t\tconst icon = data.icon\r\n\t\tconst label = `<img align=left src=${icon} width=\"15\" height=\"15\" style=\"border:0px\">${choice}`\r\n\t\treturn {type: \"radio\", label}\r\n\t})\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: radioSelections\r\n\t\t},{\r\n\t\t\ttitle: spellHeader,\r\n\t\t\trender: (...args) => {},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn {value: sortedChoices[choices.inputs.indexOf(true)]}\r\n}\r\nconst getSpellChoices = async (charChoice, eligibleSpellsByChar, levelChoiceInt) => {\t\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\t\r\n\tconst spells = character.spells.filter(spell => spell.level == levelChoiceInt && !s.charnamesExceptions.includes(spell.name))\r\n\tconst names = spells.map(spell => spell.name)\r\n\tconst icons = spells.map(spell => { return {name: spell.name, icon: spell.icon} })\r\n\treturn [names, icons]\r\n}\r\nconst getSpellData = (actor, item, i) => {\r\n\tconst name = item.name\r\n\tconst level = i\r\n\tconst dc = actor.system.attributes.spelldc\r\n\tconst ability = actor.system.attributes.spellcasting\r\n\tconst attackBonus = getAttackBonus(actor, item, ability)\r\n\tconst prof = actor.system.attributes.prof\t\r\n\tconst icon = item.img\r\n\tconst uuid = item.uuid\r\n\tconst activation = item.system.activation.type\r\n\tconst originUuid = actor.uuid\r\n\treturn {name, level, dc, ability, attackBonus, prof, icon, uuid, activation, originUuid}\r\n}\r\nconst getSpellIconPaths = (choice, iconData) => {\r\n\tconst match = iconData.find(item => item.name == choice)\r\n\treturn match.icon\t\r\n}\r\nconst getSpellToCast = async (item) => {\r\n\tconst spells = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tif (spells.length < 1) {\r\n\t\tui.notifications.info(s.castSpellErr)\r\n\t\treturn false\t\t\r\n\t}\t\r\n\tconst uniqueSpells = new Set(spells)\r\n\tconst spellsArr = Array.from(uniqueSpells)\r\n\tconst spellNames = spellsArr.map(spell => spell.name).toSorted()\r\n\tconst chosenSpell = await getDialogueButtonType(spellNames, {width: 400, height: \"100%\"}, s.castSpellHeader, getSpellIconPaths, 60, 60, spellsArr)\r\n\treturn spellsArr.find(spell => spell.name == chosenSpell.value)\r\n}\r\nconst getTempItem = async (liveItem, sourceItem, spellData, updatedMacroNames) => {\r\n\treturn mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\timg: liveItem.img,\r\n\t\t\"flags.charname.ringOfSpellStoring.ringUuid\": liveItem.uuid,\r\n\t\t\"flags.charname.ringOfSpellStoring.spellData\": spellData,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.ability\": \"none\",\r\n\t\t\"system.attackBonus\": spellData.attackBonus,\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t\t\"system.save.dc\": spellData.dc,\r\n\t\t\"system.save.scaling\": \"flat\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedDescription = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spells = item.flags.charname.ringOfSpellStoring.spells.reduce((spells, spell) => {\r\n\t\tconst newSpell = [\"<br />\" + spell.name + s.descLevel + spell.level]\r\n\t\treturn [...spells, ...newSpell]\r\n\t}, []).toSorted()\t\t\r\n\tconst newSpells = spells.reduce((descs, desc) => {\r\n\t\treturn descs + desc\r\n\t}, \"\")\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\r\n\tconst sanitizedDesc = desc.replace(spellBankStr, \"\")\t\r\n\treturn sanitizedDesc + \"<br />*******<br />\" + s.currSpellBank + \":<br />\" + newSpells + \"<br />*******\"\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.ringOfSpellStoring.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst getUpdateRingData = async (charName, eligibleSpellsByChar, item, level, spellName) => {\r\n\tconst chr = eligibleSpellsByChar.find(chr => chr.origin == charName)\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tconst newSlotsUsed = await getNewSlotsUsed(item, level)\r\n\tconst chosenSpell = [chr.spells.find(spell => spell.name == spellName && spell.level == level)]\t\t\r\n\tconst newSpellData = [...spellData, ...chosenSpell]\t\r\n\treturn [chosenSpell, newSlotsUsed, newSpellData]\r\n}\r\nconst main = async ({args, item}) => {\r\n\tconst initChoice = await getDialogueButtonType(s.initChoices, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\r\n\tif (initChoice.value == s.initChoices[0]) {\r\n\t\taddSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[1]) {\r\n\t\tcastSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[2]) {\r\n\t\tresetSpells(liveItem, tokenActor)\r\n\t}\r\n}\r\nconst resetSpells = async (item, tokenActor) => {\r\n\tsetResetSpellsDesc(item)\r\n\tconst tempItems = tokenActor.items.filter(item => item.flags?.charname?.ringOfSpellStoring?.ringUuid ?? false)\r\n\ttempItems.map(item => item.delete())\r\n}\r\nconst setAddSpellNotification = async (item) => {\r\n\tif (item.flags.charname.ringOfSpellStoring.slotsUsed == 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\t\r\n}\r\nconst setAddSpellUpdates = async (item, updates, tokenActor) => {\r\n\tconst [choices, eligibleSpellsByChar] = updates\r\n\tconst [spellData] = await updateRingItem(item, choices, eligibleSpellsByChar)\t\r\n\tif (spellData.activation == \"reaction\") setReactionUpdates(spellData, tokenActor, item)\t\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst liveItem = await fromUuid(tempItem.flags.charname.ringOfSpellStoring.ringUuid)\r\n\tconst updates = await getDeleteItemFlagUpdates(liveItem, tempItem)\r\n\tupdateDeleteItemFlags(liveItem, updates)\r\n}\r\nconst setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst setPreUseItemHooks = async (item, spellData) => {\r\n\tHooks.once(\"dnd5e.preUseItem\", (useItem, config) => {\r\n\t\tif (item.uuid != useItem.uuid) return false\t\r\n\t\tconfig.consumeResource = false\r\n\t\tconfig.consumeSpellSlot = false\r\n\t\tconfig.consumeUsage = false\r\n\t\tconfig.slotLevel = spellData.level\t\r\n\t\tconfig.system.prof._baseProficiency = spellData.prof\t\t\t\r\n\t})\t\t\r\n}\r\nconst setReactionHook = async ({item}) => {\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spellData ?? false\r\n\tif (!spellData) return false\r\n\tsetPreUseItemHooks(item, spellData)\r\n}\r\nconst setReactionUpdates = async (spellData, tokenActor, liveItem) => {\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, liveItem)\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n}\r\nconst setResetSpellsDesc = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\t\r\n\tconst updatedStr = \"<br />*******<br />\" + s.currSpellBank + \":<br /><br />*******\"\r\n\tconst updatedDesc = desc.replace(spellBankStr, updatedStr)\t\r\n\titem.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": [],\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": 0,\r\n\t\t\"system.description.value\": updatedDesc\r\n\t})\t\t\r\n}\r\nconst setRingUpdates = async (chosenSpell, item, newSlotsUsed, newSpellData) => {\r\n\tconst flagUpdate = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpellData,\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed\r\n\t})\t\r\n\tconst updatedDescription = await getUpdatedDescription(item)\t\r\n\tconst descUpdate = await item.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\r\n}\r\nconst setRingUpdatesNotification = async (item, level) => {\r\n\tconst slots = await getNewSlotsUsed(item, level)\r\n\tif (slots > 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\r\n\treturn false\r\n}\r\nconst updateDeleteItemFlags = async (item, updates) => {\r\n\tconst [newSlotsUsed, newSpells] = updates\r\n\tconst flaggedItem = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed,\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpells\r\n\t})\r\n\tconst updatedDescription = await getUpdatedDescription(flaggedItem)\t\r\n\tawait flaggedItem.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst updateRingItem = async (item, choices, eligibleSpellsByChar) => {\t\r\n\tconst [charName, level, spellName] = choices\r\n\tconst notification = await setRingUpdatesNotification(item, level)\r\n\tif (notification) return false\r\n\tconst [chosenSpell, newSlotsUsed, newSpellData] = await getUpdateRingData(charName, eligibleSpellsByChar, item, level, spellName)\r\n\tsetRingUpdates(chosenSpell, item, newSlotsUsed, newSpellData)\r\n\treturn chosenSpell\r\n}\r\n\r\nexport const ringOfSpellStoring = {\r\n\t\"main\": main,\r\n\t\"deleteTempItem\": deleteTempItem,\r\n\t\"setReactionHook\": setReactionHook\r\n}","import {getDialogueButtonType, setActiveEffects} from \"../../helper-functions.js\"\r\n\r\nconst getCommandItemData = async (originActor, type) => {\r\n\tconst sourceItem = type.value == \"Command: Flee\" ? await fromUuid(\"Item.TLqebf57ZF6HUkml\") : await fromUuid(\"Item.9iKDqMbCAERS9psP\")\r\n\tconsole.log(sourceItem)\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\t\t//name: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getFearItemData = async (originActor) => {\r\n\tconst sourceItem = await fromUuid(\"Item.DG5FfgOrf5IhvITt\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Fear\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-monster-purple-blue.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Flee\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-shadow-monster-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Prone\":\r\n\t\t\treturn \"icons/magic/control/silhouette-fall-slip-prone.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst onUse = async ({args, item, actor, token}) => {\r\n\tconst buttonOptions = item.system.uses.value > 1 ? [\"Fear\", \"Command: Flee\", \"Command: Prone\"] : [\"Command: Flee\", \"Command: Prone\"]\r\n\tconst type = await getDialogueButtonType(buttonOptions, {width: 400, height: 150}, \"What do you want to cast?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Fear\") {\r\n\t\tsetFearEffects(actor, item)\r\n\t} else {\r\n\t\tsetCommandEffects(actor, item, token, type)\r\n\t}\r\n}\r\nconst setCommandEffects = async (actor, item, token, type) => {\r\n\tconst commandItem = await getCommandItemData(actor, type)\r\n\tconst target = game.user.targets?.first() ?? false\r\n\tif (!target) return false\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [target.document.uuid]}\r\n\tconst commandWorkflow = await MidiQOL.completeItemUse(commandItem, {}, options)\t\r\n\tsetCommandEffectsSequencer(target)\r\n\tsetItemUsesUpdate(item.uuid, 1)\t\r\n}\r\nconst setCommandEffectsSequencer = async (token) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.enchantment.complete.dark_purple`)\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t\t.attachTo(token)\r\n\t\t\t.belowTokens()\r\n\t\t.play()\t\t\t\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token, template) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.detect_magic.cone.purple`)\r\n\t\t\t.scale(4.4)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\r\n\t\t\t.spriteOffset({x: 600, y:0}, {local: true})\r\n\t\t\t.rotate(-template.direction)\r\n\t\t.play()\t\t\t\r\n}\r\nconst setFearEffects = async (actor, item) => {\r\n\tconst fearItem = await getFearItemData(actor)\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false}\r\n\tconst fearWorkflow = await MidiQOL.completeItemUse(fearItem, {}, options)\t\r\n\tconst liveTemplate = await fromUuid(fearWorkflow.templateUuid)\r\n\tsetEffectsSequencer(0, 0, 1, false, liveTemplate)\r\n\tsetItemUsesUpdate(item.uuid, 2)\t\r\n}\r\nconst setItemUsesUpdate = async (itemUuid, usesUsed) => {\r\n\tconst liveItem = await fromUuid(itemUuid)\r\n\tliveItem.update({\"system.uses.value\": liveItem.system.uses.value - usesUsed})\r\n}\r\n\r\nexport const wandOfFear = {\r\n\tonUse\r\n}","import {auraOfPurity} from \"./macros/spells/aura-of-purity.js\"\r\nimport {blight} from \"./macros/spells/blight.js\"\r\nimport {clairvoyance} from \"./macros/spells/clairvoyance.js\"\r\nimport {daylight} from \"./macros/spells/daylight.js\"\r\nimport {dossLute} from \"./macros/items/doss-lute.js\"\r\nimport {dispelMagic} from \"./macros/spells/dispel-magic.js\"\r\nimport {feyAncestry} from \"./macros/features/fey-ancestry.js\"\r\nimport {hordePassive} from \"./macros/features/horde-passive.js\"\r\nimport {protectionFromPoison} from \"./macros/spells/protection-from-poison.js\"\r\nimport {ringOfSpellStoring} from \"./macros/items/ring-of-spell-storing.js\"\r\nimport {songOfRest} from \"./macros/features/class/bard/song-of-rest.js\"\r\nimport {wandOfFear} from \"./macros/items/wand-of-fear.js\"\r\n\r\nexport const macros = {\r\n\tauraOfPurity,\r\n\tblight,\r\n\tclairvoyance,\r\n\tdaylight,\r\n\tdispelMagic,\r\n\tdossLute,\r\n\tfeyAncestry,\r\n\thordePassive,\r\n\tprotectionFromPoison,\r\n\tringOfSpellStoring,\r\n\tsongOfRest,\r\n\twandOfFear\r\n}","const getBlightEffectData = async (origin) => {\r\n\treturn {\r\n\t\tname: `Blight Saving Throw Disadvantage`, \r\n\t\ticon: \"icons/magic/movement/chevrons-down-yellow.webp\", \r\n\t\torigin: origin,\r\n\t\tchanges: [{key: \"flags.midi-qol.disadvantage.ability.save.all\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [\"1\"], \"priority\": 20}],\r\n\t\t\"flags.dae.stackable\": \"noneName\",\r\n\t\t\"flags.times-up.isPassive\": true,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\", \"combatEnd\", \"isSave\"],\r\n\t\t\"flags.dae.showIcon\": false,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst setBlightHook = async (castLevel) => {\r\n\tconst blightPreDamageRollHookId = Hooks.once(\"dnd5e.preRollDamage\", (rolledItem, rollConfig) => {\r\n\t\tconst maxDamageRoll = 8 * castLevel + 32\r\n\t\tconst maxDamageString = String(maxDamageRoll) + \"[necrotic]\" \r\n\t\trollConfig.parts = [maxDamageString]\r\n\t})\t\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].hitTargets[0].actor.system.details.type.value == \"plant\") {\r\n\t\tconst effectData = await getBlightEffectData(args[0].item.uuid)\r\n\t\tawait MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: args[0].hitTargets[0].actor.uuid, effects: [effectData] })\r\n\t\tawait setBlightHook(args[0].castData.castLevel)\r\n\t}\t\r\n}\r\n\r\nexport const blight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {conditionLabels} from \"../../constants.js\"\r\n\r\nconst main = async ({item, workflow, args}) => {\r\n\tconst hasCharm = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"charmed\"].includes(change.value.toLowerCase())))\r\n\tif (hasCharm) {\r\n\t\tworkflow.saveDetails.advantage = true\r\n\t}\r\n}\r\n\r\nexport const feyAncestry = {\r\n\tmain\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const protectionFromPoison = {\r\n\tinitHeader: \t\t\"What do you want to cast?\"\r\n}","const getItemData = (originActor, songLevel) => {\r\n\tconst sourceItem = fromUuidSync(\"Item.GvIIDEPRp3unaRVe\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Song of Rest\",\r\n\t\tsystem: { \r\n\t\t\tdamage: {\r\n\t\t\t\tparts: [[`1d${songLevel}`, \"healing\"]]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getOriginBardScale = (effectOriginUuid) => {\r\n\tconst effectOrigin = fromUuidSync(effectOriginUuid)\r\n\tconst originActor = fromUuidSync(effectOrigin.parent.uuid)\r\n\treturn originActor.system.scale.bard[\"song-of-rest\"].faces\r\n}\r\nconst main = (actor, data) => {\r\n\tconst songEffects = actor.effects.filter(effect => effect.name == \"Song of Rest\")\r\n\tif (data.dhd < 0 && songEffects.length > 0) {\r\n\t\tsongEffects.map(effect => {\r\n\t\t\tconst originBardScale = getOriginBardScale(effect.origin)\r\n\t\t\tconst item = getItemData(actor, originBardScale)\r\n\t\t\tconst token = MidiQOL.tokenForActor(actor.uuid)\r\n\t\t\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [token.document.uuid] }\r\n\t\t\tMidiQOL.completeItemUse(item, {}, options)\t\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const songOfRest = {\r\n\tmain\r\n}","export const setAmbientLightCreate = async (params) => {\r\n\treturn await canvas.scene.createEmbeddedDocuments(\"AmbientLight\", [params])\r\n}\r\nexport const setAmbientLightDelete = async (ambientLightId) => {\r\n\tconst ambientLight = await canvas.scene.deleteEmbeddedDocuments(\"AmbientLight\", [ambientLightId])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn ambientLight\r\n}\r\nexport const setMeasuredTemplateDelete = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid) ?? false\r\n\tif (!template) return false\r\n\tconst deletedMeasuredTemplate = await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [template._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn deletedMeasuredTemplate\r\n}\r\nexport const setActiveEffectDelete = async (ownerActor, effectId) => {\t\r\n\tconst [deleteEffect] = ownerActor.effects.filter(effect => effect._id == effectId)\t\r\n\treturn await ownerActor.deleteEmbeddedDocuments(\"ActiveEffect\", [deleteEffect._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n}\r\nexport const setDeleteSummonConcentrationHook = async (actor, spawnedTokenUuid) => {\r\n\tconst preDeleteSummonConcentrationHookId = Hooks.on(\"preDeleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", preDeleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\t\r\n}","import {setConfig} from './config.js';\r\nimport {macros} from \"./macros.js\"\r\nimport * as sf from \"./socket-functions.js\"\r\n\r\nexport let socket\r\n\r\nHooks.once(\"socketlib.ready\", () => {\r\n\tsocket = socketlib.registerModule(\"charnames-bag-of-macros\")\r\n\tsocket.register(\"setActiveEffectDelete\", sf.setActiveEffectDelete)\r\n\tsocket.register(\"setAmbientLightCreate\", sf.setAmbientLightCreate)\t\r\n\tsocket.register(\"setAmbientLightDelete\", sf.setAmbientLightDelete)\r\n\tsocket.register(\"setDeleteSummonConcentrationHook\", sf.setDeleteSummonConcentrationHook)\r\n\tsocket.register(\"setMeasuredTemplateDelete\", sf.setMeasuredTemplateDelete)\r\n})\r\n\r\nHooks.on(\"dnd5e.restCompleted\", (actor, data) => {\r\n\tmacros.songOfHealing.main(actor, data)\r\n})\r\n\r\nHooks.on(\"updateItem\", (item, update, config, userId) => {\r\n\tmacros.dossLute.updateItem(item, update)\r\n})\r\n\r\nglobalThis['CHARNAME'] = {\r\n    macros\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","conditionLabels","blinded","charmed","concentrating","dead","deafened","exhaustion1","exhaustion2","exhaustion3","exhaustion4","exhaustion5","frightened","grappled","incapacitated","invisible","paralyzed","petrified","poisoned","prone","restrained","stunned","unconscious","wounded","cloudSpellNames","getDialogueButtonType","async","choices","dialogueOptions","title","getIconPathsFunc","buttonWidth","buttonHeight","iconData","Promise","resolve","buttons","getIconPaths","width","height","reduce","choice","i","icon","label","callback","value","getDialogueButtons","Dialog","render","getTemplatesInRange","templates","gridSize","gridScale","range","x1","y1","filter","template","a","b","x","y","Math","sqrt","pow","distance","itemRangeModified","setActiveEffects","tokenActorUuids","effectData","effects","all","map","tokenActorUuid","MidiQOL","socket","executeAsGM","actorUuid","createEffect","setSpawnedTokenId","tokenUuid","itemRange","actor","originToken","spawn","token","name","location","spawnIconPath","size","interval","target","fromUuid","canvas","scene","grid","warpgate","crosshairs","show","lockSize","lockPosition","tag","drawIcon","rememberControlled","tokens","activate","setCrosshairConfigs","distanceAvailable","crosshairsDistance","inFlight","wait","ray","Ray","center","measureDistances","gridSpaces","draw","cancelled","getSpawnLocation","spawnedTokenId","spawnAt","originActorSenses","originTokenSight","updates","CONST","TOKEN_DISPLAY_MODES","HOVER","getSpawnUpdates","mergeObject","getWarpgateUpdates","system","attributes","senses","document","sight","pre","update","originTokenUuid","color","Sequence","effect","file","scale","opacity","atLocation","belowTokens","waitUntilFinished","fadeIn","play","setEffectsSequencer","post","animation","on","setPostEffectsSequencer","getWarpgateCallbacks","controllingActor","getWarpgateOptions","buttonName","setAreaChoiceEffects","templateUuid","templateEffect","itemUuid","positions","setTemplateEffects","lightParams","sanitizedLight","originUuid","lightId","origin","changes","mode","disabled","getEffectOriginData","_id","ineligibleEffectNames","minSpellLevel","originTemplateActiveEffect","itemTemplatePositions","setAreaEffectDeleteHookId","Hooks","templateData","originFlag","flags","dnd5e","templateSpellLevel","spellLevel","fromUuidSync","includes","gridTemplateId","id","gridTemplatePositions","highlightLayers","intersection","setTimeout","uuid","setAreaEffectDeleteHookOffId","config","off","setAreaEffectDeleteHookOff","setAreaEffectDeleteHook","attachTo","templatePositions","potentialTemplates","originName","templatesWithOverlap","eligibleTemplates","Set","getTemplatesWithOverlap","setTemplateDispels","delete","getCureWoundsData","item","instrument","type","level","damage","parts","updateActorSpellList","parent","equipUpdate","equipped","attunementUpdate","attunement","spells","spellData","spell","game","items","find","toLowerCase","originActor","itemData","duplicate","toObject","overwrite","inlace","insertKeys","insertValues","CONFIG","Item","documentClass","createTempSpell","createTempSpells","createEmbeddedDocuments","addSpells","charname","instrumentOfTheBards","length","removeSpells","casterUuid","dispelAbility","dispelLevel","casterToken","user","targets","first","effectsLTE2DispelLevel","effectsGTDispelLevel","castData","baseLevel","getTokenEffects","effectsIdsToDelete","abilities","mod","abilityRoll","arr","effectCastLevel","castLevel","rollAbilityTest","total","push","concat","getEffectsToDelete","deleteEffectsOnToken","selectedTemplate","inRangeEligibleTemplates","originItem","originItems","sortedTemplates","sort","aOrig","bOrig","localeCompare","templateSelections","itemOwnerName","menu","inputs","args","console","log","ui","notifications","info","options","indexOf","getTemplateSelection","getSelectedTemplate","templateCastLevel","getTemplatesToDelete","deleteTemplate","getAoeOverlapPerc","creatureCoords","getCreatureCoords","templateCoords","getTemplateCoords","templateId","tokenDoc","set","position","j","toString","add","templateIdStr","setLiveTokenDocUpdates","texture","hordeItem","hordeItemUsesMax","multiplier","liveTokenDoc","shouldReduce","tokenSizeNum","setSequencer","traits","keys","DND5E","actorSizes","setPostDamageUpdates","newHpDamage","newHealthPercentage","hp","max","hordePassive","img1","img2","img3","sequencerPath","getInitIconPaths","ringOfSpellStoring","addSpellErr","castSpellErr","castSpellHeader","charHeader","currSpellBank","descLevel","charnamesExceptions","initChoices","initHeader","levelHeader","levelLabels","spellHeader","createTempItem","tokenActor","liveItem","sourceItem","sourceMacroNames","getSourceMacroNames","updatedMacroNames","getUpdatedMacroNames","activation","getTempItem","getAddSpellChoices","eligibleSpellsByChar","charChoice","charChoices","character","toSorted","getCharIconPaths","getAddCharChoice","levelChoice","levelChoices","getLevelChoices","getLevelIconPaths","getAddLevelChoice","spellChoice","spellChoices","spellIcons","getSpellChoices","getSpellChoice","getSpellIconPaths","getAddSpellChoice","getEligibleSpells","actors","actorSpells","eligibleLevelSpells","highestSpellLevel","getHighestSpellLevel","preparation","getSpellData","pact","getEligibleLevelSpells","prototypeToken","src","slotsRemaining","slotsUsed","eligibleLevels","spellLevels","Array","from","getLiveActors","users","getNewSlotsUsed","getSelfEffects","selfTarget","dae","selfTargetAlways","onUseMacroName","sortedChoices","radioSelections","levelChoiceInt","dc","spelldc","ability","spellcasting","attackBonus","isRangedAttack","actionType","isMeleeAttack","parseInt","bonuses","rsak","attack","msak","getAttackBonus","prof","img","getSpellToCast","uniqueSpells","spellsArr","spellNames","chosenSpell","getUpdatedDescription","desc","description","newSpells","descs","spellBankStr","substring","lastIndexOf","replace","macroNames","setDeleteUuids","tempItem","deletionChange","ACTIVE_EFFECT_MODES","ADD","updatedChanges","setPreUseItemHooks","once","useItem","consumeResource","consumeSpellSlot","consumeUsage","slotLevel","_baseProficiency","setReactionUpdates","updateDeleteUuidEffects","setResetSpellsDesc","updatedStr","updatedDesc","updateDeleteItemFlags","newSlotsUsed","flaggedItem","updatedDescription","isConcentration","components","concentration","midiProperties","isReactionItem","getConcentrationEffect","getDeleteUuidEffects","updateRingItem","charName","spellName","notification","setRingUpdatesNotification","newSpellData","chr","getUpdateRingData","setRingUpdates","setCommandEffectsSequencer","setItemUsesUpdate","usesUsed","uses","macros","auraOfPurity","preTargetSave","workflow","some","change","saveDetails","advantage","onUse","tokenAttacher","attachElementToToken","tokenDocs","collections","values","eligibleTokenDocs","tokenDocuments","originX","originY","tokenDocsInRange","tokenTopLeftCenterX","tokenTopLeftCenterY","tokenGridBorderCoords","xArr","coord","yArr","maxX","maxY","coords","x2","y2","getTokensInRange","templateNonEffectedTokens","itemEffectName","statuses","has","getNonTemplateEffectedTokenDocs","getEligibleTokenDocuments","tokenEffectUuids","casterDisposition","effected","disposition","dfreds","effectInterface","addEffect","effectName","setTokenEffects","blight","speaker","scope","hitTargets","details","CUSTOM","getBlightEffectData","rolledItem","rollConfig","maxDamageString","String","setBlightHook","clairvoyance","macroPass","setActorConcDeletion","spawnedTokenUuid","getTokenSpawnIds","originTokenActorUuid","fromUuidActor","originActorConcentrationRemoveUuids","removeUuids","concEffect","setActorConcRemoveUuids","userId","isTheGM","deleteSummonConcentrationHookId","setHookMacros","setPostSpawnEffects","daylight","duration","rounds","getEffectTokenData","setInitChoice","lastArg","efData","dispelMagic","dossLute","main","updateItem","originInstrumentUuid","test","bunss","feyAncestry","isSaveFailure","hasAreaTarget","preTargetDamageApplication","hordeItemUses","hpDamage","damageItem","aoeOverlapPerc","hordeCount","floor","getNewDamage","setHpUpdateEffects","protectionFromPoison","poisonEffects","hasPoisonedName","hasPoisonedConditions","chosenEffect","acc","nameAlreadyUsed","getChoices","buttonNames","initChoice","getChosenEffect","effectUuid","removeEffect","setAddSpellNotification","getAddSpellUpdates","setAddSpellUpdates","addSpell","completeItemUse","createCastWorkflow","callMacro","asGM","setCastSpellUpdates","castSpell","tempItems","ringUuid","resetSpells","originTokenDoc","getDeleteItemData","deleteIndex","usedSpellLevel","usedSpell","getDeleteItemFlagData","getDeleteItemFlagUpdates","setDeleteItemFlags","logic","hasTemplate","hasSelfEffects","hasSelfTarget","hasEffects","isSelfTargetItem","originTargetingSelf","hitTargetUuids","checkSelfTarget","getDeleteItemLogic","tempItemEffect","setDeleteItemLogic","songOfRest","data","songEffects","dhd","originBardScale","effectOriginUuid","effectOrigin","bard","faces","getOriginBardScale","songLevel","getItemData","showFullCard","createWorkflow","versatile","configureDialog","targetUuids","tokenForActor","wandOfFear","buttonOptions","fearItem","getFearItemData","fearWorkflow","spriteOffset","local","rotate","direction","setFearEffects","commandItem","getCommandItemData","setCommandEffects","setAmbientLightCreate","params","setAmbientLightDelete","ambientLightId","ambientLight","deleteEmbeddedDocuments","setMeasuredTemplateDelete","deletedMeasuredTemplate","setActiveEffectDelete","ownerActor","effectId","deleteEffect","setDeleteSummonConcentrationHook","preDeleteSummonConcentrationHookId","socketlib","registerModule","register","songOfHealing","globalThis"],"sourceRoot":""}