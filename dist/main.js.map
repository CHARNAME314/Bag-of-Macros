{"version":3,"file":"main.js","mappings":"mFAAO,MAAMA,EAAkB,CAC9BC,QAAS,CAAC,UAAW,8BACrBC,QAAS,CAAC,UAAW,8BACrBC,cAAe,CAAC,gBAAiB,oCACjCC,KAAM,CAAC,OAAQ,2BACfC,SAAU,CAAC,WAAY,+BACvBC,YAAa,CAAC,eAAgB,mCAC9BC,YAAa,CAAC,eAAgB,mCAC9BC,YAAa,CAAC,eAAgB,mCAC9BC,YAAa,CAAC,eAAgB,mCAC9BC,YAAa,CAAC,eAAgB,mCAC9BC,WAAY,CAAC,aAAc,iCAC3BC,SAAU,CAAC,WAAY,+BACvBC,cAAe,CAAC,gBAAiB,oCACjCC,UAAW,CAAC,YAAa,gCACzBC,UAAW,CAAC,YAAa,gCACzBC,UAAW,CAAC,YAAa,gCACzBC,SAAU,CAAC,WAAY,+BACvBC,MAAO,CAAC,QAAS,4BACjBC,WAAY,CAAC,aAAc,iCAC3BC,QAAS,CAAC,UAAW,8BACrBC,YAAa,CAAC,cAAe,kCAC7BC,QAAS,CAAC,UAAW,+BAGTC,EAAkB,CAC9B,YACA,mBACA,gBACA,WACA,mB,wNC3BM,MAMMC,EAAiBC,OAAQC,OAAMC,OAAMC,YAAWC,KAC5D,MAAOC,EAAUC,EAAgBC,SAAoBC,EAAkBP,EAAMC,GACzEE,SAA0BA,EAAmBC,GACjD,MAAMI,QAAcC,EAAmBT,EAAMC,EAAMI,EAAgBD,EAAUE,EAAYJ,GACzFQ,EAAmBF,EAAOJ,EAAUE,EAAU,EA2BlCC,EAAoBR,MAAOC,EAAMC,KAC7C,MAAMG,QAAiBO,SAASV,EAAKW,MAC/BP,QAAuBM,SAASX,EAAK,GAAGa,WAE9C,MAAO,CAACT,EAAUC,EADCA,EAAeS,MACU,EAEhCL,EAAqBV,MAAOC,EAAMC,EAAMI,EAAgBD,EAAUE,EAAYJ,KAC1F,MAAMa,QAAmBC,QAAQC,uBAAuBX,KAAe,EACjEY,QAAoBP,SAAST,EAASiB,gBAAiB,EAEvDC,SADoBC,EAAejB,IACNkB,OAAS,EACtCC,OAhDwBxB,OAAOC,EAAMC,EAAMI,KACjD,MAAMmB,EAAavB,EAAKwB,QAAQC,KAAO,EACjCC,EAAwC,QAArB1B,EAAK2B,QAAQC,KAChCC,EAAsB9B,EAAK,GAAG+B,eAAeC,QAAOpB,GAAQA,GAAQP,EAAeO,OAAMU,OAAS,EACxG,OAAOE,IAAeG,GAAoBG,EAAmB,EA4CjCG,CAAgBjC,EAAMC,EAAMI,GACxD,MAAO,CAACU,EAAYG,EAAaE,EAAgBG,EAAa,EAwBlDW,EAAwBnC,MAAOoC,EAASC,EAAiBC,EAAOC,EAAkBC,EAAaC,EAAcC,UAC5G,IAAKC,SAAUC,IAC3B,MAAMC,EAd0B,EAACD,EAASR,EAASU,EAAcC,EAAOC,EAAQN,IAC1EN,EAAQa,QAAO,CAACJ,EAASK,EAAQC,KACvC,MAAMC,EAAON,EAAaI,EAAQR,GAOlC,MAAO,IAAIG,EANQ,CAACK,GAAS,CAC5BG,MAAO,YAAYD,WAAcL,YAAgBC,4BAAiCE,IAClFI,SAAU,KACTV,EAAQ,CAACW,MAAO,GAAGL,KAAS,GAGE,GAC9B,CAAC,GAIaM,CAAmBZ,EAASR,EAASG,EAAkBC,EAAaC,EAAcC,GAClG,IAAIe,OAAO,CACVnB,MAAOA,EACPO,QAASA,GACPR,GAAiBqB,QAAO,EAAI,IAEpBpC,EAAiBtB,MAAOE,IAChBA,EAAKwB,SAAW,IACjBO,QAAO0B,IACzB,MAAMC,EAAaD,EAAOE,OAAOC,KAAKF,aAAc,EAC9CG,EAAmBJ,EAAOE,OAAOC,KAAKC,mBAAoB,EAChE,SAAKH,IAAcG,EACZ,KACF,GAEMC,EAAsBhE,MAAOE,GACxBA,GAAM2D,OAEP3D,EAAK2D,MAAM,aAET3D,EAAK2D,MAAM,YAAYI,eAElC/D,EAAK2D,MAAM,YAAYI,eALR,GAOVC,EAAmBlE,MAAOmE,EAAexC,EAAMyC,EAAUtD,EAAWuD,EAAWC,WACrFC,EAAoBzD,EAAWuD,EAAW1C,GAChD,MAAM6C,EAAoBH,EAC1B,IAAII,EAAqB,EACzB,MAiBMC,QAAiBC,SAASC,WAAWC,KAC1C,CACClD,KAAMA,EACNyC,SAAUA,EACVhB,KAAMe,EACNd,MAAO,SAER,CACCwB,KAzBoB7E,MAAO4E,IAC5B,KAAOA,EAAWE,UAAU,OACrBH,SAASI,KAAK,KACpB,MAAMC,EAAM,IAAIC,IAAIX,EAAYY,OAAQN,GAClCO,EAA8F,EAAnFC,KAAKC,KAAKC,OAAOC,KAAKC,iBAAiB,CAAC,CAAER,QAAQ,CAAES,YAAY,IAAS,GAAK,GAC3FhB,IAAuBU,IAC1BV,EAAqBU,EAEpBP,EAAWxB,KADR+B,EAAWX,EACI,uBAEAL,EAEnBS,EAAWc,OACXd,EAAWvB,MAAQ,GAAG8B,OAExB,KAaD,OAAIT,EAASiB,WAAalB,EAAqBD,OAC9C,EAEOE,CACR,EAEYkB,EAAsB,CAACC,EAAWC,EAAUC,EAAWC,EAAOC,EAAIC,IAEvEL,EAAU5D,QAAOkE,IACvB,MAAOC,EAAGC,GAAK,CAACJ,EAAKE,EAASG,EAAGJ,EAAKC,EAASI,GAK/C,OAJWnB,KAAKoB,KAAKpB,KAAKqB,IAAIL,EAAE,GAAKhB,KAAKqB,IAAIJ,EAAE,IACZP,EACNK,EAAShB,SAAWY,EACxBC,EAAQD,CACuBW,IAU9CC,EAAmB3G,MAAO4G,EAAQd,EAAUC,EAAW1B,EAAW4B,EAAIC,IAC3EU,EAAO3E,QAAO4E,IACpB,MAAMC,EAAsBD,EAAMP,EAAIR,EAAW,EAC3CiB,EAAsBF,EAAMN,EAAIT,EAAW,EACjD,IAAIkB,EAAwB,GAE5B,IAAK,IAAI7D,EAAI,EAAGA,GAAmB,EAAd0D,EAAM9D,MAAY,EAAGI,IACzC,IAAK,IAAI8D,EAAI,EAAGA,GAAmB,EAAdJ,EAAM9D,MAAa,EAAGkE,IAC1CD,EAAsBE,KAAK,CAACZ,EAAGQ,EAAsBhB,EAAW,EAAI3C,EAAGoD,EAAGQ,EAAsBjB,EAAW,EAAImB,IAIjH,MAAME,EAAOH,EAAsBI,KAAIC,GAASA,EAAMf,IAChDgB,EAAON,EAAsBI,KAAIC,GAASA,EAAMd,IAChDgB,EAAOnC,KAAKoC,OAAOL,GACnBM,EAAOrC,KAAKoC,OAAOF,GAWzB,OAVwBN,EAAsB/E,QAAOyF,GAAUA,EAAOpB,GAAKiB,GAAQG,EAAOnB,GAAKkB,IAEhDxF,QAAOoF,IACrD,MAAOM,EAAIC,GAAM,CAACP,EAAMf,EAAGe,EAAMd,GAC3BH,EAAIH,EAAK0B,EACTtB,EAAIH,EAAK0B,EAEf,OADUxC,KAAKoB,KAAKpB,KAAKqB,IAAIL,EAAE,GAAKhB,KAAKqB,IAAIJ,EAAE,IACpCP,GAAYzB,EAAY0B,KAGNxE,OAAS,KAG5BsG,EAAuB7H,MAAO8H,EAAYC,EAAUC,KAChE,MAAMC,EAASH,EAAWvG,OAAS,EAC/BuG,EAAa,+CAA+CC,mBAC5D,8CAA8CA,mBAClD,MAAkB,YAAdC,EACIC,EAAS,gDAAgDF,oBAE1DE,GAEKC,EAAelI,MAAOmI,SACrBlH,QAAQmH,SAASC,YAAY,eAAgB,CAACF,WAAYA,IAK3DG,EAAmBtI,MAAOuI,EAAiBC,KACvD,MACO9G,SAAiBiB,QAAQ8F,IAAIF,EAAgBnB,KAAIsB,GADnC1I,OAAO0I,EAAgBF,UAA6BvH,QAAQmH,SAASC,YAAY,gBAAiB,CAACM,UAAWD,EAAgBhH,QAAS,CAAC8G,KACnFI,CAAaF,EAAgBF,MACvG,OAAO9G,GAEKmH,EAAuB7I,MAAOe,IACtCA,EAAMW,QAAQoH,MAAKnF,GAAyB,iBAAfA,EAAOoF,QAA0BhI,EAAMW,QAAQoH,MAAKnF,GAAyB,iBAAfA,EAAOoF,OAAyBC,QAAO,EAE1HC,EAA0BjJ,MAAOkJ,EAAarI,KAC1D,IAAIsI,EAAsCD,EAAYrF,MAAM,YAAY,uBAAuBuF,aAAe,GAC9GD,EAAoCjC,KAAKrG,SACnCqI,EAAYjB,OAAO,CAAC,iBAAkB,CAAC,qBAAsB,CAACmB,YAAaD,MACjF,MAAMnI,EAAakI,EAAYxH,QAAQoH,MAAKnF,GAAyB,iBAAfA,EAAOoF,aACvD/H,EAAWiH,OAAO,CACvB,YAAa,CAAC,gBAAmB,CAAC,YAAa,cAC/C,EAmBWoB,EAAkCrJ,MAAOsJ,EAAYvB,EAAU5B,KAC3E,MAAMoD,EAAsBpD,EAAStC,OAAO2F,SAASzB,IAAWwB,qBAAuB,SAC7DA,EAAoBE,SAAQd,IACrD,MACMhF,EADQ+F,aAAaf,GACNjH,QAAQoH,MAAKnF,GAAUA,EAAOoF,MAAQO,IAC3D,IAAK3F,EAAQ,OAAO,EACpBuE,EAAavE,EAAO9C,KAAI,GACxB,EAEW8I,EAA4B3J,MAAOsJ,EAAYvB,EAAU6B,EAAezD,EAAUU,KAE9F,IADoBA,EAAM9F,OAAOW,QAAQoH,MAAKnF,GAAUA,EAAOoF,MAAQO,IACrD,CACjB,MAAMd,QAAmBoB,EAAczD,EAAStC,MAAM,YAAY8E,UAAWxC,EAAStF,MACtFyH,EAAiB,CAACzB,EAAM9F,MAAMF,MAAO2H,GACrC,MAAMqB,EAAgB,IAClB1D,EAAStC,MAAM2F,SAASM,YAAYP,oBACvC1C,EAAM9F,MAAMF,MAEPkJ,EAAO,kBAAkBhC,8BACD5B,EAAS8B,OAAO,CAC7C,CAAC8B,GAAOF,GAEV,GAEYG,EAAyBhK,MAAOsJ,EAAYvB,EAAU5B,EAAUU,KAC5E,MAAMoD,EAAcpD,EAAM9F,OAAOW,QAAQoH,MAAKnF,GAAUA,EAAOoF,MAAQO,MAAe,EACtF,GAAIW,EAAa,CAChB/B,EAAa+B,EAAYpJ,MACzB,MAAMgJ,EAAgB1D,EAAStC,MAAM2F,SAASzB,GAAUwB,oBAAoBtH,QAAO0G,GAClFA,GAAa9B,EAAM9F,MAAMF,OAEpBkJ,EAAO,kBAAkBhC,8BACD5B,EAAS8B,OAAO,CAC7C,CAAC8B,GAAOF,GAEV,GAYYK,EAAsBlK,MAAOmK,EAAS5J,KAClD,MAAOF,EAAUF,GAAYgK,EAC7BC,EAAwB7J,EAAYF,GACpC,MAAM8F,QAAiBvF,SAAST,EAASiB,gBAAiB,EACtD+E,GAAUA,EAASkE,UAAU,cAAe,CAACC,MAAM,GAAK,EAEhD/F,EAAsBvE,MAAOc,EAAWuD,EAAW1C,KAC/D,MAAME,QAAejB,SAASE,IACxB,SAACqE,GAAYG,OAAOiF,MAAMhF,KAC1BiF,EAAa7I,EAAO,EACH,GAAnB2D,OAAOC,KAAK5D,KAAYA,EACL,GAAnB2D,OAAOC,KAAK5D,KAChBgD,SAASC,WAAWC,KAAK,CACxB4F,UAAS,EACTC,cAAc,EACd/I,KAAM,EAAI0C,EAAYc,EACtBwF,IAAK,QACLC,UAAS,EACTvH,MAAO,aACPiD,EAAGzE,EAAOyE,EAAIkE,EACdjE,EAAG1E,EAAO0E,EAAIiE,EACdK,oBAAoB,IAErBvF,OAAOsB,OAAOkE,UAAS,EAEXnK,EAAqBX,MAAOS,EAAOJ,EAAUE,KACzD,MAAOS,EAAYG,EAAaE,EAAgBG,GAAiBf,EACjE,GAAIO,EACH+J,EAAe1K,EAAUW,QACnB,GAAKA,IAAcG,GAAgBE,EAGnC,GAAKL,GAAeG,IAAgBE,IAAkBG,EAGjDR,GAAeG,GAAgBE,GAAmBG,GAC7DnB,EAAS2I,aAJmE,CAC5E,MAAMgC,EAAiBzK,EAAWmB,QAAQoH,MAAKnF,GAAUA,EAAOsH,QAAU5K,EAASQ,OACnFkK,EAAe1K,EAAU2K,EAC1B,KAN0D,CACzD,MAAMA,EAAiBzK,EAAWmB,QAAQoH,MAAKnF,GAAUA,EAAOsH,QAAU5K,EAASQ,OACnFkK,EAAe1K,EAAU2K,EAC1B,CAKA,EAEYD,EAAiB/K,MAAOK,EAAUsD,KAC9C,MAAMuH,EAAiB,CAACC,IAAK,uBAAwBC,KAAMC,MAAMC,oBAAoBC,IAAKhI,MAAO,CAAClD,EAASQ,OACrG2K,EAAiB,IAAI7H,EAAO8H,QAASP,GAC3CvH,EAAOsE,OAAO,CAAC,QAAWuD,GAAe,EAE7BE,EAAqB1L,MAAOsG,EAAGC,EAAGwC,EAAM4C,KACpD,MACMC,EADwBtG,OAAOiF,MAAM1E,UAAU5D,QAAOkE,GAAYA,EAAStC,MAAMgI,QACtC5J,QAAOkE,IACvD,MAAM2F,EAAapC,aAAavD,EAAStC,MAAMgI,MAAMZ,QAAQlC,KAC7D,OAAKA,EAGG5C,EAAStC,MAAMgI,MAAME,YAAcD,GAAc/C,EAFjD5C,EAAStC,MAAMgI,MAAME,UAG7B,IAGKC,EA3LgC,EAACC,EAAmBN,IACnDM,EAAkBhK,QAAOkE,IAC/B,MAAM+F,EAAiB,oBAAsB/F,EAASgG,GAChDC,EAAoB9G,OAAOC,KAAK8G,gBAAgBH,IAAiBI,WAAa,IAAIC,IAAI,MAC5F,OAAOZ,EAAsBa,aAAaJ,GAAmBzK,KAAO,KAuLxC8K,CADJ7G,EAAoBgG,EAAoBtG,OAAOiF,MAAMhF,KAAK5D,KAAM2D,OAAOiF,MAAMhF,KAAKJ,SAAU,GAAImB,EAAGC,GACrDoF,GACvEK,EAAqB5E,KAAIjB,IAAa,IAAOkC,YAAY,4BAA6BlC,EAAStF,KAAI,GAAE,EAEzF6L,EAAyB1M,MAAOe,EAAOd,EAAMqJ,EAAYM,EAAerB,KACpF,MAAMC,QAAmBoB,EAAc7I,EAAMF,KAAMZ,EAAK,GAAGmB,eACpDuL,SAAuBrE,EAAiBC,EAAiBC,GAE1DoE,SADkBhM,SAASG,EAAMF,OACNa,QAAQoH,MAAKnF,GAAUA,EAAOoF,MAAQO,IACjEkC,EAAiB,IAAIoB,EAAenB,WAAYkB,EAAclB,SACpEmB,EAAe3E,OAAO,CAAC,QAAWuD,GAAe,EAErCqB,EAAkB7M,MAAO+H,EAAU5B,EAAUoC,KACzD,MAAMwB,EAAO,kBAAkBhC,8BACD5B,EAAS8B,OAAO,CAC7C,CAAC8B,GAAOxB,GACR,EAEWuE,EAAsB9M,MAAO+M,EAAczD,EAAYvB,EAAU6B,EAAezD,KAC5F,MACCqC,EACAwE,EACAC,QA5UoCjN,OAAO+M,EAAcnD,EAAezD,EAAU4B,IAW5E,OAVkB6B,EAAczD,EAAStC,MAAM,YAAY8E,UAAWxC,EAAStF,MAClEqM,KAAKC,QAAQC,IAAI,iBAAiBC,IAAIC,cAAcnH,GAC1CiB,KAAI+E,GACjC7G,OAAOiF,MAAMgD,YAAY3G,OAAOwG,IAAIjB,KACnClK,QAAOuL,GACRA,EAASrB,IAAMhG,EAAStC,MAAM,YAAY4J,SACvCV,EAAaW,SAASF,EAASG,eAEEvG,KAAIP,GAASA,EAAM9F,MAAMF,OACnCsF,EAAStC,MAAM2F,SAASzB,GAAUwB,qBAmUnDqE,CAAuBb,EAAcnD,EAAezD,EAAU4B,GAzV/B/H,OAAOsJ,EAAY0D,EAAoBC,EAAoBY,KACpG,MAAMC,EAAeb,EAAmBhL,QAAOpB,IAASmM,EAAmBU,SAAS7M,WAC9EiN,EAAarE,SAAQd,IAC1B,MACMsB,EADQP,aAAaf,GACDjH,QAAQoH,MAAKnF,GACtCA,EAAOoF,MAAQO,GACZ3F,EAAOsH,QAAU4C,IAErB,IAAK5D,EAAa,OAAO,EACzB/B,EAAa+B,EAAYpJ,KAAI,GAC7B,EAgVDkN,CACCzE,EACA0D,EACAC,EACA9G,EAAStC,MAAM,YAAY8E,WA5FU3I,OAAOwI,EAAYT,EAAUiF,EAAoBC,EAAoB9G,KAC3G,MAAM6H,EAAmBhB,EAAmB/K,QAAOpB,IACjDoM,EAAmBS,SAAS7M,KAE9ByH,EAAiB0F,EAAkBxF,GACnC,MAAMuB,EAAO,kBAAkBhC,wBAC/B5B,EAAS8B,OAAO,CACf,CAAC8B,GAAOiD,GACR,EAsFDiB,CACCzF,EACAT,EACAiF,EACAC,EACA9G,EACD,EAEYiE,EAA0BpK,MAAOe,EAAOb,KACpD,MAAMwB,OAlU6B1B,OAAOe,EAAOb,KACjD,MAAMgO,EAAahO,EAAKiO,OAAOC,YAAYC,gBAAiB,EACtDC,EAAcpO,EAAK2D,OAAO0K,gBAAgBF,gBAAiB,EAC3DG,EAAkBN,GAAcI,EAChCG,EAAgD,YAA/BvO,EAAKiO,OAAOnG,WAAWlG,KAC9C,OAAI0M,IAAoBC,EAChB,OAAOxN,QAAQC,uBAAuBH,UAEjCO,EAAepB,IAAS,EAAC,EA0ThBwO,CAAqB3N,EAAOb,GAC9CwB,EAAQH,OAAS,GAAGG,EAAQ0F,KAAIzD,GAAUoH,EAAe7K,EAAMyD,IAAO,C,qWCnV3E,MAAMgL,oBAAsB3O,MAAO6G,IAElC,IADuBqG,KAAK0B,QAAQC,OACf,OAAO,EAE5B,OADwB3B,KAAK0B,OAAOE,MAAMhG,MAAKiG,GAAOA,EAAItB,SAAW5G,EAAMsF,OAC9C,CACtB6C,EAEFC,YAAcjP,MAAOe,EAAOmC,EAAQhD,EAAMgP,EAAWC,EAAStI,KACnE,MAAM7F,QAAmBoO,cAAcvI,GACjCwI,QAAmBC,kBAAkBvO,EAAOmC,EAAQlC,EAAYd,EAAMgP,EAAWC,EAAStI,GAChG,IAAK7F,EAAY,OAAO,EACxBuO,kBAAkBF,EAAYxI,GAC9B2I,iBAAiBxO,EAAYqO,EAAYxI,EAAK,EAEzCyI,kBAAoBtP,MAAOe,EAAOmC,EAAQlC,EAAYd,EAAMgP,EAAWC,EAAStI,KACrF,MAAM4I,QAAeC,eACpB3O,EACAmC,EACAlC,EACAd,EACAgP,EACAC,EACAtI,GAGD,aADuB8I,iBAAiBF,EAAQvP,EAAMgP,EAAWrI,IACjDO,KAAI+E,GACL7G,OAAOiF,MAAM3D,OAAOkC,MAAK0E,GAAYA,EAASrB,IAAMA,IACrDtL,MACb,EAEI+O,iBAAmB5P,MAAOkD,EAAQgM,EAAWC,KAClD,MAAMU,EAAwBX,GAAWY,SAASC,sBAAwB,EAC1E,MAAoC,iBAAzBF,EAA0CA,EAC9CA,EAAsBV,EAAQ/M,QAAQ4N,QAAQ9M,GAAO,EAEvD+M,aAAejQ,MAAOmD,EAAG+L,UAAWvN,KAAMuO,UAAW5L,eAC1D,MAAM6L,kBAAoBjB,WAAWkB,UAAUC,WAAa,GAC5D,OAAIF,kBAAkB5O,OAAS,EAAU+O,KAAKH,mBACvC,CACNI,IAAKvQ,MAAOwQ,IACXC,sBAAsBtN,EAAGqN,EAAKlM,YAAa3C,KAAMuN,iBAC3CvK,SAASI,KAAK,IAAG,EAExB2L,KAAM1Q,MAAOwQ,EAAKG,KACjBC,uBAAuBJ,EAAKG,EAAYzB,iBAClCvK,SAASI,KAAK,IAAG,EAEzB,EAEKqK,cAAgBpP,MAAO6G,UACJjG,SAASiG,EAAM9F,MAAMF,OAC5Ba,QAAQoH,MAAKnF,GAC7B,6CAAEjF,cAAcgP,SAAS/J,EAAOoF,KAAK8H,iBAGjCC,mBAAqB9Q,MAAOwN,IACjC,MAAMuD,EAAgBvD,EAASzM,OAAO8C,OAAO2F,UAAUwH,WAAWD,eAAiB,EAC7E7B,EAAY1B,EAASzM,OAAO8C,OAAO2F,UAAUwH,WAAW9B,YAAa,EAI3E,MAAO,CAAC6B,EAHgBvD,EAASzM,OAAO8C,OAAO2F,UAAUwH,WAAW9B,WAAW+B,WAAWjI,SAAU,EACjFwE,EAASzM,OAAO8C,OAAO2F,UAAUwH,WAAWhQ,aAAc,EACrDwM,EAASzM,OAAO8C,OAAO2F,UAAUwH,WAAW9B,WAAW+B,WAAWC,SAAW,CAAC,EACjChC,EAAS,EAEzEiC,6BAA+BnR,MAAOsE,EAAa4K,EAAWkC,KACnE,MAAMC,EAAYnC,GAAW+B,WAAWC,SAASG,WAAa,KACxDC,EAAQpC,GAAW+B,WAAWC,SAASI,OAAS,QAChDC,EAASrC,GAAW+B,WAAWC,SAASK,QAAU,cAClDC,EAAQtC,GAAW+B,WAAWC,SAASM,OAAS,IAGtD,MAAO,CAACH,EAAWC,EAAOC,EAFNnM,KAAKoC,IAAIlD,EAAYmN,SAASzO,OAAQsB,EAAYmN,SAAS1O,OAASyO,EACrEJ,EAAYI,EAC0B,EAEpDE,gBAAkB1R,MAAOkD,EAAQgN,EAAWf,KACjD,MAAMpO,EAAQmM,KAAKyE,OAAO7I,MAAK/H,GAASA,EAAMgI,MAAQmH,IAGtD,MAAO,OAFgB0B,eAAe7Q,EAAOmC,EAAQiM,GACxC/J,KAAKoC,IAAIzG,EAAM8Q,eAAe7O,OAAQjC,EAAM8Q,eAAe7O,QAClD,EAEjB0M,eAAiB1P,MAAOe,EAAOmC,EAAQlC,EAAYd,EAAMgP,EAAWC,EAAStI,KAClF,MAAMqK,EAAUhC,GAAWkB,UAAUc,SAAW,CAACY,iBAAkB/Q,GAC7DmP,EAAYf,EAAQ4C,WAAW5C,EAAQ/M,QAAQ4N,QAAQ9M,KACtD8O,EAAUrQ,SAAc+P,gBAAgBxO,EAAQgN,EAAWf,GAC5D8C,QAAsBrC,iBAAiB1M,EAAQgM,EAAWC,GAGhE,MAAO,CAAC8C,gBAAeD,WAAU5N,SADhBzC,EAAO,GAAK,GAAK,EAAI,EACKuP,UAASvP,OAAMuO,YAAW/F,cAF/C+H,gBAAgBD,EAAejR,EAAYkO,EAAWrI,GAEA,EAEvEqL,gBAAkBlS,MAAOiS,EAAejR,EAAYkO,EAAWrI,KACpE,MAAMsL,EAAkBnR,EAAoBA,EAAWH,KAAlB,KAC/BuR,EAAmB,CACxBvL,MAAO,CACN,MAAS,EACT,YAAeA,EAAM4K,SAAS9D,aAE/B5M,MACA,CACC,yCAA0CkR,EAC1C,sCAAuCE,EACvC,qCAAsCjD,IAQxC,OAL0BmD,YACzBD,EACAlD,EAAUkB,SAASkC,UACnB,CAACC,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,GAE1DC,EAEFf,eAAiB5R,MAAOe,EAAOmC,EAAQiM,KAC5C,MAAMyD,EAAkBzD,EAAQ0D,aAAa1D,EAAQ/M,QAAQ4N,QAAQ9M,IACrE,OAAO0P,EAAgBrR,OAAS,EAAIqR,EAAkB7R,EAAM8Q,eAAeiB,QAAQC,KAE9EC,iBAAmBhT,MAAOwN,SAAUyF,OAAQC,QACjD,MAAMC,UAAYjG,KAAKkG,MAAMtK,MAAKoK,GAAQA,EAAKG,UAC/C,GAAInG,KAAKkG,MAAMhG,IAAI8F,MAAM/G,IAAMgH,UAAUhH,GAAI,OAAO,EACpD,MACC4E,cACAuC,gBACAnL,WACAoL,gBACArE,iBACS4B,mBAAmBtD,UAM7B,GALK8F,gBAGJhD,KAAKpB,UAAUlG,OAAfsH,CAAuB9C,SAAU+F,iBAFjCC,wBAAwBhG,SAAU0B,WAI/B/G,WAAY,CACf,IAAInH,QAAmBJ,SAASuH,YAC5BsL,EAAUzS,EAAW6C,MAAM2F,SAASwH,UAAU0C,kBAC9CC,EAAU3S,EAAW6C,MAAM2F,SAASwH,UAAU4C,kBAGlD,MAAMC,EAAQzO,KAAK0O,MAAsB,IAAhB1O,KAAK2O,UAAkBN,EAAUE,UACpDhP,SAASI,KAAK8O,GACpB7S,QAAmBJ,SAASuH,YAC5BsL,EAAUzS,EAAW6C,MAAM2F,SAASwH,UAAU0C,kBAC9CC,EAAU3S,EAAW6C,MAAM2F,SAASwH,UAAU4C,kBAC9C,MAAMI,EAAaL,EAAU,EAC7B,GAAIF,GAAWO,EAEd,OADAhT,EAAWgI,UACJ,EAER,MAAMiL,QAAoBjT,EAAWiH,OAAO,CAAC,MAAS,CAAC,uCAAwC+L,IAChG,GAEKE,yBAA2BlU,MAAOqP,EAAYxI,IAC5CvB,OAAOiF,MAAM3D,OAAO3E,QAC1B4E,GAASwI,EAAW3B,SAAS7G,EAAMhG,QAClCuG,KAAIoG,IACL,MAAM2G,EAAc7O,OAAOsB,OAAOwN,WAAWtL,MAAKjC,GAASA,EAAMsF,IAAMqB,EAASrB,KAEhF,OADAgI,EAAYE,eACL7G,EAASrB,MAGZwD,iBAAmB3P,MAAOyP,EAAQvP,EAAMgP,EAAWrI,KACxD,MAAM,cACLoL,EAAa,SACbD,EAAQ,SACR5N,EAAQ,QACR8M,EAAO,KACPvP,EAAI,UACJuO,EAAS,QACT/F,GACGsF,EACJ,IAEIY,EAFAG,EAAM,CAAC,EACP8D,EAAW,GAEf,IAAK,IAAInR,EAAI,EAAGA,EAAI8O,EAAe9O,IAClCqN,QAAY,wDACXwB,EACArQ,EACAyC,EACAyC,EAAM4K,SAAS5Q,KACfX,EAAKiO,OAAOnI,MAAMzC,MAClBsD,GAEDwJ,QAAkBJ,aAAa9M,EAAG+L,EAAWvN,EAAMuO,EAAWrJ,GAC9DyN,EAASpN,WAAWvC,SAAS4P,QAC5B,CAACjO,EAAGkK,EAAIlK,EAAGC,EAAGiK,EAAIjK,GAClB2J,EACA/F,EACAkG,EACAa,IAGF,OAAOoD,GAEFE,iBAAmBxU,MAAOyU,EAAgBC,WAEzC/P,SAASI,KAAK,KACpB,MAAM4P,EAAazH,KAAK0B,OAAOE,MAAM7M,QAAO8M,GAAO0F,EAAe/G,SAASqB,EAAItB,YAC/E,wDAA2BkH,EAAYD,EAAI,EAEtClF,iBAAmBxP,MAAOgB,EAAYqO,EAAYxI,KACvD,MAAM+N,EAAoBvF,EAAWjI,KAAIvG,IACjC,CACN,IAAO,uBACP,KAAQ,EACR,SAAY,GACZ,MAASA,MAGL4K,EAAU,IAAIzK,EAAWyK,WAAYmJ,GACrCC,EAAa,CAClB,uCAAwCxF,EAAW9N,OACnD,uCAAwC,EACxC,gCAAiCP,EAAWH,MAE7CG,EAAWiH,OAAO,CAAC,QAAWwD,EAAS,MAASoJ,GAAW,EAEtDtF,kBAAoBvP,MAAOqP,EAAYxI,KAC5C,MAAMmI,QAAwBL,oBAAoB9H,GAClD,IAAKmI,EAAiB,OAAO,EAC7B,MAAMyF,QAAuBP,yBAAyB7E,EAAYxI,GAC5D6N,EAAO1F,GAAiB8F,aAAc,EAC5C,IAAKJ,EAAM,OAAO,EAClBF,iBAAiBC,EAAgBC,EAAI,EAEhC9D,uBAAyB5Q,MAAOwQ,IAAK3J,MAAOqI,aACjD,MAAM+B,UAAY/B,WAAW+B,WAAWP,MAAQ,GAChD,GAAIO,UAAU1P,OAAS,EAEtB,OADA+O,KAAKpB,UAAU+B,UAAUP,KAAzBJ,CAA+BE,IAAK3J,QAC7B,QAEFlC,SAASI,KAAK,MACpB,MAAMuM,MAAQpC,WAAW+B,WAAWC,SAASI,OAAS,QAChDyD,UAAY7F,WAAW+B,WAAWC,SAAS8D,YAAc,MACzDC,cAAgB,eAAeF,aAAazD,SAC5C,GAAG,SAAapC,WAAW+B,WAAWC,SAASgE,QACjD,CAACC,GAAI,IAAKjE,QAAS,CAACkE,KAAM,iBAC9B,IAAIC,UACFC,YACCC,GAAG1O,OACFqO,OAAOC,GAAIjE,SACXsE,QAAQ,GACVC,QACF,IAAIJ,UACF1R,SACC+R,KAAKT,eACLU,WAAW9O,OACZyO,YACCC,GAAG1O,OACH2O,QAAQ,GACTC,MAAK,EAEFhF,sBAAwBzQ,MAAOmD,EAAGqN,IAAKlM,YAAa8M,UAAWlC,aACpE,MAAM0G,kBAAoB1G,WAAW+B,WAAWV,KAAO,GACvD,GAAIqF,kBAAkBrU,OAAS,EAE9B,OADA+O,KAAKpB,UAAU+B,UAAUV,IAAzBD,CAA8BE,IAAK3J,QAC5B,EAER,MACCwK,UACAC,MACAC,OACAsE,YACAC,kBACS3E,6BAA6B7M,YAAa4K,UAAWkC,YAC/D,IAAIiE,UACF1R,SACC+R,KAAK,2BAA2BrE,aAAaE,gBAAgBD,SAC7DE,MAAMsE,YACNN,QAAQ,GACRG,WAAWnF,KACXuF,cACAC,mBAAmB,MACpBrS,SACC+R,KAAK,2BAA2BrE,aAAaE,eAAeD,SAC5DE,MAAMsE,YACNH,WAAWnF,KACXuF,cACAb,OAAO,KACPM,QAAQ,GACRQ,mBAAmB,MACpBrS,SACC+R,KAAK,2BAA2BrE,aAAaE,gBAAgBD,SAC7DE,MAAMsE,YACNN,QAAQ,GACRG,WAAWnF,KACXuF,cACDN,OACO,GAALtS,IACH,IAAIkS,UACF1R,SACC+R,KAAK,2BAA2BrE,aAAaE,gBAAgBD,SAC7DE,MAAMqE,aACNL,QAAQ,GACRG,WAAWrR,aACXyR,cACAC,mBAAmB,MACpBrS,SACC+R,KAAK,2BAA2BrE,aAAaE,eAAeD,SAC5DE,MAAMqE,aACNF,WAAWrR,aACXyR,cACAb,OAAO,KACPM,QAAQ,GACRQ,mBAAmB,MACpBrS,SACC+R,KAAK,2BAA2BrE,aAAaE,gBAAgBD,SAC7DE,MAAMqE,aACNL,QAAQ,GACRG,WAAWrR,aACXyR,cACDN,MACH,EAEKjC,wBAA0BxT,MAAO6G,MAAOqI,aAC7C,MAAM0G,kBAAoB1G,WAAW+B,WAAWjI,QAAU,GAC1D,GAAI4M,kBAAkBrU,OAAS,EAE9B,OADA+O,KAAKpB,UAAU+B,UAAUjI,OAAzBsH,CAAiCE,IAAK3J,QAC/B,EAER,MAAMyK,MAAQpC,WAAW+B,WAAWC,SAASI,OAAS,QAChDyD,UAAY7F,WAAW+B,WAAWC,SAAS+E,YAAc,OACzD,GAAG,SAAa/G,WAAW+B,WAAWC,SAASgE,QACjD,CAACC,GAAI,IAAKjE,QAAS,CAACkE,KAAM,gBACxBH,cAAgB,eAAeF,aAAazD,SAClD,IAAI+D,UACFC,YACCC,GAAG1O,OACHqO,OAAOC,GAAIjE,SACVsE,QAAQ,GACVC,QACF,IAAIJ,UACF1R,SACC+R,KAAKT,eACLU,WAAW9O,OACZyO,YACCC,GAAG1O,OACH2O,QAAQ,GACTC,MAAK,EAGKzE,UAAY,CACxB/B,YACA+D,iB,wDC3TM,MAAMkD,EAAe,CAC3BC,cA7BqBnW,OAAQC,OAAME,WAAUD,OAAMa,YAC7Bb,EAAKwB,QAAQ0U,MAAKzS,GAAUA,EAAO8H,QAAQ2K,MAAKC,GAC9D,IAAyB,QAAE3I,SAAS2I,EAAO9S,MAAMsN,gBACpD,IAAyB,QAAEnD,SAAS2I,EAAO9S,MAAMsN,gBACjD,IAA0B,SAAEnD,SAAS2I,EAAO9S,MAAMsN,gBAClD,IAA4B,WAAEnD,SAAS2I,EAAO9S,MAAMsN,gBACpD,IAA2B,UAAEnD,SAAS2I,EAAO9S,MAAMsN,gBACnD,IAA0B,SAAEnD,SAAS2I,EAAO9S,MAAMsN,gBAClD,IAAyB,QAAEnD,SAAS2I,EAAO9S,MAAMsN,qBAEnC1Q,EAASmW,YAAYC,WAAY,IAoBpDC,MA9CaxW,OAAQC,OAAME,WAAUD,OAAMa,QAAO8F,YAClD,MACMV,QAAiBvF,SAASX,EAAK,GAAGmB,oBAClCqV,cAAcC,qBAAqBvQ,EAAUU,GAAO,GAC1D,MAAM0D,QAAc3J,SAASuF,EAASwQ,OAAO9V,MACvCwD,EAAYpE,EAAK,GAAGC,KAAKiO,OAAOtM,OAAO0B,MACvCqT,EAAYC,MAAMC,KAAKvM,EAAMgD,YAAY3G,OAAOmQ,UAEhDC,QArBPhX,eAAyCiX,EAAgB1M,EAAOlG,EAAW6S,EAASC,GACnF,MAAMC,QAAyB,QAAiBH,EAAgB1M,EAAMhF,KAAK5D,KAAM4I,EAAMhF,KAAKJ,SAAUd,EAAW6S,EAASC,GAC1H,IAAKC,EAAkB,OAAO,EAC9B,MAAMC,QAIPrX,eAA+CiX,EAAgBK,GAC9D,OAAOL,EAAehV,QAAO4E,GAEU,GADtBA,EAAM9F,MAAMwW,SACbC,IAPwBC,YASzC,CATyCA,CAAgCL,GACxE,OAAKC,IAAkC,CAExC,CAeiCK,CAA0Bd,EAAWrM,EAAOlG,EAAW8B,EAASG,EAAGH,EAASI,GAC5G,IAAKyQ,EAAmB,OAAO,EAE/B,MAAMW,QAiBP3X,eAA+B4W,EAAWgB,GACzC,IAAIC,EAAW,GACXhX,EAAO,GACX,IAAK,IAAIsC,EAAE,EAAGA,EAAIyT,EAAUrV,OAAQ4B,IACnC2U,QAAQC,IAAI,gBACZD,QAAQC,IAAInB,EAAUzT,IACtBtC,EAAO+V,EAAUzT,GAAGpC,MAAMF,MACA,GAArB+W,IAAuD,GAA7BhB,EAAUzT,GAAGwK,cACjB,GAAtBiK,GAAwD,GAA5BhB,EAAUzT,GAAGwK,eAC7CT,KAAK8K,OAAOC,gBAAgBC,UAAW,CAAC5O,WAAY,iBAAkBzI,SACtEgX,EAAS3Q,KAAKrG,IAGhB,OAAOgX,CACR,CA/BgCM,CAAgBnB,EAAmBnQ,EAAM4K,SAAS9D,mBAC3ExH,EAAS8B,OAAO,CACrB,6CAA8C0P,GAC9C,GCFWS,EAAS,CACrB,gBATuBpY,OAAQqY,UAAStX,QAAO8F,QAAOyR,YAAWpY,OAAMD,OAAMsY,QAAOpY,eACpF,GAA6D,SAAzDF,EAAK,GAAGuY,WAAW,GAAGzX,MAAMoN,OAAOsK,QAAQ3W,KAAKyB,MAAkB,CACrE,MAAMiF,OAtBoBxI,OAAOiL,IAC3B,CACNlC,KAAM,mCACN3F,KAAM,iDACN6H,OAAQA,EACRQ,QAAS,CAAC,CAACN,IAAK,+CAAgDC,KAAMC,MAAMC,oBAAoBoN,OAAQnV,MAAO,CAAC,KAAM,SAAY,KAClI,sBAAuB,WACvB,4BAA4B,EAC5B,4BAA6B,CAAC,YAAa,WAAY,YAAa,UACpE,sBAAsB,EACtBoV,UAAU,IAYeC,CAAoB3Y,EAAK,GAAGC,KAAKW,YACpDI,QAAQmH,SAASC,YAAY,gBAAiB,CAAEM,UAAW1I,EAAK,GAAGuY,WAAW,GAAGzX,MAAMF,KAAMa,QAAS,CAAC8G,UAVzFxI,OAAO6Y,IACMC,MAAMC,KAAK,uBAAuB,CAACC,EAAYC,KAChF,MACMC,EAAkBC,OADF,EAAIN,EAAY,IACU,aAChDI,EAAWG,MAAQ,CAACF,EAAe,GACnC,EAMMG,CAAcpZ,EAAK,GAAGqZ,SAAST,UACtC,ICyEKU,EAAoBvZ,MAAOc,EAAWuD,EAAWtD,EAAOuD,KAC7D,MAAMkV,EAAQ,CACb3S,MAAO,CAAEkC,KAAK,gBACdhI,MAAO,CAAEgI,KAAK,iBAETrE,QAAiB,QAAiB,+FAAgG,EAAG,EAAG5D,EAAWuD,EAAWC,GAC9JmV,QAAuB9U,SAAS4P,QAAQ,CAACjO,EAAG5B,EAAS4B,EAAGC,EAAG7B,EAAS6B,GAAIiT,EAAM3S,MAAMkC,UAtEhE/I,OAAOwZ,EAAOE,EAAmBC,KAC3D,MAAMxP,OAhCiBnK,OAAO0Z,EAAmBC,KAC1C,CACN9S,MAAO,CACN,YAAewE,MAAMuO,oBAAoBC,MACzC,MAAS,EACT,MAASF,GAEV5Y,MAAO,CACN,2BAA4B2Y,KAwBRxH,CAAgBwH,EAAmBC,GACzD,OAAOtH,YAAYlI,EAASqP,EAAK,EAoEqEM,CAAmBN,EAAOzY,EAAMoN,OAAO4L,WAAWC,OAAQ1V,EAAYmN,SAASwI,YApFzJja,OAAOc,IAC5B,CACNyP,IAAKvQ,MAAOmG,EAAS8B,EAAOpB,KAgBF7G,OAAOmG,EAAU8B,EAAQpB,EAAOqT,KAC3D,MAAM5I,EAAQ,OACRhN,QAAoB1D,SAASsZ,IACnC,IAAI7E,UACF1R,SACC+R,KAAK,+CAA+CpE,KACpDE,MAAM,KACNgE,QAAQ,GACRG,WAAWrR,GACXyR,cACAC,mBAAmB,MACpBrS,SACC+R,KAAK,8CAA8CpE,KACnDE,MAAM,KACNmE,WAAWrR,GACXyR,cACAb,OAAO,KACPM,QAAQ,GACRQ,mBAAmB,MACpBrS,SACC+R,KAAK,+CAA+CpE,KACpDE,MAAM,KACNgE,QAAQ,GACRG,WAAWrR,GACXyR,cACDN,MAAK,EAxCL0E,CAAoBhU,EAAU8B,EAAQpB,EAAO/F,SACvC6D,SAASI,KAAK,KAAI,EAEzB2L,KAAM1Q,MAAOmG,EAAUU,KAqDO7G,OAAOmG,EAAUU,MAEhD,IAAIwO,UACFC,YACCC,GAAG1O,GACHqO,OAAO,KACRvR,SACC+R,KANmB,wBAOnBC,WAAW,CAACrP,EAAGH,EAASG,EAAGC,EAAGJ,EAASI,IACvCiL,MAAM,KACNgE,QAAQ,GACTC,MAAK,EA/DL2E,CAAwBjU,EAASU,EAAK,IA6E2JwT,CAAqBvZ,QAzE9Ld,OAAOe,IAC1B,CAAC+Q,iBAAkB/Q,IAwEgNuZ,CAAmBvZ,IAC7P,OAAO0Y,EAAe,EAAC,EAWXc,EAAe,CAC3B,gBAVuBva,OAAQqY,UAAStX,QAAO8F,QAAOyR,YAAWpY,OAAMD,OAAMsY,QAAOpY,eACpF,GAAmB,SAAfF,EAAK,GAAG0K,KAAuC,eAArB1K,EAAK,GAAGua,gBAC/B,QAAqBzZ,OACrB,CACN,MAAM0Z,OAhGiBza,OAAOc,EAAWuD,EAAWtD,EAAOuD,KAC5D,MAAMmV,QAAuBF,EAAkBzY,EA+FqB,KA/FCC,EAAOuD,GAE5E,OADqBgB,OAAOiF,MAAMgD,YAAY3G,OAAOwG,IAAIqM,GACrC5Y,MA6FY6Z,CAAiBza,EAAK,GAAGa,UAAW,EAAMC,EAAO8F,QAlBtD7G,OAAOya,EAAkBE,KACpD,MAAMC,QAAsBha,SAAS+Z,SAC/B,QAAwBC,EAAeH,QA9BxBza,OAAOe,EAAO0Z,KAClBvN,KAAKkG,MAAMtK,MAAKoK,GAAQA,EAAK/G,IAAMe,KAAK2N,SAAQxH,eAE1DjL,GAAOC,YAAY,mCAAoCtH,EAAO0Z,GAErE,MAAMK,EAAkChC,MAAMvD,GAAG,eAAe,CAAC/H,EAAUyF,EAAQ/B,KAClF,GAAI1D,EAAS3M,MAAQ4Z,EAAkB,CACtC3B,MAAMiC,IAAI,iBAAkBD,GAC5B,MAAM9Z,EAAcD,EAAMW,QAAQoH,MAAKnF,GAAyB,iBAAfA,EAAOoF,OACxD,IAAK/H,EAAY,OAAO,EACxBA,EAAWgI,QACZ,IACA,EAmBKgS,CAAcJ,EAAeH,EAAgB,EAgB5CQ,CAAoBR,EAAkB5T,EAAM4K,SAAS1Q,MAAMF,KAClE,I,OC7GM,MCgCDiC,EAAgBoY,IACrB,OAAQA,GACP,IAAK,iBACJ,MAAO,+CAER,IAAK,kBACJ,MAAO,4CAET,EAEKC,EAAuBnb,MAAOoB,EAAcwL,EAAgBlE,EAAgB0S,EAAU9O,KAC3F,MAAOhG,EAAGC,SAAW8U,EAAmBja,EAAcwL,EAAgBN,GAChEgP,EAAc,CAAC,EAAKhV,EAAG,EAAKC,EAAG,OAAU,CAAC,OAAU,GAAI,IAAO,IAAK,YAAe,MAClFgV,SAAwBnT,GAAOC,YAAY,wBAAyBiT,IACpE3X,SAAgB,QAAiB,CAAC+E,QA9Cd1I,OAAO6N,EAAY2N,KACvC,CACNzS,KAAM,WACN3F,KAAM,4CACN6H,OAAQ4C,EACRpC,QAAS,CAAC,CAACN,IAAK,gBAAiBC,KAAM,EAAG7H,MAAO,sDACjD,kCAAmCiY,EACnC,sBAAsB,EACtB,4BAA6B,CAAC,YAAa,YAC3C,sBAAuB,QACvB,4BAA4B,EAC5B7C,UAAU,IAmCqD8C,CAAoBL,EAAUG,EAAeG,WD9CvE1b,OAAOgG,EAAOM,EAAGC,EAAGoV,EAAuBC,EAAeC,EAA4BlQ,KAC5H,MAAMmQ,EAA4BhD,MAAMvD,GAAG,2BAA4BwG,IACtE,MAAM5V,EAAW4V,EAAatK,SACxBuK,EAAa7V,EAAStC,OAAOgI,OAAOZ,SAAU,EAC9CgR,EAAqB9V,EAAStC,OAAOgI,OAAOE,YAAc,EAChE,IAAKiQ,GAAcC,EC0CkC,ED1CE,OAAO,EAC9D,MAAMhR,EAASvB,aAAavD,EAAStC,MAAMgI,MAAMZ,QACjD,GAAI0Q,EAAsBjO,SAASzC,EAAOlC,OAAkC,OAAzB4S,EAAgC,CAClF,MAAMzP,EAAiB,oBAAsB/F,EAASgG,GAChD+P,EAAwB5W,OAAOC,KAAK8G,gBAAgBH,GAAgBI,UAE1E,KADyBX,EAAsBa,aAAa0P,GAAuBva,KAAO,GACnE,OAAO,EAE9Bwa,YAAW,KACV/T,GAAOC,YAAY,4BAA6BlC,EAAStF,KAAI,GAC3D,IACJ,UAIwCb,OAAO4M,EAAgBkP,KAChE,MAAMM,EAA+BtD,MAAMvD,GAAG,sBAAsB,CAAC5R,EAAQsP,KACxEtP,EAAO9C,MAAQ+L,EAAe/L,OACjCiY,MAAMiC,IAAI,yBAA0Be,GACpChD,MAAMiC,IAAI,qBAAsBqB,GACjC,GACA,EARKC,CAA2BR,EAA4BC,EAAyB,EC6BhFQ,CAAwB,EAAIhW,EAAGC,EAAG,CAAC,YAAa,EAAG5C,EAAQ2I,EAAS,EAErE,EAAsBtM,MAAOsG,EAAGC,EAAGiL,EAAO3K,KAC1CA,GASJ,IAAIwO,UACF1R,SACC+R,KAAK,sCACLlE,MAAMA,GACNgE,QAAQ,GACR+G,SAAS1V,GACV4O,QAdF,IAAIJ,UACF1R,SACC+R,KAAK,sCACLlE,MAAMA,GACNgE,QAAQ,GACRG,WAAW,CAAC,EAAKrP,EAAG,EAAKC,IAC1BkP,MASH,EA4BK4F,EAAqBrb,MAAOoB,EAAcwL,EAAgBR,KAC/D,MAAMjG,QAAiBvF,SAASQ,GAIhC,aAHM,EAAoB+E,EAASG,EAAGH,EAASI,EAAG,GAAG,SAC/C,QAAmBJ,EAASG,EAAGH,EAASI,EAAG,WAAY6F,GAC7DQ,EAAe5D,SACR,CAAC7C,EAASG,EAAGH,EAASI,EAAC,EAGlBiW,EAAW,CACvB,gBAzBuBxc,OAAQqY,UAAStX,QAAO8F,QAAOyR,YAAWpY,OAAMD,OAAMsY,QAAOpY,eACpF,GAAmB,SAAfF,EAAK,GAAG0K,KAAuC,eAArB1K,EAAK,GAAGua,WAErC,SAboBxa,OAAOob,IAE5B,GAAkB,0BADC,QAAsB,CAAC,iBAAkB,mBAAoB,CAACrY,MAAO,IAAKC,OAAQ,KAAM,gCAAiCF,EAAc,GAAI,KACrJS,MAA4B,CACpC,MAAM1B,EAASqL,KAAKgG,KAAKuJ,QAAQC,QAGjC,aAFM,QAAiB,CAAC7a,EAAO4P,SAAS1Q,MAAMF,WA1DrBb,OAAO6N,IAC1B,CACN9E,KAAM,WACN3F,KAAM,4CACNuZ,SAAU,CAACC,OAAQ,KACnB3R,OAAQ4C,EACRpC,QAAS,CACR,CAACN,IAAK,gBAAiBC,KAAMC,MAAMC,oBAAoBoN,OAAQnV,MAAO,CAAC,MACvE,CAAC4H,IAAK,mBAAoBC,KAAMC,MAAMC,oBAAoBoN,OAAQnV,MAAO,CAAC,KAC1E,CAAC4H,IAAK,wBAAyBC,KAAMC,MAAMC,oBAAoBoN,OAAQnV,MAAO,CAAC,OAEhF,sBAAuB,QACvB,4BAA4B,EAC5B,4BAA6B,CAAC,YAAa,YAC3C,sBAAsB,EACtBoV,UAAU,IA2CiDkE,CAAmBzB,UACxE,EAAoB,EAAG,EAAGvZ,EAAO4P,SAAS1O,MAAOlB,IAChD,CACR,CACA,OAAO,GAIqBib,CAAc5c,EAAKW,MAC3B,OAAO,OACpB,GAAmB,SAAfZ,EAAK,GAAG0K,KAAuC,qBAArB1K,EAAK,GAAGua,UAAkC,CAC9E,MAAMuC,EAAa,oBAAsB9c,EAAK,GAAG8c,WAC3C3Q,EAAoB9G,OAAOC,KAAK8G,gBAAgB0Q,GAAYzQ,UAC5DM,EAAiB7L,EAAMW,QAAQoH,MAAKnF,GAAyB,qBAAfA,EAAOoF,aACrDoS,EAAqBlb,EAAK,GAAGmB,aAAcwL,EAAgB/F,EAAM4K,SAAS1Q,MAAMF,KAAMX,EAAKW,KAAMuL,EACxG,KAAO,IAAe,OAAXnM,EAAK,GAIf,OAAO,EAJsB,CAC7B,MAAM+c,EAAU/c,EAAKA,EAAKsB,OAAS,SAC7B6G,GAAOC,YAAY,wBAAyB2U,EAAQC,OAAOpZ,MAAMyV,SAASkD,SAAShB,QAC1F,CAEA,ICtEK,EAAgBN,IACrB,OAAQA,GACP,IAAK,cACJ,MAAO,kDAER,IAAK,kBACJ,MAAO,iDAET,EAuDK,EAAgBlb,MAAOkd,EAAYC,EAAeC,KACvD,MAAMtb,QAAa,QAAsB,CAAC,cAAe,mBAAoB,CAACiB,MAAO,IAAKC,OAAQ,KAAM,oCAAqC,EAAc,GAAI,IACzJqa,QAAoBzc,SAASsc,GACnC,GAAkB,mBAAdpb,EAAKyB,MAzFmBvD,OAAOqd,EAAaF,EAAeC,KAC/D,MAAMvb,EAASqL,KAAKgG,KAAKuJ,QAAQC,SAC1BY,EAAwBC,QA8ERvd,OAAO6G,EAAOuW,IAI9B,CAFwBvW,EAAM4K,SAAS1Q,MAAMW,QAAQO,QAAO0B,GAAUA,EAAOE,MAAM,YAAYyV,SAASkE,UAAY,GAAK7Z,EAAOE,MAAM,YAAYyV,SAASkE,WAAaJ,IAClJvW,EAAM4K,SAAS1Q,MAAMW,QAAQO,QAAO0B,GAAUA,EAAOE,MAAM,YAAYyV,SAASkE,UAAYJ,KAjF5DK,CAAgB5b,EAAQub,GAC/EM,OAQoB1d,OAAOqd,EAAaF,EAAeG,EAAwBC,KAC5DF,EAAYtc,MAAMoN,OAAOwP,UAAUR,GAAeS,IAC3E,IACIC,EADAC,EAAM,GAENC,EAAkB,EACtB,IAAK,IAAI5a,EAAI,EAAGA,EAAIoa,EAAqBhc,OAAQ4B,IAChD4a,EAAkBR,EAAqBpa,GAAGU,MAAM,YAAYyV,SAAST,UACrEgF,QAAoBR,EAAYtc,MAAMid,gBAAgBb,GAClDU,EAAYI,MAAQF,EAAkB,IAAID,EAAI5W,KAAKqW,EAAqBpa,IAE7E,OAAOma,EAAuBY,OAAOJ,GAAK1W,KAAIzD,GAAUA,EAAOwI,IAAE,EAlBhCgS,CAAmBd,EAAaF,EAAeG,EAAwBC,GACxGG,EAAmBtW,IAAIgB,GAAOC,YAAY,wBAAyBxG,EAAOd,MAAO2c,EAAmBva,IAAG,EAsFtGib,CAAqBf,EAAaF,EAAeC,OAC3C,IAAkB,eAAdtb,EAAKyB,MAIf,OAAO,EAJgC,CACvC,MAAM8a,OA3DoBre,OAAOqd,IAClC,MAAMpR,EAAoB3G,OAAOiF,MAAM1E,UAAU5D,QAAOkE,GAAYA,EAAStC,MAAMgI,MAAME,WAAa,IAChGuS,GAA2B,QAAoBrS,EAAmB3G,OAAOiF,MAAMhF,KAAK5D,KAAM2D,OAAOiF,MAAMhF,KAAKJ,SAAU,IAAKkY,EAAY/W,EAAG+W,EAAY9W,GAC5J,IAAIgY,EACAC,EAAc,GAClB,IAAK,IAAIrb,EAAI,EAAGA,EAAImb,EAAyB/c,OAAQ4B,IACpDob,QAAmB3d,SAAS0d,EAAyBnb,GAAGU,MAAMgI,MAAMZ,QACpEuT,EAAYtX,KAAKqX,GAElB,YAE4Bve,OAAOye,EAAOH,KAC1C,MAAMI,EAAkBJ,EAAyBK,MAAK,CAACvY,EAAGC,KACzD,MAAMuY,EAAQlV,aAAatD,EAAEvC,MAAMgI,MAAMZ,QACnC4T,EAAQnV,aAAarD,EAAExC,MAAMgI,MAAMZ,QACzC,OAAO2T,EAAM7V,KAAK+V,cAAcD,EAAM9V,KAAI,IAErCgW,EAAqBN,EAAMrX,KAAI,CAAClH,EAAMiD,KAC3C,MAAM6b,EAAgB1Z,OAAOiF,MAAM3D,QAAQkC,MAAKjC,GAASA,EAAM9F,MAAMF,MAAQX,EAAKyW,OAAO9V,QAAOkI,MAAQ,UAExG,MAAO,CAACjH,KAAM,QAASuB,MADLnD,EAAK6I,KAAO,SAAWiW,EACF,IACrCL,MAAK,CAACvY,EAAGC,IAAMD,EAAE/C,MAAMyb,cAAczY,EAAEhD,SAa1C,OAAOqb,SAZa/Z,SAASsa,KAC5B,CACCC,OAAQH,GACP,CACDzc,MAAO,4BACPoB,OAAQ,IAAIzD,KAAW6X,QAAQC,OAAO9X,GAAOkf,GAAGC,cAAcC,KAAK,UAAS,EAC5EnO,QAAS,CACRnO,MAAO,QACPC,OAAQ,WAIoBkc,OAAOlP,SAAQ,GAAK,EAzBtCsP,CAAqBd,EAAaF,EAAwB,EAkDvCiB,CAAoBlC,GAtF9Brd,OAAOqd,EAAaF,EAAeC,EAAaiB,MAE5CjB,EADPiB,EAAiBxa,MAAMgI,MAAME,gBA8DpB/L,OAAOqd,EAAaF,EAAevR,KAC/D,IACIiS,EADAC,EAAM,GAEN0B,EAAoB,EACxB,IAAK,IAAIrc,EAAI,EAAGA,EAAIyI,EAAmBrK,OAAQ4B,IAC9Cqc,EAAoB5T,EAAmBzI,GAAGU,MAAMgI,MAAME,WACtD8R,QAAoBR,EAAYtc,MAAMid,gBAAgBb,GAClDU,EAAYI,MAAQrS,EAAmBzI,GAAGU,MAAMgI,MAAME,WAAa,IAAI+R,EAAI5W,KAAK0E,EAAmBzI,IAExG,OAAO2a,GAtEoD2B,CAAqBpC,EAAaF,EAAe,CAACkB,IAAqB,CAACA,IACjHjX,KAAIjB,GAAYiC,GAAOC,YAAY,4BAA6BlC,EAAStF,OAAK,EAoF/F6e,CAAerC,EAAaF,EAAeC,EAAaiB,EACzD,CAEA,GASYsB,EAAc,CAC1B,gBARuB3f,OAAQC,OAAMC,OAAMC,eAC3C,MAAM+c,EAAajd,EAAK,GAAGa,UACrBqc,EAAgBld,EAAK,GAAGc,MAAMoN,OAAO4L,WAAW6F,aAChDxC,EAAcnd,EAAK,GAAG8L,WAAa,EAAI,EAAI9L,EAAK,GAAG8L,WACzD,EAAcmR,EAAYC,EAAeC,EAAW,GChGxCyC,EAAc,CAC1BC,KARY9f,OAAQE,OAAMC,WAAUF,WACnBC,EAAKwB,QAAQoH,MAAKnF,GAAUA,EAAO8H,QAAQ3C,MAAKuN,GAAU,IAAyB,QAAE3I,SAAS2I,EAAO9S,MAAMsN,qBAE3H1Q,EAASmW,YAAYC,WAAY,EAClC,GCHYwJ,EAAc,CAC1B3d,QAAW,CAAC,uBAAwB,sBAAuB,mBAAoB,sBAC/EyQ,aAAiB,CACX,iDACA,8CACA,4CACA,iDAENmN,WAAc,8BACdC,iBAAkB,6FAClBlO,WAAc,CAAC,kBAAmB,eAAgB,aAAc,mBAEpDmO,EAAkB,CAC9BC,eAAiB,CACX,6EACA,+EAEN/d,QAAW,CAAC,oBAAqB,sBACjCyQ,aAAe,CACT,+CACA,gDAENmN,WAAc,8BACdjO,WAAc,CAAC,2BAA4B,8B,aCtB5C,MAOMqO,EAAqBld,IAC1B,MAAMmd,EAAQ,EAAEje,QAAQ4N,QAAQ9M,GAC1BnC,EAAQmM,KAAKyE,OAAO7I,MAAK/H,GAASA,EAAMgI,MAAQ,EAAEgJ,WAAWsO,KAEnE,OADatf,GAAOuf,MAAO,IACT,EAAEzN,aAAawN,EAC1Bjd,ECdFmd,EAAoBvgB,MAAOC,IAChC,MAAMugB,QAAuBC,EAAkBxgB,EAAK,GAAGc,MAAM8F,OACvD6Z,QAAuBC,EAAkB1gB,EAAK,GAAG8c,cAAe,EACtE,OAAK2D,EACWF,EAAehU,aAAakU,GAC7B/e,KAAO6e,EAAe7e,KAFT,CAESA,EAEhC8e,EAAoBzgB,MAAOwN,IAChC,MAAM1H,EAAWR,OAAOiF,MAAMhF,KAAK5D,KACnC,IAAIif,EAAM,IAAIrU,IACVsU,EAAW,GACf,IAAK,IAAI1d,EAAI,EAAGA,EAAIqK,EAASxK,OAAQG,IACpC,IAAK,IAAI8D,EAAI,EAAGA,EAAIuG,EAASzK,MAAOkE,IACnC4Z,GAAYrT,EAASlH,EAAIR,EAAS3C,GAAG2d,WAAa,KAAOtT,EAASjH,EAAIT,EAASmB,GAAG6Z,WAClFF,EAAIG,IAAIF,GAGV,OAAOD,GAKFD,EAAoB3gB,MAAO+c,IAChC,MAAMiE,EAAgB,oBAAsBjE,EAC5C,OAAOzX,OAAOC,KAAK8G,gBAAgB2U,GAAe1U,WA2B7C2U,EAAyBjhB,MAAO8S,EAASoO,EAAWC,EAAkBC,EAAYC,EAAcC,EAAcC,KAClHL,EAAUjZ,OAAO,CAAC,oBAAqBkZ,EAAmBC,IACtDG,EAAe,GAAKD,UACjB3c,SAASI,KAAK,KACpByc,EAAaH,SACP1c,SAASI,KAAK,KACyB,OAAzCsc,EAAatgB,MAAMoN,OAAOsT,OAAO9f,MAAiB0f,EAAate,OAAS,GAAKse,EAAate,OAAS,GACtGse,EAAatgB,MAAMkH,OAAO,CAAC,qBAAsByZ,OAAOC,KAAKC,OAAOC,MAAMC,YAAYP,EAAe,KAEtGF,EAAapZ,OAAO,CAAC,MAASoZ,EAAate,MAAQ,EAAG,OAAUse,EAAate,MAAQ,KAEtFse,EAAapZ,OAAO,CAAC,cAAe6K,GAAQ,EAExCiP,EAAuB/hB,MAAOe,EAAOihB,EAAaX,EAAcH,EAAWC,KAChF,MAAMc,GAAwBlhB,EAAMoN,OAAO4L,WAAWmI,GAAG3e,MAAQye,GAAejhB,EAAMoN,OAAO4L,WAAWmI,GAAG1a,IAAO,IAC5G+Z,EAAeG,OAAOC,KAAKC,OAAOC,MAAMC,YAAY9R,QAAQqR,EAAatgB,MAAMoN,OAAOsT,OAAO9f,MACnG,IAAI2f,GAAe,EACf,IAAMW,GAAuBA,EAAsB,GACtDhB,EAAuBlgB,EAAM8C,MAAM,YAAYse,aAAaC,KAAMlB,EAAWC,EAAkB,IAAKE,EAAcC,EAAcC,GACtH,IAAMU,GAAuBA,EAAsB,IAC7DX,EAAeC,EAAe,EAC9BN,EAAuBlgB,EAAM8C,MAAM,YAAYse,aAAaE,KAAMnB,EAAWC,EAAkB,GAAKE,EAAcC,EAAcC,IACtH,IAAMU,GAAuBA,GAAuB,IAC9DX,EAAeC,EAAe,EAC9BN,EAAuBlgB,EAAM8C,MAAM,YAAYse,aAAaG,KAAMpB,EAAWC,EAAkB,IAAKE,EAAcC,EAAcC,GACjI,EAEKC,EAAexhB,MAAOqhB,KAC3B,IAAIhM,UACF1R,SACC+R,KAAK2L,EAAatgB,MAAM8C,MAAM,YAAYse,aAAalN,eACvDU,WAAW0L,GACZ5L,MAAK,ECrFK3L,EAAc,CAC1B/B,SAAa,cACbuB,WAAe,eACfiZ,mBAAqB,yBCiChBC,EAAoB,CAACC,EAAeC,KACzC,MAAM/e,EAAS8e,EAAc1hB,MAAMW,QAAQoH,MAAKnF,GAC/C,EAAEgf,uBAAuBjV,SAAS/J,EAAOoF,QAG1C,OADepF,GAAQsH,QAAU,CAAC,IACjByX,EAAe3hB,MAAMF,MAgBjC+I,EAAgB5J,MAAO6N,EAAYzM,KAEjC,CACN2H,KAAM,eACN3F,KAAM,yDACN6H,OAAQ4C,EACR8O,eALsBiG,EAAkBxhB,GAMxCqK,QAAS,CAAC,CACRN,IAAK,gDACLC,KAAMC,MAAMC,oBAAoBoN,OAChCnV,MAAO,CAAC,+DACP,CACD4H,IAAK,sCACLC,KAAMC,MAAMC,oBAAoBoN,OAChCnV,MAAO,CAAC,+DACP,CACD4H,IAAK,6CACLC,KAAMC,MAAMC,oBAAoBoN,OAChCnV,MAAO,CAAC,+DACP,CACD4H,IAAK,yCACLC,KAAMC,MAAMC,oBAAoBoN,OAChCnV,MAAO,CAAC,gEAEVoV,UAAU,IAGNiK,EAAoB5iB,MAAOoB,IAChC,MAAM+E,QAAiBvF,SAASQ,GAGhC,aAF0BR,SAASuF,EAAStC,MAAM,YAAY8E,YAC3BjH,QAAQoH,MAAKnF,GAAUA,EAAOoF,MAAQ,EAAEwZ,qBACrD5F,UAEjBkG,EAAqB,CAACC,EAASC,EAASlhB,EAAQ1B,KACrD,MAAM6iB,EAAiB5d,KAAKoC,IAAIsb,EAASC,GACzC,OAAO9hB,QAAQgiB,WAAW,MACzBphB,EACAmhB,EACA,CAACE,QAAQ,IACRjhB,QAAO4E,GACRA,EAAM9F,MAAMF,MAAQV,EAASgjB,eAAepiB,MAAMF,OACjDU,OAAS,GCjGC6hB,EAAqB,CACjCC,YAAc,wEACdC,aAAe,4DACfC,gBAAiB,kCACjBC,WAAc,gCACdC,cAAgB,qBAChBC,UAAc,WACdC,oBAAoB,CAAC,yBAA0B,iBAAkB,sBAAuB,yBAA0B,MAAO,SACzHC,YAAc,CAAC,aAAc,aAAc,gBAC3C5D,WAAc,4BACd6D,YAAc,uCACdC,YAAc,CAAC,MAAO,MAAO,QAAS,OAAQ,QAC9CC,YAAc,4CAGFC,EACU,CACrBC,aAAgB,CAAC,kBAAmB,cAAe,kBACnDC,gBAAkB,CAAC,cAAe,eAAgB,sCAClDC,QAAY,CAAC,cAAe,eAAgB,aAC5CC,SAAa,CAAC,oBAAqB,gCAAiC,0BACpEC,iBAAmB,CAAC,WAAY,cAAe,aAAc,sBAC7DC,QAAY,CAAC,MAAO,eAAgB,WAAY,iCAChDC,mBAAoB,CAAC,WAAY,cAAe,aAChDC,WAAc,CAAC,YAAa,kBAAmB,eAKpCC,EAAyB,CACrCC,WAAe,CAAC,eAAgB,eAAgB,gBAAiB,aAAc,cAC/EC,iBAAmB,qCACnB5c,SAAa,yBACbiY,WAAe,0BACf4E,aAAiB,CAAC,aAAc,cAChCC,WAAe,CAAC,eAAgB,eAAgB,kBCxB3CC,EAAiB9kB,MAAO+kB,EAAOC,EAAYzkB,EAAY0kB,KAC5D,MAAMC,QAAyBlhB,EAAoB+gB,GAC7CI,QAA0Btd,EAAqBqd,EAAkBH,EAAM/c,YACvEod,QAAiBC,EAAiBN,EAAOC,EAAYG,EAAmBF,GAC9E,aAAa1kB,EAAW+kB,wBAAwB,OAAQ,CAACF,GAAS,EAsF7DphB,EAAsBhE,MAAOE,GACjBA,GAAM2D,OAEP3D,EAAK2D,MAAM,aAET3D,EAAK2D,MAAM,YAAYI,eAElC/D,EAAK2D,MAAM,YAAYI,eALR,GAOjB,EAAoB,CAACf,EAAQqiB,IACpBA,EAAOzc,MAAKic,GAASA,EAAMhc,KAAK8H,eAAiB3N,EAAO2N,gBACzDyP,IAWR+E,EAAmBrlB,MAAO+kB,EAAOC,EAAYG,EAAmBF,KACrE,MAAOO,EAAOC,QAxGWzlB,OAAO+kB,EAAOC,IAChB,gBAAnBA,EAAWljB,MAAwC,eAAdijB,EAAMhc,KACvC,CAAC,EAAG,CAAC,aAAc,YACG,mBAAnBic,EAAWljB,MAA2C,eAAdijB,EAAMhc,KACjD,CAAC,EAAG,CAAC,aAAc,YAEnB,CAACgc,EAAM5W,OAAOqX,MAAOT,EAAM5W,OAAOsX,OAAOrM,OAkGnBsM,CAAkBX,EAAOC,GACvD,OAAO3S,YAAYsT,UAAUZ,EAAMa,UAAS,IAAS,CACpD,2DAA4DZ,EAAWnkB,KACvE,iDAAkDkkB,EAAMhc,KACxD,iDAAkDgc,EAAMlkB,KACxD,2CAA4C,QAC5C,iDAAkDokB,EAClD,gCAAiCE,EACjC,sBAAuBM,EACvB,eAAgBD,EAChB,0BAA2B,UACzB,CAACjT,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,GAAK,EAEnE7K,EAAuB7H,MAAO8H,EAAYE,KAC/C,MAAMC,EAASH,EAAWvG,OAAS,EAC/BuG,EAAa,kFACb,iFACJ,MAAkB,YAAdE,EACIC,EAAS,oFAEVA,GAmBF7H,EAAqBJ,MAAOK,IACjC,MAAM2kB,QAAmBpkB,SAASP,EAASwD,MAAM2F,SAASwa,qBAAqB6B,sBACzExF,EAAQhgB,EAASwD,MAAM2F,SAASwa,qBAAqB8B,WAC3DC,EAAsBf,EAAY3E,EAAK,EAOlC0F,EAAwB/lB,MAAOglB,EAAY3E,KAChD,MAAMlW,EAAU6a,EAAWnhB,MAAM2F,SAASwa,qBAAqBuB,OAAOne,KAAI,CAAC2d,EAAO5hB,IAC7EA,GAAKkd,EACD,CAACtX,KAAMgc,EAAMhc,KAAMid,WAAW,GAE9BjB,UAGiBC,EAAW/c,OAAO,CAC3C,6CAA8CkC,GAC9C,EAEIC,EAA0BpK,MAAOe,EAAOb,KAC7C,MAAMwB,OA7JsB1B,OAAOe,EAAOb,KAC1C,MAAMsO,EAAkBtO,EAAKiO,OAAOC,WAAWC,eAAiBnO,EAAK2D,MAAM0K,eAAeF,cACpFI,EAAgD,YAA/BvO,EAAKiO,OAAOnG,WAAWlG,KAC9C,OAAI0M,IAAoBC,EAChB,OAAOxN,QAAQC,uBAAuBH,SA2DxBf,OAAOE,IACTA,EAAKwB,SAAW,IACjBO,QAAO0B,IACzB,MAAMC,EAAaD,EAAOE,OAAOC,KAAKF,aAAc,EAC9CG,EAAmBJ,EAAOE,OAAOC,KAAKC,mBAAoB,EAChE,SAAKH,IAAcG,EACZ,KACF,GAhEOzC,CAAepB,IAAS,EAAC,EAuJhBwO,CAAqB3N,EAAOb,GAC9CwB,EAAQH,OAAS,GAAGG,EAAQ0F,KAAIzD,GAnBd3D,OAAOK,EAAUsD,KACvC,MAAMuH,EAAiB,CAACC,IAAK,uBAAwBC,KAAMC,MAAMC,oBAAoBC,IAAKhI,MAAO,CAAClD,EAASQ,OACrG2K,EAAiB,IAAI7H,EAAO8H,QAASP,GAC3CvH,EAAOsE,OAAO,CAAC,QAAWuD,GAAe,EAgBKT,CAAe7K,EAAMyD,IAAO,EC1KrEsiB,EAAmB,CAAC/iB,EAAQxB,IACZA,EAAQoH,MAAKnF,GAAUA,EAAOoF,MAAQ7F,IACvCE,KCMf,EAAiBpD,MAAOkmB,EAAW3lB,EAAY4lB,KACpD,MAAMC,QAAmBxlB,SAASslB,EAAUrlB,MACtCqkB,QAAyB,GAAoBkB,GAC7CjB,QAA0B,GAAqBD,EAAkBgB,EAAUle,YAC3Eod,QAAiBiB,GAAYF,EAAUC,EAAYF,EAAWf,GACpE,aAAa5kB,EAAW+kB,wBAAwB,OAAQ,CAACF,GAAS,EAsB7DkB,EAAqBtmB,MAAOumB,EAAsBrmB,EAAMK,KAC7D,MAAMimB,OAfkBxmB,OAAOumB,IAC/B,MAAME,EAAcF,EAAqBnf,KAAIkR,GAAaA,EAAUrN,SAAQyb,WAC5E,aAAa,QAAsBD,EAAa,CAAC1jB,MAAO,IAAKC,OAAQ,KAAM,EAAEwgB,WAAYmD,EAAkB,GAAI,GAAIJ,EAAoB,EAa9GK,CAAiBL,GACpCM,OAZmB7mB,OAAOwmB,EAAYjmB,EAAYgmB,EAAsBrmB,KAC9E,MAAM4mB,QAAqBC,EAAgBP,EAAYjmB,EAAYgmB,EAAsBrmB,GACnF2mB,QAAoB,QAAsBC,EAAc,CAAC/jB,MAAO,IAAKC,OAAQ,KAAM,EAAE6gB,YAAamD,EAAmB,GAAI,IAE/H,MAAO,CAACzjB,MAAO,EAAEugB,YAAY9T,QAAQ6W,EAAYtjB,OAAS,EAAC,EAQjC0jB,CAAkBT,EAAYjmB,EAAYgmB,EAAsBrmB,GACpFgnB,OAPmBlnB,OAAOwmB,EAAYD,EAAsBM,KAClE,MAAOM,EAAcC,SAAoBC,GAAgBb,EAAYD,EAAsBM,GAC3F,aAAaS,GAAeH,EAAc,EAAEpD,YAAa,GAAmBqD,EAAU,EAK5DG,CAAkBf,EAAYD,EAAsBM,EAAYtjB,OAC1F,MAAO,CAACijB,EAAWjjB,MAAOsjB,EAAYtjB,MAAO2jB,EAAY3jB,MAAK,EAmBzDojB,EAAmB,CAACzjB,EAAQR,IACnBA,EAASoG,MAAK5I,GAAQA,EAAK+K,QAAU/H,IACtCE,KAoERokB,EAAoBxnB,MAAO2R,GACzBA,EAAOvK,KAAIrG,IAEjB,MACM0mB,EADiB1mB,EAAM0d,MAAMxc,QAAO/B,GAAqB,SAAbA,EAAK4B,MAAmB5B,EAAKiO,OAAOqX,MAAQ,GAAKtlB,EAAKiO,OAAOqX,OAAS,IACrFviB,QAAO,CAACsiB,EAAQR,KAClD,MAAM2C,EA9BsB,EAAC3mB,EAAOb,KACtC,MAAMynB,EAAoBC,EAAqB7mB,EAAMoN,OAAOoX,QACtDna,EAAOlL,EAAKiO,OAAO0Z,YAAYzc,KACrC,IAAIsc,EAAsB,GACtBxB,EAAY,CAAC,EACjB,IAAK,IAAI/iB,EAAIjD,EAAKiO,OAAOqX,MAAOriB,GAAK,EAAGA,IAC3B,UAARiI,GAA4B,UAARA,EACnBjI,GAAKjD,EAAKiO,OAAOqX,QACpBU,EAAY4B,GAAa/mB,EAAOb,EAAMA,EAAKiO,OAAOqX,OAClDkC,EAAoBxgB,KAAKgf,IAER,QAAR9a,EACNjI,GAAKpC,EAAMoN,OAAOoX,OAAOwC,KAAKvC,QACjCU,EAAY4B,GAAa/mB,EAAOb,EAAMa,EAAMoN,OAAOoX,OAAOwC,KAAKvC,OAC/DkC,EAAoBxgB,KAAKgf,IAGtB/iB,GAAKwkB,IACRzB,EAAY4B,GAAa/mB,EAAOb,EAAMiD,GACtCukB,EAAoBxgB,KAAKgf,IAI5B,OAAOwB,GAOuBM,CAAuBjnB,EAAOgkB,GAC1D,MAAO,IAAIQ,KAAWmC,EAAmB,GACvC,IACH,MAAO,CAACzc,OAAQlK,EAAM8Q,eAAe9I,KAAM3F,KAAMrC,EAAM8Q,eAAeiB,QAAQC,IAAKwS,OAAQkC,EAAW,IAGlGG,EAAwBrC,IAC7B,IACIliB,EADAya,EAAM,GAEV,IAAK,IAAI3a,EAAI,EAAGA,GAAK,EAAGA,IACvBE,EAAQ,QAAUF,EACdoiB,EAAOliB,GAAOmE,IAAM,GAAGsW,EAAI5W,KAAK/D,GAErC,OAAOiC,KAAKoC,OAAOsW,EAAG,EAEjB,EAAoB5C,IACzB,OAAQA,GACP,KAAK,EAAE0I,YAAY,GAClB,MAAO,wEAER,KAAK,EAAEA,YAAY,GAClB,MAAO,yEAER,KAAK,EAAEA,YAAY,GAClB,MAAO,yEAET,EAEKmD,EAAkB/mB,MAAOwmB,EAAYjmB,EAAYgmB,EAAsBrmB,KAC5E,MAAM+nB,EAAiB,EAAI/nB,EAAK2D,OAAO2F,UAAU4Z,oBAAoB8E,WAAa,EAE5EC,EADY5B,EAAqBzd,MAAKwP,GAAaA,EAAUrN,QAAUub,EAAWjjB,QACvDgiB,OAAOne,KAAI2d,GAASA,EAAMS,QAAOvjB,QAAOujB,GAASA,GAASyC,IACrFG,EAAc,IAAI7b,IAAI4b,GAC5B,OAAOtR,MAAMC,KAAKsR,GAAa1B,WAAWtf,KAAIoe,GAAS,EAAE1B,YAAY0B,EAAQ,IAAE,EAE1EwB,EAAqB9L,IAC1B,OAAQA,GACP,KAAK,EAAE4I,YAAY,GAClB,MAAO,yDAER,KAAK,EAAEA,YAAY,GAClB,MAAO,yDAER,KAAK,EAAEA,YAAY,GAClB,MAAO,oDAER,KAAK,EAAEA,YAAY,GAClB,MAAO,kDAER,KAAK,EAAEA,YAAY,GAClB,MAAO,uDAET,EAEKuE,GAAgBroB,SACdkN,KAAKkG,MAAMnR,QAAOiR,GAAQA,EAAKoF,YAAWrW,QAAOiR,GAChD5N,OAAOiF,MAAM3D,OAAOkC,MAAKjC,GAASA,EAAM9F,MAAMF,MAAQqS,EAAKoF,UAAUzX,SAC1EuG,KAAI8L,GAAQA,EAAKoF,YAEfgQ,GAAkBtoB,MAAME,EAAMslB,KACrBtlB,EAAK2D,OAAO2F,UAAU4Z,oBAAoB8E,WAAa,GACtD1C,EAEV,GAAiBxlB,MAAOE,IACTA,EAAKwB,SAAW,IACjBO,QAAO0B,IACzB,MAAMC,EAAaD,EAAOE,OAAOC,KAAKF,aAAc,EAC9CG,EAAmBJ,EAAOE,OAAOC,KAAKC,mBAAoB,EAChE,SAAKH,IAAcG,EACZ,KACF,GAED,GAAsB/D,MAAOE,GACjBA,GAAM2D,OAEP3D,EAAK2D,MAAM,aAET3D,EAAK2D,MAAM,YAAYI,eAElC/D,EAAK2D,MAAM,YAAYI,eALR,GAOjBqjB,GAAiBtnB,MAAOmnB,EAAcpD,EAAa3D,EAAmBgH,KAC3E,MAAMmB,EAAgBpB,EAAaT,WAC7B8B,EAAkBD,EAAcnhB,KAAIlE,IAIlC,CAACpB,KAAM,QAASuB,MADT,uBAFD+jB,EAAWte,MAAKic,GAASA,EAAMhc,MAAQ7F,IAClCE,kDACqEF,QAexF,MAAO,CAACK,MAAOglB,SAZK5jB,SAASsa,KAC5B,CACCC,OAAQsJ,GACP,CACDlmB,MAAOyhB,EACPrgB,OAAQ,IAAIzD,KAAJ,EACRiR,QAAS,CACRnO,MAAO,OACPC,OAAQ,WAI0Bkc,OAAOlP,SAAQ,IAAM,EAErDqX,GAAkBrnB,MAAOwmB,EAAYD,EAAsBkC,KAChE,MACMlD,EADYgB,EAAqBzd,MAAKwP,GAAaA,EAAUrN,QAAUub,EAAWjjB,QAC/DgiB,OAAOtjB,QAAO8iB,GAASA,EAAMS,OAASiD,IAAmB,EAAE9E,oBAAoBjW,SAASqX,EAAMhc,QAGvH,MAAO,CAFOwc,EAAOne,KAAI2d,GAASA,EAAMhc,OAC1Bwc,EAAOne,KAAI2d,IAAkB,CAAChc,KAAMgc,EAAMhc,KAAM3F,KAAM2hB,EAAM3hB,SACtD,EAEf0kB,GAAe,CAAC/mB,EAAOb,EAAMiD,KAClC,MAAM4F,EAAO7I,EAAK6I,KACZyc,EAAQriB,EACRulB,EAAK3nB,EAAMoN,OAAO4L,WAAW4O,QAC7BC,EAAU7nB,EAAMoN,OAAO4L,WAAW6F,aAClCiJ,EAzMgB,EAAC9nB,EAAOb,EAAM0oB,KACpC,MAAME,EAA2C,QAA1B5oB,EAAKiO,OAAO4a,WAC7BC,EAA0C,QAA1B9oB,EAAKiO,OAAO4a,WAClC,OAAKD,GAAmBE,EAEbF,EACHG,SAASloB,EAAMoN,OAAOwP,UAAUiL,GAAShL,KAAOqL,SAASloB,EAAMoN,OAAO+a,QAAQC,KAAKC,QAChFJ,EACHC,SAASloB,EAAMoN,OAAOwP,UAAUiL,GAAShL,KAAOqL,SAASloB,EAAMoN,OAAO+a,QAAQG,KAAKD,aADpF,EAHC,CAKR,EAgMoBE,CAAevoB,EAAOb,EAAM0oB,GAMhD,MAAO,CAAC7f,OAAMyc,QAAOkD,KAAIE,UAASC,cAAaU,KALlCxoB,EAAMoN,OAAO4L,WAAWwP,KAKgBnmB,KAJxClD,EAAKogB,IAIyCzf,KAH9CX,EAAKW,KAG+CmH,WAF9C9H,EAAKiO,OAAOnG,WAAWlG,KAEmC+L,WAD1D9M,EAAMF,KAC8D,EAElF,GAAoB,CAACqC,EAAQR,IACpBA,EAASoG,MAAK5I,GAAQA,EAAK6I,MAAQ7F,IACpCE,KAERomB,GAAiBxpB,MAAOE,IAC7B,MAAMqlB,EAASrlB,EAAK2D,OAAO2F,UAAU4Z,oBAAoBmC,QAAU,GACnE,GAAIA,EAAOhkB,OAAS,EAEnB,OADA4d,GAAGC,cAAcC,KAAK,EAAEiE,eACjB,EAER,MAAMmG,EAAe,IAAIld,IAAIgZ,GACvBmE,EAAY7S,MAAMC,KAAK2S,GACvB5E,EAAa6E,EAAUtiB,KAAI2d,GAASA,EAAMhc,OAAM2d,WAChDiD,QAAoB,QAAsB9E,EAAY,CAAC9hB,MAAO,IAAKC,OAAQ,QAAS,EAAEugB,gBAAiB,GAAmB,GAAI,GAAImG,GACxI,OAAOA,EAAU5gB,MAAKic,GAASA,EAAMhc,MAAQ4gB,EAAYpmB,OAAK,EAEzD8iB,GAAcrmB,MAAOmmB,EAAUC,EAAYF,EAAWf,IACpD9S,YAAYsT,UAAUS,EAAWR,UAAS,IAAS,CACzDtF,IAAK6F,EAAS7F,IACd,6CAA8C6F,EAAStlB,KACvD,8CAA+CqlB,EAC/C,gCAAiCf,EACjC,iBAAkB,OAClB,qBAAsBe,EAAU2C,YAChC,0BAA2B,SAC3B,iBAAkB3C,EAAUwC,GAC5B,sBAAuB,QACrB,CAACnW,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,IAE9DkX,GAAwB5pB,MAAOE,IACpC,MAAM2pB,EAAO3pB,EAAKiO,OAAO2b,YAAYvmB,MAK/BwmB,EAJS7pB,EAAK2D,MAAM2F,SAAS4Z,mBAAmBmC,OAAOtiB,QAAO,CAACsiB,EAAQR,IAErE,IAAIQ,EADO,SAAWR,EAAMhc,KAAO,EAAE2a,UAAYqB,EAAMS,QAE5D,IAAIkB,WACkBzjB,QAAO,CAAC+mB,EAAOH,IAChCG,EAAQH,GACb,IACGI,EAAeJ,EAAKK,UACzBL,EAAK7Z,QAAQ,WAAa,EAC1B6Z,EAAKM,YAAY,WAAa,IAC1B,GAEL,OADsBN,EAAKO,QAAQH,EAAc,IAC1B,sBAAwB,EAAExG,cAAgB,UAAYsG,EAAY,iBAEpF,GAAuB/pB,MAAO8H,EAAYE,KAC/C,MAAMC,EAASH,EAAWvG,OAAS,EAC/BuG,EAAa,gFACb,+EACJ,MAAkB,YAAdE,EACIC,EAAS,kFAEVA,GA+DF,GAAiBjI,MAAOK,EAAUsD,KACvC,MAAMuH,EAAiB,CAACC,IAAK,uBAAwBC,KAAMC,MAAMC,oBAAoBC,IAAKhI,MAAO,CAAClD,EAASQ,OACrG2K,EAAiB,IAAI7H,EAAO8H,QAASP,GAC3CvH,EAAOsE,OAAO,CAAC,QAAWuD,GAAe,EAEpC6e,GAAqBrqB,MAAOE,EAAMgmB,KACvCpN,MAAMC,KAAK,oBAAoB,CAACuR,EAASrX,KACxC,GAAI/S,EAAKW,MAAQypB,EAAQzpB,KAAM,OAAO,EACtCoS,EAAOsX,iBAAkB,EACzBtX,EAAOuX,kBAAmB,EAC1BvX,EAAOwX,cAAe,EACtBxX,EAAOyX,UAAYxE,EAAUV,MAC7BvS,EAAO9E,OAAOob,KAAKoB,iBAAmBzE,EAAUqD,OAChD,EAOIqB,GAAqB5qB,MAAOkmB,EAAW3lB,EAAY4lB,KACxD,MAAO9lB,SAAkB,EAAe6lB,EAAW3lB,EAAY4lB,GAC/D,GAAwB5lB,EAAYF,EAAQ,EAEvCwqB,GAAqB7qB,MAAOE,IACjC,MAAM2pB,EAAO3pB,EAAKiO,OAAO2b,YAAYvmB,MAC/B0mB,EAAeJ,EAAKK,UACzBL,EAAK7Z,QAAQ,WAAa,EAC1B6Z,EAAKM,YAAY,WAAa,IAC1B,GACCW,EAAa,sBAAwB,EAAErH,cAAgB,uBACvDsH,EAAclB,EAAKO,QAAQH,EAAca,GAC/C5qB,EAAK+H,OAAO,CACX,2CAA4C,GAC5C,8CAA+C,EAC/C,2BAA4B8iB,GAC5B,EAoBI,GAAwB/qB,MAAOE,EAAMiK,KAC1C,MAAO6gB,EAAcjB,GAAa5f,EAC5B8gB,QAAoB/qB,EAAK+H,OAAO,CACrC,8CAA+C+iB,EAC/C,2CAA4CjB,IAEvCmB,QAA2BtB,GAAsBqB,SACjDA,EAAYhjB,OAAO,CACxB,2BAA4BijB,GAC5B,EAEI,GAA0BlrB,MAAOe,EAAOb,KAC7C,MAAMwB,OAxVsB1B,OAAOe,EAAOb,KAC1C,MAAMsO,EAAkBtO,EAAKiO,OAAOC,WAAWC,eAAiBnO,EAAK2D,MAAM0K,eAAeF,cACpFI,EAAgD,YAA/BvO,EAAKiO,OAAOnG,WAAWlG,KAC9C,OAAI0M,IAAoBC,EAChB,OAAOxN,QAAQC,uBAAuBH,UAEjC,GAAeb,IAAS,EAAC,EAkVhB,CAAqBa,EAAOb,GAC9CwB,EAAQH,OAAS,GAAGG,EAAQ0F,KAAIzD,GAAU,GAAezD,EAAMyD,IAAO,EAErEwnB,GAAiBnrB,MAAOE,EAAMkC,EAASmkB,KAC5C,MAAO6E,EAAU5F,EAAO6F,GAAajpB,EAC/BkpB,OAzB4BtrB,OAAOE,EAAMslB,UAC3B8C,GAAgBpoB,EAAMslB,GAC9B,IACXrG,GAAGC,cAAcC,KAAK,EAAEgE,cACjB,GAqBmBkI,CAA2BrrB,EAAMslB,GAC5D,GAAI8F,EAAc,OAAO,EACzB,MAAO3B,EAAaqB,EAAcQ,QAxITxrB,OAAOorB,EAAU7E,EAAsBrmB,EAAMslB,EAAO6F,KAC7E,MAAMI,EAAMlF,EAAqBzd,MAAK2iB,GAAOA,EAAIxgB,QAAUmgB,IACrDlF,EAAYhmB,EAAK2D,OAAO2F,UAAU4Z,oBAAoBmC,QAAU,GAChEyF,QAAqB1C,GAAgBpoB,EAAMslB,GAC3CmE,EAAc,CAAC8B,EAAIlG,OAAOzc,MAAKic,GAASA,EAAMhc,MAAQsiB,GAAatG,EAAMS,OAASA,KAExF,MAAO,CAACmE,EAAaqB,EADA,IAAI9E,KAAcyD,GACQ,EAkIS+B,CAAkBN,EAAU7E,EAAsBrmB,EAAMslB,EAAO6F,GAEvH,MAvCsBrrB,OAAO2pB,EAAazpB,EAAM8qB,EAAcQ,WACrCtrB,EAAK+H,OAAO,CACpC,2CAA4CujB,EAC5C,8CAA+CR,IAFhD,MAIME,QAA2BtB,GAAsB1pB,SAC9BA,EAAK+H,OAAO,CACpC,2BAA4BijB,GAC5B,EA8BDS,CAAehC,EAAazpB,EAAM8qB,EAAcQ,GACzC7B,GChdK,GAAkB,CAC9BvnB,QAAW,CAAC,oBAAqB,sBACjCyQ,aAAe,CACT,6EACA,+EAEN+Y,oBAAoB,CAAC,QAAS,gBAC9B5L,WAAc,8BACd6L,cAAgB,CACV3a,QAAS,CACRG,UAAW,KACXC,MAAO,cACP4D,OAAQ,CAACC,GAAI,KACbH,WAAY,MACZiB,WAAY,MACZzE,MAAO,IACPD,OAAQ,gBAGfQ,WAAc,CAAC,2BAA4B,8BCJtC+Z,GAAiB9rB,MAAO+rB,EAAG7b,EAAW8b,EAAcxG,IACrDtV,GAAa6b,EAAEha,WAAW,GACtB,CACN,cAAe,CACd,oBAAsB,CAAC,CAAC,aAAayT,IAAS,YAC9C,mBAAqB,oBAAoBwG,MAIpC,CACN,gBAAiB,CAChB,oBAAsB,CAAC,CAAC,cAAcxG,IAAS,YAC/C,mBAAqB,oBAAoBwG,MAKvC,GAAehsB,MAAOsS,EAAWyZ,KAE/B,CACN3b,SAAU,CACTkC,aAEDrB,gBALuBgb,GAAiBF,KAQpCE,GAAmBjsB,MAAO+rB,GAC3BA,EAAEF,cAAsBE,EAAEF,cACvB,CACN3a,QAAS,CACRG,UAAW,KACXC,MAAO,OACP4D,OAAQ,CAACC,GAAI,KACbH,WAAY,MACZiB,WAAY,MACZzE,MAAO,IACPD,OAAQ,gBAyCL7B,GAAiB1P,MAAOe,EAAOd,EAAMiD,EAAQ6oB,EAAG7b,KACrD,MAAMgc,EAAWnrB,EAAMoN,OAAO4L,WAAW4O,QACnCqD,EAAeE,EAAW,EAC1BC,EAAcprB,EAAMoN,OAAOsK,QAAQ+M,OAASzkB,EAAMoN,OAAOsK,QAAQ2T,GACjEC,EAAatrB,EAAMoN,OAAO4L,WAAWwP,KACrCzW,EAAWiZ,EAAElZ,aAAakZ,EAAE3pB,QAAQ4N,QAAQ9M,IAC5CsiB,EAAQvlB,EAAK,GAAG8L,WAChBugB,OA5CgBtsB,OAAO+rB,EAAG7b,IACzBA,GAAa6b,EAAEha,WAAW,GAAK,GAAK,GA2C1Bwa,CAAeR,EAAG7b,GAAasV,EAC1CtD,EAAK,CAAC3e,MAAO,GAAG,IAAIiiB,EAAM,GAAIhe,IAAK,GAAG,IAAIge,EAAM,IAChDgH,OA3CYxsB,OAAOkQ,EAAWmc,IAG7BA,EAFWnf,KAAKyE,OAAO7I,MAAK/H,GAASA,EAAMgI,MAAQmH,IAC/B/B,OAAOwP,UAAU8O,IAAI7O,IACjB,EAwCT8O,CAAWxc,EAAWmc,GAC5C,MAAO,CACNC,EACApK,EACAsD,EACAwG,EACAE,EACAC,EACAE,EACAG,EACA1Z,EACD,EAEK6Z,GAAqB,CAACzpB,EAAQ6oB,KACnC,MAAM1L,EAAQ0L,EAAE3pB,QAAQ4N,QAAQ9M,GAChC,GAAI6oB,EAAEH,oBAAqB,OAAOG,EAAElZ,aAAawN,GACjD,MAAMtf,EAAQmM,KAAKyE,OAAO7I,MAAK/H,GAASA,EAAMgI,MAAQgjB,EAAEha,WAAWsO,KAEnE,OADatf,GAAOuf,MAAO,IACTyL,EAAElZ,aAAawN,EAC1Bjd,ECxGF,GAAiBpD,MAAO+kB,EAAO6H,EAAOrsB,EAAY2C,KACvD,MAAMgiB,QAAyB,QAAoBH,GAC7CI,QAA0B,QAAqBD,EAAkB,yBAA0BH,EAAM/c,YACjGod,QAAiB,GAAiBL,EAAO6H,EAAOzH,EAAmBjiB,GACzE,aAAa3C,EAAW+kB,wBAAwB,OAAQ,CAACF,GAAS,EAiC7D,GAAoB,CAACliB,EAAQqiB,IAC9BriB,GAAU,EAAEwhB,WAAW,IAAMxhB,GAAU,EAAEwhB,WAAW,GAChD,sDAEOa,EAAOzc,MAAKic,GAASA,EAAMhc,KAAK8H,eAAiB3N,EAAO2N,gBACzDyP,IAkBT,GAAmBtgB,MAAO+kB,EAAO6H,EAAOzH,EAAmBjiB,KAChE,MAAO2pB,EAAQpH,EAAQvlB,EAAM6I,EAAM+jB,EAAMhrB,SAAcirB,GAAqBhI,EAAO6H,EAAO1pB,GAC1F,OAAOmP,YAAYsT,UAAUzlB,EAAK0lB,UAAS,IAAS,CACnD7c,KAAMA,EACN,uDAAwD6jB,EAAM7jB,KAC9D,uDAAwD6jB,EAAM/rB,KAC9D,mDAAoDX,EAAK6I,KACzD,mDAAoD7I,EAAKW,KACzD,gCAAiCskB,EACjC,wBAAyB0H,EACzB,wBAAyBD,EAAMzgB,GAC/B,sBAAuBrK,EACvB,sBAAuB2jB,EACvB,0BAA2BqH,GACzB,CAACva,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,GAAK,EAEnEqa,GAAuB/sB,MAAO+kB,EAAO6H,EAAO1pB,KACjD,MAAM2pB,OA7DsB7sB,OAAOkD,GAC/BA,GAAU,EAAEwhB,WAAW,GACnB,EACGxhB,GAAU,EAAEwhB,WAAW,GAC1B,EACGxhB,GAAU,EAAEwhB,WAAW,GAC1B,EAEA,EAqDasI,CAAqB9pB,GACpCuiB,OAnDWzlB,OAAO+kB,EAAO7hB,KAChBgK,KAAKuR,MAAM3V,MAAK5I,GAAQA,EAAK6I,MAAQ,EAAE4b,mBAClDzhB,GAAU,EAAEwhB,WAAW,IAAMxhB,GAAU,EAAEwhB,WAAW,GAChDxhB,GAAU,EAAEwhB,WAAW,GAC3B,CAAC,aAAc,eACf,CAAC,aAAc,eAEXK,EAAM5W,OAAOsX,OAAOrM,OA4CP6T,CAAUlI,EAAO7hB,GAChChD,EAAOgD,GAAU,EAAEwhB,WAAW,IAAMxhB,GAAU,EAAEwhB,WAAW,GAAKwI,OAASnI,EAI/E,MAAO,CAAC8H,EAAQpH,EAAQvlB,EAHXA,EAAK6I,MAAQ,EAAE4b,iBAAmBiI,EAAM7jB,KAAOgc,EAAMhc,KACrD7F,GAAU,EAAEwhB,WAAW,IAAMxhB,GAAU,EAAEwhB,WAAW,GAAK,KAAO,SAChExhB,GAAU,EAAEwhB,WAAW,IAAMxhB,GAAU,EAAEwhB,WAAW,GAAK,KAAO,UAC/B,EAoBlC,GAAyB,CACrC3kB,eAlGsBC,MAAOmtB,KAC7B,QAAWA,EAAI,EAkGf3W,MApBaxW,OAAQe,QAAOd,OAAMC,OAAM2G,QAAO1G,eAC/C,MAAMysB,QAAchsB,SAASV,EAAKW,MAClC,IAAK+rB,EAAMze,OAAOif,SAAU,OAAO,EACnC,MAAOhrB,EAASmjB,QA3COvlB,OAAO4sB,IAC9B,MAAMrH,EAAS,EAAEV,WAAWzd,KAAI2d,GAAS7X,KAAKuR,MAAM3V,MAAK5I,KACnDA,EAAK6I,MACH7I,EAAK6I,KAAK8H,eAAiBkU,EAAMlU,kBAEnCwc,EAAqB,EAAExI,WAAW5iB,QAAO,CAAC8iB,EAAO5hB,EAAG2a,IAChDiH,GAASjH,EAAI,IAAM8O,EAAMze,OAAOmf,KAAK/pB,OAAS,GACjDwhB,GAASjH,EAAI,IAAM8O,EAAMze,OAAOmf,KAAK/pB,OAAS,GAC9CwhB,GAASjH,EAAI,IAAM8O,EAAMze,OAAOmf,KAAK/pB,OAAS,IAKrD,MAAO,CAHoC,GAA3BqpB,EAAMze,OAAOof,WAC5B,IAAI,EAAE3I,gBAAiByI,GAAoB1O,OAC3C,EAAEiG,aAAajG,OACC4G,EAAM,EA8BS,CAAgBqH,GAC1C1pB,QAAe,QACpBd,EACA,CAACW,MAAwB,IAAjBX,EAAQb,OAAcyB,OAAQ,QACtC,EAAEgd,WACF,GACA,GACA,GACAuF,GAEKiI,OAzFextB,OAAOkD,EAAQqiB,IAChCriB,GAAU,EAAEwhB,WAAW,IAAMxhB,GAAU,EAAEwhB,WAAW,GAChDxX,KAAKuR,MAAM3V,MAAK5I,GAAQA,EAAK6I,MAAQ,EAAE4b,mBAEvCY,EAAOzc,MAAKic,GAASA,EAAMhc,MAAQ7F,IAqFlBuqB,CAAcvqB,EAAOK,MAAOgiB,GA3GpCvlB,OAAO+kB,EAAO6H,EAAOrsB,EAAY2C,KAClD,MAAMiH,OAGoBnK,OAAO+kB,EAAO6H,EAAOrsB,EAAY2C,KAC3D,MAAO7C,SAAkB,GAAe0kB,EAAO6H,EAAOrsB,EAAY2C,GAElE,MAAO,CAAC7C,QADeY,QAAQysB,gBAAgBrtB,EAAU0kB,GAC/B,EANJ,CAAmBA,EAAO6H,EAAOrsB,EAAY2C,IACnE,QAAoBiH,EAAS5J,EAAU,EA2GvC,CAAUitB,EAAYZ,SADIhsB,SAASX,EAAK,GAAGa,YAAYC,MACdmC,EAAOK,MAAK,GCrGhD,GAAgB2X,IACrB,OAAQA,GACP,IAAK,OACJ,MAAO,2DAER,IAAK,gBACJ,MAAO,6DAER,IAAK,iBACJ,MAAO,sDAET,EAoBKyS,GAA6B3tB,MAAO6G,KACzC,IAAIwO,UACF1R,SACC+R,KAAK,+DACLlE,MAAM,KACNgE,QAAQ,GACR+G,SAAS1V,GACTkP,cACDN,MAAK,EAqBFmY,GAAoB5tB,MAAOob,EAAUyS,KAC1C,MAAM1H,QAAiBvlB,SAASwa,GAChC+K,EAASle,OAAO,CAAC,oBAAqBke,EAAShY,OAAOmf,KAAK/pB,MAAQsqB,GAAS,EAGhEC,GAAa,CACzBtX,MArDaxW,OAAQC,OAAMC,OAAMa,QAAO8F,YACxC,MAAMknB,EAAgB7tB,EAAKiO,OAAOmf,KAAK/pB,MAAQ,EAAI,CAAC,OAAQ,gBAAiB,kBAAoB,CAAC,gBAAiB,kBAC7GzB,QAAa,QAAsBisB,EAAe,CAAChrB,MAAO,IAAKC,OAAQ,KAAM,4BAA6B,GAAc,GAAI,IAChH,QAAdlB,EAAKyB,MAoCavD,OAAOe,EAAOb,KACpC,MAAM8tB,OA5DiBhuB,OAAOkJ,IAC9B,MAAMkd,QAAmBxlB,SAAS,yBAC5BwkB,EAAW/S,YAAYsT,UAAUS,EAAWR,UAAS,IAAS,CACnE7c,KAAM,gBACJ,CAACwJ,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,IACnE,OAAO,IAAIkP,OAAOqM,KAAKC,cAAc9I,EAAU,CAAEzO,OAAQzN,GAAa,EAuD/CilB,CAAgBptB,GAEjCqtB,QAAqBntB,QAAQysB,gBAAgBM,EAAU,CAAC,EAD9C,CAAEK,cAAc,EAAOC,gBAAgB,EAAMC,WAAW,EAAOC,iBAAiB,IAbrExuB,OAAOsG,EAAGC,EAAGiL,EAAO3K,EAAOV,MACtD,IAAIkP,UACF1R,SACC+R,KAAK,iCACLlE,MAAM,KACNgE,QAAQ,GACRG,WAAW,CAACrP,EAAGH,EAASG,EAAGC,EAAGJ,EAASI,IACvCkoB,aAAa,CAACnoB,EAAG,IAAKC,EAAE,GAAI,CAACmoB,OAAO,IACpCC,QAAQxoB,EAASyoB,WAClBnZ,MAAK,EAOP,CAAoB,EAAG,EAAG,EAAG,QADF7U,SAASwtB,EAAahtB,eAEjDwsB,GAAkB1tB,EAAKW,KAAM,EAAC,EAzC7BguB,CAAe9tB,EAAOb,GAKEF,OAAOe,EAAOb,EAAM2G,EAAO/E,KACpD,MAAMgtB,OAtCoB9uB,OAAOkJ,EAAapH,KAC9C,MAAMskB,EAA2B,iBAAdtkB,EAAKyB,YAAiC3C,SAAS,+BAAiCA,SAAS,yBAC5GkX,QAAQC,IAAIqO,GACZ,MAAMhB,EAAW/S,YAAYsT,UAAUS,EAAWR,UAAS,IAAS,CAEpE,EAAG,CAACrT,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,IACnE,OAAO,IAAIkP,OAAOqM,KAAKC,cAAc9I,EAAU,CAAEzO,OAAQzN,GAAa,EAgC5C6lB,CAAmBhuB,EAAOe,GAC9CD,EAASqL,KAAKgG,KAAKuJ,SAASC,UAAW,EAC7C,IAAK7a,EAAQ,OAAO,EACpB,MAAMqP,EAAU,CAAEmd,cAAc,EAAOC,gBAAgB,EAAMC,WAAW,EAAOC,iBAAiB,EAAOQ,YAAa,CAACntB,EAAO4P,SAAS5Q,aACvGI,QAAQysB,gBAAgBoB,EAAa,CAAC,EAAG5d,GACvEyc,GAA2B9rB,GAC3B+rB,GAAkB1tB,EAAKW,KAAM,EAAC,EAV7BouB,CAAkBluB,EAAOb,EAAM2G,EAAO/E,EACvC,GCnBYotB,GAAS,CACrBhZ,aAAY,EACZkC,OAAM,EACNmC,aAAY,EACZiC,SAAQ,EACRmD,YAAW,EACXE,YAAW,EACXE,YZO0B,CAC1BvJ,MAfaxW,OAAQe,QAAOd,OAAMC,OAAM2G,QAAO1G,eAC/C,MAAM+C,QAAe,QACpB,EAAEd,QACF,CAACW,MAA0B,IAAnB,EAAEX,QAAQb,OAAcyB,OAAQ,QACxC,EAAEgd,WACFI,EACA,GACA,GACA,IAEKlR,OAxBclP,WACb,CACN8P,QAAS,CACRC,qBAAsB,CAAC,GAAI,EAAG,EAAG,MAqBXof,GACxB,IAAUlgB,YAAYlO,EAAOmC,EAAOK,MAAOrD,EAAMgP,EAAW,EAAGrI,EAAK,GYHpEsb,aX8D2B,CAC3BiN,cA7DqBpvB,OAAQC,OAAMC,WACbA,EAAKiO,OAAOkhB,eAAiB,IAAgB3hB,SAASxN,EAAK6I,MACjF+O,QAAQC,UAAUwI,EAAkBtgB,MAC/BC,EAAKiO,OAAOkhB,qBAAuB9O,EAAkBtgB,IAAS,OAClE6Y,MAAMC,KAAK,sBAAuBpV,IACjCA,EAAOqF,QAAO,GAEhB,EAuDAsmB,2BArDkCtvB,OAAQe,QAAOd,OAAMC,OAAMC,WAAU0G,YACvE,GAAI1G,EAASqY,WAAW7W,KAAO,EAAG,OAAO,EACzC,MAAMuf,QAAkBtgB,SAASG,EAAM0d,MAAM3V,MAAK5I,GAAqB,SAAbA,EAAK6I,OAAiBlI,MAC1E0uB,EAAgBrO,EAAU/S,OAAOmf,KAAK/pB,MACtC4d,EAAmBD,EAAU/S,OAAOmf,KAAK9lB,IACzC6Z,QAAqBzgB,SAASiG,EAAM4K,SAAS5Q,MAC7C2uB,EAAWrvB,EAASsvB,WAAWD,SAC/BH,EAAgBnvB,EAAKiO,OAAOkhB,eAAiB,IAAgB3hB,SAASxN,EAAK6I,MAC7EymB,EAAW,GAEWxvB,OAAOe,EAAOyuB,EAAUtO,EAAWqO,EAAepO,EAAkBkO,EAAelvB,EAAUkhB,EAAcphB,KACrI,MAAMyvB,QAAuBnP,EAAkBtgB,GACzC+hB,OA5BchiB,OAAMwvB,EAAUG,EAAYvO,EAAYiO,IACrDA,EAAgBjqB,KAAK0O,MAAM0b,EAAWG,EAAavO,GAAcoO,EA2B9CI,CAAaJ,EAAUD,EAAeG,EAAgBL,GAChFlvB,EAASsvB,WAAWD,SAAWxN,EAC/BD,EAAqBhhB,EAAOihB,EAAaX,EAAcH,EAAWC,EAAgB,EANhE0O,CAAmB9uB,EAAOyuB,EAAUtO,EAAWqO,EAAepO,EAAkBkO,EAAelvB,EAAUkhB,EAAcphB,EAAI,GWlB7I6J,YT0I0B,CAC1BgmB,oBA1J4B3vB,IAC5B,GAAIA,EAASsc,QAAQC,SAAWvc,EAASgjB,eAAgB,OAAO,EAChE,MAAOthB,EAAQihB,EAASC,EAASgN,GA6BG,CAAC5vB,GAK9B,CAJQA,EAASsc,QAAQC,QAChBvc,EAASY,MAAMgZ,WAAWC,OAAOgW,WACjC7vB,EAASY,MAAMgZ,WAAWC,OAAOiW,YACnC9vB,EAASY,MAAMgZ,WAAWC,OAAO+V,OAjCLG,CAA6B/vB,GACvE,IAAK,CAAC,KAAM,IAAK,MAAMuN,SAASqiB,KAAWjN,EAAU,GAAKC,EAAU,GAAI,OAAO,EAE/E,GADuCP,EAAkB3gB,EAAQ1B,EAASgjB,gBACtC,OAAO,EAC3C,MAAMgN,EAAgBtN,EAAmBC,EAASC,EAASlhB,EAAQ1B,GAC7DiwB,EAA4B5N,EAAkB3gB,EAAQA,GAC5D,IAAKsuB,GAAiBC,EAA2B,OAAO,EACxD,MAAMC,EAA4B7N,EAAkBriB,EAASgjB,eAAgBhjB,EAASgjB,gBACtF,OAAKgN,IAAkBE,CAChB,EAgJPC,oBA9I4BnwB,IAC5B,GAAIA,EAASsc,QAAQC,SAAWvc,EAASgjB,eAAgB,OAAO,EAChE,MAAOthB,EAAQihB,EAASC,EAASgN,GAuBG,CAAC5vB,IACrC,MAAM0B,EAAS1B,EAASsc,QAAQC,QAIhC,MAAO,CAAC7a,EAHQA,EAAOd,MAAMoN,OAAO4L,WAAWC,OAAOgW,WACtCnuB,EAAOd,MAAMoN,OAAO4L,WAAWC,OAAOiW,YACxCpuB,EAAOd,MAAMoN,OAAO4L,WAAWC,OAAO+V,MACb,EA5BGQ,CAA6BpwB,GACvE,IAAK,CAAC,KAAM,IAAK,MAAMuN,SAASqiB,KAAWjN,EAAU,GAAKC,EAAU,GAAI,OAAO,EAE/E,GADuCP,EAAkBriB,EAASgjB,eAAgBthB,GAC9C,OAAO,EAC3C,MAAMsuB,EAAgBtN,EAAmBC,EAASC,EAASlhB,EAAQ1B,GAC7DiwB,EAA4B5N,EAAkB3gB,EAAQA,GAC5D,OAAIsuB,IAAiBC,CACd,EAsIP5Z,MAvDaxW,OAAQe,QAAOd,OAAM4G,YAClC,MAAMV,OAWuBnG,OAAOC,EAAM4G,KAC1C,MAAMV,QAAiBvF,SAASX,EAAK,GAAGmB,cAExC,aADMqV,cAAcC,qBAAqBvQ,EAAUU,GAAO,GACnDV,GAdgBqqB,CAAsBvwB,EAAM4G,GAC7C0B,OAfoBvI,OAAOmG,EAAUU,KAC3C,MACM4pB,EADWvjB,KAAKC,QAAQC,IAAI,iBAAiBC,IAAIC,cAAcnH,GACpCiB,KAAI+E,GACpC7G,OAAOiF,MAAMgD,YAAY3G,OAAOwG,IAAIjB,KACnClK,QAAOuL,GAAY3G,EAAM4K,SAAS5Q,MAAQ2M,EAAS3M,OACrD,QAAI4vB,EAAgBlvB,OAAS,IACtBkvB,EAAgBxuB,QAAOuL,IACbA,EAASzM,OAAOW,SAAW,IAC5BO,QAAO0B,GACrBA,EAAOoF,MAAQ,EAAEO,aAChB/H,OAAS,IACT6F,KAAIoG,GAAYA,EAASzM,MAAMF,MAAI,EAIR6vB,CAAmBvqB,EAAUU,GAC3D,IAAK0B,EAAiB,OAAO,GAC7B,QAAuBxH,EACtBd,EACA,EAAEsiB,mBACF3Y,EACArB,IAED,QAAgB,EAAER,SAAU5B,EAAUoC,EAAe,EA8CrDooB,YAvCmB3wB,MAAOmG,KAC1B,QACC,EAAEmD,WACF,EAAEvB,SACF5B,EACD,EAmCAyqB,YAjCmB5wB,MAAOmG,EAAUU,MACpC,QACC,EAAEyC,WACF,EAAEvB,SACF6B,EACAzD,EACAU,EACD,EA2BAgqB,SAzBgB7wB,MAAOmG,EAAUU,MACjC,QACC,EAAEyC,WACF,EAAEvB,SACF5B,EACAU,EACD,EAoBAiqB,UAlBiB9wB,MAAOmG,KAExB,QADqB,EAAE,EAAG,EAAG,GAG5B,EAAEmD,WACF,EAAEvB,SACF6B,EACAzD,EACD,GStIA6d,qBPgMmC,CACnCjkB,eA3MsBC,MAAOmtB,KAC7B,QAAWA,EAAM/sB,EAAkB,EA2MnCoW,MAhCaxW,OAAQe,QAAOd,OAAMC,OAAM2G,QAAO1G,eAC/C,MAAM2B,EAAO5B,EAAK2D,OAAO2F,UAAUwa,sBAAsBliB,MAAQ,QACjE,GAAY,SAARA,EAAiB,OAAO,EAC5B,MAAMvB,SAAoBK,SAASX,EAAK,GAAGa,YAAYC,MACjDolB,QAAiBvlB,SAASV,EAAKW,OAC9BqlB,EAAWrB,EAAYwI,EAAoB9H,QAhF3BvlB,OAAOE,EAAM4B,KACpC,MAAM+iB,EAAa,IAAI,EAAgC,WAAM,EAAuB/iB,IAAO6c,OACrFuH,EAAYrB,EAAWzd,KAAI,CAAC2B,EAAM5F,KAChC,CAAC,KAAQ4F,EAAMoD,GAAIhJ,MACxBlB,QAAO8iB,GAAS7kB,EAAK2D,MAAM2F,SAASwa,qBAAqBuB,OAAOR,EAAM5Y,IAAI6Z,YACvET,EAASW,EAAU9e,KAAI2d,GAAS7X,KAAKuR,MAAM3V,MAAK5I,GAAQA,EAAK6I,KAAK8H,eAAiBkU,EAAMhc,KAAK8H,kBAEpG,MAAO,CAACqV,EAAWrB,EADQU,EAAOne,KAAI2d,GAASA,EAAMhc,OACFwc,EAAM,EAyESwL,CAAgB5K,EAAUrkB,GACtFoB,QAAe,QAAsBmqB,EAAoB,CAACtqB,MAAmC,IAA5BsqB,EAAmB9rB,OAAcyB,OAAQ,QDzKjG,0BCyKwH,EAAmB,GAAI,GAAIuiB,GAjMjJvlB,OAAO+kB,EAAOC,EAAYzkB,EAAY0kB,KACvD,MAAM9a,OAGoBnK,OAAO+kB,EAAOC,EAAYzkB,EAAY0kB,KAChE,MAAO5kB,SAAkBykB,EAAeC,EAAOC,EAAYzkB,EAAY0kB,GAEvE,MAAO,CAAC5kB,QADeY,QAAQysB,gBAAgBrtB,EAAU0kB,GAC/B,EANJiM,CAAmBjM,EAAOC,EAAYzkB,EAAY0kB,GA0J7CjlB,OAAOmK,EAAS5J,KAC3C,MAAOF,EAAUF,GAAYgK,EAC7BC,EAAwB7J,EAAYF,GACpC,MAAM8F,QAAiBvF,SAAST,EAASiB,gBAAiB,EACtD+E,GAAUA,EAASkE,UAAU,cAAe,CAACC,MAAM,GAAK,EA7J5DJ,CAAoBC,EAAS5J,EAAU,EAkMvC0wB,CAFc1L,EAAOzc,MAAKic,GAASA,EAAMhc,MAAQ7F,EAAOK,QAEvC4iB,EAAU5lB,EADPskB,EAAW7U,QAAQ9M,EAAOK,OACI,EAwBlD2tB,SAtBgBlxB,MAAOe,EAAOosB,KAC9B,IAAKA,EAAKgE,OAAQ,OAAO,EAOCnxB,OAAOoxB,IACjCA,EAAY3nB,SAAQub,IACnB,MACM/c,EADS+c,EAAWnhB,MAAM2F,SAASwa,qBAAqBuB,OACxCne,KAAI2d,IACzBA,EAAMiB,WAAY,EACXjB,KAERC,EAAW/c,OAAO,CAAC,6CAA8CA,GAAO,GACxE,EAVDopB,CAJoBtwB,EAAM0d,MAAMxc,QAAO/B,GAEvB,UADFA,EAAK2D,OAAO2F,UAAUwa,sBAAsBliB,MAAQ,WAGpC,GOlL9BwvB,qBNamC,CACnC9a,MAbaxW,OAAQE,OAAMC,WAAUF,OAAM4G,YAC3C,MAAM0qB,QARSrkB,KAAKgG,KAAKuJ,QAAQC,QACnB3b,MAAMW,QAAQO,QAAO0B,IAClC,MAAM6tB,EAAkB,IAA0B,SAAE9jB,SAAS/J,EAAOoF,KAAK8H,eACnE4gB,EAAwB9tB,EAAO8H,QAAQ3C,MAAKuN,GAAU,IAA0B,SAAE3I,SAAS2I,EAAO9S,MAAMsN,iBAC9G,OAAO2gB,GAAmBC,KAK3B,GAAIF,EAAchwB,OAAS,EAAG,CAC7B,MAAMmwB,OArBgB1xB,OAAO0B,IAC9B,MAAMU,OATYpC,OAAO0B,GAClBA,EAAQuB,QAAO,CAAC0uB,EAAKhuB,EAAQR,KAClC,MAAMyuB,EAAkBD,EAAI7oB,MAAK5F,GAAUA,EAAO6F,MAAQpF,EAAOoF,OAE3D7F,EAAS,CAAC6F,KADH6oB,EAAkBjuB,EAAOoF,KAAO,IAAM5F,EAAIQ,EAAOoF,KAClC3F,KAAMO,EAAOP,KAAMvC,KAAM8C,EAAO9C,MAC5D,MAAO,IAAI8wB,EAAKzuB,EAAM,GACrB,IAGmB2uB,CAAWnwB,GAC3BowB,EAAc1vB,EAAQgF,KAAIlE,GAAUA,EAAO6F,OAC3CgpB,QAAmB,QAAsBD,EAAa,CAAC/uB,MAAO,IAAKC,OAAQ,QPdnE,4BOc0FijB,EAAkB,GAAI,GAAI7jB,GAClI,OAAOA,EAAQ0G,MAAKnF,GAAUA,EAAOoF,MAAQgpB,EAAWxuB,OAAK,EAiBjCyuB,CAAgBT,SACrC,QAAaG,EAAa7wB,KACjC,GASAsV,cAPqBnW,OAAQE,OAAMC,WAAUF,WAC3BC,EAAKwB,QAAQoH,MAAKnF,GAAUA,EAAO8H,QAAQ3C,MAAKuN,GAAU,IAA0B,SAAE3I,SAAS2I,EAAO9S,MAAMsN,qBAC/G1Q,EAASmW,YAAYC,WAAY,KMThD6M,mBLubiC,CACjC,KAtIYpjB,OAAQC,OAAMC,WAC1B,MAAM6xB,QAAmB,QAAsB,EAAEnO,YAAa,CAAC7gB,MAAO,IAAKC,OAAQ,QAAS,EAAEgd,WAAY,EAAkB,GAAI,IAC1Hzf,SAAoBK,SAASX,EAAK,GAAGa,YAAYC,MACjDolB,QAAiBvlB,SAASV,EAAKW,MACjCkxB,EAAWxuB,OAAS,EAAEqgB,YAAY,GAjVtB5jB,OAAOE,EAAMK,KAE7B,QA4V+BP,OAAOE,IACtC,GAAwD,GAApDA,EAAK2D,MAAM2F,SAAS4Z,mBAAmB8E,UAE1C,OADA/I,GAAGC,cAAcC,KAAK,EAAEgE,cACjB,CACR,EAjW2B4O,CAAwB/xB,GACjC,OAAO,EACzB,MAAMiK,OAqDoBnK,OAAOE,EAAMK,KACvC,MAAMoR,QAAe0W,KACf9B,QAA6BiB,EAAkB7V,GAErD,MAAO,OADe2U,EAAmBC,EAAsBrmB,EAAMK,GACpDgmB,EAAoB,EAzDf2L,CAAmBhyB,EAAMK,GAiWrBP,OAAOE,EAAMiK,EAAS5J,KAChD,MAAO6B,EAASmkB,GAAwBpc,GACjC+b,SAAmBiF,GAAejrB,EAAMkC,EAASmkB,GAC5B,YAAxBL,EAAUle,YAA0B4iB,GAAmB1E,EAAW3lB,EAAYL,EAAI,EAnWtFiyB,CAAmBjyB,EAAMiK,EAAS5J,EAAU,EA8U3C6xB,CAASjM,EAAU5lB,GACTwxB,EAAWxuB,OAAS,EAAEqgB,YAAY,GA7U5B5jB,OAAOE,EAAMK,KAC9B,MAAM4J,OASoBnK,OAAOE,EAAMK,KACvC,MAAM2lB,QAAkBsD,GAAetpB,IAChCG,SAAkB,EAAe6lB,EAAW3lB,EAAYL,GAG/D,aAFMmqB,GAAmBhqB,EAAU6lB,GAE5B,CAAC7lB,QADeY,QAAQysB,gBAAgBrtB,EAAUH,GAC/B,EAdJ,CAAmBA,EAAMK,GAkWpBP,OAAOmK,EAAS5J,KAC3C,MAAOF,EAAUF,GAAYgK,EAC7B,GAAwB5J,EAAYF,GACpC,MAAM8F,QAAiBvF,SAAST,EAASiB,gBAAiB,EACtD+E,GAAUA,EAASkE,UAAU,cAAe,CAACC,MAAM,GAAK,EArW5D,CAAoBH,EAAS5J,EAAU,EA4UtC,CAAU4lB,EAAU5lB,GACVwxB,EAAWxuB,OAAS,EAAEqgB,YAAY,IAI1B5jB,OAAOE,EAAMK,KAChCsqB,GAAmB3qB,GACnB,MAAMmyB,EAAY9xB,EAAWke,MAAMxc,QAAO/B,GAAQA,EAAK2D,OAAO2F,UAAU4Z,oBAAoBkP,WAAY,IACxGD,EAAUjrB,KAAIlH,GAAQA,EAAK8I,UAAQ,EANlCupB,CAAYpM,EAAU5lB,EACvB,EA6HA,eAtbsBP,OAAQC,OAAMC,OAAMC,eAC1C,MAAOE,EAAUC,EAAgBC,QAyERP,OAAOC,EAAMC,KACtC,MAAMG,QAAiBO,SAASV,EAAKW,MAC/BP,QAAuBM,SAASX,EAAK,GAAGa,WAE9C,MAAO,CAACT,EAAUC,EADCA,EAAeS,MACU,EA7ESP,CAAkBP,EAAMC,QAgVnDF,OAAOK,IACjC,MAAM8lB,QAAiBvlB,SAASP,EAASwD,MAAM2F,SAAS4Z,mBAAmBkP,UACrEnoB,OAvR0BnK,OAAOmmB,EAAU9lB,KACjD,MAAOmyB,EAAatK,EAAW3C,EAAQkN,QAdVzyB,OAAOmmB,EAAU9lB,KAC9C,MAAM6lB,EAAY7lB,EAASwD,MAAM2F,SAAS4Z,mBAAmB8C,UACvDX,EAASY,EAAStiB,MAAM2F,SAAS4Z,mBAAmBmC,OACpD2C,EAAY/B,EAAStiB,MAAM2F,SAAS4Z,mBAAmB8E,UACvDwK,EAAYnN,EAAOzc,MAAKic,GACtBA,EAAMS,OAASU,EAAUV,OAC5BT,EAAMhc,MAAQmd,EAAUnd,MACxBgc,EAAM2D,IAAMxC,EAAUwC,IACtB3D,EAAM6D,SAAW1C,EAAU0C,UAGhC,MAAO,CADarD,EAAOvV,QAAQ0iB,GACdxK,EAAW3C,EAAQmN,EAAUlN,MAAK,EAGQmN,CAAsBxM,EAAU9lB,GAG/F,MAAO,CAFc6nB,EAAYuK,EACflN,EAAOtjB,QAAO,CAAC8iB,EAAO5hB,IAAMA,GAAKqvB,IACpB,EAmRTI,CAAyBzM,EAAU9lB,GACzD,GAAsB8lB,EAAUhc,EAAO,EAlVjC,CAAmB9J,GACzB,MAAMI,OA+DoBT,OAAOC,EAAMC,EAAMI,EAAgBD,EAAUE,EAAYJ,KACnF,MAAMa,QAAmBC,QAAQC,uBAAuBX,KAAe,EACjEY,QAAoBP,SAAST,EAASiB,gBAAiB,EAEvDC,SADoB,GAAehB,IACNkB,OAAS,EACtCC,OA3FiBxB,OAAOC,EAAMC,EAAMI,KAC1C,MAAMmB,EAAavB,EAAKwB,QAAQC,KAAO,EACjCC,EAAwC,QAArB1B,EAAK2B,QAAQC,KAChCC,EAAsB9B,EAAK,GAAG+B,eAAeC,QAAOpB,GAAQA,GAAQP,EAAeO,OAAMU,OAAS,EACxG,OAAOE,IAAeG,GAAoBG,EAAmB,EAuFjCG,CAAgBjC,EAAMC,EAAMI,GACxD,MAAO,CAACU,EAAYG,EAAaE,EAAgBG,EAAa,EArE1Cd,CAAmBT,EAAMC,EAAMI,EAAgBD,EAAUE,EAAYJ,GAmV/DH,OAAOS,EAAOJ,EAAUE,KAClD,MAAOS,EAAYG,EAAaE,EAAgBG,GAAiBf,EACjE,GAAIO,EACH,GAAeX,EAAUW,QACnB,GAAKA,IAAcG,GAAgBE,EAGnC,GAAKL,GAAeG,IAAgBE,IAAkBG,EAGjDR,GAAeG,GAAgBE,GAAmBG,GAC7DnB,EAAS2I,aAJmE,CAC5E,MAAMgC,EAAiBzK,EAAWmB,QAAQoH,MAAKnF,GAAUA,EAAOsH,QAAU5K,EAASQ,OACnF,GAAeR,EAAU2K,EAC1B,KAN0D,CACzD,MAAMA,EAAiBzK,EAAWmB,QAAQoH,MAAKnF,GAAUA,EAAOsH,QAAU5K,EAASQ,OACnF,GAAeR,EAAU2K,EAC1B,CAKA,EA9VArK,CAAmBF,EAAOJ,EAAUE,EAAU,EAmb9C,gBApEuBP,OAAQE,WAC/B,MAAMgmB,EAAYhmB,EAAK2D,OAAO2F,UAAU4Z,oBAAoB8C,YAAa,EACzE,IAAKA,EAAW,OAAO,EACvBmE,GAAmBnqB,EAAMgmB,EAAS,GKxXlC2M,WCDyB,CACzB/S,KAdY,CAAC/e,EAAOosB,KACpB,MAAM2F,EAAc/xB,EAAMW,QAAQO,QAAO0B,GAAyB,gBAAfA,EAAOoF,OACtDokB,EAAK4F,IAAM,GAAKD,EAAYvxB,OAAS,GACxCuxB,EAAY1rB,KAAIzD,IACf,MAAMqvB,EATkB,CAACC,IAC3B,MAAMC,EAAexpB,aAAaupB,GAElC,OADoBvpB,aAAawpB,EAAavc,OAAO9V,MAClCsN,OAAOqD,MAAM2hB,KAAK,gBAAgBC,OAM3BC,CAAmB1vB,EAAOsH,QAC5C/K,EAtBW,EAACgJ,EAAaoqB,KACjC,MAAMlN,EAAa1c,aAAa,yBAC1B0b,EAAW/S,YAAYsT,UAAUS,EAAWR,UAAS,IAAS,CACnE7c,KAAM,eACNoF,OAAQ,CACPsX,OAAQ,CACPrM,MAAO,CAAC,CAAC,KAAKka,IAAa,eAG3B,CAAC/gB,WAAW,EAAMC,QAAQ,EAAMC,YAAY,EAAMC,cAAc,IACnE,OAAO,IAAIkP,OAAOqM,KAAKC,cAAc9I,EAAU,CAAEzO,OAAQzN,GAAa,EAYvDqqB,CAAYxyB,EAAOiyB,GAE1B9hB,EAAU,CAAEmd,cAAc,EAAOC,gBAAgB,EAAMC,WAAW,EAAOC,iBAAiB,EAAOQ,YAAa,CADtG/tB,QAAQuyB,cAAczyB,EAAMF,MACiF4Q,SAAS5Q,OACpII,QAAQysB,gBAAgBxtB,EAAM,CAAC,EAAGgR,EAAO,GAE3C,GDKAgP,gBHgH8B,CAC9B1J,MArBaxW,OAAQe,QAAOd,OAAMC,OAAM2G,QAAO1G,eAC/C,MAAM4rB,EAAI,GAAiBH,oBAAoBle,SAAS3M,EAAMgI,MAC3D,GACA,EACG7F,QAAe,QACpB6oB,EAAE3pB,QACF,CAACW,MAAO,OAAQC,OAAQ,QACxB+oB,EAAE/L,WACF2M,GACA,IACA,IACAZ,IAGAzZ,EACApD,EACAgB,QAvI2BlQ,OAAOe,EAAOd,EAAMiD,EAAQ6oB,KACxD,MAAM7b,EAAY6b,EAAEha,WAAWga,EAAE3pB,QAAQ4N,QAAQ9M,IAC3CoP,OA0DiBtS,OAAOe,EAAOd,EAAMiD,EAAQ6oB,EAAG7b,KACtD,MACCoc,EACApK,EACAsD,EACAwG,EACAE,EACAC,EACAE,EACAG,EACA1Z,SACSpD,GAAe3O,EAAOd,EAAMiD,EAAQ6oB,EAAG7b,GACjD,MAAO,CACNrJ,MAAO,CACN,YAAewE,MAAMuO,oBAAoBC,MACzC,cAAe/G,GAEhB/R,MAAO,CACN,0BAA4BurB,EAC5B,qBAAuBpK,EACvB,kBAAoBiK,EACpB,wBAAyBK,EACzB,IAAO1Z,GAER2gB,SAAU,CACTxF,WAAYnC,GAAeC,EAAG7b,EAAW8b,EAAcxG,IAEzD,EArFwB,CACvBzkB,EACAd,EACAiD,EACA6oB,EACA7b,GAGD,MAAO,CAACoC,QADgB,GAAaA,EAAWyZ,GAClB7b,EAAS,EA8H7BwjB,CAAqB3yB,EAAOd,EAAMiD,EAAOK,MAAOwoB,GAC1D,IAAU9c,YAAYlO,EAAOmC,EAAOK,MAAOrD,EAAMgP,EAAW6c,EAAGllB,EAAK,GG7GpEmK,UAAS,IACTyT,uBAAsB,GACtBqJ,WAAU,I,cE/BJ,IAAI1lB,GAEX0Q,MAAMC,KAAK,mBAAmB,KAC7B3Q,GAASurB,UAAUC,eAAe,2BAClCxrB,GAAOyrB,SAAS,wBAAyB,OACzCzrB,GAAOyrB,SAAS,wBAAyB,OACzCzrB,GAAOyrB,SAAS,wBAAyB,OACzCzrB,GAAOyrB,SAAS,mCAAoC,OACpDzrB,GAAOyrB,SAAS,4BAA6B,OAC7CzrB,GAAOyrB,SAAS,6BAA8B,MAA6B,IAG5E/a,MAAMvD,GAAG,uBAAuB,CAACxU,EAAOosB,KACvC+B,GAAOlL,qBAAqBkN,SAASnwB,EAAOosB,GAC5C+B,GAAO2D,WAAW/S,KAAK/e,EAAOosB,EAAI,IAGnCrU,MAAMvD,GAAG,kBAAkB,CAAC/H,EAAUyF,EAAQC,KAC7Cgc,GAAOle,UAAUgC,iBAAiBxF,EAAUyF,EAAQC,EAAI,IAGzD4gB,WAAqB,SAAI,CACrB5E,OAAM,G,+FC1BH,MAAM6E,EAAwB/zB,MAAOyP,SAC9BnK,OAAOiF,MAAM+a,wBAAwB,eAAgB,CAAC7V,IAEvDukB,EAAwBh0B,MAAOi0B,IAC3C,MAAMC,QAAqB5uB,OAAOiF,MAAM4pB,wBAAwB,eAAgB,CAACF,IAGjF,OADA3uB,OAAOsB,OAAOkE,WACPopB,GAEKE,EAAwBp0B,MAAOq0B,EAAYC,KACvD,MAAOC,GAAgBF,EAAW3yB,QAAQO,QAAO0B,GAAUA,EAAO+X,KAAO4Y,IACzE,aAAaD,EAAWF,wBAAwB,eAAgB,CAACI,EAAa7Y,KAAI,EAGtE8Y,EAAmCx0B,MAAOe,EAAO0Z,KAC7D,MAAMga,EAAqC3b,MAAMvD,GAAG,kBAAkB,CAAC/H,EAAUyF,EAAQ/B,KACxF,GAAI1D,EAAS3M,MAAQ4Z,EAAkB,CACtC3B,MAAMiC,IAAI,iBAAkB0Z,GAC5B,MAAMzzB,EAAcD,EAAMW,QAAQoH,MAAKnF,GAAyB,iBAAfA,EAAOoF,OACxD,IAAK/H,EAAY,OAAO,EACxBA,EAAWgI,QACZ,IACA,EAEW0rB,EAA4B10B,MAAOoB,IAC/C,MAAM+E,QAAiBvF,SAASQ,KAAiB,EACjD,IAAK+E,EAAU,OAAO,EACtB,MAAMwuB,QAAgCrvB,OAAOiF,MAAM4pB,wBAAwB,mBAAoB,CAAChuB,EAASuV,MAGzG,OADApW,OAAOsB,OAAOkE,WACP6pB,GAEKC,EAA6B50B,MAAO2U,EAAYD,KAC5DC,EAAWlL,SAAQsF,GAAOA,EAAI9G,OAAO,CAAC,WAAcyM,KAAM,C,GChCvDmgB,yBAA2B,CAAC,EAGhC,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,yBAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,yBAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,oBAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,qBAG/CK,EAAOD,OACf,CCrBAJ,oBAAoBO,EAAI,CAACH,EAASI,KACjC,IAAI,IAAInqB,KAAOmqB,EACXR,oBAAoBS,EAAED,EAAYnqB,KAAS2pB,oBAAoBS,EAAEL,EAAS/pB,IAC5EuW,OAAO8T,eAAeN,EAAS/pB,EAAK,CAAEsqB,YAAY,EAAMroB,IAAKkoB,EAAWnqB,IAE1E,ECND2pB,oBAAoBS,EAAI,CAACG,EAAKC,IAAUjU,OAAOkU,UAAUC,eAAeC,KAAKJ,EAAKC,GCGlF,IAAII,oBAAsBjB,oBAAoB,I","sources":["webpack://CHARNAME's Bag of Macros/./src/scripts/constants.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helper-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helpers/summons.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/aura-of-purity.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/blight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/clairvoyance.js","webpack://CHARNAME's Bag of Macros/./src/scripts/hooks.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/daylight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/dispel-magic.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/fey-ancestry.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/spells.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/giant-insect.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/horde-passive.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/features.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/misc/insect-cloud.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/items.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/instrument-of-the-bards.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/protection-from-poison.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/ring-of-spell-storing.js","webpack://CHARNAME's Bag of Macros/./src/scripts/exceptions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/summon-celestial.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/staff-of-swarming-insects.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/wand-of-fear.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/class/bard/song-of-rest.js","webpack://CHARNAME's Bag of Macros/./src/scripts/index.js","webpack://CHARNAME's Bag of Macros/./src/scripts/socket-functions.js","webpack://CHARNAME's Bag of Macros/webpack/bootstrap","webpack://CHARNAME's Bag of Macros/webpack/runtime/define property getters","webpack://CHARNAME's Bag of Macros/webpack/runtime/hasOwnProperty shorthand","webpack://CHARNAME's Bag of Macros/webpack/startup"],"sourcesContent":["export const conditionLabels = {\r\n\tblinded: [\"blinded\", \"convenient effect: blinded\"],\r\n\tcharmed: [\"charmed\", \"convenient effect: charmed\"],\r\n\tconcentrating: [\"concentrating\", \"convenient effect: concentrating\"],\r\n\tdead: [\"dead\", \"convenient effect: dead\"],\r\n\tdeafened: [\"deafened\", \"convenient effect: deafened\"],\r\n\texhaustion1: [\"exhaustion 1\", \"convenient effect: exhaustion 1\"],\r\n\texhaustion2: [\"exhaustion 2\", \"convenient effect: exhaustion 2\"],\r\n\texhaustion3: [\"exhaustion 3\", \"convenient effect: exhaustion 3\"],\r\n\texhaustion4: [\"exhaustion 4\", \"convenient effect: exhaustion 4\"],\r\n\texhaustion5: [\"exhaustion 5\", \"convenient effect: exhaustion 5\"],\r\n\tfrightened: [\"frightened\", \"convenient effect: frightened\"],\r\n\tgrappled: [\"grappled\", \"convenient effect: grappled\"],\r\n\tincapacitated: [\"incapacitated\", \"convenient effect: incapacitated\"],\r\n\tinvisible: [\"invisible\", \"convenient effect: invisible\"],\r\n\tparalyzed: [\"paralyzed\", \"convenient effect: paralyzed\"],\r\n\tpetrified: [\"petrified\", \"convenient effect: petrified\"],\r\n\tpoisoned: [\"poisoned\", \"convenient effect: poisoned\"],\r\n\tprone: [\"prone\", \"convenient effect: prone\"],\r\n\trestrained: [\"restrained\", \"convenient effect: restrained\"],\r\n\tstunned: [\"stunned\", \"convenient effect: stunned\"],\r\n\tunconscious: [\"unconscious\", \"convenient effect: unconscious\"],\r\n\twounded: [\"wounded\", \"convenient effect: wounded\"]\r\n}\r\n\r\nexport const cloudSpellNames = [\r\n\t\"Cloudkill\",\r\n\t\"Incendiary Cloud\",\r\n\t\"Insect Plague\",\r\n\t\"Moonbeam\",\r\n\t\"Spirit Guardians\"\r\n]","import {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nexport const deleteTempItem = async ({args, item, workflow}, setDeleteItemFlags) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tif (setDeleteItemFlags) await setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nexport const deleteAuraEffectsWhenMoved = async (effectName, newTokenActorUuids, oldTokenActorUuids, originUuid) => {\r\n\tconst removalUuids = oldTokenActorUuids.filter(uuid => !newTokenActorUuids.includes(uuid))\r\n\tawait removalUuids.forEach(actorUuid => {\r\n\t\tconst actor = fromUuidSync(actorUuid)\t\r\n\t\tconst tokenEffect = actor.effects.find(effect => \r\n\t\t\teffect.name == effectName\r\n\t\t && effect.origin == originUuid\r\n\t\t)\r\n\t\tif (!tokenEffect) return false\r\n\t\tremoveEffect(tokenEffect.uuid)\r\n\t})\t\r\n}\r\nexport const getAuraParamsWhenMoved = async (dispositions, getEffectData, template, flagName) => {\r\n\tconst effectData = await getEffectData(template.flags[\"midi-qol\"].actorUuid, template.uuid)\r\n\tconst newTokenIds = game.modules.get(\"templatemacro\").api.findContained(template)\r\n\tconst newTokens = newTokenIds.map(id => \r\n\t\tcanvas.scene.collections.tokens.get(id)\r\n\t).filter(tokenDoc => \r\n\t\ttokenDoc.id != template.flags[\"midi-qol\"].tokenId\r\n\t && dispositions.includes(tokenDoc.disposition)\r\n\t)\r\n\tconst newTokenActorUuids = newTokens.map(token => token.actor.uuid)\r\n\tconst oldTokenActorUuids = template.flags.charname[flagName].tokenActorsEffected\r\n\treturn [effectData, newTokenActorUuids, oldTokenActorUuids]\r\n}\r\nexport const getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nexport const getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nexport const getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst hasSysConc = item.system.components?.concentration ?? false\r\n\tconst hasMidiConc = item.flags?.midiProperties?.concentration ?? false\r\n\tconst isConcentration = hasSysConc || hasMidiConc\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nexport const getDialogueButtons = (resolve, choices, getIconPaths, width, height, iconData) => {\t\r\n\treturn choices.reduce((buttons, choice, i) => {\r\n\t\tconst icon = getIconPaths(choice, iconData)\r\n\t\tconst newButton = {[choice]: {\r\n\t\t\tlabel: `<img src=${icon} width=${width} height=${height} style=\"border:0px\"><br>${choice}`,\r\n\t\t\tcallback: () => {\r\n\t\t\t\tresolve({value: `${choice}`})\r\n\t\t\t}\r\n\t\t}}\r\n\t\treturn {...buttons, ...newButton}\r\n\t}, {})\r\n}\r\nexport const getDialogueButtonType = async (choices, dialogueOptions, title, getIconPathsFunc, buttonWidth, buttonHeight, iconData) => { \r\n\treturn await (new Promise( (resolve) => {\t\r\n\t\tconst buttons = getDialogueButtons(resolve, choices, getIconPathsFunc, buttonWidth, buttonHeight, iconData)\t\t\r\n\t\tnew Dialog({\r\n\t\t\ttitle: title,\r\n\t\t\tbuttons: buttons\r\n\t\t}, dialogueOptions).render(true)\r\n}))}\r\nexport const getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nexport const getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nexport const getSpawnLocation = async (spawnIconPath, size, interval, tokenUuid, itemRange, originToken) => {\r\n\tawait setCrosshairConfigs(tokenUuid, itemRange, size)\r\n\tconst distanceAvailable = itemRange\r\n\tlet crosshairsDistance = 0\r\n\tconst checkDistance = async (crosshairs) => {\r\n\t\twhile (crosshairs.inFlight) {\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t\tconst ray = new Ray(originToken.center, crosshairs)\r\n\t\t\tconst distance = Math.ceil(canvas.grid.measureDistances([{ ray }], { gridSpaces: false })[0] / 5) * 5\r\n\t\t\tif (crosshairsDistance !== distance) {\r\n\t\t\t\tcrosshairsDistance = distance;\r\n\t\t\t\tif (distance > distanceAvailable) {\r\n\t\t\t\t\tcrosshairs.icon = 'icons/svg/hazard.svg';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcrosshairs.icon = spawnIconPath\r\n\t\t\t\t}\r\n\t\t\t\tcrosshairs.draw();\r\n\t\t\t\tcrosshairs.label = `${distance} ft`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst location = await warpgate.crosshairs.show(\r\n\t\t{\r\n\t\t\tsize: size,\r\n\t\t\tinterval: interval,\r\n\t\t\ticon: spawnIconPath,\r\n\t\t\tlabel: '0 ft.',\r\n\t\t},\r\n\t\t{\r\n\t\t\tshow: checkDistance\r\n\t\t},\r\n\t)\r\n\tif (location.cancelled || crosshairsDistance > distanceAvailable) {\r\n\t\treturn\r\n\t} else {\r\n\t\treturn location\r\n\t}\r\n}\r\nexport const getTemplatesInRange = (templates, gridSize, gridScale, range, x1, y1) => {\r\n\t//gets templates where center of template within range of a cast template\r\n\treturn templates.filter(template => {\r\n\t\tconst [a, b] = [x1 - template.x, y1 - template.y]\r\n\t\tconst c  = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\tconst templateCentersDistance = c / gridSize\t\r\n\t\tconst templateRangeModified = template.distance / gridScale\t\r\n\t\tconst itemRangeModified = range / gridScale\t\t\r\n\t\treturn templateCentersDistance < templateRangeModified + itemRangeModified\r\n\t})\r\n}\r\nexport const getTemplatesWithOverlap = (eligibleTemplates, itemTemplatePositions) => {\r\n\treturn eligibleTemplates.filter(template => {\r\n\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\tconst templatePositions = canvas.grid.highlightLayers[gridTemplateId]?.positions ?? new Set(\"-1\")\r\n\t\treturn itemTemplatePositions.intersection(templatePositions).size > 0\r\n\t})\r\n}\r\nexport const getTokensInRange = async (tokens, gridSize, gridScale, itemRange, x1, y1) => {\r\n\treturn tokens.filter(token => {\r\n\t\tconst tokenTopLeftCenterX = token.x + gridSize / 2\r\n\t\tconst tokenTopLeftCenterY = token.y + gridSize / 2\r\n\t\tlet tokenGridBorderCoords = []\r\n\t\t\r\n\t\tfor (let i = 0; i <= token.width * 2 - 1; i++) {\r\n\t\t\tfor (let j = 0; j <= token.width * 2  - 1; j++) {\r\n\t\t\t\ttokenGridBorderCoords.push({x: tokenTopLeftCenterX + gridSize / 2 * i, y: tokenTopLeftCenterY + gridSize / 2 * j})\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst xArr = tokenGridBorderCoords.map(coord => coord.x)\r\n\t\tconst yArr = tokenGridBorderCoords.map(coord => coord.y)\r\n\t\tconst maxX = Math.max(...xArr)\r\n\t\tconst maxY = Math.max(...yArr)\r\n\t\tconst tokenGridCoords = tokenGridBorderCoords.filter(coords => coords.x != maxX && coords.y != maxY)\r\n\t\t\r\n\t\tconst tokenGridCoordsInRange = tokenGridCoords.filter(coord => {\r\n\t\t\tconst [x2, y2] = [coord.x, coord.y]\r\n\t\t\tconst a = x1 - x2\r\n\t\t\tconst b = y1 - y2\r\n\t\t\tconst c = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\t\treturn c / gridSize <= itemRange / gridScale\r\n\t\t})\r\n\t\t\r\n\t\treturn tokenGridCoordsInRange.length > 0\r\n\t})\r\n}\r\nexport const getUpdatedMacroNames = async (macroNames, flagName, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + `,[postRollFinished]function.CHARNAME.macros.${flagName}.deleteTempItem` \r\n\t\t\t: `[postRollFinished]function.CHARNAME.macros.${flagName}.deleteTempItem`\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + `,[postActiveEffects]function.CHARNAME.macros.${flagName}.setReactionHook`\r\n\t} \r\n\treturn update\r\n}\r\nexport const removeEffect = async (effectUuid) => {\r\n\treturn await MidiQOL.socket().executeAsGM(\"removeEffect\", {effectUuid: effectUuid})\r\n}\r\nexport const removeEffects = async (effectUuids) => {\r\n\treturn await MidiQOL.socket().executeAsGM(\"removeEffects\", effectUuids\r\n)}\r\nexport const setActiveEffects = async (tokenActorUuids, effectData) => {\r\n\tconst createEffect = async (tokenActorUuid, effectData) => {return await MidiQOL.socket().executeAsGM(\"createEffects\", {actorUuid: tokenActorUuid, effects: [effectData]})}\r\n\tconst [effects] = await Promise.all(tokenActorUuids.map(tokenActorUuid => createEffect(tokenActorUuid, effectData)))\r\n\treturn effects\r\n}\r\nexport const setActorConcDeletion = async (actor) => {\r\n\tif (actor.effects.find(effect => effect.name == \"Concentrating\")) actor.effects.find(effect => effect.name == \"Concentrating\").delete()\r\n} \r\nexport const setActorConcRemoveUuids = async (originActor, uuid) => {\r\n\tlet originActorConcentrationRemoveUuids = originActor.flags[\"midi-qol\"][\"concentration-data\"]?.removeUuids || []\r\n\toriginActorConcentrationRemoveUuids.push(uuid)\t\r\n\tawait originActor.update({\"flags.midi-qol\": {\"concentration-data\": {removeUuids: originActorConcentrationRemoveUuids}}})\r\n\tconst concEffect = originActor.effects.find(effect => effect.name == \"Concentrating\")\r\n\tawait concEffect.update({\r\n\t\t\"flags.dae\": {\"specialDuration\": [\"shortRest\", \"longRest\"]}\r\n\t})\r\n}\r\nexport const setActorReagentCost = async (actorUuid, itemUuid) => {\r\n\tconst actor = await fromUuid(actorUuid)\r\n\tconst item = await fromUuid(itemUuid)\t\r\n\tif (settings.reagentsConsume = \"money\")  {\r\n\t\t//set this to pull from the lower denominations first\r\n\t\tconst newMoney = actor.system.currency.gp - item.system.materials.cost\r\n\t\tif (newMoney < 0) return false\r\n\t\tactor.update({\"system.currency.gp\": newMoney})\r\n\t} else if (settings.reagentsConsume = \"supply\") {\r\n\t\tconst newSupply = item.system.materials.supply - 1\r\n\t\tif (newSupply < 0) return false\r\n\t\titem.update({\"system.materials.supply\": newSupply})\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n\treturn true\r\n}\r\nexport const setAuraEffectUpdatesWhenDeleted = async (effectName, flagName, template) => {\r\n\tconst tokenActorsEffected = template.flags?.charname[flagName]?.tokenActorsEffected ?? []\r\n\tconst effectUuids = await tokenActorsEffected.forEach(actorUuid => {\r\n\t\tconst actor = fromUuidSync(actorUuid)\t\t\t\r\n\t\tconst effect = actor.effects.find(effect => effect.name == effectName)\t\r\n\t\tif (!effect) return false\r\n\t\tremoveEffect(effect.uuid)\r\n\t})\t\r\n}\r\nexport const setAuraEffectsWhenEntered = async (effectName, flagName, getEffectData, template, token) => {\r\n\tconst tokenEffect = token.actor?.effects.find(effect => effect.name == effectName) ?? false\r\n\tif (!tokenEffect) {\r\n\t\tconst effectData = await getEffectData(template.flags[\"midi-qol\"].actorUuid, template.uuid)\r\n\t\tsetActiveEffects([token.actor.uuid], effectData)\r\n\t\tconst newActorUuids = [\r\n\t\t\t...template.flags.charname.insectCloud.tokenActorsEffected, \r\n\t\t\ttoken.actor.uuid\r\n\t\t]\r\n\t\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\t\tconst updatedTemplate = await template.update({\r\n\t\t\t[flag]: newActorUuids\r\n\t\t})\t\t\t\r\n\t}\t\r\n}\r\nexport const setAuraEffectsWhenLeft = async (effectName, flagName, template, token) => {\r\n\tconst tokenEffect = token.actor?.effects.find(effect => effect.name == effectName) ?? false\r\n\tif (tokenEffect) {\r\n\t\tremoveEffect(tokenEffect.uuid)\r\n\t\tconst newActorUuids = template.flags.charname[flagName].tokenActorsEffected.filter(actorUuid => \r\n\t\t\tactorUuid != token.actor.uuid\r\n\t\t)\r\n\t\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\t\tconst updatedTemplate = await template.update({\r\n\t\t\t[flag]: newActorUuids\r\n\t\t})\t\t\t\r\n\t}\t\r\n}\r\nexport const setAuraEffectsWhenMoved = async (effectData, flagName, newTokenActorUuids, oldTokenActorUuids, template) => {\r\n\tconst newUuidsToEffect = newTokenActorUuids.filter(uuid => \r\n\t\t!oldTokenActorUuids.includes(uuid)\r\n\t)\r\n\tsetActiveEffects(newUuidsToEffect, effectData)\t\r\n\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\ttemplate.update({\r\n\t\t[flag]: newTokenActorUuids\r\n\t})\t\t\r\n}\r\nexport const setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nexport const setCrosshairConfigs = async (tokenUuid, itemRange, size) => {\r\n\tconst target = await fromUuid(tokenUuid)\r\n\tconst {distance} = canvas.scene.grid\r\n\tconst adjustment = size > 0 \r\n\t\t? (canvas.grid.size * .5 * size) \r\n\t\t: (canvas.grid.size * .5)\r\n\twarpgate.crosshairs.show({\r\n\t\tlockSize:true,\r\n\t\tlockPosition: true,\r\n\t\tsize: 2 * itemRange / distance,\r\n\t\ttag: 'range',\r\n\t\tdrawIcon:false,\r\n\t\tlabel: 'Valid Area',\r\n\t\tx: target.x + adjustment,\r\n\t\ty: target.y + adjustment,\r\n\t\trememberControlled: true\r\n\t})\t\r\n\tcanvas.tokens.activate()\r\n}\r\nexport const setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nexport const setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nexport const setTemplateDispels = async (x, y, name, itemTemplatePositions) => {\r\n\tconst dnd5eFlaggedTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e)\r\n\tconst potentialTemplates = dnd5eFlaggedTemplates.filter(template => {\r\n\t\tconst originName = fromUuidSync(template.flags.dnd5e.origin).name\r\n\t\tif (!name) {\r\n\t\t\treturn template.flags.dnd5e.spellLevel\r\n\t\t} else {\r\n\t\t\treturn template.flags.dnd5e.spellLevel && originName == name\t\r\n\t\t}\r\n\t})\r\n\tconst templatesInRange = getTemplatesInRange(potentialTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 60, x, y)\r\n\tconst templatesWithOverlap = getTemplatesWithOverlap(templatesInRange, itemTemplatePositions)\r\n\ttemplatesWithOverlap.map(template => {socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)})\r\n}\r\nexport const updateAuraEffectsOnUse = async (actor, args, effectName, getEffectData, tokenActorUuids) => {\r\n\tconst effectData = await getEffectData(actor.uuid, args[0].templateUuid)\r\n\tconst [appliedEffect] = await setActiveEffects(tokenActorUuids, effectData)\r\n\tconst liveActor = await fromUuid(actor.uuid)\r\n\tconst templateEffect = liveActor.effects.find(effect => effect.name == effectName)\r\n\tconst updatedChanges = [...templateEffect.changes, ...appliedEffect.changes]\r\n\ttemplateEffect.update({\"changes\": updatedChanges})\r\n}\r\nexport const updateAuraFlags = async (flagName, template, tokenActorUuids) => {\r\n\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\tconst updatedTemplate = await template.update({\r\n\t\t[flag]: tokenActorUuids\r\n\t})\t\t\r\n}\r\nexport const updateAuraWhenMoved = async (dispositions, effectName, flagName, getEffectData, template) => {\r\n\tconst [\r\n\t\teffectData, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids\r\n\t] = await getAuraParamsWhenMoved(dispositions, getEffectData, template, flagName)\r\n\tdeleteAuraEffectsWhenMoved(\r\n\t\teffectName, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids,\t\t\r\n\t\ttemplate.flags[\"midi-qol\"].actorUuid\r\n\t)\r\n\tsetAuraEffectsWhenMoved(\r\n\t\teffectData, \r\n\t\tflagName, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids, \r\n\t\ttemplate\r\n\t)\t\r\n}\r\nexport const updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}","import {conditionLabels as c} from \"../constants.js\"\r\nimport {getSpawnLocation} from \"../helper-functions.js\"\r\nimport {setSpawnedTokensInitiative}  from \"../socket-functions.js\"\r\n\r\n//review for later:\r\n//think about adding sounds to the sequencers?\r\n//see if you can fix the buggy useTokenDeleteSequencer Math.random thing\r\n//add the linear fade in thing for the sequencers\r\n\r\n//leaving as example of how override data is more or less laid out \r\n//don't forget to toString() your functions before passing them!\r\n//overrides: {\r\n//\tgeneral: {\r\n//\t\tamountToSpawnByIndex: [10, 3, 5, 1]\r\n//\t}\r\n//\tsequencer: {\r\n//\t\tpre: usePreEffectSequencer.toString(),\r\n//\t\tpost: usePostEffectSequencer.toString(),\r\n//\t\tdelete: useTokenDeleteSequencer.toString(),\r\n//\t\toptions: {\r\n//\t\t\tcircleNum: \"02\",\r\n//\t\t\tcolor: \"green\",\r\n//\t\t\timpactNum: \"011\"\r\n//\t\t\tscale: .15,\r\n//\t\t\tschool: \"conjuration\"\r\n//\t}},\r\n//\twarpGate: {\r\n//\t\tcallbacks: callbackFunc.toString()\r\n//\t\tmutations: {\r\n//\t\t\ttoken: {},\r\n//\t\t\tactor: {}\r\n//\t\t},\r\n//\t\toptions: {\r\n//\t\t\tcontrollingActor: actor\r\n//\t\t}\r\n//\t}\r\n//}\r\n\r\nconst checkCombatActivity = async (token) => {\r\n\tconst combatIsActive = game.combat?.active ?? false\r\n\tif (!combatIsActive) return false\r\n\tconst sourceCombatDoc = game.combat.turns.find(doc => doc.tokenId == token.id)\t\r\n\tif (!sourceCombatDoc) return false\t\r\n\treturn sourceCombatDoc\r\n}\r\nconst createSpawn = async (actor, choice, item, overrides, strings, token) => {\r\n\tconst concEffect = await getConcEffect(token)\r\n\tconst spawnUuids = await createSpawnTokens(actor, choice, concEffect, item, overrides, strings, token)\r\n\tif (!concEffect) return false\r\n\tupdateInitiatives(spawnUuids, token)\r\n\tupdateConcEffect(concEffect, spawnUuids, token)\r\n}\r\nconst createSpawnTokens = async (actor, choice, concEffect, item, overrides, strings, token) => {\r\n\tconst params = await getSpawnParams(\r\n\t\tactor, \r\n\t\tchoice, \r\n\t\tconcEffect, \r\n\t\titem, \r\n\t\toverrides,\r\n\t\tstrings,\r\n\t\ttoken\r\n\t)\t\r\n\tconst spawnIds = await setWarpGateSpawn(params, item, overrides, token)\t\t\r\n\treturn spawnIds.map(id => {\t\t\r\n\t\tconst token = canvas.scene.tokens.find(tokenDoc => tokenDoc.id == id)\t\r\n\t\treturn token.uuid\r\n\t})\t\r\n}\r\nconst getAmountToSpawn = async (choice, overrides, strings) => {\r\n\tconst overrideAmountToSpawn = overrides?.general?.amountToSpawnByIndex ?? 1\r\n\tif (typeof overrideAmountToSpawn == \"number\") return overrideAmountToSpawn\r\n\treturn overrideAmountToSpawn[strings.choices.indexOf(choice)]\t\r\n}\r\nconst getCallbacks = async (i, overrides, size, spawnName, originToken) => {\r\n\tconst overrideCallbacks = overrides?.warpGate?.callbacks ?? []\r\n\tif (overrideCallbacks.length > 0) return eval(overrideCallbacks)\r\n\treturn {\r\n\t\tpre: async (loc) => {\r\n\t\t\tusePreEffectSequencer(i, loc, originToken, size, overrides)\r\n\t\t\tawait warpgate.wait(200)\r\n\t\t},\r\n\t\tpost: async (loc, spawnToken) => {\r\n\t\t\tusePostEffectSequencer(loc, spawnToken, overrides)\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t}\r\n\t}\r\n}\r\nconst getConcEffect = async (token) => {\r\n\tconst liveActor = await fromUuid(token.actor.uuid)\r\n\treturn liveActor.effects.find(effect => \r\n\t\tc.concentrating.includes(effect.name.toLowerCase())\r\n\t)\t\t\r\n}\r\nconst getPreDeleteParams = async (tokenDoc) => {\r\n\tconst amountSpawned = tokenDoc.actor?.flags?.charname?.summoning?.amountSpawned ?? 1\t\r\n\tconst overrides = tokenDoc.actor?.flags?.charname?.summoning?.overrides ?? false\r\n\tconst deleteOverrides = tokenDoc.actor?.flags?.charname?.summoning?.overrides?.sequencer?.delete ?? false\t\r\n\tconst effectUuid = tokenDoc.actor?.flags?.charname?.summoning?.concEffect ?? false\r\n\tconst optionOverrides = tokenDoc.actor?.flags?.charname?.summoning?.overrides?.sequencer?.options ?? {}\t\r\n\treturn [amountSpawned, deleteOverrides, effectUuid, optionOverrides, overrides]\r\n}\r\nconst getPreEffectsSequencerParams = async (originToken, overrides, spawnSize) => {\r\n\tconst circleNum = overrides?.sequencer?.options?.circleNum ?? \"02\"\r\n\tconst color = overrides?.sequencer?.options?.color ?? \"green\"\r\n\tconst school = overrides?.sequencer?.options?.school ?? \"conjuration\"\r\n\tconst scale = overrides?.sequencer?.options?.scale ?? .15\r\n\tconst originScale = Math.max(originToken.document.height, originToken.document.width) * scale\r\n\tconst spawnScale = spawnSize * scale\t\r\n\treturn [circleNum, color, school, originScale, spawnScale]\r\n}\r\nconst getSpawnDetails = async (choice, spawnName, strings) => {\r\n\tconst actor = game.actors.find(actor => actor.name == spawnName)\r\n\tconst iconPath = await getTexturePath(actor, choice, strings)//actor.prototypeToken.texture.src\r\n\tconst size = Math.max(actor.prototypeToken.height, actor.prototypeToken.height)\r\n\treturn [iconPath, size]\r\n}\r\nconst getSpawnParams = async (actor, choice, concEffect, item, overrides, strings, token) => {\r\n\tconst options = overrides?.warpGate?.options ?? {controllingActor: actor}\r\n\tconst spawnName = strings.spawnNames[strings.choices.indexOf(choice)]\r\n\tconst [iconPath, size] = await getSpawnDetails(choice, spawnName, strings)\r\n\tconst amountToSpawn = await getAmountToSpawn(choice, overrides, strings)\r\n\tconst updates = await getSpawnUpdates(amountToSpawn, concEffect, overrides, token)\r\n\tconst interval = size % 2 == 1 ? -1 : 1\r\n\treturn {amountToSpawn, iconPath, interval, options, size, spawnName, updates}\r\n}\r\nconst getSpawnUpdates = async (amountToSpawn, concEffect, overrides, token) => {\r\n\tconst concEffectUuid = !concEffect ? null : concEffect.uuid\r\n\tconst defaultMutations = {\r\n\t\ttoken: {\r\n\t\t\t\"alpha\": 0,\r\n\t\t\t\"disposition\": token.document.disposition\r\n\t\t}, \r\n\t\tactor: \r\n\t\t{\r\n\t\t\t\"flags.charname.summoning.amountSpawned\": amountToSpawn,\r\n\t\t\t\"flags.charname.summoning.concEffect\": concEffectUuid,\r\n\t\t\t\"flags.charname.summoning.overrides\": overrides\r\n\t\t}\r\n\t}\t\r\n\tconst combinedMutations = mergeObject(\r\n\t\tdefaultMutations, \r\n\t\toverrides.warpGate.mutations, \r\n\t\t{overwrite: true, inlace: true, insertKeys: true, insertValues: true}\r\n\t)\r\n\treturn combinedMutations\r\n}\r\nconst getTexturePath = async (actor, choice, strings) => {\r\n\tconst defaultIconPath = strings.defaultIcons[strings.choices.indexOf(choice)]\r\n\treturn defaultIconPath.length > 0 ? defaultIconPath : actor.prototypeToken.texture.src\r\n}\r\nconst onPreDeleteToken = async (tokenDoc, config, user) => {\r\n\tconst theGmUser = game.users.find(user => user.isTheGM)\r\n\tif (game.users.get(user).id != theGmUser.id) return false\t\r\n\tconst [\r\n\t\tamountSpawned, \r\n\t\tdeleteOverrides, \r\n\t\teffectUuid, \r\n\t\toptionOverrides,\r\n\t\toverrides\r\n\t] = await getPreDeleteParams(tokenDoc)\r\n\tif (!deleteOverrides) {\r\n\t\tuseTokenDeleteSequencer(tokenDoc, overrides)\r\n\t} else {\r\n\t\teval(overrides.delete)(tokenDoc, optionOverrides)\r\n\t}\r\n\tif (effectUuid) {\r\n\t\tlet concEffect = await fromUuid(effectUuid)\t\t\t\r\n\t\tlet created = concEffect.flags.charname.summoning.totalSpawnCreated\r\n\t\tlet deleted = concEffect.flags.charname.summoning.totalSpawnDeleted\t\t\r\n\t\t//adding random delay to account for multiple things trying to update all at once\r\n\t\t//refactor this later to see if you can get it to work by using a set or something\r\n\t\tconst delay = Math.floor(Math.random() * 800 * (created - deleted))\r\n\t\tawait warpgate.wait(delay)\t\t\t\r\n\t\tconcEffect = await fromUuid(effectUuid)\t\t\r\n\t\tcreated = concEffect.flags.charname.summoning.totalSpawnCreated\r\n\t\tdeleted = concEffect.flags.charname.summoning.totalSpawnDeleted\r\n\t\tconst newDeleted = deleted + 1\r\n\t\tif (created == newDeleted) {\r\n\t\t\tconcEffect.delete()\r\n\t\t\treturn false\r\n\t\t}\t\r\n\t\tconst updatedConc = await concEffect.update({\"flags\": {\"charname.summoning.totalSpawnDeleted\": newDeleted}})\r\n\t}\r\n}\r\nconst setSpawnedTokensToActive = async (spawnUuids, token) => {\r\n\treturn canvas.scene.tokens.filter(\r\n\t\ttoken => spawnUuids.includes(token.uuid)\r\n\t).map(tokenDoc => {\r\n\t\tconst combatToken = canvas.tokens.placeables.find(token => token.id == tokenDoc.id)\r\n\t\tcombatToken.toggleCombat()\r\n\t\treturn tokenDoc.id\r\n\t})\t\r\n}\r\nconst setWarpGateSpawn = async (params, item, overrides, token) => {\r\n\tconst {\r\n\t\tamountToSpawn, \r\n\t\ticonPath, \r\n\t\tinterval, \r\n\t\toptions, \r\n\t\tsize, \r\n\t\tspawnName, \r\n\t\tupdates\r\n\t} = params\r\n\tlet loc = {}\r\n\tlet spawnIds = []\r\n\tlet callbacks\r\n\tfor (let i = 0; i < amountToSpawn; i++) {\r\n\t\tloc = await getSpawnLocation(\r\n\t\t\ticonPath, \r\n\t\t\tsize, \r\n\t\t\tinterval, \r\n\t\t\ttoken.document.uuid, \r\n\t\t\titem.system.range.value, \r\n\t\t\ttoken\r\n\t\t)\r\n\t\tcallbacks = await getCallbacks(i, overrides, size, spawnName, token) \r\n\t\tspawnIds.push(await warpgate.spawnAt(\r\n\t\t\t{x: loc.x, y: loc.y}, \r\n\t\t\tspawnName, \r\n\t\t\tupdates, \r\n\t\t\tcallbacks, \r\n\t\t\toptions\r\n\t\t))\r\n\t}\r\n\treturn spawnIds\r\n}\r\nconst updateCombatDocs = async (activeTokenIds, init) => {\r\n\t//literally takes a moment to add token to combat\t\r\n\tawait warpgate.wait(1000) \t\r\n\tconst combatDocs = game.combat.turns.filter(doc => activeTokenIds.includes(doc.tokenId))\r\n\tsetSpawnedTokensInitiative(combatDocs, init)\t\r\n}\r\nconst updateConcEffect = async (concEffect, spawnUuids, token) => {\r\n\tconst deleteUuidChanges = spawnUuids.map(uuid => {\r\n\t\treturn {\r\n\t\t\t\"key\": \"flags.dae.deleteUuid\",\r\n\t\t\t\"mode\": 2,\r\n\t\t\t\"priority\": 20,\r\n\t\t\t\"value\": uuid\r\n\t\t}\r\n\t})\r\n\tconst changes = [...concEffect.changes, ...deleteUuidChanges]\r\n\tconst spawnFlags = {\r\n\t\t\"charname.summoning.totalSpawnCreated\": spawnUuids.length,\r\n\t\t\"charname.summoning.totalSpawnDeleted\": 0,\r\n\t\t\"charname.summoning.concEffect\": concEffect.uuid\r\n\t}\r\n\tconcEffect.update({\"changes\": changes, \"flags\": spawnFlags})\t\r\n}\r\nconst updateInitiatives = async (spawnUuids, token) => {\r\n\tconst sourceCombatDoc = await checkCombatActivity(token)\r\n\tif (!sourceCombatDoc) return false\r\n\tconst activeTokenIds = await setSpawnedTokensToActive(spawnUuids, token)\r\n\tconst init = sourceCombatDoc?.initiative ?? false\r\n\tif (!init) return false \r\n\tupdateCombatDocs(activeTokenIds, init)\r\n}\r\nconst usePostEffectSequencer = async (loc, token, overrides) => {\r\n\tconst sequencer = overrides?.sequencer?.post ?? \"\"\r\n\tif (sequencer.length > 0) {\r\n\t\teval(overrides.sequencer.post)(loc, token)\r\n\t\treturn false\r\n\t}\t\r\n\tawait warpgate.wait(2100)\r\n\tconst color = overrides?.sequencer?.options?.color ?? \"green\"\r\n\tconst impactNum = overrides?.sequencer?.options?.impactNum1 ?? \"003\"\r\n\tconst sequencerPath = `jb2a.impact.${impactNum}.${color}`\r\n\tconst {ms, options} = overrides?.sequencer?.options?.fadeIn \r\n\t\t?? {ms: 600, options: {ease: \"easeInQuart\"}}\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t\t.fadeIn(ms, options)\r\n\t\t\t\t.opacity(1)\r\n\t\t.play()\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation(token)\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.opacity(1.0)\r\n\t\t.play()\t\t\r\n}\r\nconst usePreEffectSequencer = async (i, loc, originToken, spawnSize, overrides) => {\r\n\tconst overrideSequencer = overrides?.sequencer?.pre ?? \"\"\r\n\tif (overrideSequencer.length > 0) {\r\n\t\teval(overrides.sequencer.pre)(loc, token)\r\n\t\treturn false\r\n\t}\t\r\n\tconst [\r\n\t\tcircleNum, \r\n\t\tcolor, \r\n\t\tschool, \r\n\t\toriginScale, \r\n\t\tspawnScale\r\n\t] = await getPreEffectsSequencerParams(originToken, overrides, spawnSize)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.intro.${color}`)\r\n\t\t\t.scale(spawnScale)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(loc)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.loop.${color}`)\r\n\t\t\t.scale(spawnScale)\r\n\t\t\t.atLocation(loc)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.outro.${color}`)\r\n\t\t\t.scale(spawnScale)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(loc)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\r\n\tif (i == 0) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.intro.${color}`)\r\n\t\t\t\t.scale(originScale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation(originToken)\r\n\t\t\t\t.belowTokens() \r\n\t\t\t\t.waitUntilFinished(-1150)\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.loop.${color}`)\r\n\t\t\t\t.scale(originScale)\r\n\t\t\t\t.atLocation(originToken)\r\n\t\t\t\t.belowTokens() \r\n\t\t\t\t.fadeIn(200)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.waitUntilFinished(-1150)\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.outro.${color}`)\r\n\t\t\t\t.scale(originScale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation(originToken)\r\n\t\t\t\t.belowTokens() \r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst useTokenDeleteSequencer = async (token, overrides) => {\r\n\tconst overrideSequencer = overrides?.sequencer?.delete ?? \"\"\r\n\tif (overrideSequencer.length > 0) {\r\n\t\teval(overrides.sequencer.delete)(loc, token)\r\n\t\treturn false\r\n\t}\t\r\n\tconst color = overrides?.sequencer?.options?.color ?? \"green\"\r\n\tconst impactNum = overrides?.sequencer?.options?.impactNum2 ?? \"003\"\r\n\tconst {ms, options} = overrides?.sequencer?.options?.fadeIn \r\n\t\t?? {ms: 600, options: {ease: \"easeInQuart\"}}\r\n\tconst sequencerPath = `jb2a.impact.${impactNum}.${color}`\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.fadeIn(ms, options)\r\n\t\t\t\t.opacity(1)\r\n\t\t.play()\t\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation(token)\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.opacity(1.0)\r\n\t\t.play()\t\t\r\n}\r\n\r\nexport const summoning = {\r\n\tcreateSpawn,\r\n\tonPreDeleteToken\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {getTokensInRange} from \"../../helper-functions.js\"\r\n\r\nasync function getEligibleTokenDocuments(tokenDocuments, scene, itemRange, originX, originY) {\r\n\tconst tokenDocsInRange = await getTokensInRange(tokenDocuments, scene.grid.size, scene.grid.distance, itemRange, originX, originY)\r\n\tif (!tokenDocsInRange) return false\r\n\tconst templateNonEffectedTokens = await getNonTemplateEffectedTokenDocs(tokenDocsInRange)\r\n\tif (!templateNonEffectedTokens) return false\r\n\treturn templateNonEffectedTokens\r\n}\r\nasync function getNonTemplateEffectedTokenDocs(tokenDocuments, itemEffectName) {\r\n\treturn tokenDocuments.filter(token => {\r\n\t\tconst effects = token.actor.statuses\r\n\t\treturn effects.has(itemEffectName) == false\r\n\t})\r\n}\r\nconst onUse = async ({args, workflow, item, actor, token}) => {\r\n\tconst itemEffectName = \"Convenient Effect: Aura of Purity\"\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\tconst scene = await fromUuid(template.parent.uuid)\r\n\tconst itemRange = args[0].item.system.target.value\r\n\tconst tokenDocs = Array.from(scene.collections.tokens.values())\r\n\t\r\n\tconst eligibleTokenDocs = await getEligibleTokenDocuments(tokenDocs, scene, itemRange, template.x, template.y)\r\n\tif (!eligibleTokenDocs) return false\r\n\r\n\tconst tokenEffectUuids = await setTokenEffects(eligibleTokenDocs, token.document.disposition)\r\n\tawait template.update({\r\n\t\t\"flags.castData.auraOfPurity.tokensEffected\": tokenEffectUuids\r\n\t})\r\n}\r\nconst preTargetSave = async ({args, workflow, item, actor}) => {\r\n\tconst itemHasEffect = item.effects.some(effect => effect.changes.some(change => {\r\n\t\treturn conditionLabels[\"blinded\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"charmed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"deafened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"frightened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"paralyzed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"stunned\"].includes(change.value.toLowerCase())\r\n\t}))\r\n\tif (itemHasEffect) workflow.saveDetails.advantage = true\r\n}\r\nasync function setTokenEffects(tokenDocs, casterDisposition) {\r\n\tlet effected = []\r\n\tlet uuid = \"\"\r\n\tfor (let i=0; i < tokenDocs.length; i++) {\r\n\t\tconsole.log(\"tokenDocs[i]\")\r\n\t\tconsole.log(tokenDocs[i])\r\n\t\tuuid = tokenDocs[i].actor.uuid\r\n\t\tif ((casterDisposition == 1 && tokenDocs[i].disposition != -1)\r\n\t\t\t|| (casterDisposition == -1  && tokenDocs[i].disposition != 1)) {\r\n\t\t\tgame.dfreds.effectInterface.addEffect( {effectName: 'Aura of Purity', uuid} )\r\n\t\t\teffected.push(uuid)\r\n\t\t}\r\n\t}\r\n\treturn effected\r\n}\r\n\r\nexport const auraOfPurity = {\r\n\tpreTargetSave,\r\n\tonUse\r\n}","const getBlightEffectData = async (origin) => {\r\n\treturn {\r\n\t\tname: `Blight Saving Throw Disadvantage`, \r\n\t\ticon: \"icons/magic/movement/chevrons-down-yellow.webp\", \r\n\t\torigin: origin,\r\n\t\tchanges: [{key: \"flags.midi-qol.disadvantage.ability.save.all\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [\"1\"], \"priority\": 20}],\r\n\t\t\"flags.dae.stackable\": \"noneName\",\r\n\t\t\"flags.times-up.isPassive\": true,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\", \"combatEnd\", \"isSave\"],\r\n\t\t\"flags.dae.showIcon\": false,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst setBlightHook = async (castLevel) => {\r\n\tconst blightPreDamageRollHookId = Hooks.once(\"dnd5e.preRollDamage\", (rolledItem, rollConfig) => {\r\n\t\tconst maxDamageRoll = 8 * castLevel + 32\r\n\t\tconst maxDamageString = String(maxDamageRoll) + \"[necrotic]\" \r\n\t\trollConfig.parts = [maxDamageString]\r\n\t})\t\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].hitTargets[0].actor.system.details.type.value == \"plant\") {\r\n\t\tconst effectData = await getBlightEffectData(args[0].item.uuid)\r\n\t\tawait MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: args[0].hitTargets[0].actor.uuid, effects: [effectData] })\r\n\t\tawait setBlightHook(args[0].castData.castLevel)\r\n\t}\t\r\n}\r\n\r\nexport const blight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getSpawnLocation, setActorConcDeletion, setActorConcRemoveUuids} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getSpawnUpdates = async (originActorSenses, originTokenSight) => {\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"alpha\": 0,\r\n\t\t\t\"sight\": originTokenSight\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"system.attributes.senses\": originActorSenses\r\n\t\t}\r\n\t}\r\n}\r\nconst getTokenSpawnIds = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawnedTokenId = await setSpawnedTokenId(tokenUuid, itemRange, actor, originToken)\r\n\tconst spawnedToken = canvas.scene.collections.tokens.get(spawnedTokenId)\r\n\treturn spawnedToken.uuid\r\n}\r\nconst getWarpgateCallbacks = async (tokenUuid) => {\r\n\treturn {\r\n\t\tpre: async (template,update,token) => {\r\n\t\t\tsetEffectsSequencer(template, update, token, tokenUuid)\r\n\t\t\tawait warpgate.wait(2650)\r\n\t\t},\r\n\t\tpost: async (template, token) => {\r\n\t\t\tsetPostEffectsSequencer(template,token)\r\n\t\t}\r\n\t}\r\n}\r\nconst getWarpgateOptions = async (actor) => {\r\n\treturn {controllingActor: actor}\r\n}\r\nconst getWarpgateUpdates = async (spawn, originActorSenses, originTokenSight) => {\r\n\tconst updates = await getSpawnUpdates(originActorSenses, originTokenSight)\r\n\treturn mergeObject(updates, spawn)\r\n}\r\nconst setEffectsSequencer = async (template, update, token, originTokenUuid) => {\r\n\tconst color = \"blue\"\r\n\tconst originToken = await fromUuid(originTokenUuid)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.intro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.loop.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.outro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\t\r\n}\r\nconst setHookMacros = async (actor, spawnedTokenUuid) => {\r\n\tconst userIsGM = game.users.find(user => user.id == game.userId).isTheGM\r\n\tif (!userIsGM) {\r\n\t\tawait socket.executeAsGM(\"setDeleteSummonConcentrationHook\", actor, spawnedTokenUuid)\r\n\t}\r\n\tconst deleteSummonConcentrationHookId = Hooks.on(\"deleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", deleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\r\n}\r\nconst setPostEffectsSequencer = async (template, token) => {\r\n\tconst sequencerPath = \"jb2a.impact.009.blue\"\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.fadeIn(250)\t\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\t\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t.play()\r\n\t\r\n}\r\nconst setPostSpawnEffects = async (spawnedTokenUuid, originTokenActorUuid) => {\r\n\tconst fromUuidActor = await fromUuid(originTokenActorUuid)\r\n\tawait setActorConcRemoveUuids(fromUuidActor, spawnedTokenUuid)\r\n\tawait setHookMacros(fromUuidActor, spawnedTokenUuid)\t\r\n}\r\nconst setSpawnedTokenId = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawn = {\r\n\t\ttoken: { name:\"Clairvoyance\"},\r\n\t\tactor: { name:\"Clairvoyance\"}\r\n\t}\r\n\tconst location = await getSpawnLocation(\"modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_Grey_Sphere_400x400.webm\", 1, 4, tokenUuid, itemRange, originToken)\r\n\tconst spawnedTokenId = await warpgate.spawnAt({x: location.x, y: location.y}, spawn.token.name, await getWarpgateUpdates(spawn, actor.system.attributes.senses, originToken.document.sight), await getWarpgateCallbacks(tokenUuid), await getWarpgateOptions(actor))\r\n\treturn spawnedTokenId[0]\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tawait setActorConcDeletion(actor)\r\n\t} else {\t\r\n\t\tconst spawnedTokenUuid = await getTokenSpawnIds(args[0].tokenUuid, 5280, actor, token)\t\t\r\n\t\tawait setPostSpawnEffects(spawnedTokenUuid, token.document.actor.uuid)\t\r\n\t}\r\n}\r\n\r\nexport const clairvoyance = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getTemplatesInRange, getTemplatesWithOverlap} from \"./helper-functions.js\"\r\nimport {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const setAreaEffectDeleteHook = async (range, x, y, ineligibleEffectNames, minSpellLevel, originTemplateActiveEffect, itemTemplatePositions) => {\r\n\tconst setAreaEffectDeleteHookId = Hooks.on(\"refreshMeasuredTemplate\", (templateData) => {\r\n\t\tconst template = templateData.document\t\t\r\n\t\tconst originFlag = template.flags?.dnd5e?.origin ?? false\r\n\t\tconst templateSpellLevel = template.flags?.dnd5e?.spellLevel ?? 0\r\n\t\tif (!originFlag || templateSpellLevel > minSpellLevel) return false\t\t\r\n\t\tconst origin = fromUuidSync(template.flags.dnd5e.origin)\r\n\t\tif (ineligibleEffectNames.includes(origin.name) || ineligibleEffectNames == \"all\") {\t\r\n\t\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\t\tconst gridTemplatePositions = canvas.grid.highlightLayers[gridTemplateId].positions\t\r\n\t\t\tconst templatesOverlap = itemTemplatePositions.intersection(gridTemplatePositions).size > 0 \r\n\t\t\tif (!templatesOverlap) return false\r\n\t\t\t//waiting for potential concentration effects to cycle through\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsocket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)\r\n\t\t\t}, 200)\t\t\t\t\r\n\t\t}\r\n\t})\r\n\tawait setAreaEffectDeleteHookOff(originTemplateActiveEffect, setAreaEffectDeleteHookId)\r\n}\r\nexport const setAreaEffectDeleteHookOff = async (templateEffect, setAreaEffectDeleteHookId) => {\r\n\tconst setAreaEffectDeleteHookOffId = Hooks.on(\"deleteActiveEffect\", (effect, config) => {\t\t\t\r\n\t\tif (effect.uuid == templateEffect.uuid) {\r\n\t\t\tHooks.off(\"createMeasuredTemplate\", setAreaEffectDeleteHookId)\r\n\t\t\tHooks.off(\"deleteActiveEffect\", setAreaEffectDeleteHookOffId)\r\n\t\t}\r\n\t})\r\n}","import {getDialogueButtonType, setActiveEffects, setTemplateDispels} from \"../../helper-functions.js\"\r\nimport {setAreaEffectDeleteHook} from \"../../hooks.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getEffectOriginData = async (originUuid, lightId) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\torigin: originUuid,\r\n\t\tchanges: [{key: \"macro.execute\", mode: 0, value: \"function.CHARNAME.macros.daylight.setSpellEffects\"}],\r\n\t\t\"flags.castData.daylight.lightId\": lightId,\r\n\t\t\"flags.dae.showIcon\": false,\t\t\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": true,\t\t\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectTokenData = async (originUuid) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\tduration: {rounds: 600},\r\n\t\torigin: originUuid,\r\n\t\tchanges: [\r\n\t\t\t{key: `ATL.light.dim`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [120]},\r\n\t\t\t{key: `ATL.light.bright`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [60]},\r\n\t\t\t{key: `ATL.light.attenuation`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [.35]}\r\n\t\t],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": false,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.showIcon\": true,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area of Effect\":\r\n\t\t\treturn \"icons/magic/air/weather-clouds-sunlight.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/air/weather-sunlight-sky.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst setAreaChoiceEffects = async (templateUuid, templateEffect, tokenActorUuid, itemUuid, positions) => {\r\n\tconst [x, y] = await setTemplateEffects(templateUuid, templateEffect, positions)\r\n\tconst lightParams = {\"x\": x, \"y\": y, \"config\": {\"bright\": 60, \"dim\": 120, \"attenuation\": .4}}\r\n\tconst [sanitizedLight] = await socket.executeAsGM(\"setAmbientLightCreate\", lightParams)\r\n\tconst [effect] = await setActiveEffects([tokenActorUuid], await getEffectOriginData(itemUuid, sanitizedLight._id))\t\r\n\tawait setAreaEffectDeleteHook(60, x, y, [\"Darkness\"], 9, effect, positions)\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token) => {\r\n\tif (!token) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation({\"x\": x, \"y\": y})\r\n\t\t\t.play()\t\t\t\t\r\n\t} else {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.attachTo(token)\r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst setInitChoice = async (itemUuid)  => {\r\n\tconst type = await getDialogueButtonType([\"Area of Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Daylight?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tconst target = game.user.targets.first()\r\n\t\tawait setActiveEffects([target.document.actor.uuid], await getEffectTokenData(itemUuid))\r\n\t\tawait setEffectsSequencer(0, 0, target.document.width, target)\r\n\t\treturn false\t\t\t\r\n\t}\t\r\n\treturn true\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tconst isAreaChoice = await setInitChoice(item.uuid)\r\n\t\tif (!isAreaChoice) return false\r\n\t} else if (args[0].tag == \"OnUse\" && args[0].macroPass == \"postActiveEffects\") {\r\n\t\tconst templateId = \"MeasuredTemplate.\" + args[0].templateId \r\n\t\tconst templatePositions = canvas.grid.highlightLayers[templateId].positions\r\n\t\tconst templateEffect = actor.effects.find(effect => effect.name == \"Daylight Template\")\r\n\t\tawait setAreaChoiceEffects(args[0].templateUuid, templateEffect, token.document.actor.uuid, item.uuid, templatePositions)\r\n\t} else if (args[0] == \"off\")  {\r\n\t\tconst lastArg = args[args.length - 1]\r\n\t\tawait socket.executeAsGM(\"setAmbientLightDelete\", lastArg.efData.flags.castData.daylight.lightId)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setTemplateEffects = async (templateUuid, templateEffect, templatePositions) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tawait setEffectsSequencer(template.x, template.y, 7, false)\r\n\tawait setTemplateDispels(template.x, template.y, \"Darkness\", templatePositions)\r\n\ttemplateEffect.delete()\r\n\treturn [template.x, template.y]\r\n}\r\n\r\nexport const daylight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getDialogueButtonType, getTemplatesInRange} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst deleteEffectsOnToken = async (casterToken, dispelAbility, dispelLevel) => {\r\n\tconst target = game.user.targets.first()\t\r\n\tconst [effectsLTE2DispelLevel, effectsGTDispelLevel] = await getTokenEffects(target, dispelLevel)\r\n\tconst effectsIdsToDelete = await getEffectsToDelete(casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel)\r\n\teffectsIdsToDelete.map(socket.executeAsGM(\"setActiveEffectDelete\", target.actor, effectsIdsToDelete[i]))\r\n}\r\nconst deleteTemplate = async (casterToken, dispelAbility, dispelLevel, selectedTemplate) => {\r\n\tconst spellLevel = selectedTemplate.flags.dnd5e.spellLevel\r\n\tconst templatesToDelete = dispelLevel < spellLevel ? await getTemplatesToDelete(casterToken, dispelAbility, [selectedTemplate]) : [selectedTemplate]\r\n\ttemplatesToDelete.map(template => socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid))\r\n}\r\nconst getEffectsToDelete = async (casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel) => {\r\n\tconst casterAbilityMod = casterToken.actor.system.abilities[dispelAbility].mod\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet effectCastLevel = 0\r\n\tfor (let i = 0; i < effectsGTDispelLevel.length; i++) {\r\n\t\teffectCastLevel = effectsGTDispelLevel[i].flags[\"midi-qol\"].castData.castLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > effectCastLevel + 10) arr.push(effectsGTDispelLevel[i])\t\t\r\n\t}\r\n\treturn effectsLTE2DispelLevel.concat(arr).map(effect => effect.id)\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area Effect\":\r\n\t\t\treturn \"icons/magic/air/air-burst-spiral-blue-gray.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/nature/plant-sprout-hand-blue.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelectedTemplate = async (casterToken) => {\r\n\tconst eligibleTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e.spellLevel > 0)\r\n\tconst inRangeEligibleTemplates = getTemplatesInRange(eligibleTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 120, casterToken.x, casterToken.y)\t\r\n\tlet originItem\r\n\tlet originItems = []\r\n\tfor (let i = 0; i < inRangeEligibleTemplates.length; i++) {\r\n\t\toriginItem = await fromUuid(inRangeEligibleTemplates[i].flags.dnd5e.origin)\r\n\t\toriginItems.push(originItem)\r\n\t}\r\n\treturn await getTemplateSelection(originItems, inRangeEligibleTemplates)\r\n}\r\nconst getTemplateSelection = async (items, inRangeEligibleTemplates) => {\r\n\tconst sortedTemplates = inRangeEligibleTemplates.sort((a, b) => {\r\n\t\tconst aOrig = fromUuidSync(a.flags.dnd5e.origin)\t\r\n\t\tconst bOrig = fromUuidSync(b.flags.dnd5e.origin)\r\n\t\treturn aOrig.name.localeCompare(bOrig.name)\r\n\t})\r\n\tconst templateSelections = items.map((item, i) => {\r\n\t\tconst itemOwnerName = canvas.scene.tokens?.find(token => token.actor.uuid == item.parent.uuid)?.name ?? \"unknown\"\r\n\t\tconst itemLabel = item.name + \" from \" + itemOwnerName\t\r\n\t\treturn {type: 'radio', label: itemLabel}\r\n\t}).sort((a, b) => a.label.localeCompare(b.label))\t\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: templateSelections\r\n\t\t},{\r\n\t\t\ttitle: \"Which template to dispel?\",\r\n\t\t\trender: (...args) => { console.log(...args); ui.notifications.info(\"render!\")},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100px\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn sortedTemplates[choices.inputs.indexOf(true)]\r\n}\r\nconst getTemplatesToDelete = async (casterToken, dispelAbility, potentialTemplates) => {\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet templateCastLevel = 0\r\n\tfor (let i = 0; i < potentialTemplates.length; i++) {\r\n\t\ttemplateCastLevel = potentialTemplates[i].flags.dnd5e.spellLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > potentialTemplates[i].flags.dnd5e.spellLevel + 10) arr.push(potentialTemplates[i])\t\t\r\n\t}\t\r\n\treturn arr\r\n}\r\nconst getTokenEffects = async (token, dispelLevel) => {\r\n\t//get two groups, 1: effects w/ spell levels lesser than or equal to the casted spell level of dispel magic; and 2: the same with greater than that level\r\n\tconst effectsLTE2DispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > 0 && effect.flags[\"midi-qol\"].castData.baseLevel <= dispelLevel)\r\n\tconst effectsGTDispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > dispelLevel)\r\n\treturn [effectsLTE2DispelLevel, effectsGTDispelLevel]\r\n} \r\nconst setInitChoice = async (casterUuid, dispelAbility, dispelLevel)  => {\r\n\tconst type = await getDialogueButtonType([\"Area Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Dispel Magic?\", getIconPaths, 60, 60)\r\n\tconst casterToken = await fromUuid(casterUuid)\t\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tdeleteEffectsOnToken(casterToken, dispelAbility, dispelLevel)\t\r\n\t} else if (type.value == \"Area Effect\") {\r\n\t\tconst selectedTemplate = await getSelectedTemplate(casterToken)\r\n\t\tdeleteTemplate(casterToken, dispelAbility, dispelLevel, selectedTemplate)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setSpellEffects = async ({args, item, workflow}) => {\r\n\tconst casterUuid = args[0].tokenUuid\r\n\tconst dispelAbility = args[0].actor.system.attributes.spellcasting\r\n\tconst dispelLevel = args[0].spellLevel < 3 ? 3 : args[0].spellLevel\r\n\tsetInitChoice(casterUuid, dispelAbility, dispelLevel)\r\n}\r\n\r\nexport const dispelMagic = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {conditionLabels} from \"../../constants.js\"\r\n\r\nconst main = async ({item, workflow, args}) => {\r\n\tconst hasCharm = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"charmed\"].includes(change.value.toLowerCase())))\r\n\tif (hasCharm) {\r\n\t\tworkflow.saveDetails.advantage = true\r\n\t}\r\n}\r\n\r\nexport const feyAncestry = {\r\n\tmain\r\n}","export const protectionFromPoison = {\r\n\tinitHeader: \t\t\"What do you want to cast?\"\r\n}\r\nexport const giantInsect = {\r\n\tchoices:\t\t\t[\"Ten Giant Centipedes\", \"Three Giant Spiders\", \"Five Giant Wasps\", \"One Giant Scorpion\"],\r\n\tdefaultIcons:\t\t\t\t[\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantCentipede.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantSpider.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantWasp.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantScorpion.webp\"\r\n\t\t\t\t\t\t],\r\n\tinitHeader:\t\t\t\"What do you want to create?\",\r\n\tpreEffectSeqPath:\t\"modules/jb2a_patreon/Library/2nd_Level/Misty_Step/MistyStep_01_Regular_Orange_400x400.webm\",\r\n\tspawnNames:\t\t\t[\"Giant Centipede\", \"Giant Spider\", \"Giant Wasp\", \"Giant Scorpion\"]\r\n}\r\nexport const summonCelestial = {\r\n\tcharnamesIcons:\t\t[\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Celestial/Solar_Large_Scale200_Celestial_A_11.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Celestial/Planetar_Large_Scale150_Celestial_01.webp\"\r\n\t\t\t\t\t\t],\t\r\n\tchoices:\t\t\t[\"Celestial Avenger\", \"Celestial Defender\"],\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/celestial/SolarBow.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/celestial/Planetar.webp\"\r\n\t\t\t\t\t\t],\r\n\tinitHeader:\t\t\t\"What do you want to summon?\",\r\n\tspawnNames:\t\t\t[\"Celestial Avenger Spirit\", \"Celestial Defender Spirit\"]\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {giantInsect as s} from \"../../strings/spells.js\"\r\nimport {summoning} from \"../../helpers/summons.js\"\r\n\r\nconst getOverrides = async () => {\r\n\treturn {\r\n\t\tgeneral: {\r\n\t\t\tamountToSpawnByIndex: [10, 3, 5, 1]\r\n\t\t}\r\n\t}\r\n}\r\nconst getSpellIconPaths = (choice) => {\r\n\tconst index = s.choices.indexOf(choice)\r\n\tconst actor = game.actors.find(actor => actor.name == s.spawnNames[index])\r\n\tconst icon = actor?.img ?? false\t\r\n\tif (!icon) return s.defaultIcons[index]\r\n\treturn icon\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst choice = await getDialogueButtonType(\r\n\t\ts.choices, \r\n\t\t{width: s.choices.length * 150, height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetSpellIconPaths, \r\n\t\t60, \r\n\t\t60, \r\n\t\t[]\r\n\t)\r\n\tconst overrides = await getOverrides(actor, workflow)\r\n\tsummoning.createSpawn(actor, choice.value, item, overrides, s, token) \r\n}\r\n\r\nexport const giantInsect = {\r\n\tonUse\r\n}","import {cloudSpellNames} from \"../../constants.js\"\r\n\r\nconst getAoeOverlapPerc = async (args) => {\r\n\tconst creatureCoords = await getCreatureCoords(args[0].actor.token)\r\n\tconst templateCoords = await getTemplateCoords(args[0].templateId) ?? false\r\n\tif (!templateCoords) return 0\r\n\tconst overlap = creatureCoords.intersection(templateCoords)\r\n\treturn overlap.size / creatureCoords.size\r\n}\r\nconst getCreatureCoords = async (tokenDoc) => {\r\n\tconst gridSize = canvas.scene.grid.size\r\n\tlet set = new Set()\r\n\tlet position = \"\"\r\n\tfor (let i = 0; i < tokenDoc.height; i++) {\r\n\t\tfor (let j = 0; j < tokenDoc.width; j++) {\r\n\t\t\tposition = (tokenDoc.x + gridSize*i).toString() + \".\" + (tokenDoc.y + gridSize*j).toString() \r\n\t\t\tset.add(position)\r\n\t\t}\r\n\t}\r\n\treturn set\r\n}\r\nconst getNewDamage = async(hpDamage, hordeCount, multiplier, hasAreaTarget) => {\r\n\treturn hasAreaTarget ? Math.floor(hpDamage * hordeCount * multiplier) : hpDamage\r\n}\r\nconst getTemplateCoords = async (templateId) => {\r\n\tconst templateIdStr = \"MeasuredTemplate.\" + templateId\r\n\treturn canvas.grid.highlightLayers[templateIdStr].positions\r\n}\r\nconst isSaveFailure = async ({args, item}) => {\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tconsole.log(await getAoeOverlapPerc(args))\r\n\tif (!item.system.hasAreaTarget || await getAoeOverlapPerc(args) <= .666) {\r\n\t\tHooks.once(\"createActiveEffect\", (effect) => {\t\t\t\r\n\t\t\teffect.delete()\r\n\t\t})\r\n\t}\t\r\n}\r\nconst preTargetDamageApplication = async ({actor, args, item, workflow, token}) => {\r\n\tif (workflow.hitTargets.size < 1) return false\r\n\tconst hordeItem = await fromUuid(actor.items.find(item => item.name == \"Horde\").uuid)\r\n\tconst hordeItemUses = hordeItem.system.uses.value\r\n\tconst hordeItemUsesMax = hordeItem.system.uses.max\r\n\tconst liveTokenDoc = await fromUuid(token.document.uuid)\r\n\tconst hpDamage = workflow.damageItem.hpDamage\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tif (hpDamage > 0) setHpUpdateEffects(actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args)\r\n}\r\nconst setHpUpdateEffects = async (actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args) => {\r\n\tconst aoeOverlapPerc = await getAoeOverlapPerc(args)\r\n\tconst newHpDamage = await getNewDamage(hpDamage, hordeItemUses, aoeOverlapPerc, hasAreaTarget)\r\n\tworkflow.damageItem.hpDamage = newHpDamage\r\n\tsetPostDamageUpdates(actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax)\r\n}\r\nconst setLiveTokenDocUpdates = async (texture, hordeItem, hordeItemUsesMax, multiplier, liveTokenDoc, shouldReduce, tokenSizeNum) => {\r\n\t\thordeItem.update({\"system.uses.value\": hordeItemUsesMax * multiplier})\r\n\t\tif (tokenSizeNum > 2 && shouldReduce) {\r\n\t\t\tawait warpgate.wait(4000)\t\r\n\t\t\tsetSequencer(liveTokenDoc)\r\n\t\t\tawait warpgate.wait(200)\t\r\n\t\t\tif (liveTokenDoc.actor.system.traits.size != \"grg\" && liveTokenDoc.width <= 4 && liveTokenDoc.width <= 4) {\r\n\t\t\t\tliveTokenDoc.actor.update({\"system.traits.size\": Object.keys(CONFIG.DND5E.actorSizes)[tokenSizeNum - 1]})\r\n\t\t\t}\r\n\t\t\tliveTokenDoc.update({\"width\": liveTokenDoc.width - 1, \"height\": liveTokenDoc.width - 1})\t\r\n\t\t}\r\n\t\tliveTokenDoc.update({\"texture.src\": texture})\r\n}\r\nconst setPostDamageUpdates = async (actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax) => {\r\n\tconst newHealthPercentage = ((actor.system.attributes.hp.value - newHpDamage) / actor.system.attributes.hp.max) * 100\r\n\tconst tokenSizeNum = Object.keys(CONFIG.DND5E.actorSizes).indexOf(liveTokenDoc.actor.system.traits.size)\r\n\tlet shouldReduce = false\r\n\tif (75 >= newHealthPercentage && newHealthPercentage > 50) {\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img1, hordeItem, hordeItemUsesMax, .75, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (50 >= newHealthPercentage && newHealthPercentage > 25) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img2, hordeItem, hordeItemUsesMax, .50, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (25 >= newHealthPercentage && newHealthPercentage >= 0) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img3, hordeItem, hordeItemUsesMax, .25, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} \r\n}\r\nconst setSequencer = async (liveTokenDoc) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(liveTokenDoc.actor.flags[\"midi-qol\"].hordePassive.sequencerPath)\r\n\t\t\t.atLocation(liveTokenDoc)\r\n\t\t.play()\r\n}\r\n\r\nexport const hordePassive = {\r\n\tisSaveFailure,\r\n\tpreTargetDamageApplication\r\n}","export const insectCloud = {\r\n\tflagName:\t\t\t\t\"insectCloud\",\r\n\teffectName:\t\t\t\t\"Insect Cloud\",\r\n\ttemplateEffectName:\t\t\"Insect Cloud Template\"\r\n}","import {\r\n\tsetActiveEffects,\r\n\tsetAuraEffectUpdatesWhenDeleted,\r\n\tsetAuraEffectsWhenEntered,\r\n\tsetAuraEffectUpdatesWhenMoved,\r\n\tsetAuraEffectsWhenLeft,\r\n\tupdateAuraEffectsOnUse,\r\n\tupdateAuraFlags,\r\n\tupdateAuraWhenMoved\r\n} from \"../../../helper-functions.js\"\r\nimport {insectCloud as s} from \"../../../strings/features.js\"\r\n\r\nconst checkAttackerVision = (workflow) => {\r\n\tif (workflow.targets.first() == workflow.attackingToken) return false\r\n\tconst [target, bsRange, tsRange, units] = getCheckAttackerVisionParams(workflow)\r\n\tif (![\"ft\", \"m\", null].includes(units) && (bsRange > 0 || tsRange > 0)) return false \r\n\tconst attackerIsDefenderEffectOrigin = checkEffectOrigin(target, workflow.attackingToken)\r\n\tif (attackerIsDefenderEffectOrigin) return false\r\n\tconst inBsOrTsRange = getIfInBsOrTsRange(bsRange, tsRange, target, workflow)\r\n\tconst defenderIsOwnEffectOrigin = checkEffectOrigin(target, target)\r\n\tif (!inBsOrTsRange && defenderIsOwnEffectOrigin) return true\r\n\tconst attackerIsOwnEffectOrigin = checkEffectOrigin(workflow.attackingToken, workflow.attackingToken)\r\n\tif (!inBsOrTsRange && !attackerIsOwnEffectOrigin) return true\r\n\treturn false\r\n}\r\nconst checkDefenderVision = (workflow) => {\r\n\tif (workflow.targets.first() == workflow.attackingToken) return false\r\n\tconst [target, bsRange, tsRange, units] = getCheckDefenderVisionParams(workflow)\r\n\tif (![\"ft\", \"m\", null].includes(units) && (bsRange > 0 || tsRange > 0)) return false\r\n\tconst defenderIsAttackerEffectOrigin = checkEffectOrigin(workflow.attackingToken, target)\r\n\tif (defenderIsAttackerEffectOrigin) return false\r\n\tconst inBsOrTsRange = getIfInBsOrTsRange(bsRange, tsRange, target, workflow)\r\n\tconst defenderIsOwnEffectOrigin = checkEffectOrigin(target, target)\r\n\tif (inBsOrTsRange || defenderIsOwnEffectOrigin) return false\r\n\treturn true\r\n}\r\nconst checkEffectOrigin = (effectedToken, candidateToken) => {\r\n\tconst effect = effectedToken.actor.effects.find(effect => \r\n\t\ts.insectCloudEffectNames.includes(effect.name)\r\n\t)\r\n\tconst origin = effect?.origin ?? {}\r\n\treturn origin == candidateToken.actor.uuid\r\n}\r\nconst getCheckAttackerVisionParams = (workflow) => {\r\n\tconst target = workflow.targets.first()\r\n\tconst bsRange = workflow.actor.attributes.senses.blindsight\r\n\tconst tsRange = workflow.actor.attributes.senses.tremorsense\r\n\tconst units = workflow.actor.attributes.senses.units\t\r\n\treturn [target, bsRange, tsRange, units] \r\n}\r\nconst getCheckDefenderVisionParams = (workflow) => {\r\n\tconst target = workflow.targets.first()\r\n\tconst bsRange = target.actor.system.attributes.senses.blindsight\r\n\tconst tsRange = target.actor.system.attributes.senses.tremorsense\r\n\tconst units = target.actor.system.attributes.senses.units\t\r\n\treturn [target, bsRange, tsRange, units] \r\n}\r\nconst getEffectData = async (originUuid, templateUuid) => {\r\n\tconst duration = await getEffectDuration(templateUuid)\r\n\treturn {\r\n\t\tname: \"Insect Cloud\", \r\n\t\ticon: \"icons/creatures/invertebrates/wasp-swarm-movement.webp\", \r\n\t\torigin: originUuid,\r\n\t\tduration,\r\n\t\tchanges: [{\r\n\t\t\t\tkey: \"flags.midi-qol.grants.disadvantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkAttackerVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.advantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkDefenderVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.grants.advantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkDefenderVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.disadvantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkAttackerVision(workflow)`]\r\n\t\t}],\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectDuration = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tconst sourceActor = await fromUuid(template.flags[\"midi-qol\"].actorUuid)\r\n\tconst templateEffect = sourceActor.effects.find(effect => effect.name == s.templateEffectName)\r\n\treturn templateEffect.duration\r\n}\r\nconst getIfInBsOrTsRange = (bsRange, tsRange, target, workflow) => {\r\n\tconst maxBsOrTsRange = Math.max(bsRange, tsRange)\r\n\treturn MidiQOL.findNearby(\"all\", \r\n\t\ttarget, \r\n\t\tmaxBsOrTsRange, \r\n\t\t{canSee: true}\r\n\t).filter(token => \r\n\t\ttoken.actor.uuid == workflow.attackingToken.actor.uuid\r\n\t).length > 0 \t\r\n}\r\nconst getTokenActorUuids = async (template, token) => {\r\n\tconst tokenIds = game.modules.get(\"templatemacro\").api.findContained(template)\r\n\tconst elligibleTokens = tokenIds.map(id => \r\n\t\tcanvas.scene.collections.tokens.get(id)\r\n\t).filter(tokenDoc => token.document.uuid != tokenDoc.uuid)\r\n\tif (elligibleTokens.length < 1) return false\r\n\treturn elligibleTokens.filter(tokenDoc => {\r\n\t\tconst effects = tokenDoc.actor?.effects ?? []\r\n\t\treturn effects.filter(effect => \r\n\t\t\teffect.name != s.effectName\r\n\t\t).length > 0\r\n\t}).map(tokenDoc => tokenDoc.actor.uuid)\t\r\n}\r\nconst onUse = async ({actor, args, token}) => {\r\n\tconst template = await setTemplateAttachment(args, token)\r\n\tconst tokenActorUuids = await getTokenActorUuids(template, token)\r\n\tif (!tokenActorUuids) return false\r\n\tupdateAuraEffectsOnUse(actor, \r\n\t\targs, \r\n\t\ts.templateEffectName, \r\n\t\tgetEffectData, \r\n\t\ttokenActorUuids\r\n\t)\r\n\tupdateAuraFlags(s.flagName, template, tokenActorUuids)\r\n}\r\nconst setTemplateAttachment = async (args, token) => {\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\treturn template\r\n}\r\nconst whenDeleted = async (template) => {\r\n\tsetAuraEffectUpdatesWhenDeleted(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\ttemplate\r\n\t)\r\n}\r\nconst whenEntered = async (template, token) => {\r\n\tsetAuraEffectsWhenEntered(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\tgetEffectData, \r\n\t\ttemplate, \r\n\t\ttoken\r\n\t)\r\n}\r\nconst whenLeft = async (template, token) => {\r\n\tsetAuraEffectsWhenLeft(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\ttemplate, \r\n\t\ttoken\r\n\t)\r\n}\r\nconst whenMoved = async (template) => {\r\n\tconst dispositions = [-1, 0, 1]\r\n\tupdateAuraWhenMoved(\r\n\t\tdispositions, \r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\tgetEffectData, \r\n\t\ttemplate\r\n\t)\r\n}\r\n\r\nexport const insectCloud = {\r\n\tcheckAttackerVision,\r\n\tcheckDefenderVision,\r\n\tonUse,\r\n\twhenDeleted,\r\n\twhenEntered,\r\n\twhenLeft,\r\n\twhenMoved\t\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const ringOfSpellStoring = {\r\n\taddSpellErr:\t\t\"Your Ring of Spell Storing doesn't have enough room left for a spell!\",\r\n\tcastSpellErr:\t\t\"Your Ring of Spell Storing doesn't have any spells on it!\",\t\r\n\tcastSpellHeader:\t\"Which spell do you wan to cast?\",\r\n\tcharHeader: \t\t\"Who is casting onto the ring?\",\r\n\tcurrSpellBank:\t\t\"Current Spell Bank\",\r\n\tdescLevel: \t\t\t\", Level \",\r\n\tcharnamesExceptions:[\"Shadowfell Vine Strike\", \"Necrotic Blast\", \"Summon Shadow Clone\", \"Animate Shadow Servant\", \"Mud\", \"Taunt\"],\r\n\tinitChoices:\t\t[\"Add Spells\", \"Cast Spell\", \"Empty Spells\"],\r\n\tinitHeader: \t\t\"What do you want to cast?\",\r\n\tlevelHeader:\t\t\"What level spell do you want to add?\",\r\n\tlevelLabels:\t\t[\"One\", \"Two\", \"Three\", \"Four\", \"Five\"],\r\n\tspellHeader:\t\t\"Which spell is being cast onto the ring?\",\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tinstrumentSpellNames: {\r\n\t\tanstruthHarp: \t\t[\"Control Weather\", \"Cure Wounds\", \"Wall of Thorns\"],\r\n\t\tcanaithMandolin: \t[\"Cure Wounds\", \"Dispel Magic\", \"Protection from Energy (Lightning)\"],\r\n\t\tcliLyre: \t\t\t[\"Stone Shape\", \"Wall of Fire\", \"Wind Wall\"],\r\n\t\tdossLute: \t\t\t[\"Animal Friendship\", \"Protection from Energy (Fire)\", \"Protection from Poison\"],\r\n\t\tfochlucanBandore: \t[\"Entangle\", \"Faerie Fire\", \"Shillelagh\", \"Speak with Animals\"],\r\n\t\tgeneric: \t\t\t[\"Fly\", \"Invisibility\", \"Levitate\", \"Protection from Evil and Good\"],\r\n\t\tmacFuirmidhCittern: [\"Barkskin\", \"Cure Wounds\", \"Fog Cloud\"],\r\n\t\tollamhHarp: \t\t[\"Confusion\", \"Control Weather\", \"Fire Storm\"]\r\n\t},\r\n\tinitHeader: \t\t\t\"Choose a spell to cast!\"\r\n}\r\n\r\nexport const staffOfSwarmingInsects = {\r\n\tallChoices: \t\t\t[\"Giant Insect\", \"Insect Cloud\", \"Insect Plague\", \"Melee (1h)\", \"Melee (2h)\"],\r\n\tdamageWeaponName:\t\t\"Staff of Swarming Insects - Damage\",\r\n\tflagName:\t\t\t\t\"staffOfSwarmingInsects\",\r\n\tinitHeader: \t\t\t\"What do you want to do?\",\r\n\tmeleeChoices: \t\t\t[\"Melee (1h)\", \"Melee (2h)\"],\r\n\tspellNames: \t\t\t[\"Giant Insect\", \"Insect Cloud\", \"Insect Plague\"],\r\n}","import {deleteTempItem as deleteItem, getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {instrumentOfTheBards as s} from \"../../strings/items.js\"\r\n\r\nconst castSpell = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst updates = await createCastWorkflow(spell, instrument, tokenActor, chosenIndex)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst [tempItem] = await createTempItem(spell, instrument, tokenActor, chosenIndex)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spell.activation)\r\n\tconst itemData = await getTempSpellItem(spell, instrument, updatedMacroNames, chosenIndex)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data, setDeleteItemFlags)\r\n}\r\nconst getCureWoundsData = async (spell, instrument) => {\r\n\tif (instrument.type == \"anstruthHarp\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [5, [\"5d8 + @mod\", \"healing\"]]\r\n\t} else if (instrument.type == \"canaithMandolin\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [3, [\"3d8 + @mod\", \"healing\"]]\r\n\t} else {\r\n\t\treturn [spell.system.level, spell.system.damage.parts]\r\n\t}\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getInstrumentSpells = async (instrument) => {\r\n\t//keeping this for reference\r\n\tswitch(instrument) {\r\n\t\tcase \"anstruthHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Control Weather\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Wall of Thorns\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"canaithMandolin\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Cure Wounds\", \r\n\t\t\t\t\"Dispel Magic\",\r\n\t\t\t\t\"Protection from Energy (Lightning)\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"cliLyre\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Stone Shape\", \r\n\t\t\t\t\"Wall of Fire\",\r\n\t\t\t\t\"Wind Wall\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"dossLute\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Animal Friendship\", \r\n\t\t\t\t\"Protection from Energy (Fire)\",\r\n\t\t\t\t\"Protection from Poison\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"fochlucanBandore\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Entangle\", \r\n\t\t\t\t\"Faerie Fire\",\r\n\t\t\t\t\"Shillelagh\",\r\n\t\t\t\t\"Speak with Animals\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"macFuirmidhCittern\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Barkskin\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Fog Cloud\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"ollamhHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Confusion\", \r\n\t\t\t\t\"Control Weather\",\r\n\t\t\t\t\"Fire Storm\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\treturn spell.img\r\n}\r\nconst getSpellsToCast = async (item, type) => {\r\n\tconst spellNames = [...s.instrumentSpellNames[\"generic\"], ...s.instrumentSpellNames[type]].sort()\r\n\tconst spellData = spellNames.map((name, i) => {\r\n\t\treturn {\"name\": name, id: i}\r\n\t}).filter(spell => item.flags.charname.instrumentOfTheBards.spells[spell.id].isCharged)\r\n\tconst spells = spellData.map(spell => game.items.find(item => item.name.toLowerCase() == spell.name.toLowerCase()))\t\r\n\tconst filteredSpellNames = spells.map(spell => spell.name)\r\n\treturn [spellData, spellNames, filteredSpellNames, spells]\r\n}\r\nconst getTempSpellItem = async (spell, instrument, updatedMacroNames, chosenIndex) => {\r\n\tconst [level, damage] = await getCureWoundsData(spell, instrument)\r\n\treturn mergeObject(duplicate(spell.toObject(false)), {\r\n\t\t\"flags.charname.instrumentOfTheBards.originInstrumentUuid\": instrument.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.originName\": spell.name,\r\n\t\t\"flags.charname.instrumentOfTheBards.originUuid\": spell.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.type\": \"spell\",\r\n\t\t\"flags.charname.instrumentOfTheBards.spellIndex\": chosenIndex,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.damage.parts\": damage,\r\n\t\t\"system.level\": level,\t\t\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.instrumentOfTheBards.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst main = async ({actor, args, token}) => {\r\n\t//\r\n}\r\nconst removeSpells = async (actor, instrument) => {\r\n\t//this erased everything on Nora lol\r\n\t\r\n\treturn Promise.all(actor.items.filter(item => {\r\n\t\tconst originName = item.flags?.charname?.instrumentOfTheBards?.originName ?? null\r\n\t\treturn instrument.spells.filter(spell => spell.name == originName).length > 0\r\n\t}).map(item => item.delete()))\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst instrument = await fromUuid(tempItem.flags.charname.instrumentOfTheBards.originInstrumentUuid)\r\n\tconst index = tempItem.flags.charname.instrumentOfTheBards.spellIndex\r\n\tupdateDeleteItemFlags(instrument, index)\r\n}\r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst updateDeleteItemFlags = async (instrument, index) => {\r\n\tconst updates = instrument.flags.charname.instrumentOfTheBards.spells.map((spell, i) => {\r\n\t\tif (i == index) {\r\n\t\t\treturn {name: spell.name, isCharged: false}\r\n\t\t} else {\r\n\t\t\treturn spell\r\n\t\t}\r\n\t})\r\n\tconst flaggedItem = await instrument.update({\r\n\t\t\"flags.charname.instrumentOfTheBards.spells\": updates\r\n\t})\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\tif (type == \"spell\") return false\t\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\t\t\r\n\tconst [spellData, spellNames, filteredSpellNames, spells] = await getSpellsToCast(liveItem, type)\r\n\tconst choice = await getDialogueButtonType(filteredSpellNames, {width: filteredSpellNames.length * 150, height: \"100%\"}, s.initHeader, getSpellIconPaths, 60, 60, spells)\r\n\tconst spell = spells.find(spell => spell.name == choice.value)\r\n\tconst chosenIndex = spellNames.indexOf(choice.value)\r\n\tcastSpell(spell, liveItem, tokenActor, chosenIndex)\t\r\n}\r\nconst onNewDay = async (actor, data) => {\r\n\tif (!data.newDay) return false\r\n\tconst instruments = actor.items.filter(item => {\r\n\t\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\t\treturn type != \"spell\"\r\n\t}) \r\n\trefreshInstruments(instruments)\r\n}\r\nconst refreshInstruments = async (instruments) => {\r\n\tinstruments.forEach(instrument => {\r\n\t\tconst spells = instrument.flags.charname.instrumentOfTheBards.spells\r\n\t\tconst update = spells.map(spell => {\r\n\t\t\tspell.isCharged = true\r\n\t\t\treturn spell\r\n\t\t})\r\n\t\tinstrument.update({\"flags.charname.instrumentOfTheBards.spells\": update})\r\n\t})\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tdeleteTempItem,\r\n\tonUse,\r\n\tonNewDay\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {protectionFromPoison as s} from \"../../strings/spells.js\"\r\nimport {getDialogueButtonType, removeEffect} from \"../../helper-functions.js\"\r\n\r\nconst getChoices = async (effects) => {\r\n\treturn effects.reduce((acc, effect, i) => {\r\n\t\t\tconst nameAlreadyUsed = acc.find(choice => choice.name == effect.name)\r\n\t\t\tconst name = nameAlreadyUsed ? effect.name + \"-\" + i : effect.name\r\n\t\t\tconst choice = {name: name, icon: effect.icon, uuid: effect.uuid}\r\n\t\t\treturn [...acc, choice]\r\n\t}, [])\r\n}\r\nconst getChosenEffect = async (effects) => {\r\n\tconst choices = await getChoices(effects)\t\t\r\n\tconst buttonNames = choices.map(choice => choice.name)\t\t\r\n\tconst initChoice = await getDialogueButtonType(buttonNames, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60, choices)\r\n\treturn choices.find(effect => effect.name == initChoice.value)\t\r\n}\r\nconst getInitIconPaths = (choice, effects) => {\r\n\tconst chosenEffect = effects.find(effect => effect.name == choice)\r\n\treturn chosenEffect.icon\r\n}\r\nconst getPoisonEffects = () => {\r\n\tconst target = game.user.targets.first()\r\n\treturn target.actor.effects.filter(effect => {\r\n\t\tconst hasPoisonedName = conditionLabels[\"poisoned\"].includes(effect.name.toLowerCase())\r\n\t\tconst hasPoisonedConditions = effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase()))\r\n\t\treturn hasPoisonedName || hasPoisonedConditions\r\n\t})\t\r\n}\r\nconst onUse = async ({item, workflow, args, token}) => {\r\n\tconst poisonEffects = await getPoisonEffects()\r\n\tif (poisonEffects.length > 0) {\r\n\t\tconst chosenEffect = await getChosenEffect(poisonEffects)\r\n\t\tawait removeEffect(chosenEffect.uuid)\t\r\n\t}\r\n}\r\nconst preTargetSave = async ({item, workflow, args}) => {\r\n\tconst hasPoison = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())))\r\n\tif (hasPoison) workflow.saveDetails.advantage = true\r\n}\r\n\r\nexport const protectionFromPoison = {\r\n\tonUse,\r\n\tpreTargetSave\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {ringOfSpellStoring as s} from \"../../strings/items.js\"\r\n\r\nconst addSpell = async (item, tokenActor) => {\r\n\tconst notification = await setAddSpellNotification(item)\r\n\tif (notification) return false\r\n\tconst updates = await getAddSpellUpdates(item, tokenActor)\r\n\tsetAddSpellUpdates(item, updates, tokenActor)\r\n}\r\nconst castSpell = async (item, tokenActor) => {\r\n\tconst updates = await createCastWorkflow(item, tokenActor)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nconst createCastWorkflow = async (item, tokenActor) => {\r\n\tconst spellData = await getSpellToCast(item)\t\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, item)\r\n\tawait setPreUseItemHooks(tempItem, spellData)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, item)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spellData, tokenActor, liveItem) => {\r\n\tconst sourceItem = await fromUuid(spellData.uuid)\t\r\n\tconst sourceMacroNames = await getSourceMacroNames(sourceItem)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spellData.activation)\r\n\tconst itemData = await getTempItem(liveItem, sourceItem, spellData, updatedMacroNames)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async ({args, item, workflow}) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tawait setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nconst getAddCharChoice = async (eligibleSpellsByChar) => {\r\n\tconst charChoices = eligibleSpellsByChar.map(character => character.origin).toSorted()\t\r\n\treturn await getDialogueButtonType(charChoices, {width: 400, height: 150}, s.charHeader, getCharIconPaths, 60, 60, eligibleSpellsByChar)\r\n}\r\nconst getAddLevelChoice = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst levelChoices = await getLevelChoices(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst levelChoice = await getDialogueButtonType(levelChoices, {width: 400, height: 150}, s.levelHeader, getLevelIconPaths, 60, 60)\r\n\t//return value as int\r\n\treturn {value: s.levelLabels.indexOf(levelChoice.value) + 1}\r\n}\r\nconst getAddSpellChoice = async (charChoice, eligibleSpellsByChar, levelChoice) => {\r\n\tconst [spellChoices, spellIcons] = await getSpellChoices(charChoice, eligibleSpellsByChar, levelChoice)\r\n\treturn await getSpellChoice(spellChoices, s.spellHeader, getSpellIconPaths, spellIcons)\t\r\n}\r\nconst getAddSpellChoices = async (eligibleSpellsByChar, item, tokenActor) => {\r\n\tconst charChoice = await getAddCharChoice(eligibleSpellsByChar)\r\n\tconst levelChoice = await getAddLevelChoice(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst spellChoice = await getAddSpellChoice(charChoice, eligibleSpellsByChar, levelChoice.value)\r\n\treturn [charChoice.value, levelChoice.value, spellChoice.value]\r\n}\r\nconst getAddSpellUpdates = async (item, tokenActor) => {\r\n\tconst actors = await getLiveActors()\r\n\tconst eligibleSpellsByChar = await getEligibleSpells(actors)\t\r\n\tconst choices = await getAddSpellChoices(eligibleSpellsByChar, item, tokenActor)\t\r\n\treturn [choices, eligibleSpellsByChar]\r\n}\r\nconst getAttackBonus = (actor, item, ability) => {\r\n\tconst isRangedAttack = item.system.actionType == \"rsak\"\r\n\tconst isMeleeAttack = item.system.actionType == \"msak\"\r\n\tif (!isRangedAttack && !isMeleeAttack) {\r\n\t\treturn 0\r\n\t} else if (isRangedAttack) {\t\t\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.rsak.attack)\r\n\t} else if (isMeleeAttack) {\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.msak.attack)\r\n\t}\r\n}\r\nconst getCharIconPaths = (choice, iconData) => {\t\r\n\tconst match = iconData.find(item => item.origin == choice)\r\n\treturn match.icon\r\n}\r\nconst getDeleteItemFlagData = async (liveItem, tempItem) => {\r\n\tconst spellData = tempItem.flags.charname.ringOfSpellStoring.spellData\r\n\tconst spells = liveItem.flags.charname.ringOfSpellStoring.spells\t\r\n\tconst slotsUsed = liveItem.flags.charname.ringOfSpellStoring.slotsUsed\r\n\tconst usedSpell = spells.find(spell => {\r\n\t\treturn spell.level == spellData.level\r\n\t\t\t&& spell.name == spellData.name \r\n\t\t\t&& spell.dc == spellData.dc \r\n\t\t\t&& spell.ability == spellData.ability\r\n\t})\t\r\n\tconst deleteIndex = spells.indexOf(usedSpell)\r\n\treturn [deleteIndex, slotsUsed, spells, usedSpell.level]\r\n}\r\nconst getDeleteItemFlagUpdates = async (liveItem, tempItem) => {\r\n\tconst [deleteIndex, slotsUsed, spells, usedSpellLevel] = await getDeleteItemFlagData(liveItem, tempItem)\r\n\tconst newSlotsUsed = slotsUsed - usedSpellLevel\r\n\tconst newSpells = spells.filter((spell, i) => i != deleteIndex)\t\r\n\treturn [newSlotsUsed, newSpells]\r\n}\r\nconst getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nconst getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getEligibleLevelSpells = (actor, item) => {\r\n\tconst highestSpellLevel = getHighestSpellLevel(actor.system.spells)\r\n\tconst mode = item.system.preparation.mode\r\n\tlet eligibleLevelSpells = []\r\n\tlet spellData = {}\r\n\tfor (let i = item.system.level; i <= 5; i ++) {\r\n\t\tif (mode == \"atwill\" || mode == \"innate\") {\t\t\t\t\r\n\t\t\tif (i == item.system.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, item.system.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else if (mode == \"pact\") {\r\n\t\t\tif (i == actor.system.spells.pact.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, actor.system.spells.pact.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (i <= highestSpellLevel) {\r\n\t\t\t\tspellData = getSpellData(actor, item, i)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\t\t\r\n\treturn eligibleLevelSpells\r\n}\r\nconst getEligibleSpells = async (actors) => {\r\n\treturn actors.map(actor => {\r\n\r\n\t\tconst eligibleSpells = actor.items.filter(item => item.type == \"spell\" && item.system.level > 0 && item.system.level <= 5)\t\r\n\t\tconst actorSpells = eligibleSpells.reduce((spells, spell) => {\r\n\t\t\tconst eligibleLevelSpells = getEligibleLevelSpells(actor, spell)\r\n\t\t\treturn [...spells, ...eligibleLevelSpells]\r\n\t\t}, [])\r\n\t\treturn {origin: actor.prototypeToken.name, icon: actor.prototypeToken.texture.src, spells: actorSpells}\r\n\t})\r\n}\r\nconst getHighestSpellLevel = (spells) => {\r\n\tlet arr = []\r\n\tlet label\r\n\tfor (let i = 1; i <= 9; i++) {\r\n\t\tlabel = \"spell\" + i\r\n\t\tif (spells[label].max > 0) arr.push(i)\r\n\t}\r\n\treturn Math.max(...arr)\r\n}\r\nconst getInitIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.initChoices[0]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-diamond-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[1]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-pentagon-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[2]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-glowing-triangle-teal-purple.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst getLevelChoices = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst slotsRemaining = 5 - item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\r\n\tconst eligibleLevels = character.spells.map(spell => spell.level).filter(level => level <= slotsRemaining)\r\n\tconst spellLevels = new Set(eligibleLevels)\t\t\t\r\n\treturn Array.from(spellLevels).toSorted().map(level => s.levelLabels[level - 1])\r\n}\r\nconst getLevelIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.levelLabels[0]:\r\n\t\t\treturn \"icons/skills/ranged/target-bullseye-archer-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[1]:\r\n\t\t\treturn \"icons/skills/melee/weapons-crossed-daggers-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[2]:\r\n\t\t\treturn \"icons/skills/ranged/arrows-triple-yellow-red.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[3]:\r\n\t\t\treturn \"icons/skills/ranged/shuriken-thrown-yellow.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[4]:\r\n\t\t\treturn \"icons/skills/ranged/daggers-thrown-salvo-orange.webp\"\r\n\t\t\tbreak\t\t\t\t\r\n\t}\t\r\n}\r\nconst getLiveActors = async () => {\r\n\treturn game.users.filter(user => user.character).filter(user => {\r\n\t\treturn canvas.scene.tokens.find(token => token.actor.uuid == user.character.uuid)\r\n\t}).map(user => user.character)\r\n}\r\nconst getNewSlotsUsed = async(item, level) => {\r\n\tconst slots = item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\treturn slots + level\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellChoice = async (spellChoices, spellHeader, getSpellIconPaths, spellIcons) => {\r\n\tconst sortedChoices = spellChoices.toSorted()\r\n\tconst radioSelections = sortedChoices.map(choice => {\r\n\t\tconst data = spellIcons.find(spell => spell.name == choice)\r\n\t\tconst icon = data.icon\r\n\t\tconst label = `<img align=left src=${icon} width=\"15\" height=\"15\" style=\"border:0px\">${choice}`\r\n\t\treturn {type: \"radio\", label}\r\n\t})\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: radioSelections\r\n\t\t},{\r\n\t\t\ttitle: spellHeader,\r\n\t\t\trender: (...args) => {},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn {value: sortedChoices[choices.inputs.indexOf(true)]}\r\n}\r\nconst getSpellChoices = async (charChoice, eligibleSpellsByChar, levelChoiceInt) => {\t\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\t\r\n\tconst spells = character.spells.filter(spell => spell.level == levelChoiceInt && !s.charnamesExceptions.includes(spell.name))\r\n\tconst names = spells.map(spell => spell.name)\r\n\tconst icons = spells.map(spell => { return {name: spell.name, icon: spell.icon} })\r\n\treturn [names, icons]\r\n}\r\nconst getSpellData = (actor, item, i) => {\r\n\tconst name = item.name\r\n\tconst level = i\r\n\tconst dc = actor.system.attributes.spelldc\r\n\tconst ability = actor.system.attributes.spellcasting\r\n\tconst attackBonus = getAttackBonus(actor, item, ability)\r\n\tconst prof = actor.system.attributes.prof\t\r\n\tconst icon = item.img\r\n\tconst uuid = item.uuid\r\n\tconst activation = item.system.activation.type\r\n\tconst originUuid = actor.uuid\r\n\treturn {name, level, dc, ability, attackBonus, prof, icon, uuid, activation, originUuid}\r\n}\r\nconst getSpellIconPaths = (choice, iconData) => {\r\n\tconst match = iconData.find(item => item.name == choice)\r\n\treturn match.icon\t\r\n}\r\nconst getSpellToCast = async (item) => {\r\n\tconst spells = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tif (spells.length < 1) {\r\n\t\tui.notifications.info(s.castSpellErr)\r\n\t\treturn false\t\t\r\n\t}\t\r\n\tconst uniqueSpells = new Set(spells)\r\n\tconst spellsArr = Array.from(uniqueSpells)\r\n\tconst spellNames = spellsArr.map(spell => spell.name).toSorted()\r\n\tconst chosenSpell = await getDialogueButtonType(spellNames, {width: 400, height: \"100%\"}, s.castSpellHeader, getSpellIconPaths, 60, 60, spellsArr)\r\n\treturn spellsArr.find(spell => spell.name == chosenSpell.value)\r\n}\r\nconst getTempItem = async (liveItem, sourceItem, spellData, updatedMacroNames) => {\r\n\treturn mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\timg: liveItem.img,\r\n\t\t\"flags.charname.ringOfSpellStoring.ringUuid\": liveItem.uuid,\r\n\t\t\"flags.charname.ringOfSpellStoring.spellData\": spellData,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.ability\": \"none\",\r\n\t\t\"system.attackBonus\": spellData.attackBonus,\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t\t\"system.save.dc\": spellData.dc,\r\n\t\t\"system.save.scaling\": \"flat\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedDescription = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spells = item.flags.charname.ringOfSpellStoring.spells.reduce((spells, spell) => {\r\n\t\tconst newSpell = [\"<br />\" + spell.name + s.descLevel + spell.level]\r\n\t\treturn [...spells, ...newSpell]\r\n\t}, []).toSorted()\t\t\r\n\tconst newSpells = spells.reduce((descs, desc) => {\r\n\t\treturn descs + desc\r\n\t}, \"\")\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\r\n\tconst sanitizedDesc = desc.replace(spellBankStr, \"\")\t\r\n\treturn sanitizedDesc + \"<br />*******<br />\" + s.currSpellBank + \":<br />\" + newSpells + \"<br />*******\"\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.ringOfSpellStoring.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst getUpdateRingData = async (charName, eligibleSpellsByChar, item, level, spellName) => {\r\n\tconst chr = eligibleSpellsByChar.find(chr => chr.origin == charName)\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tconst newSlotsUsed = await getNewSlotsUsed(item, level)\r\n\tconst chosenSpell = [chr.spells.find(spell => spell.name == spellName && spell.level == level)]\t\t\r\n\tconst newSpellData = [...spellData, ...chosenSpell]\t\r\n\treturn [chosenSpell, newSlotsUsed, newSpellData]\r\n}\r\nconst main = async ({args, item}) => {\r\n\tconst initChoice = await getDialogueButtonType(s.initChoices, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\r\n\tif (initChoice.value == s.initChoices[0]) {\r\n\t\taddSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[1]) {\r\n\t\tcastSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[2]) {\r\n\t\tresetSpells(liveItem, tokenActor)\r\n\t}\r\n}\r\nconst resetSpells = async (item, tokenActor) => {\r\n\tsetResetSpellsDesc(item)\r\n\tconst tempItems = tokenActor.items.filter(item => item.flags?.charname?.ringOfSpellStoring?.ringUuid ?? false)\r\n\ttempItems.map(item => item.delete())\r\n}\r\nconst setAddSpellNotification = async (item) => {\r\n\tif (item.flags.charname.ringOfSpellStoring.slotsUsed == 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\t\r\n}\r\nconst setAddSpellUpdates = async (item, updates, tokenActor) => {\r\n\tconst [choices, eligibleSpellsByChar] = updates\r\n\tconst [spellData] = await updateRingItem(item, choices, eligibleSpellsByChar)\t\r\n\tif (spellData.activation == \"reaction\") setReactionUpdates(spellData, tokenActor, item)\t\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst liveItem = await fromUuid(tempItem.flags.charname.ringOfSpellStoring.ringUuid)\r\n\tconst updates = await getDeleteItemFlagUpdates(liveItem, tempItem)\r\n\tupdateDeleteItemFlags(liveItem, updates)\r\n}\r\nconst setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst setPreUseItemHooks = async (item, spellData) => {\r\n\tHooks.once(\"dnd5e.preUseItem\", (useItem, config) => {\r\n\t\tif (item.uuid != useItem.uuid) return false\t\r\n\t\tconfig.consumeResource = false\r\n\t\tconfig.consumeSpellSlot = false\r\n\t\tconfig.consumeUsage = false\r\n\t\tconfig.slotLevel = spellData.level\t\r\n\t\tconfig.system.prof._baseProficiency = spellData.prof\t\t\t\r\n\t})\t\t\r\n}\r\nconst setReactionHook = async ({item}) => {\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spellData ?? false\r\n\tif (!spellData) return false\r\n\tsetPreUseItemHooks(item, spellData)\r\n}\r\nconst setReactionUpdates = async (spellData, tokenActor, liveItem) => {\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, liveItem)\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n}\r\nconst setResetSpellsDesc = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\t\r\n\tconst updatedStr = \"<br />*******<br />\" + s.currSpellBank + \":<br /><br />*******\"\r\n\tconst updatedDesc = desc.replace(spellBankStr, updatedStr)\t\r\n\titem.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": [],\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": 0,\r\n\t\t\"system.description.value\": updatedDesc\r\n\t})\t\t\r\n}\r\nconst setRingUpdates = async (chosenSpell, item, newSlotsUsed, newSpellData) => {\r\n\tconst flagUpdate = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpellData,\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed\r\n\t})\t\r\n\tconst updatedDescription = await getUpdatedDescription(item)\t\r\n\tconst descUpdate = await item.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\r\n}\r\nconst setRingUpdatesNotification = async (item, level) => {\r\n\tconst slots = await getNewSlotsUsed(item, level)\r\n\tif (slots > 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\r\n\treturn false\r\n}\r\nconst updateDeleteItemFlags = async (item, updates) => {\r\n\tconst [newSlotsUsed, newSpells] = updates\r\n\tconst flaggedItem = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed,\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpells\r\n\t})\r\n\tconst updatedDescription = await getUpdatedDescription(flaggedItem)\t\r\n\tawait flaggedItem.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst updateRingItem = async (item, choices, eligibleSpellsByChar) => {\t\r\n\tconst [charName, level, spellName] = choices\r\n\tconst notification = await setRingUpdatesNotification(item, level)\r\n\tif (notification) return false\r\n\tconst [chosenSpell, newSlotsUsed, newSpellData] = await getUpdateRingData(charName, eligibleSpellsByChar, item, level, spellName)\r\n\tsetRingUpdates(chosenSpell, item, newSlotsUsed, newSpellData)\r\n\treturn chosenSpell\r\n}\r\n\r\nexport const ringOfSpellStoring = {\r\n\t\"main\": main,\r\n\t\"deleteTempItem\": deleteTempItem,\r\n\t\"setReactionHook\": setReactionHook\r\n}","//refactor to import strings and merge them?\r\n//figure out if this can be a stand alone file somehow first \r\nexport const summonCelestial = {\r\n\tchoices:\t\t\t[\"Celestial Avenger\", \"Celestial Defender\"],\r\n\tdefaultIcons:\t\t[\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Celestial/Solar_Large_Scale200_Celestial_A_11.webp\",\r\n\t\t\t\t\t\t\t\"images/Tokens/Creatures/Celestial/Planetar_Large_Scale150_Celestial_11.webp\"\r\n\t\t\t\t\t\t],\t\r\n\texceptionActorNames:[\"Jakar\", \"Jakar (Test)\"],\r\n\tinitHeader:\t\t\t\"What do you want to summon?\",\r\n\tsequencerData:\t\t{\r\n\t\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\t\tcircleNum: \"02\",\r\n\t\t\t\t\t\t\t\tcolor: \"dark_purple\",\r\n\t\t\t\t\t\t\t\tfadeIn: {ms: 400},\r\n\t\t\t\t\t\t\t\timpactNum1: \"011\",\r\n\t\t\t\t\t\t\t\timpactNum2: \"003\",\r\n\t\t\t\t\t\t\t\tscale: .15,\r\n\t\t\t\t\t\t\t\tschool: \"conjuration\",\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\tspawnNames:\t\t\t[\"Celestial Avenger Spirit\", \"Celestial Defender Spirit\"]\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {summonCelestial as exceptionStrings} from \"../../exceptions\"\r\nimport {summonCelestial as defaultStrings} from \"../../strings/spells.js\"\r\nimport {summoning} from \"../../helpers/summons.js\"\r\n\r\nconst getCreateSpawnParams = async (actor, args, choice, s) => {\r\n\tconst spawnName = s.spawnNames[s.choices.indexOf(choice)]\r\n\tconst mutations = await getSpawnUpdates(\r\n\t\tactor, \r\n\t\targs,\r\n\t\tchoice,\r\n\t\ts,\r\n\t\tspawnName\r\n\t)\r\n\tconst overrides = await getOverrides(mutations, s)\t\r\n\treturn [mutations, overrides, spawnName]\r\n}\r\nconst getItemUpdates = async (s, spawnName, originAttack, level) => {\r\n\tif (spawnName == s.spawnNames[0]) {\r\n\t\treturn {\r\n\t\t\t'Radiant Bow': {\r\n\t\t\t\t'data.damage.parts' : [[`2d6 + 2 + ${level}`, `radiant`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn {\r\n\t\t\t'Radiant Sword': {\r\n\t\t\t\t'data.damage.parts' : [[`1d10 + 3 + ${level}`, `radiant`]],\r\n\t\t\t\t'data.attackBonus' : `- @mod - @prof + ${originAttack}`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nconst getOverrides = async (mutations, s) => {\r\n\tconst sequencer = await getSequencerData(s)\r\n\treturn {\r\n\t\twarpGate: {\r\n\t\t\tmutations\r\n\t\t},\r\n\t\tsequencer\r\n\t}\r\n}\r\nconst getSequencerData = async (s) => {\r\n\tif (s.sequencerData) return s.sequencerData\r\n\treturn {\r\n\t\toptions: {\r\n\t\t\tcircleNum: \"02\",\r\n\t\t\tcolor: \"blue\",\r\n\t\t\tfadeIn: {ms: 450},\r\n\t\t\timpactNum1: \"004\",\r\n\t\t\timpactNum2: \"003\",\r\n\t\t\tscale: .15,\r\n\t\t\tschool: \"conjuration\"\r\n\t\t}\r\n\t}\r\n}\r\nconst getSpawnBaseAc = async (s, spawnName) => {\r\n\treturn spawnName == s.spawnNames[0] ? 11 : 13\r\n}\r\nconst getSpawnDc = async (spawnName, originProf) => {\r\n\tconst spawnData = game.actors.find(actor => actor.name == spawnName)\r\n\tconst spawnMod = spawnData.system.abilities.wis.mod \r\n\treturn originProf + spawnMod + 8\r\n}\r\nconst getSpawnUpdates = async (actor, args, choice, s, spawnName) => {\r\n\tconst [\t\r\n\t\tac,\r\n\t\thp,\t\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDc,\r\n\t\ttexture\r\n\t] = await getSpawnParams(actor, args, choice, s, spawnName)\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"texture.src\": texture\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"data.attributes.ac.flat\" : ac,\r\n\t\t\t\"data.attributes.hp\" : hp,\r\n\t\t\t\"data.details.cr\" : originLevel,\r\n\t\t\t\"data.bonuses.spell.dc\": spawnDc,\r\n\t\t\t\"img\": texture\r\n\t\t},\r\n\t\tembedded: { \r\n\t\t\tItem: await getItemUpdates(s, spawnName, originAttack, level)\r\n\t\t}\t\t\r\n\t}\r\n}\r\nconst getSpawnParams = async (actor, args, choice, s, spawnName) => {\r\n\tconst originDc = actor.system.attributes.spelldc\r\n\tconst originAttack = originDc - 8\r\n\tconst originLevel = actor.system.details.level ?? actor.system.details.cr\r\n\tconst originProf = actor.system.attributes.prof\r\n\tconst texture =  s.defaultIcons[s.choices.indexOf(choice)]\r\n\tconst level = args[0].spellLevel\t\r\n\tconst ac = await getSpawnBaseAc(s, spawnName) + level\r\n\tconst hp = {value: 40+10*(level-5), max: 40+10*(level-5)}\r\n\tconst spawnDc = await getSpawnDc(spawnName, originProf)\t\r\n\treturn [\t\r\n\t\tac,\r\n\t\thp,\r\n\t\tlevel,\r\n\t\toriginAttack,\r\n\t\toriginDc,\r\n\t\toriginLevel, \r\n\t\toriginProf,\r\n\t\tspawnDc,\r\n\t\ttexture\r\n\t]\r\n}\r\nconst getChoiceIconPaths = (choice, s) => {\r\n\tconst index = s.choices.indexOf(choice)\t\r\n\tif (s.exceptionActorNames) return s.defaultIcons[index]\r\n\tconst actor = game.actors.find(actor => actor.name == s.spawnNames[index])\r\n\tconst icon = actor?.img ?? false\t\r\n\tif (!icon) return s.defaultIcons[index]\r\n\treturn icon\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst s = exceptionStrings.exceptionActorNames.includes(actor.name) \r\n\t\t? exceptionStrings \r\n\t\t: defaultStrings\r\n\tconst choice = await getDialogueButtonType(\r\n\t\ts.choices, \r\n\t\t{width: \"125%\", height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetChoiceIconPaths, \r\n\t\t100, \r\n\t\t100, \r\n\t\ts\r\n\t)\r\n\tconst [\r\n\t\tmutations, \r\n\t\toverrides, \r\n\t\tspawnName\r\n\t] = await getCreateSpawnParams(actor, args, choice.value, s)\r\n\tsummoning.createSpawn(actor, choice.value, item, overrides, s, token) \r\n}\r\nexport const summonCelestial = {\r\n\tonUse\r\n}","import {\r\n\tdeleteTempItem as deleteItem, \r\n\tgetDialogueButtonType, \r\n\tgetSourceMacroNames, \r\n\tgetUpdatedMacroNames, \r\n\tsetCastSpellUpdates,\r\n} from \"../../helper-functions.js\"\r\nimport {staffOfSwarmingInsects as s} from \"../../strings/items.js\"\r\n\r\nconst castSpell = async (spell, staff, tokenActor, choice) => {\r\n\tconst updates = await createCastWorkflow(spell, staff, tokenActor, choice)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, staff, tokenActor, choice) => {\r\n\tconst [tempItem] = await createTempItem(spell, staff, tokenActor, choice)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, staff, tokenActor, choice) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, \"staffOfSwarmingInsects\", spell.activation)\r\n\tconst itemData = await getTempSpellItem(spell, staff, updatedMacroNames, choice)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data)\r\n}\r\nconst getChosenItem = async (choice, spells) => {\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn game.items.find(item => item.name == s.damageWeaponName)\r\n\t} else {\r\n\t\treturn spells.find(spell => spell.name == choice)\t\t\r\n\t}\t\r\n}\r\nconst getConsumptionAmount = async (choice) => {\r\n\tif (choice == s.allChoices[0]) {\r\n\t\treturn 4\r\n\t} else if (choice == s.allChoices[1]) {\r\n\t\treturn 1\r\n\t} else if (choice == s.allChoices[2]) {\r\n\t\treturn 5\r\n\t} else {\r\n\t\treturn 0\r\n\t}\r\n}\r\nconst getDamage = async (spell, choice) => {\r\n\tconst weapon = game.items.find(item => item.name == s.damageWeaponName)\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn choice == s.allChoices[4] \r\n\t\t\t? [\"1d8 + @mod\", \"bludgeoning\"] \r\n\t\t\t: [\"1d6 + @mod\", \"bludgeoning\"]\r\n\t} else {\r\n\t\treturn spell.system.damage.parts\r\n\t}\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn \"icons/weapons/staves/staff-simple-spiral-green.webp\"\r\n\t} else {\r\n\t\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\t\treturn spell.img\t\t\r\n\t}\r\n}\r\nconst getSpellsToCast = async (staff) => {\r\n\tconst spells = s.spellNames.map(spell => game.items.find(item => {\r\n\t\tif (!item.name) return false\r\n\t\treturn item.name.toLowerCase() == spell.toLowerCase()\r\n\t}))\t\r\n\tconst filteredSpellNames = s.spellNames.filter((spell, i, arr) => {\r\n\t\treturn ((spell == arr[0] && staff.system.uses.value >= 4)\r\n\t\t\t||  (spell == arr[1] && staff.system.uses.value >= 1)\r\n\t\t\t||  (spell == arr[2] && staff.system.uses.value >= 5))\r\n\t})\r\n\tconst choices = staff.system.attunement == 2 ? \r\n\t\t[...s.meleeChoices, ...filteredSpellNames].sort() : \r\n\t\ts.meleeChoices.sort()\r\n\treturn [choices, spells]\r\n}\r\nconst getTempSpellItem = async (spell, staff, updatedMacroNames, choice) => {\r\n\tconst [amount, damage, item, name, prep, type] = await getTempSpellItemMods(spell, staff, choice)\r\n\treturn mergeObject(duplicate(item.toObject(false)), {\r\n\t\tname: name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originItemName\": staff.name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originItemUuid\": staff.uuid,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originName\": item.name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originUuid\": item.uuid,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.consume.amount\": amount,\r\n\t\t\"system.consume.target\": staff.id,\r\n\t\t\"system.consume.type\": type,\r\n\t\t\"system.damage.parts\": damage,\t\r\n\t\t\"system.preparation.mode\": prep,\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getTempSpellItemMods = async (spell, staff, choice) => {\r\n\tconst amount = await getConsumptionAmount(choice)\r\n\tconst damage = await getDamage(spell, choice)\r\n\tconst item = choice == s.allChoices[3] || choice == s.allChoices[4] ? weapon : spell\r\n\tconst name = item.name == s.damageWeaponName ? staff.name : spell.name\r\n\tconst prep = choice == s.allChoices[3] || choice == s.allChoices[4] ? null : \"innate\"\r\n\tconst type = choice == s.allChoices[3] || choice == s.allChoices[4] ? null : \"charges\"\r\n\treturn [amount, damage, item, name, prep, type]\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst staff = await fromUuid(item.uuid)\r\n\tif (!staff.system.equipped) return false\r\n\tconst [choices, spells] = await getSpellsToCast(staff)\r\n\tconst choice = await getDialogueButtonType(\r\n\t\tchoices, \r\n\t\t{width: choices.length * 150, height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetSpellIconPaths, \r\n\t\t60, \r\n\t\t60, \r\n\t\tspells\r\n\t)\r\n\tconst chosenItem = await getChosenItem(choice.value, spells)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tcastSpell(chosenItem, staff, tokenActor, choice.value)\t\r\n}\r\n\r\nexport const staffOfSwarmingInsects = {\r\n\tdeleteTempItem,\r\n\tonUse\t\r\n}","import {getDialogueButtonType, setActiveEffects} from \"../../helper-functions.js\"\r\n\r\nconst getCommandItemData = async (originActor, type) => {\r\n\tconst sourceItem = type.value == \"Command: Flee\" ? await fromUuid(\"Item.TLqebf57ZF6HUkml\") : await fromUuid(\"Item.9iKDqMbCAERS9psP\")\r\n\tconsole.log(sourceItem)\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\t\t//name: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getFearItemData = async (originActor) => {\r\n\tconst sourceItem = await fromUuid(\"Item.DG5FfgOrf5IhvITt\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Fear\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-monster-purple-blue.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Flee\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-shadow-monster-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Prone\":\r\n\t\t\treturn \"icons/magic/control/silhouette-fall-slip-prone.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst onUse = async ({args, item, actor, token}) => {\r\n\tconst buttonOptions = item.system.uses.value > 1 ? [\"Fear\", \"Command: Flee\", \"Command: Prone\"] : [\"Command: Flee\", \"Command: Prone\"]\r\n\tconst type = await getDialogueButtonType(buttonOptions, {width: 400, height: 150}, \"What do you want to cast?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Fear\") {\r\n\t\tsetFearEffects(actor, item)\r\n\t} else {\r\n\t\tsetCommandEffects(actor, item, token, type)\r\n\t}\r\n}\r\nconst setCommandEffects = async (actor, item, token, type) => {\r\n\tconst commandItem = await getCommandItemData(actor, type)\r\n\tconst target = game.user.targets?.first() ?? false\r\n\tif (!target) return false\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [target.document.uuid]}\r\n\tconst commandWorkflow = await MidiQOL.completeItemUse(commandItem, {}, options)\t\r\n\tsetCommandEffectsSequencer(target)\r\n\tsetItemUsesUpdate(item.uuid, 1)\t\r\n}\r\nconst setCommandEffectsSequencer = async (token) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.enchantment.complete.dark_purple`)\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t\t.attachTo(token)\r\n\t\t\t.belowTokens()\r\n\t\t.play()\t\t\t\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token, template) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.detect_magic.cone.purple`)\r\n\t\t\t.scale(4.4)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\r\n\t\t\t.spriteOffset({x: 600, y:0}, {local: true})\r\n\t\t\t.rotate(-template.direction)\r\n\t\t.play()\t\t\t\r\n}\r\nconst setFearEffects = async (actor, item) => {\r\n\tconst fearItem = await getFearItemData(actor)\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false}\r\n\tconst fearWorkflow = await MidiQOL.completeItemUse(fearItem, {}, options)\t\r\n\tconst liveTemplate = await fromUuid(fearWorkflow.templateUuid)\r\n\tsetEffectsSequencer(0, 0, 1, false, liveTemplate)\r\n\tsetItemUsesUpdate(item.uuid, 2)\t\r\n}\r\nconst setItemUsesUpdate = async (itemUuid, usesUsed) => {\r\n\tconst liveItem = await fromUuid(itemUuid)\r\n\tliveItem.update({\"system.uses.value\": liveItem.system.uses.value - usesUsed})\r\n}\r\n\r\nexport const wandOfFear = {\r\n\tonUse\r\n}","import {auraOfPurity} from \"./macros/spells/aura-of-purity.js\"\r\nimport {blight} from \"./macros/spells/blight.js\"\r\nimport {clairvoyance} from \"./macros/spells/clairvoyance.js\"\r\nimport {daylight} from \"./macros/spells/daylight.js\"\r\nimport {dispelMagic} from \"./macros/spells/dispel-magic.js\"\r\nimport {feyAncestry} from \"./macros/features/fey-ancestry.js\"\r\nimport {giantInsect} from \"./macros/spells/giant-insect.js\"\r\nimport {hordePassive} from \"./macros/features/horde-passive.js\"\r\nimport {insectCloud} from \"./macros/features/misc/insect-cloud.js\"\r\nimport {instrumentOfTheBards} from \"./macros/items/instrument-of-the-bards.js\"\r\nimport {protectionFromPoison} from \"./macros/spells/protection-from-poison.js\"\r\nimport {ringOfSpellStoring} from \"./macros/items/ring-of-spell-storing.js\"\r\nimport {songOfRest} from \"./macros/features/class/bard/song-of-rest.js\"\r\nimport {summonCelestial} from \"./macros/spells/summon-celestial.js\"\r\nimport {summoning} from \"./helpers/summons.js\"\r\nimport {staffOfSwarmingInsects} from \"./macros/items/staff-of-swarming-insects.js\"\r\nimport {wandOfFear} from \"./macros/items/wand-of-fear.js\"\r\n\r\nexport const macros = {\r\n\tauraOfPurity,\r\n\tblight,\r\n\tclairvoyance,\r\n\tdaylight,\r\n\tdispelMagic,\r\n\tfeyAncestry,\r\n\tgiantInsect,\r\n\thordePassive,\r\n\tinsectCloud,\r\n\tinstrumentOfTheBards,\r\n\tprotectionFromPoison,\r\n\tringOfSpellStoring,\r\n\tsongOfRest,\r\n\tsummonCelestial,\r\n\tsummoning,\r\n\tstaffOfSwarmingInsects,\r\n\twandOfFear\r\n}","const getItemData = (originActor, songLevel) => {\r\n\tconst sourceItem = fromUuidSync(\"Item.GvIIDEPRp3unaRVe\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Song of Rest\",\r\n\t\tsystem: { \r\n\t\t\tdamage: {\r\n\t\t\t\tparts: [[`1d${songLevel}`, \"healing\"]]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getOriginBardScale = (effectOriginUuid) => {\r\n\tconst effectOrigin = fromUuidSync(effectOriginUuid)\r\n\tconst originActor = fromUuidSync(effectOrigin.parent.uuid)\r\n\treturn originActor.system.scale.bard[\"song-of-rest\"].faces\r\n}\r\nconst main = (actor, data) => {\r\n\tconst songEffects = actor.effects.filter(effect => effect.name == \"Song of Rest\")\r\n\tif (data.dhd < 0 && songEffects.length > 0) {\r\n\t\tsongEffects.map(effect => {\r\n\t\t\tconst originBardScale = getOriginBardScale(effect.origin)\r\n\t\t\tconst item = getItemData(actor, originBardScale)\r\n\t\t\tconst token = MidiQOL.tokenForActor(actor.uuid)\r\n\t\t\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [token.document.uuid] }\r\n\t\t\tMidiQOL.completeItemUse(item, {}, options)\t\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const songOfRest = {\r\n\tmain\r\n}","import {setConfig} from './config.js';\r\nimport {macros} from \"./macros.js\"\r\nimport * as sf from \"./socket-functions.js\"\r\n\r\nexport let socket\r\n\r\nHooks.once(\"socketlib.ready\", () => {\r\n\tsocket = socketlib.registerModule(\"charnames-bag-of-macros\")\r\n\tsocket.register(\"setActiveEffectDelete\", sf.setActiveEffectDelete)\r\n\tsocket.register(\"setAmbientLightCreate\", sf.setAmbientLightCreate)\t\r\n\tsocket.register(\"setAmbientLightDelete\", sf.setAmbientLightDelete)\r\n\tsocket.register(\"setDeleteSummonConcentrationHook\", sf.setDeleteSummonConcentrationHook)\r\n\tsocket.register(\"setMeasuredTemplateDelete\", sf.setMeasuredTemplateDelete)\r\n\tsocket.register(\"setSpawnedTokensInitiative\", sf.setSpawnedTokensInitiative)\r\n})\r\n\r\nHooks.on(\"dnd5e.restCompleted\", (actor, data) => {\r\n\tmacros.instrumentOfTheBards.onNewDay(actor, data)\r\n\tmacros.songOfRest.main(actor, data)\r\n})\r\n\r\nHooks.on(\"preDeleteToken\", (tokenDoc, config, user) => {\r\n\tmacros.summoning.onPreDeleteToken(tokenDoc, config, user)\r\n})\r\n\r\nglobalThis['CHARNAME'] = {\r\n    macros\r\n}","export const setAmbientLightCreate = async (params) => {\r\n\treturn await canvas.scene.createEmbeddedDocuments(\"AmbientLight\", [params])\r\n}\r\nexport const setAmbientLightDelete = async (ambientLightId) => {\r\n\tconst ambientLight = await canvas.scene.deleteEmbeddedDocuments(\"AmbientLight\", [ambientLightId])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn ambientLight\r\n}\r\nexport const setActiveEffectDelete = async (ownerActor, effectId) => {\t\r\n\tconst [deleteEffect] = ownerActor.effects.filter(effect => effect._id == effectId)\t\r\n\treturn await ownerActor.deleteEmbeddedDocuments(\"ActiveEffect\", [deleteEffect._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n}\r\nexport const setDeleteSummonConcentrationHook = async (actor, spawnedTokenUuid) => {\r\n\tconst preDeleteSummonConcentrationHookId = Hooks.on(\"preDeleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", preDeleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\t\r\n}\r\nexport const setMeasuredTemplateDelete = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid) ?? false\r\n\tif (!template) return false\r\n\tconst deletedMeasuredTemplate = await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [template._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn deletedMeasuredTemplate\r\n}\r\nexport const setSpawnedTokensInitiative = async (combatDocs, init) => {\r\n\tcombatDocs.forEach(doc => doc.update({\"initiative\": init}))\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(773);\n"],"names":["conditionLabels","blinded","charmed","concentrating","dead","deafened","exhaustion1","exhaustion2","exhaustion3","exhaustion4","exhaustion5","frightened","grappled","incapacitated","invisible","paralyzed","petrified","poisoned","prone","restrained","stunned","unconscious","wounded","cloudSpellNames","deleteTempItem","async","args","item","workflow","setDeleteItemFlags","tempItem","originTokenDoc","tokenActor","getDeleteItemData","logic","getDeleteItemLogic","setDeleteItemLogic","fromUuid","uuid","tokenUuid","actor","concEffect","MidiQOL","getConcentrationEffect","hasTemplate","templateUuid","hasSelfEffects","getSelfEffects","length","hasSelfTarget","hasEffects","effects","size","isSelfTargetItem","target","type","originTargetingSelf","hitTargetUuids","filter","checkSelfTarget","getDialogueButtonType","choices","dialogueOptions","title","getIconPathsFunc","buttonWidth","buttonHeight","iconData","Promise","resolve","buttons","getIconPaths","width","height","reduce","choice","i","icon","label","callback","value","getDialogueButtons","Dialog","render","effect","selfTarget","flags","dae","selfTargetAlways","getSourceMacroNames","onUseMacroName","getSpawnLocation","spawnIconPath","interval","itemRange","originToken","setCrosshairConfigs","distanceAvailable","crosshairsDistance","location","warpgate","crosshairs","show","inFlight","wait","ray","Ray","center","distance","Math","ceil","canvas","grid","measureDistances","gridSpaces","draw","cancelled","getTemplatesInRange","templates","gridSize","gridScale","range","x1","y1","template","a","b","x","y","sqrt","pow","itemRangeModified","getTokensInRange","tokens","token","tokenTopLeftCenterX","tokenTopLeftCenterY","tokenGridBorderCoords","j","push","xArr","map","coord","yArr","maxX","max","maxY","coords","x2","y2","getUpdatedMacroNames","macroNames","flagName","activation","update","removeEffect","effectUuid","socket","executeAsGM","setActiveEffects","tokenActorUuids","effectData","all","tokenActorUuid","actorUuid","createEffect","setActorConcDeletion","find","name","delete","setActorConcRemoveUuids","originActor","originActorConcentrationRemoveUuids","removeUuids","setAuraEffectUpdatesWhenDeleted","effectName","tokenActorsEffected","charname","forEach","fromUuidSync","setAuraEffectsWhenEntered","getEffectData","newActorUuids","insectCloud","flag","setAuraEffectsWhenLeft","tokenEffect","setCastSpellUpdates","updates","updateDeleteUuidEffects","callMacro","asGM","scene","adjustment","lockSize","lockPosition","tag","drawIcon","rememberControlled","activate","setDeleteUuids","tempItemEffect","origin","deletionChange","key","mode","CONST","ACTIVE_EFFECT_MODES","ADD","updatedChanges","changes","setTemplateDispels","itemTemplatePositions","potentialTemplates","dnd5e","originName","spellLevel","templatesWithOverlap","eligibleTemplates","gridTemplateId","id","templatePositions","highlightLayers","positions","Set","intersection","getTemplatesWithOverlap","updateAuraEffectsOnUse","appliedEffect","templateEffect","updateAuraFlags","updateAuraWhenMoved","dispositions","newTokenActorUuids","oldTokenActorUuids","game","modules","get","api","findContained","collections","tokenDoc","tokenId","includes","disposition","getAuraParamsWhenMoved","originUuid","removalUuids","deleteAuraEffectsWhenMoved","newUuidsToEffect","setAuraEffectsWhenMoved","hasSysConc","system","components","concentration","hasMidiConc","midiProperties","isConcentration","isReactionItem","getDeleteUuidEffects","checkCombatActivity","combat","active","turns","doc","sourceCombatDoc","createSpawn","overrides","strings","getConcEffect","spawnUuids","createSpawnTokens","updateInitiatives","updateConcEffect","params","getSpawnParams","setWarpGateSpawn","getAmountToSpawn","overrideAmountToSpawn","general","amountToSpawnByIndex","indexOf","getCallbacks","spawnName","overrideCallbacks","warpGate","callbacks","eval","pre","loc","usePreEffectSequencer","post","spawnToken","usePostEffectSequencer","toLowerCase","getPreDeleteParams","amountSpawned","summoning","sequencer","options","getPreEffectsSequencerParams","spawnSize","circleNum","color","school","scale","document","getSpawnDetails","actors","getTexturePath","prototypeToken","controllingActor","spawnNames","iconPath","amountToSpawn","getSpawnUpdates","concEffectUuid","defaultMutations","mergeObject","mutations","overwrite","inlace","insertKeys","insertValues","combinedMutations","defaultIconPath","defaultIcons","texture","src","onPreDeleteToken","config","user","theGmUser","users","isTheGM","deleteOverrides","optionOverrides","useTokenDeleteSequencer","created","totalSpawnCreated","deleted","totalSpawnDeleted","delay","floor","random","newDeleted","updatedConc","setSpawnedTokensToActive","combatToken","placeables","toggleCombat","spawnIds","spawnAt","updateCombatDocs","activeTokenIds","init","combatDocs","deleteUuidChanges","spawnFlags","initiative","impactNum","impactNum1","sequencerPath","fadeIn","ms","ease","Sequence","animation","on","opacity","play","file","atLocation","overrideSequencer","originScale","spawnScale","belowTokens","waitUntilFinished","impactNum2","auraOfPurity","preTargetSave","some","change","saveDetails","advantage","onUse","tokenAttacher","attachElementToToken","parent","tokenDocs","Array","from","values","eligibleTokenDocs","tokenDocuments","originX","originY","tokenDocsInRange","templateNonEffectedTokens","itemEffectName","statuses","has","getNonTemplateEffectedTokenDocs","getEligibleTokenDocuments","tokenEffectUuids","casterDisposition","effected","console","log","dfreds","effectInterface","addEffect","setTokenEffects","blight","speaker","character","scope","hitTargets","details","CUSTOM","disabled","getBlightEffectData","castLevel","Hooks","once","rolledItem","rollConfig","maxDamageString","String","parts","setBlightHook","castData","setSpawnedTokenId","spawn","spawnedTokenId","originActorSenses","originTokenSight","TOKEN_DISPLAY_MODES","HOVER","getWarpgateUpdates","attributes","senses","sight","originTokenUuid","setEffectsSequencer","setPostEffectsSequencer","getWarpgateCallbacks","getWarpgateOptions","clairvoyance","macroPass","spawnedTokenUuid","getTokenSpawnIds","originTokenActorUuid","fromUuidActor","userId","deleteSummonConcentrationHookId","off","setHookMacros","setPostSpawnEffects","buttonName","setAreaChoiceEffects","itemUuid","setTemplateEffects","lightParams","sanitizedLight","lightId","getEffectOriginData","_id","ineligibleEffectNames","minSpellLevel","originTemplateActiveEffect","setAreaEffectDeleteHookId","templateData","originFlag","templateSpellLevel","gridTemplatePositions","setTimeout","setAreaEffectDeleteHookOffId","setAreaEffectDeleteHookOff","setAreaEffectDeleteHook","attachTo","daylight","targets","first","duration","rounds","getEffectTokenData","setInitChoice","templateId","lastArg","efData","casterUuid","dispelAbility","dispelLevel","casterToken","effectsLTE2DispelLevel","effectsGTDispelLevel","baseLevel","getTokenEffects","effectsIdsToDelete","abilities","mod","abilityRoll","arr","effectCastLevel","rollAbilityTest","total","concat","getEffectsToDelete","deleteEffectsOnToken","selectedTemplate","inRangeEligibleTemplates","originItem","originItems","items","sortedTemplates","sort","aOrig","bOrig","localeCompare","templateSelections","itemOwnerName","menu","inputs","ui","notifications","info","getTemplateSelection","getSelectedTemplate","templateCastLevel","getTemplatesToDelete","deleteTemplate","dispelMagic","spellcasting","feyAncestry","main","giantInsect","initHeader","preEffectSeqPath","summonCelestial","charnamesIcons","getSpellIconPaths","index","img","getAoeOverlapPerc","creatureCoords","getCreatureCoords","templateCoords","getTemplateCoords","set","position","toString","add","templateIdStr","setLiveTokenDocUpdates","hordeItem","hordeItemUsesMax","multiplier","liveTokenDoc","shouldReduce","tokenSizeNum","setSequencer","traits","Object","keys","CONFIG","DND5E","actorSizes","setPostDamageUpdates","newHpDamage","newHealthPercentage","hp","hordePassive","img1","img2","img3","templateEffectName","checkEffectOrigin","effectedToken","candidateToken","insectCloudEffectNames","getEffectDuration","getIfInBsOrTsRange","bsRange","tsRange","maxBsOrTsRange","findNearby","canSee","attackingToken","ringOfSpellStoring","addSpellErr","castSpellErr","castSpellHeader","charHeader","currSpellBank","descLevel","charnamesExceptions","initChoices","levelHeader","levelLabels","spellHeader","instrumentOfTheBards","anstruthHarp","canaithMandolin","cliLyre","dossLute","fochlucanBandore","generic","macFuirmidhCittern","ollamhHarp","staffOfSwarmingInsects","allChoices","damageWeaponName","meleeChoices","spellNames","createTempItem","spell","instrument","chosenIndex","sourceMacroNames","updatedMacroNames","itemData","getTempSpellItem","createEmbeddedDocuments","spells","level","damage","getCureWoundsData","duplicate","toObject","originInstrumentUuid","spellIndex","updateDeleteItemFlags","isCharged","getInitIconPaths","spellData","liveItem","sourceItem","getTempItem","getAddSpellChoices","eligibleSpellsByChar","charChoice","charChoices","toSorted","getCharIconPaths","getAddCharChoice","levelChoice","levelChoices","getLevelChoices","getLevelIconPaths","getAddLevelChoice","spellChoice","spellChoices","spellIcons","getSpellChoices","getSpellChoice","getAddSpellChoice","getEligibleSpells","actorSpells","eligibleLevelSpells","highestSpellLevel","getHighestSpellLevel","preparation","getSpellData","pact","getEligibleLevelSpells","slotsRemaining","slotsUsed","eligibleLevels","spellLevels","getLiveActors","getNewSlotsUsed","sortedChoices","radioSelections","levelChoiceInt","dc","spelldc","ability","attackBonus","isRangedAttack","actionType","isMeleeAttack","parseInt","bonuses","rsak","attack","msak","getAttackBonus","prof","getSpellToCast","uniqueSpells","spellsArr","chosenSpell","getUpdatedDescription","desc","description","newSpells","descs","spellBankStr","substring","lastIndexOf","replace","setPreUseItemHooks","useItem","consumeResource","consumeSpellSlot","consumeUsage","slotLevel","_baseProficiency","setReactionUpdates","setResetSpellsDesc","updatedStr","updatedDesc","newSlotsUsed","flaggedItem","updatedDescription","updateRingItem","charName","spellName","notification","setRingUpdatesNotification","newSpellData","chr","getUpdateRingData","setRingUpdates","exceptionActorNames","sequencerData","getItemUpdates","s","originAttack","getSequencerData","originDc","originLevel","cr","originProf","ac","getSpawnBaseAc","spawnDc","wis","getSpawnDc","getChoiceIconPaths","staff","amount","prep","getTempSpellItemMods","getConsumptionAmount","getDamage","weapon","data","equipped","filteredSpellNames","uses","attunement","chosenItem","getChosenItem","completeItemUse","setCommandEffectsSequencer","setItemUsesUpdate","usesUsed","wandOfFear","buttonOptions","fearItem","Item","documentClass","getFearItemData","fearWorkflow","showFullCard","createWorkflow","versatile","configureDialog","spriteOffset","local","rotate","direction","setFearEffects","commandItem","getCommandItemData","targetUuids","setCommandEffects","macros","getOverrides","isSaveFailure","hasAreaTarget","preTargetDamageApplication","hordeItemUses","hpDamage","damageItem","aoeOverlapPerc","hordeCount","getNewDamage","setHpUpdateEffects","checkAttackerVision","units","blindsight","tremorsense","getCheckAttackerVisionParams","inBsOrTsRange","defenderIsOwnEffectOrigin","attackerIsOwnEffectOrigin","checkDefenderVision","getCheckDefenderVisionParams","setTemplateAttachment","elligibleTokens","getTokenActorUuids","whenDeleted","whenEntered","whenLeft","whenMoved","getSpellsToCast","createCastWorkflow","castSpell","onNewDay","newDay","instruments","refreshInstruments","protectionFromPoison","poisonEffects","hasPoisonedName","hasPoisonedConditions","chosenEffect","acc","nameAlreadyUsed","getChoices","buttonNames","initChoice","getChosenEffect","setAddSpellNotification","getAddSpellUpdates","setAddSpellUpdates","addSpell","tempItems","ringUuid","resetSpells","deleteIndex","usedSpellLevel","usedSpell","getDeleteItemFlagData","getDeleteItemFlagUpdates","songOfRest","songEffects","dhd","originBardScale","effectOriginUuid","effectOrigin","bard","faces","getOriginBardScale","songLevel","getItemData","tokenForActor","embedded","getCreateSpawnParams","socketlib","registerModule","register","globalThis","setAmbientLightCreate","setAmbientLightDelete","ambientLightId","ambientLight","deleteEmbeddedDocuments","setActiveEffectDelete","ownerActor","effectId","deleteEffect","setDeleteSummonConcentrationHook","preDeleteSummonConcentrationHookId","setMeasuredTemplateDelete","deletedMeasuredTemplate","setSpawnedTokensInitiative","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__"],"sourceRoot":""}