{"version":3,"file":"main.js","mappings":"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","sources":["webpack://CHARNAME's Bag of Macros/webpack/bootstrap","webpack://CHARNAME's Bag of Macros/webpack/runtime/define property getters","webpack://CHARNAME's Bag of Macros/webpack/runtime/hasOwnProperty shorthand","webpack://CHARNAME's Bag of Macros/./src/scripts/constants.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helper-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/aura-of-purity.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/clairvoyance.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/daylight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/hooks.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/dispel-magic.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/horde-passive.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/items.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/instrument-of-the-bards.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/protection-from-poison.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/ring-of-spell-storing.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/wand-of-fear.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/blight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/fey-ancestry.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/spells.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/class/bard/song-of-rest.js","webpack://CHARNAME's Bag of Macros/./src/scripts/socket-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export const conditionLabels = {\r\n\tblinded: [\"blinded\", \"convenient effect: blinded\"],\r\n\tcharmed: [\"charmed\", \"convenient effect: charmed\"],\r\n\tconcentrating: [\"concentrating\", \"convenient effect: concentrating\"],\r\n\tdead: [\"dead\", \"convenient effect: dead\"],\r\n\tdeafened: [\"deafened\", \"convenient effect: deafened\"],\r\n\texhaustion1: [\"exhaustion 1\", \"convenient effect: exhaustion 1\"],\r\n\texhaustion2: [\"exhaustion 2\", \"convenient effect: exhaustion 2\"],\r\n\texhaustion3: [\"exhaustion 3\", \"convenient effect: exhaustion 3\"],\r\n\texhaustion4: [\"exhaustion 4\", \"convenient effect: exhaustion 4\"],\r\n\texhaustion5: [\"exhaustion 5\", \"convenient effect: exhaustion 5\"],\r\n\tfrightened: [\"frightened\", \"convenient effect: frightened\"],\r\n\tgrappled: [\"grappled\", \"convenient effect: grappled\"],\r\n\tincapacitated: [\"incapacitated\", \"convenient effect: incapacitated\"],\r\n\tinvisible: [\"invisible\", \"convenient effect: invisible\"],\r\n\tparalyzed: [\"paralyzed\", \"convenient effect: paralyzed\"],\r\n\tpetrified: [\"petrified\", \"convenient effect: petrified\"],\r\n\tpoisoned: [\"poisoned\", \"convenient effect: poisoned\"],\r\n\tprone: [\"prone\", \"convenient effect: prone\"],\r\n\trestrained: [\"restrained\", \"convenient effect: restrained\"],\r\n\tstunned: [\"stunned\", \"convenient effect: stunned\"],\r\n\tunconscious: [\"unconscious\", \"convenient effect: unconscious\"],\r\n\twounded: [\"wounded\", \"convenient effect: wounded\"]\r\n}\r\n\r\nexport const cloudSpellNames = [\r\n\t\"Cloudkill\",\r\n\t\"Incendiary Cloud\",\r\n\t\"Insect Plague\",\r\n\t\"Moonbeam\",\r\n\t\"Spirit Guardians\"\r\n]","import {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nexport const deleteTempItem = async ({args, item, workflow}, setDeleteItemFlags) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tawait setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nexport const getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nexport const getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nexport const getDialogueButtons = (resolve, choices, getIconPaths, width, height, iconData) => {\t\r\n\treturn choices.reduce((buttons, choice, i) => {\r\n\t\tconst icon = getIconPaths(choice, iconData)\r\n\t\tconst newButton = {[choice]: {\r\n\t\t\tlabel: `<img src=${icon} width=${width} height=${height} style=\"border:0px\"><br>${choice}`,\r\n\t\t\tcallback: () => {\r\n\t\t\t\tresolve({value: `${choice}`})\r\n\t\t\t}\r\n\t\t}}\r\n\t\treturn {...buttons, ...newButton}\r\n\t}, {})\r\n}\r\nexport const getDialogueButtonType = async (choices, dialogueOptions, title, getIconPathsFunc, buttonWidth, buttonHeight, iconData) => { \r\n\treturn await (new Promise( (resolve) => {\t\r\n\t\tconst buttons = getDialogueButtons(resolve, choices, getIconPathsFunc, buttonWidth, buttonHeight, iconData)\t\t\r\n\t\tnew Dialog({\r\n\t\t\ttitle: title,\r\n\t\t\tbuttons: buttons\r\n\t\t}, dialogueOptions).render(true)\r\n}))}\r\nexport const getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nexport const getSpawnLocation = async (spawnIconPath, size, interval, tokenUuid, itemRange, originToken) => {\r\n\tawait setCrosshairConfigs(tokenUuid, itemRange)\r\n\tconst distanceAvailable = itemRange\r\n\tlet crosshairsDistance = 0\r\n\tconst checkDistance = async (crosshairs) => {\r\n\t\twhile (crosshairs.inFlight) {\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t\tconst ray = new Ray(originToken.center, crosshairs)\r\n\t\t\tconst distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0]\r\n\t\t\tif (crosshairsDistance !== distance) {\r\n\t\t\t\tcrosshairsDistance = distance;\r\n\t\t\t\tif (distance > distanceAvailable) {\r\n\t\t\t\t\tcrosshairs.icon = 'icons/svg/hazard.svg';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcrosshairs.icon = spawnIconPath\r\n\t\t\t\t}\r\n\t\t\t\tcrosshairs.draw();\r\n\t\t\t\tcrosshairs.label = `${distance} ft`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst location = await warpgate.crosshairs.show(\r\n\t\t{\r\n\t\t\tsize: size,\r\n\t\t\tinterval: interval,\r\n\t\t\ticon: spawnIconPath,\r\n\t\t\tlabel: '0 ft.',\r\n\t\t},\r\n\t\t{\r\n\t\t\tshow: checkDistance\r\n\t\t},\r\n\t)\r\n\tif (location.cancelled || crosshairsDistance > distanceAvailable) {\r\n\t\treturn\r\n\t} else {\r\n\t\treturn location\r\n\t}\r\n}\r\nexport const getTemplatesInRange = (templates, gridSize, gridScale, range, x1, y1) => {\r\n\t//gets templates where center of template within range of a cast template\r\n\treturn templates.filter(template => {\r\n\t\tconst [a, b] = [x1 - template.x, y1 - template.y]\r\n\t\tconst c  = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\tconst templateCentersDistance = c / gridSize\t\r\n\t\tconst templateRangeModified = template.distance / gridScale\t\r\n\t\tconst itemRangeModified = range / gridScale\t\t\r\n\t\treturn templateCentersDistance < templateRangeModified + itemRangeModified\r\n\t})\r\n}\r\nexport const getTemplatesWithOverlap = (eligibleTemplates, itemTemplatePositions) => {\r\n\treturn eligibleTemplates.filter(template => {\r\n\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\tconst templatePositions = canvas.grid.highlightLayers[gridTemplateId]?.positions ?? new Set(\"-1\")\r\n\t\treturn itemTemplatePositions.intersection(templatePositions).size > 0\r\n\t})\r\n}\r\nexport const getTokensInRange = async (tokens, gridSize, gridScale, itemRange, x1, y1) => {\r\n\treturn tokens.filter(token => {\r\n\t\tconst tokenTopLeftCenterX = token.x + gridSize / 2\r\n\t\tconst tokenTopLeftCenterY = token.y + gridSize / 2\r\n\t\tlet tokenGridBorderCoords = []\r\n\t\t\r\n\t\tfor (let i = 0; i <= token.width * 2 - 1; i++) {\r\n\t\t\tfor (let j = 0; j <= token.width * 2  - 1; j++) {\r\n\t\t\t\ttokenGridBorderCoords.push({x: tokenTopLeftCenterX + gridSize / 2 * i, y: tokenTopLeftCenterY + gridSize / 2 * j})\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst xArr = tokenGridBorderCoords.map(coord => coord.x)\r\n\t\tconst yArr = tokenGridBorderCoords.map(coord => coord.y)\r\n\t\tconst maxX = Math.max(...xArr)\r\n\t\tconst maxY = Math.max(...yArr)\r\n\t\tconst tokenGridCoords = tokenGridBorderCoords.filter(coords => coords.x != maxX && coords.y != maxY)\r\n\t\t\r\n\t\tconst tokenGridCoordsInRange = tokenGridCoords.filter(coord => {\r\n\t\t\tconst [x2, y2] = [coord.x, coord.y]\r\n\t\t\tconst a = x1 - x2\r\n\t\t\tconst b = y1 - y2\r\n\t\t\tconst c = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\t\treturn c / gridSize <= itemRange / gridScale\r\n\t\t})\r\n\t\t\r\n\t\treturn tokenGridCoordsInRange.length > 0\r\n\t})\r\n}\r\nexport const removeEffect = async (effectUuid) => {return await MidiQOL.socket().executeAsGM(\"removeEffect\", {effectUuid: effectUuid})}\r\nexport const setActiveEffects = async (tokenActorUuids, effectData) => {\r\n\tconst createEffect = async (tokenActorUuid, effectData) => {return await MidiQOL.socket().executeAsGM(\"createEffects\", {actorUuid: tokenActorUuid, effects: [effectData]})}\r\n\tconst [effects] = await Promise.all(tokenActorUuids.map(tokenActorUuid => createEffect(tokenActorUuid, effectData)))\r\n\treturn effects\r\n}\r\nexport const setActorConcDeletion = async (actor) => {\r\n\tif (actor.effects.find(effect => effect.name == \"Concentrating\")) actor.effects.find(effect => effect.name == \"Concentrating\").delete()\r\n} \r\nexport const setActorConcRemoveUuids = async (originActor, uuid) => {\r\n\tlet originActorConcentrationRemoveUuids = originActor.flags[\"midi-qol\"][\"concentration-data\"]?.removeUuids || []\r\n\toriginActorConcentrationRemoveUuids.push(uuid)\t\r\n\tawait originActor.update({\"flags.midi-qol\": {\"concentration-data\": {removeUuids: originActorConcentrationRemoveUuids}}})\r\n\tconst concEffect = originActor.effects.find(effect => effect.name == \"Concentrating\")\r\n\tawait concEffect.update({\r\n\t\t\"flags.dae\": {\"specialDuration\": [\"shortRest\", \"longRest\"]}\r\n\t})\r\n}\r\nexport const setActorReagentCost = async (actorUuid, itemUuid) => {\r\n\tconst actor = await fromUuid(actorUuid)\r\n\tconst item = await fromUuid(itemUuid)\t\r\n\tif (settings.reagentsConsume = \"money\")  {\r\n\t\t//set this to pull from the lower denominations first\r\n\t\tconst newMoney = actor.system.currency.gp - item.system.materials.cost\r\n\t\tif (newMoney < 0) return false\r\n\t\tactor.update({\"system.currency.gp\": newMoney})\r\n\t} else if (settings.reagentsConsume = \"supply\") {\r\n\t\tconst newSupply = item.system.materials.supply - 1\r\n\t\tif (newSupply < 0) return false\r\n\t\titem.update({\"system.materials.supply\": newSupply})\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n\treturn true\r\n}\r\nexport const setCrosshairConfigs = async (tokenUuid, itemRange) => {\r\n\tconst target = await fromUuid(tokenUuid)\r\n\tconst {distance} = canvas.scene.grid\r\n\twarpgate.crosshairs.show({\r\n\t\tlockSize:true,\r\n\t\tlockPosition: true,\r\n\t\tsize: target.width + (2*itemRange/distance),\r\n\t\ttag: 'range',\r\n\t\tdrawIcon:false,\r\n\t\tlabel: 'Valid Area',\r\n\t\tx: target.x,\r\n\t\ty: target.y,\r\n\t\trememberControlled: true\r\n\t})\t\r\n\tcanvas.tokens.activate()\r\n}\r\nconst setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nexport const setTemplateDispels = async (x, y, name, itemTemplatePositions) => {\r\n\tconst dnd5eFlaggedTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e)\r\n\tconst potentialTemplates = dnd5eFlaggedTemplates.filter(template => {\r\n\t\tconst originName = fromUuidSync(template.flags.dnd5e.origin).name\r\n\t\tif (!name) {\r\n\t\t\treturn template.flags.dnd5e.spellLevel\r\n\t\t} else {\r\n\t\t\treturn template.flags.dnd5e.spellLevel && originName == name\t\r\n\t\t}\r\n\t})\r\n\tconst templatesInRange = getTemplatesInRange(potentialTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 60, x, y)\r\n\tconst templatesWithOverlap = getTemplatesWithOverlap(templatesInRange, itemTemplatePositions)\r\n\ttemplatesWithOverlap.map(template => {socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)})\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {getTokensInRange} from \"../../helper-functions.js\"\r\n\r\nasync function getEligibleTokenDocuments(tokenDocuments, scene, itemRange, originX, originY) {\r\n\tconst tokenDocsInRange = await getTokensInRange(tokenDocuments, scene.grid.size, scene.grid.distance, itemRange, originX, originY)\r\n\tif (!tokenDocsInRange) return false\r\n\tconst templateNonEffectedTokens = await getNonTemplateEffectedTokenDocs(tokenDocsInRange)\r\n\tif (!templateNonEffectedTokens) return false\r\n\treturn templateNonEffectedTokens\r\n}\r\nasync function getNonTemplateEffectedTokenDocs(tokenDocuments, itemEffectName) {\r\n\treturn tokenDocuments.filter(token => {\r\n\t\tconst effects = token.actor.statuses\r\n\t\treturn effects.has(itemEffectName) == false\r\n\t})\r\n}\r\nconst onUse = async ({args, workflow, item, actor, token}) => {\r\n\tconst itemEffectName = \"Convenient Effect: Aura of Purity\"\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\tconst scene = await fromUuid(template.parent.uuid)\r\n\tconst itemRange = args[0].item.system.target.value\r\n\tconst tokenDocs = Array.from(scene.collections.tokens.values())\r\n\t\r\n\tconst eligibleTokenDocs = await getEligibleTokenDocuments(tokenDocs, scene, itemRange, template.x, template.y)\r\n\tif (!eligibleTokenDocs) return false\r\n\r\n\tconst tokenEffectUuids = await setTokenEffects(eligibleTokenDocs, token.document.disposition)\r\n\tawait template.update({\r\n\t\t\"flags.castData.auraOfPurity.tokensEffected\": tokenEffectUuids\r\n\t})\r\n}\r\nconst preTargetSave = async ({args, workflow, item, actor}) => {\r\n\tconst itemHasEffect = item.effects.some(effect => effect.changes.some(change => {\r\n\t\treturn conditionLabels[\"blinded\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"charmed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"deafened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"frightened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"paralyzed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"stunned\"].includes(change.value.toLowerCase())\r\n\t}))\r\n\tif (itemHasEffect) workflow.saveDetails.advantage = true\r\n}\r\nasync function setTokenEffects(tokenDocs, casterDisposition) {\r\n\tlet effected = []\r\n\tlet uuid = \"\"\r\n\tfor (let i=0; i < tokenDocs.length; i++) {\r\n\t\tconsole.log(\"tokenDocs[i]\")\r\n\t\tconsole.log(tokenDocs[i])\r\n\t\tuuid = tokenDocs[i].actor.uuid\r\n\t\tif ((casterDisposition == 1 && tokenDocs[i].disposition != -1)\r\n\t\t\t|| (casterDisposition == -1  && tokenDocs[i].disposition != 1)) {\r\n\t\t\tgame.dfreds.effectInterface.addEffect( {effectName: 'Aura of Purity', uuid} )\r\n\t\t\teffected.push(uuid)\r\n\t\t}\r\n\t}\r\n\treturn effected\r\n}\r\n\r\nexport const auraOfPurity = {\r\n\tpreTargetSave,\r\n\tonUse\r\n}","import {getSpawnLocation, setActorConcDeletion, setActorConcRemoveUuids} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getSpawnUpdates = async (originActorSenses, originTokenSight) => {\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"alpha\": 0,\r\n\t\t\t\"sight\": originTokenSight\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"system.attributes.senses\": originActorSenses\r\n\t\t}\r\n\t}\r\n}\r\nconst getTokenSpawnIds = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawnedTokenId = await setSpawnedTokenId(tokenUuid, itemRange, actor, originToken)\r\n\tconst spawnedToken = canvas.scene.collections.tokens.get(spawnedTokenId)\r\n\treturn spawnedToken.uuid\r\n}\r\nconst getWarpgateCallbacks = async (tokenUuid) => {\r\n\treturn {\r\n\t\tpre: async (template,update,token) => {\r\n\t\t\tsetEffectsSequencer(template, update, token, tokenUuid)\r\n\t\t\tawait warpgate.wait(2650)\r\n\t\t},\r\n\t\tpost: async (template, token) => {\r\n\t\t\tsetPostEffectsSequencer(template,token)\r\n\t\t}\r\n\t}\r\n}\r\nconst getWarpgateOptions = async (actor) => {\r\n\treturn {controllingActor: actor}\r\n}\r\nconst getWarpgateUpdates = async (spawn, originActorSenses, originTokenSight) => {\r\n\tconst updates = await getSpawnUpdates(originActorSenses, originTokenSight)\r\n\treturn mergeObject(updates, spawn)\r\n}\r\nconst setEffectsSequencer = async (template, update, token, originTokenUuid) => {\r\n\tconst color = \"blue\"\r\n\tconst originToken = await fromUuid(originTokenUuid)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.intro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.loop.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.outro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\t\r\n}\r\nconst setHookMacros = async (actor, spawnedTokenUuid) => {\r\n\tconst userIsGM = game.users.find(user => user.id == game.userId).isTheGM\r\n\tif (!userIsGM) {\r\n\t\tawait socket.executeAsGM(\"setDeleteSummonConcentrationHook\", actor, spawnedTokenUuid)\r\n\t}\r\n\tconst deleteSummonConcentrationHookId = Hooks.on(\"deleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", deleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\r\n}\r\nconst setPostEffectsSequencer = async (template, token) => {\r\n\tconst sequencerPath = \"jb2a.impact.009.blue\"\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.fadeIn(250)\t\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\t\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t.play()\r\n\t\r\n}\r\nconst setPostSpawnEffects = async (spawnedTokenUuid, originTokenActorUuid) => {\r\n\tconst fromUuidActor = await fromUuid(originTokenActorUuid)\r\n\tawait setActorConcRemoveUuids(fromUuidActor, spawnedTokenUuid)\r\n\tawait setHookMacros(fromUuidActor, spawnedTokenUuid)\t\r\n}\r\nconst setSpawnedTokenId = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawn = {\r\n\t\ttoken: { name:\"Clairvoyance\"},\r\n\t\tactor: { name:\"Clairvoyance\"}\r\n\t}\r\n\tconst location = await getSpawnLocation(\"modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_Grey_Sphere_400x400.webm\", 1, 4, tokenUuid, itemRange, originToken)\r\n\tconst spawnedTokenId = await warpgate.spawnAt({x: location.x, y: location.y}, spawn.token.name, await getWarpgateUpdates(spawn, actor.system.attributes.senses, originToken.document.sight), await getWarpgateCallbacks(tokenUuid), await getWarpgateOptions(actor))\r\n\treturn spawnedTokenId[0]\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tawait setActorConcDeletion(actor)\r\n\t} else {\t\r\n\t\tconst spawnedTokenUuid = await getTokenSpawnIds(args[0].tokenUuid, 5280, actor, token)\t\t\r\n\t\tawait setPostSpawnEffects(spawnedTokenUuid, token.document.actor.uuid)\t\r\n\t}\r\n}\r\n\r\nexport const clairvoyance = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getDialogueButtonType, setActiveEffects, setTemplateDispels} from \"../../helper-functions.js\"\r\nimport {setAreaEffectDeleteHook} from \"../../hooks.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getEffectOriginData = async (originUuid, lightId) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\torigin: originUuid,\r\n\t\tchanges: [{key: \"macro.execute\", mode: 0, value: \"function.CHARNAME.macros.daylight.setSpellEffects\"}],\r\n\t\t\"flags.castData.daylight.lightId\": lightId,\r\n\t\t\"flags.dae.showIcon\": false,\t\t\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": true,\t\t\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectTokenData = async (originUuid) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\tduration: {rounds: 600},\r\n\t\torigin: originUuid,\r\n\t\tchanges: [\r\n\t\t\t{key: `ATL.light.dim`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [120]},\r\n\t\t\t{key: `ATL.light.bright`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [60]},\r\n\t\t\t{key: `ATL.light.attenuation`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [.35]}\r\n\t\t],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": false,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.showIcon\": true,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area of Effect\":\r\n\t\t\treturn \"icons/magic/air/weather-clouds-sunlight.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/air/weather-sunlight-sky.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst setAreaChoiceEffects = async (templateUuid, templateEffect, tokenActorUuid, itemUuid, positions) => {\r\n\tconst [x, y] = await setTemplateEffects(templateUuid, templateEffect, positions)\r\n\tconst lightParams = {\"x\": x, \"y\": y, \"config\": {\"bright\": 60, \"dim\": 120, \"attenuation\": .4}}\r\n\tconst [sanitizedLight] = await socket.executeAsGM(\"setAmbientLightCreate\", lightParams)\r\n\tconst [effect] = await setActiveEffects([tokenActorUuid], await getEffectOriginData(itemUuid, sanitizedLight._id))\t\r\n\tawait setAreaEffectDeleteHook(60, x, y, [\"Darkness\"], 9, effect, positions)\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token) => {\r\n\tif (!token) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation({\"x\": x, \"y\": y})\r\n\t\t\t.play()\t\t\t\t\r\n\t} else {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.attachTo(token)\r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst setInitChoice = async (itemUuid)  => {\r\n\tconst type = await getDialogueButtonType([\"Area of Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Daylight?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tconst target = game.user.targets.first()\r\n\t\tawait setActiveEffects([target.document.actor.uuid], await getEffectTokenData(itemUuid))\r\n\t\tawait setEffectsSequencer(0, 0, target.document.width, target)\r\n\t\treturn false\t\t\t\r\n\t}\t\r\n\treturn true\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tconst isAreaChoice = await setInitChoice(item.uuid)\r\n\t\tif (!isAreaChoice) return false\r\n\t} else if (args[0].tag == \"OnUse\" && args[0].macroPass == \"postActiveEffects\") {\r\n\t\tconst templateId = \"MeasuredTemplate.\" + args[0].templateId \r\n\t\tconst templatePositions = canvas.grid.highlightLayers[templateId].positions\r\n\t\tconst templateEffect = actor.effects.find(effect => effect.name == \"Daylight Template\")\r\n\t\tawait setAreaChoiceEffects(args[0].templateUuid, templateEffect, token.document.actor.uuid, item.uuid, templatePositions)\r\n\t} else if (args[0] == \"off\")  {\r\n\t\tconst lastArg = args[args.length - 1]\r\n\t\tawait socket.executeAsGM(\"setAmbientLightDelete\", lastArg.efData.flags.castData.daylight.lightId)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setTemplateEffects = async (templateUuid, templateEffect, templatePositions) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tawait setEffectsSequencer(template.x, template.y, 7, false)\r\n\tawait setTemplateDispels(template.x, template.y, \"Darkness\", templatePositions)\r\n\ttemplateEffect.delete()\r\n\treturn [template.x, template.y]\r\n}\r\n\r\nexport const daylight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getTemplatesInRange, getTemplatesWithOverlap} from \"./helper-functions.js\"\r\nimport {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const setAreaEffectDeleteHook = async (range, x, y, ineligibleEffectNames, minSpellLevel, originTemplateActiveEffect, itemTemplatePositions) => {\r\n\tconst setAreaEffectDeleteHookId = Hooks.on(\"refreshMeasuredTemplate\", (templateData) => {\r\n\t\tconst template = templateData.document\t\t\r\n\t\tconst originFlag = template.flags?.dnd5e?.origin ?? false\r\n\t\tconst templateSpellLevel = template.flags?.dnd5e?.spellLevel ?? 0\r\n\t\tif (!originFlag || templateSpellLevel > minSpellLevel) return false\t\t\r\n\t\tconst origin = fromUuidSync(template.flags.dnd5e.origin)\r\n\t\tif (ineligibleEffectNames.includes(origin.name) || ineligibleEffectNames == \"all\") {\t\r\n\t\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\t\tconst gridTemplatePositions = canvas.grid.highlightLayers[gridTemplateId].positions\t\r\n\t\t\tconst templatesOverlap = itemTemplatePositions.intersection(gridTemplatePositions).size > 0 \r\n\t\t\tif (!templatesOverlap) return false\r\n\t\t\t//waiting for potential concentration effects to cycle through\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsocket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)\r\n\t\t\t}, 200)\t\t\t\t\r\n\t\t}\r\n\t})\r\n\tawait setAreaEffectDeleteHookOff(originTemplateActiveEffect, setAreaEffectDeleteHookId)\r\n}\r\nexport const setAreaEffectDeleteHookOff = async (templateEffect, setAreaEffectDeleteHookId) => {\r\n\tconst setAreaEffectDeleteHookOffId = Hooks.on(\"deleteActiveEffect\", (effect, config) => {\t\t\t\r\n\t\tif (effect.uuid == templateEffect.uuid) {\r\n\t\t\tHooks.off(\"createMeasuredTemplate\", setAreaEffectDeleteHookId)\r\n\t\t\tHooks.off(\"deleteActiveEffect\", setAreaEffectDeleteHookOffId)\r\n\t\t}\r\n\t})\r\n}","import {getDialogueButtonType, getTemplatesInRange} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst deleteEffectsOnToken = async (casterToken, dispelAbility, dispelLevel) => {\r\n\tconst target = game.user.targets.first()\t\r\n\tconst [effectsLTE2DispelLevel, effectsGTDispelLevel] = await getTokenEffects(target, dispelLevel)\r\n\tconst effectsIdsToDelete = await getEffectsToDelete(casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel)\r\n\teffectsIdsToDelete.map(socket.executeAsGM(\"setActiveEffectDelete\", target.actor, effectsIdsToDelete[i]))\r\n}\r\nconst deleteTemplate = async (casterToken, dispelAbility, dispelLevel, selectedTemplate) => {\r\n\tconst spellLevel = selectedTemplate.flags.dnd5e.spellLevel\r\n\tconst templatesToDelete = dispelLevel < spellLevel ? await getTemplatesToDelete(casterToken, dispelAbility, [selectedTemplate]) : [selectedTemplate]\r\n\ttemplatesToDelete.map(template => socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid))\r\n}\r\nconst getEffectsToDelete = async (casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel) => {\r\n\tconst casterAbilityMod = casterToken.actor.system.abilities[dispelAbility].mod\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet effectCastLevel = 0\r\n\tfor (let i = 0; i < effectsGTDispelLevel.length; i++) {\r\n\t\teffectCastLevel = effectsGTDispelLevel[i].flags[\"midi-qol\"].castData.castLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > effectCastLevel + 10) arr.push(effectsGTDispelLevel[i])\t\t\r\n\t}\r\n\treturn effectsLTE2DispelLevel.concat(arr).map(effect => effect.id)\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area Effect\":\r\n\t\t\treturn \"icons/magic/air/air-burst-spiral-blue-gray.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/nature/plant-sprout-hand-blue.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelectedTemplate = async (casterToken) => {\r\n\tconst eligibleTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e.spellLevel > 0)\r\n\tconst inRangeEligibleTemplates = getTemplatesInRange(eligibleTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 120, casterToken.x, casterToken.y)\t\r\n\tlet originItem\r\n\tlet originItems = []\r\n\tfor (let i = 0; i < inRangeEligibleTemplates.length; i++) {\r\n\t\toriginItem = await fromUuid(inRangeEligibleTemplates[i].flags.dnd5e.origin)\r\n\t\toriginItems.push(originItem)\r\n\t}\r\n\treturn await getTemplateSelection(originItems, inRangeEligibleTemplates)\r\n}\r\nconst getTemplateSelection = async (items, inRangeEligibleTemplates) => {\r\n\tconst sortedTemplates = inRangeEligibleTemplates.sort((a, b) => {\r\n\t\tconst aOrig = fromUuidSync(a.flags.dnd5e.origin)\t\r\n\t\tconst bOrig = fromUuidSync(b.flags.dnd5e.origin)\r\n\t\treturn aOrig.name.localeCompare(bOrig.name)\r\n\t})\r\n\tconst templateSelections = items.map((item, i) => {\r\n\t\tconst itemOwnerName = canvas.scene.tokens?.find(token => token.actor.uuid == item.parent.uuid)?.name ?? \"unknown\"\r\n\t\tconst itemLabel = item.name + \" from \" + itemOwnerName\t\r\n\t\treturn {type: 'radio', label: itemLabel}\r\n\t}).sort((a, b) => a.label.localeCompare(b.label))\t\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: templateSelections\r\n\t\t},{\r\n\t\t\ttitle: \"Which template to dispel?\",\r\n\t\t\trender: (...args) => { console.log(...args); ui.notifications.info(\"render!\")},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100px\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn sortedTemplates[choices.inputs.indexOf(true)]\r\n}\r\nconst getTemplatesToDelete = async (casterToken, dispelAbility, potentialTemplates) => {\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet templateCastLevel = 0\r\n\tfor (let i = 0; i < potentialTemplates.length; i++) {\r\n\t\ttemplateCastLevel = potentialTemplates[i].flags.dnd5e.spellLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > potentialTemplates[i].flags.dnd5e.spellLevel + 10) arr.push(potentialTemplates[i])\t\t\r\n\t}\t\r\n\treturn arr\r\n}\r\nconst getTokenEffects = async (token, dispelLevel) => {\r\n\t//get two groups, 1: effects w/ spell levels lesser than or equal to the casted spell level of dispel magic; and 2: the same with greater than that level\r\n\tconst effectsLTE2DispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > 0 && effect.flags[\"midi-qol\"].castData.baseLevel <= dispelLevel)\r\n\tconst effectsGTDispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > dispelLevel)\r\n\treturn [effectsLTE2DispelLevel, effectsGTDispelLevel]\r\n} \r\nconst setInitChoice = async (casterUuid, dispelAbility, dispelLevel)  => {\r\n\tconst type = await getDialogueButtonType([\"Area Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Dispel Magic?\", getIconPaths, 60, 60)\r\n\tconst casterToken = await fromUuid(casterUuid)\t\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tdeleteEffectsOnToken(casterToken, dispelAbility, dispelLevel)\t\r\n\t} else if (type.value == \"Area Effect\") {\r\n\t\tconst selectedTemplate = await getSelectedTemplate(casterToken)\r\n\t\tdeleteTemplate(casterToken, dispelAbility, dispelLevel, selectedTemplate)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setSpellEffects = async ({args, item, workflow}) => {\r\n\tconst casterUuid = args[0].tokenUuid\r\n\tconst dispelAbility = args[0].actor.system.attributes.spellcasting\r\n\tconst dispelLevel = args[0].spellLevel < 3 ? 3 : args[0].spellLevel\r\n\tsetInitChoice(casterUuid, dispelAbility, dispelLevel)\r\n}\r\n\r\nexport const dispelMagic = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {cloudSpellNames} from \"../../constants.js\"\r\n\r\nconst getAoeOverlapPerc = async (args) => {\r\n\tconst creatureCoords = await getCreatureCoords(args[0].actor.token)\r\n\tconst templateCoords = await getTemplateCoords(args[0].templateId) ?? false\r\n\tif (!templateCoords) return 0\r\n\tconst overlap = creatureCoords.intersection(templateCoords)\r\n\treturn overlap.size / creatureCoords.size\r\n}\r\nconst getCreatureCoords = async (tokenDoc) => {\r\n\tconst gridSize = canvas.scene.grid.size\r\n\tlet set = new Set()\r\n\tlet position = \"\"\r\n\tfor (let i = 0; i < tokenDoc.height; i++) {\r\n\t\tfor (let j = 0; j < tokenDoc.width; j++) {\r\n\t\t\tposition = (tokenDoc.x + gridSize*i).toString() + \".\" + (tokenDoc.y + gridSize*j).toString() \r\n\t\t\tset.add(position)\r\n\t\t}\r\n\t}\r\n\treturn set\r\n}\r\nconst getNewDamage = async(hpDamage, hordeCount, multiplier, hasAreaTarget) => {\r\n\treturn hasAreaTarget ? Math.floor(hpDamage * hordeCount * multiplier) : hpDamage\r\n}\r\nconst getTemplateCoords = async (templateId) => {\r\n\tconst templateIdStr = \"MeasuredTemplate.\" + templateId\r\n\treturn canvas.grid.highlightLayers[templateIdStr].positions\r\n}\r\nconst isSaveFailure = async ({args, item}) => {\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tconsole.log(await getAoeOverlapPerc(args))\r\n\tif (!item.system.hasAreaTarget || await getAoeOverlapPerc(args) <= .666) {\r\n\t\tHooks.once(\"createActiveEffect\", (effect) => {\t\t\t\r\n\t\t\teffect.delete()\r\n\t\t})\r\n\t}\t\r\n}\r\nconst preTargetDamageApplication = async ({actor, args, item, workflow, token}) => {\r\n\tif (workflow.hitTargets.size < 1) return false\r\n\tconst hordeItem = await fromUuid(actor.items.find(item => item.name == \"Horde\").uuid)\r\n\tconst hordeItemUses = hordeItem.system.uses.value\r\n\tconst hordeItemUsesMax = hordeItem.system.uses.max\r\n\tconst liveTokenDoc = await fromUuid(token.document.uuid)\r\n\tconst hpDamage = workflow.damageItem.hpDamage\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tif (hpDamage > 0) setHpUpdateEffects(actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args)\r\n}\r\nconst setHpUpdateEffects = async (actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args) => {\r\n\tconst aoeOverlapPerc = await getAoeOverlapPerc(args)\r\n\tconst newHpDamage = await getNewDamage(hpDamage, hordeItemUses, aoeOverlapPerc, hasAreaTarget)\r\n\tworkflow.damageItem.hpDamage = newHpDamage\r\n\tsetPostDamageUpdates(actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax)\r\n}\r\nconst setLiveTokenDocUpdates = async (texture, hordeItem, hordeItemUsesMax, multiplier, liveTokenDoc, shouldReduce, tokenSizeNum) => {\r\n\t\thordeItem.update({\"system.uses.value\": hordeItemUsesMax * multiplier})\r\n\t\tif (tokenSizeNum > 2 && shouldReduce) {\r\n\t\t\tawait warpgate.wait(4000)\t\r\n\t\t\tsetSequencer(liveTokenDoc)\r\n\t\t\tawait warpgate.wait(200)\t\r\n\t\t\tif (liveTokenDoc.actor.system.traits.size != \"grg\" && liveTokenDoc.width <= 4 && liveTokenDoc.width <= 4) {\r\n\t\t\t\tliveTokenDoc.actor.update({\"system.traits.size\": Object.keys(CONFIG.DND5E.actorSizes)[tokenSizeNum - 1]})\r\n\t\t\t}\r\n\t\t\tliveTokenDoc.update({\"width\": liveTokenDoc.width - 1, \"height\": liveTokenDoc.width - 1})\t\r\n\t\t}\r\n\t\tliveTokenDoc.update({\"texture.src\": texture})\r\n}\r\nconst setPostDamageUpdates = async (actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax) => {\r\n\tconst newHealthPercentage = ((actor.system.attributes.hp.value - newHpDamage) / actor.system.attributes.hp.max) * 100\r\n\tconst tokenSizeNum = Object.keys(CONFIG.DND5E.actorSizes).indexOf(liveTokenDoc.actor.system.traits.size)\r\n\tlet shouldReduce = false\r\n\tif (75 >= newHealthPercentage && newHealthPercentage > 50) {\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img1, hordeItem, hordeItemUsesMax, .75, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (50 >= newHealthPercentage && newHealthPercentage > 25) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img2, hordeItem, hordeItemUsesMax, .50, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (25 >= newHealthPercentage && newHealthPercentage >= 0) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img3, hordeItem, hordeItemUsesMax, .25, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} \r\n}\r\nconst setSequencer = async (liveTokenDoc) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(liveTokenDoc.actor.flags[\"midi-qol\"].hordePassive.sequencerPath)\r\n\t\t\t.atLocation(liveTokenDoc)\r\n\t\t.play()\r\n}\r\n\r\nexport const hordePassive = {\r\n\tisSaveFailure,\r\n\tpreTargetDamageApplication\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const ringOfSpellStoring = {\r\n\taddSpellErr:\t\t\"Your Ring of Spell Storing doesn't have enough room left for a spell!\",\r\n\tcastSpellErr:\t\t\"Your Ring of Spell Storing doesn't have any spells on it!\",\t\r\n\tcastSpellHeader:\t\"Which spell do you wan to cast?\",\r\n\tcharHeader: \t\t\"Who is casting onto the ring?\",\r\n\tcurrSpellBank:\t\t\"Current Spell Bank\",\r\n\tdescLevel: \t\t\t\", Level \",\r\n\tcharnamesExceptions:[\"Shadowfell Vine Strike\", \"Necrotic Blast\", \"Summon Shadow Clone\", \"Animate Shadow Servant\", \"Mud\", \"Taunt\"],\r\n\tinitChoices:\t\t[\"Add Spells\", \"Cast Spell\", \"Empty Spells\"],\r\n\tinitHeader: \t\t\"What do you want to cast?\",\r\n\tlevelHeader:\t\t\"What level spell do you want to add?\",\r\n\tlevelLabels:\t\t[\"One\", \"Two\", \"Three\", \"Four\", \"Five\"],\r\n\tspellHeader:\t\t\"Which spell is being cast onto the ring?\",\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tinstrumentSpellNames: {\r\n\t\tanstruthHarp: [\"Control Weather\", \"Cure Wounds\", \"Wall of Thorns\"],\r\n\t\tcanaithMandolin: [\"Cure Wounds\", \"Dispel Magic\", \"Protection from Energy (Lightning)\"],\r\n\t\tcliLyre: [\"Stone Shape\", \"Wall of Fire\", \"Wind Wall\"],\r\n\t\tdossLute: [\"Animal Friendship\", \"Protection from Energy (Fire)\", \"Protection from Poison\"],\r\n\t\tfochlucanBandore: [\"Entangle\", \"Faerie Fire\", \"Shillelagh\", \"Speak with Animals\"],\r\n\t\tgeneric: [\"Fly\", \"Invisibility\", \"Levitate\", \"Protection from Evil and Good\"],\r\n\t\tmacFuirmidhCittern: [\"Barkskin\", \"Cure Wounds\", \"Fog Cloud\"],\r\n\t\tollamhHarp: [\"Confusion\", \"Control Weather\", \"Fire Storm\"]\r\n\t},\r\n\tinitHeader: \"Choose a spell to cast!\"\r\n}","import {deleteTempItem as deleteItem, getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {instrumentOfTheBards as s} from \"../../strings/items.js\"\r\n\r\nconst castSpell = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst updates = await createCastWorkflow(spell, instrument, tokenActor, chosenIndex)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst [tempItem] = await createTempItem(spell, instrument, tokenActor, chosenIndex)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spell.activation)\r\n\tconst itemData = await getTempSpellItem(spell, instrument, updatedMacroNames, chosenIndex)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data, setDeleteItemFlags)\r\n}\r\nconst getCureWoundsData = async (spell, instrument) => {\r\n\tif (instrument.type == \"anstruthHarp\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [5, [\"5d8 + @mod\", \"healing\"]]\r\n\t} else if (instrument.type == \"canaithMandolin\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [3, [\"3d8 + @mod\", \"healing\"]]\r\n\t} else {\r\n\t\treturn [spell.system.level, spell.system.damage.parts]\r\n\t}\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getInstrumentSpells = async (instrument) => {\r\n\t//keeping this for reference\r\n\tswitch(instrument) {\r\n\t\tcase \"anstruthHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Control Weather\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Wall of Thorns\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"canaithMandolin\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Cure Wounds\", \r\n\t\t\t\t\"Dispel Magic\",\r\n\t\t\t\t\"Protection from Energy (Lightning)\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"cliLyre\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Stone Shape\", \r\n\t\t\t\t\"Wall of Fire\",\r\n\t\t\t\t\"Wind Wall\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"dossLute\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Animal Friendship\", \r\n\t\t\t\t\"Protection from Energy (Fire)\",\r\n\t\t\t\t\"Protection from Poison\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"fochlucanBandore\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Entangle\", \r\n\t\t\t\t\"Faerie Fire\",\r\n\t\t\t\t\"Shillelagh\",\r\n\t\t\t\t\"Speak with Animals\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"macFuirmidhCittern\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Barkskin\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Fog Cloud\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"ollamhHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Confusion\", \r\n\t\t\t\t\"Control Weather\",\r\n\t\t\t\t\"Fire Storm\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\treturn spell.img\r\n}\r\nconst getSpellsToCast = async (item, type) => {\r\n\tconst spellNames = [...s.instrumentSpellNames[\"generic\"], ...s.instrumentSpellNames[type]].sort()\r\n\tconst spellData = spellNames.map((name, i) => {\r\n\t\treturn {\"name\": name, id: i}\r\n\t}).filter(spell => item.flags.charname.instrumentOfTheBards.spells[spell.id].isCharged)\r\n\tconst spells = spellData.map(spell => game.items.find(item => item.name.toLowerCase() == spell.name.toLowerCase()))\t\r\n\tconst filteredSpellNames = spells.map(spell => spell.name)\r\n\treturn [spellData, spellNames, filteredSpellNames, spells]\r\n}\r\nconst getTempSpellItem = async (spell, instrument, updatedMacroNames, chosenIndex) => {\r\n\tconst [level, damage] = await getCureWoundsData(spell, instrument)\r\n\treturn mergeObject(duplicate(spell.toObject(false)), {\r\n\t\t\"flags.charname.instrumentOfTheBards.originInstrumentUuid\": instrument.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.originName\": spell.name,\r\n\t\t\"flags.charname.instrumentOfTheBards.originUuid\": spell.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.type\": \"spell\",\r\n\t\t\"flags.charname.instrumentOfTheBards.spellIndex\": chosenIndex,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.damage.parts\": damage,\r\n\t\t\"system.level\": level,\t\t\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.instrumentOfTheBards.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst main = async ({actor, args, token}) => {\r\n\t//\r\n}\r\nconst removeSpells = async (actor, instrument) => {\r\n\t//this erased everything on Nora lol\r\n\t\r\n\treturn Promise.all(actor.items.filter(item => {\r\n\t\tconst originName = item.flags?.charname?.instrumentOfTheBards?.originName ?? null\r\n\t\treturn instrument.spells.filter(spell => spell.name == originName).length > 0\r\n\t}).map(item => item.delete()))\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst instrument = await fromUuid(tempItem.flags.charname.instrumentOfTheBards.originInstrumentUuid)\r\n\tconst index = tempItem.flags.charname.instrumentOfTheBards.spellIndex\r\n\tupdateDeleteItemFlags(instrument, index)\r\n}\r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst updateDeleteItemFlags = async (instrument, index) => {\r\n\tconst updates = instrument.flags.charname.instrumentOfTheBards.spells.map((spell, i) => {\r\n\t\tif (i == index) {\r\n\t\t\treturn {name: spell.name, isCharged: false}\r\n\t\t} else {\r\n\t\t\treturn spell\r\n\t\t}\r\n\t})\r\n\tconst flaggedItem = await instrument.update({\r\n\t\t\"flags.charname.instrumentOfTheBards.spells\": updates\r\n\t})\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst type = item.flags?.charname?.instrumentOfTheBards.type ?? \"spell\"\r\n\tif (type == \"spell\") return false\t\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\t\t\r\n\tconst [spellData, spellNames, filteredSpellNames, spells] = await getSpellsToCast(liveItem, type)\r\n\tconst choice = await getDialogueButtonType(filteredSpellNames, {width: filteredSpellNames.length * 150, height: \"100%\"}, s.initHeader, getSpellIconPaths, 60, 60, spells)\r\n\tconst spell = spells.find(spell => spell.name == choice.value)\r\n\tconst chosenIndex = spellNames.indexOf(choice.value)\r\n\tcastSpell(spell, liveItem, tokenActor, chosenIndex)\t\r\n}\r\nconst onNewDay = async (actor, data) => {\r\n\tif (!data.newDay) return false\r\n\tconst instruments = actor.items.filter(item => {\r\n\t\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\t\treturn type != \"spell\"\r\n\t}) \r\n\trefreshInstruments(instruments)\r\n}\r\nconst refreshInstruments = async (instruments) => {\r\n\tinstruments.forEach(instrument => {\r\n\t\tconst spells = instrument.flags.charname.instrumentOfTheBards.spells\r\n\t\tconst update = spells.map(spell => {\r\n\t\t\tspell.isCharged = true\r\n\t\t\treturn spell\r\n\t\t})\r\n\t\tinstrument.update({\"flags.charname.instrumentOfTheBards.spells\": update})\r\n\t})\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tdeleteTempItem,\r\n\tonUse,\r\n\tonNewDay\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {protectionFromPoison as s} from \"../../strings/spells.js\"\r\nimport {getDialogueButtonType, removeEffect} from \"../../helper-functions.js\"\r\n\r\nconst getChoices = async (effects) => {\r\n\treturn effects.reduce((acc, effect, i) => {\r\n\t\t\tconst nameAlreadyUsed = acc.find(choice => choice.name == effect.name)\r\n\t\t\tconst name = nameAlreadyUsed ? effect.name + \"-\" + i : effect.name\r\n\t\t\tconst choice = {name: name, icon: effect.icon, uuid: effect.uuid}\r\n\t\t\treturn [...acc, choice]\r\n\t}, [])\r\n}\r\nconst getChosenEffect = async (effects) => {\r\n\tconst choices = await getChoices(effects)\t\t\r\n\tconst buttonNames = choices.map(choice => choice.name)\t\t\r\n\tconst initChoice = await getDialogueButtonType(buttonNames, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60, choices)\r\n\treturn choices.find(effect => effect.name == initChoice.value)\t\r\n}\r\nconst getInitIconPaths = (choice, effects) => {\r\n\tconst chosenEffect = effects.find(effect => effect.name == choice)\r\n\treturn chosenEffect.icon\r\n}\r\nconst getPoisonEffects = () => {\r\n\tconst target = game.user.targets.first()\r\n\treturn target.actor.effects.filter(effect => {\r\n\t\tconst hasPoisonedName = conditionLabels[\"poisoned\"].includes(effect.name.toLowerCase())\r\n\t\tconst hasPoisonedConditions = effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase()))\r\n\t\treturn hasPoisonedName || hasPoisonedConditions\r\n\t})\t\r\n}\r\nconst onUse = async ({item, workflow, args, token}) => {\r\n\tconst poisonEffects = await getPoisonEffects()\r\n\tif (poisonEffects.length > 0) {\r\n\t\tconst chosenEffect = await getChosenEffect(poisonEffects)\r\n\t\tawait removeEffect(chosenEffect.uuid)\t\r\n\t}\r\n}\r\nconst preTargetSave = async ({item, workflow, args}) => {\r\n\tconst hasPoison = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())))\r\n\tif (hasPoison) workflow.saveDetails.advantage = true\r\n}\r\n\r\nexport const protectionFromPoison = {\r\n\tonUse,\r\n\tpreTargetSave\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {ringOfSpellStoring as s} from \"../../strings/items.js\"\r\n\r\nconst addSpell = async (item, tokenActor) => {\r\n\tconst notification = await setAddSpellNotification(item)\r\n\tif (notification) return false\r\n\tconst updates = await getAddSpellUpdates(item, tokenActor)\r\n\tsetAddSpellUpdates(item, updates, tokenActor)\r\n}\r\nconst castSpell = async (item, tokenActor) => {\r\n\tconst updates = await createCastWorkflow(item, tokenActor)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nconst createCastWorkflow = async (item, tokenActor) => {\r\n\tconst spellData = await getSpellToCast(item)\t\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, item)\r\n\tawait setPreUseItemHooks(tempItem, spellData)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, item)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spellData, tokenActor, liveItem) => {\r\n\tconst sourceItem = await fromUuid(spellData.uuid)\t\r\n\tconst sourceMacroNames = await getSourceMacroNames(sourceItem)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spellData.activation)\r\n\tconst itemData = await getTempItem(liveItem, sourceItem, spellData, updatedMacroNames)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async ({args, item, workflow}) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tawait setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nconst getAddCharChoice = async (eligibleSpellsByChar) => {\r\n\tconst charChoices = eligibleSpellsByChar.map(character => character.origin).toSorted()\t\r\n\treturn await getDialogueButtonType(charChoices, {width: 400, height: 150}, s.charHeader, getCharIconPaths, 60, 60, eligibleSpellsByChar)\r\n}\r\nconst getAddLevelChoice = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst levelChoices = await getLevelChoices(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst levelChoice = await getDialogueButtonType(levelChoices, {width: 400, height: 150}, s.levelHeader, getLevelIconPaths, 60, 60)\r\n\t//return value as int\r\n\treturn {value: s.levelLabels.indexOf(levelChoice.value) + 1}\r\n}\r\nconst getAddSpellChoice = async (charChoice, eligibleSpellsByChar, levelChoice) => {\r\n\tconst [spellChoices, spellIcons] = await getSpellChoices(charChoice, eligibleSpellsByChar, levelChoice)\r\n\treturn await getSpellChoice(spellChoices, s.spellHeader, getSpellIconPaths, spellIcons)\t\r\n}\r\nconst getAddSpellChoices = async (eligibleSpellsByChar, item, tokenActor) => {\r\n\tconst charChoice = await getAddCharChoice(eligibleSpellsByChar)\r\n\tconst levelChoice = await getAddLevelChoice(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst spellChoice = await getAddSpellChoice(charChoice, eligibleSpellsByChar, levelChoice.value)\r\n\treturn [charChoice.value, levelChoice.value, spellChoice.value]\r\n}\r\nconst getAddSpellUpdates = async (item, tokenActor) => {\r\n\tconst actors = await getLiveActors()\r\n\tconst eligibleSpellsByChar = await getEligibleSpells(actors)\t\r\n\tconst choices = await getAddSpellChoices(eligibleSpellsByChar, item, tokenActor)\t\r\n\treturn [choices, eligibleSpellsByChar]\r\n}\r\nconst getAttackBonus = (actor, item, ability) => {\r\n\tconst isRangedAttack = item.system.actionType == \"rsak\"\r\n\tconst isMeleeAttack = item.system.actionType == \"msak\"\r\n\tif (!isRangedAttack && !isMeleeAttack) {\r\n\t\treturn 0\r\n\t} else if (isRangedAttack) {\t\t\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.rsak.attack)\r\n\t} else if (isMeleeAttack) {\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.msak.attack)\r\n\t}\r\n}\r\nconst getCharIconPaths = (choice, iconData) => {\t\r\n\tconst match = iconData.find(item => item.origin == choice)\r\n\treturn match.icon\r\n}\r\nconst getDeleteItemFlagData = async (liveItem, tempItem) => {\r\n\tconst spellData = tempItem.flags.charname.ringOfSpellStoring.spellData\r\n\tconst spells = liveItem.flags.charname.ringOfSpellStoring.spells\t\r\n\tconst slotsUsed = liveItem.flags.charname.ringOfSpellStoring.slotsUsed\r\n\tconst usedSpell = spells.find(spell => {\r\n\t\treturn spell.level == spellData.level\r\n\t\t\t&& spell.name == spellData.name \r\n\t\t\t&& spell.dc == spellData.dc \r\n\t\t\t&& spell.ability == spellData.ability\r\n\t})\t\r\n\tconst deleteIndex = spells.indexOf(usedSpell)\r\n\treturn [deleteIndex, slotsUsed, spells, usedSpell.level]\r\n}\r\nconst getDeleteItemFlagUpdates = async (liveItem, tempItem) => {\r\n\tconst [deleteIndex, slotsUsed, spells, usedSpellLevel] = await getDeleteItemFlagData(liveItem, tempItem)\r\n\tconst newSlotsUsed = slotsUsed - usedSpellLevel\r\n\tconst newSpells = spells.filter((spell, i) => i != deleteIndex)\t\r\n\treturn [newSlotsUsed, newSpells]\r\n}\r\nconst getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nconst getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getEligibleLevelSpells = (actor, item) => {\r\n\tconst highestSpellLevel = getHighestSpellLevel(actor.system.spells)\r\n\tconst mode = item.system.preparation.mode\r\n\tlet eligibleLevelSpells = []\r\n\tlet spellData = {}\r\n\tfor (let i = item.system.level; i <= 5; i ++) {\r\n\t\tif (mode == \"atwill\" || mode == \"innate\") {\t\t\t\t\r\n\t\t\tif (i == item.system.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, item.system.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else if (mode == \"pact\") {\r\n\t\t\tif (i == actor.system.spells.pact.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, actor.system.spells.pact.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (i <= highestSpellLevel) {\r\n\t\t\t\tspellData = getSpellData(actor, item, i)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\t\t\r\n\treturn eligibleLevelSpells\r\n}\r\nconst getEligibleSpells = async (actors) => {\r\n\treturn actors.map(actor => {\r\n\r\n\t\tconst eligibleSpells = actor.items.filter(item => item.type == \"spell\" && item.system.level > 0 && item.system.level <= 5)\t\r\n\t\tconst actorSpells = eligibleSpells.reduce((spells, spell) => {\r\n\t\t\tconst eligibleLevelSpells = getEligibleLevelSpells(actor, spell)\r\n\t\t\treturn [...spells, ...eligibleLevelSpells]\r\n\t\t}, [])\r\n\t\treturn {origin: actor.prototypeToken.name, icon: actor.prototypeToken.texture.src, spells: actorSpells}\r\n\t})\r\n}\r\nconst getHighestSpellLevel = (spells) => {\r\n\tlet arr = []\r\n\tlet label\r\n\tfor (let i = 1; i <= 9; i++) {\r\n\t\tlabel = \"spell\" + i\r\n\t\tif (spells[label].max > 0) arr.push(i)\r\n\t}\r\n\treturn Math.max(...arr)\r\n}\r\nconst getInitIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.initChoices[0]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-diamond-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[1]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-pentagon-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[2]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-glowing-triangle-teal-purple.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst getLevelChoices = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst slotsRemaining = 5 - item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\r\n\tconst eligibleLevels = character.spells.map(spell => spell.level).filter(level => level <= slotsRemaining)\r\n\tconst spellLevels = new Set(eligibleLevels)\t\t\t\r\n\treturn Array.from(spellLevels).toSorted().map(level => s.levelLabels[level - 1])\r\n}\r\nconst getLevelIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.levelLabels[0]:\r\n\t\t\treturn \"icons/skills/ranged/target-bullseye-archer-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[1]:\r\n\t\t\treturn \"icons/skills/melee/weapons-crossed-daggers-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[2]:\r\n\t\t\treturn \"icons/skills/ranged/arrows-triple-yellow-red.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[3]:\r\n\t\t\treturn \"icons/skills/ranged/shuriken-thrown-yellow.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[4]:\r\n\t\t\treturn \"icons/skills/ranged/daggers-thrown-salvo-orange.webp\"\r\n\t\t\tbreak\t\t\t\t\r\n\t}\t\r\n}\r\nconst getLiveActors = async () => {\r\n\treturn game.users.filter(user => user.character).filter(user => {\r\n\t\treturn canvas.scene.tokens.find(token => token.actor.uuid == user.character.uuid)\r\n\t}).map(user => user.character)\r\n}\r\nconst getNewSlotsUsed = async(item, level) => {\r\n\tconst slots = item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\treturn slots + level\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellChoice = async (spellChoices, spellHeader, getSpellIconPaths, spellIcons) => {\r\n\tconst sortedChoices = spellChoices.toSorted()\r\n\tconst radioSelections = sortedChoices.map(choice => {\r\n\t\tconst data = spellIcons.find(spell => spell.name == choice)\r\n\t\tconst icon = data.icon\r\n\t\tconst label = `<img align=left src=${icon} width=\"15\" height=\"15\" style=\"border:0px\">${choice}`\r\n\t\treturn {type: \"radio\", label}\r\n\t})\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: radioSelections\r\n\t\t},{\r\n\t\t\ttitle: spellHeader,\r\n\t\t\trender: (...args) => {},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn {value: sortedChoices[choices.inputs.indexOf(true)]}\r\n}\r\nconst getSpellChoices = async (charChoice, eligibleSpellsByChar, levelChoiceInt) => {\t\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\t\r\n\tconst spells = character.spells.filter(spell => spell.level == levelChoiceInt && !s.charnamesExceptions.includes(spell.name))\r\n\tconst names = spells.map(spell => spell.name)\r\n\tconst icons = spells.map(spell => { return {name: spell.name, icon: spell.icon} })\r\n\treturn [names, icons]\r\n}\r\nconst getSpellData = (actor, item, i) => {\r\n\tconst name = item.name\r\n\tconst level = i\r\n\tconst dc = actor.system.attributes.spelldc\r\n\tconst ability = actor.system.attributes.spellcasting\r\n\tconst attackBonus = getAttackBonus(actor, item, ability)\r\n\tconst prof = actor.system.attributes.prof\t\r\n\tconst icon = item.img\r\n\tconst uuid = item.uuid\r\n\tconst activation = item.system.activation.type\r\n\tconst originUuid = actor.uuid\r\n\treturn {name, level, dc, ability, attackBonus, prof, icon, uuid, activation, originUuid}\r\n}\r\nconst getSpellIconPaths = (choice, iconData) => {\r\n\tconst match = iconData.find(item => item.name == choice)\r\n\treturn match.icon\t\r\n}\r\nconst getSpellToCast = async (item) => {\r\n\tconst spells = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tif (spells.length < 1) {\r\n\t\tui.notifications.info(s.castSpellErr)\r\n\t\treturn false\t\t\r\n\t}\t\r\n\tconst uniqueSpells = new Set(spells)\r\n\tconst spellsArr = Array.from(uniqueSpells)\r\n\tconst spellNames = spellsArr.map(spell => spell.name).toSorted()\r\n\tconst chosenSpell = await getDialogueButtonType(spellNames, {width: 400, height: \"100%\"}, s.castSpellHeader, getSpellIconPaths, 60, 60, spellsArr)\r\n\treturn spellsArr.find(spell => spell.name == chosenSpell.value)\r\n}\r\nconst getTempItem = async (liveItem, sourceItem, spellData, updatedMacroNames) => {\r\n\treturn mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\timg: liveItem.img,\r\n\t\t\"flags.charname.ringOfSpellStoring.ringUuid\": liveItem.uuid,\r\n\t\t\"flags.charname.ringOfSpellStoring.spellData\": spellData,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.ability\": \"none\",\r\n\t\t\"system.attackBonus\": spellData.attackBonus,\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t\t\"system.save.dc\": spellData.dc,\r\n\t\t\"system.save.scaling\": \"flat\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedDescription = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spells = item.flags.charname.ringOfSpellStoring.spells.reduce((spells, spell) => {\r\n\t\tconst newSpell = [\"<br />\" + spell.name + s.descLevel + spell.level]\r\n\t\treturn [...spells, ...newSpell]\r\n\t}, []).toSorted()\t\t\r\n\tconst newSpells = spells.reduce((descs, desc) => {\r\n\t\treturn descs + desc\r\n\t}, \"\")\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\r\n\tconst sanitizedDesc = desc.replace(spellBankStr, \"\")\t\r\n\treturn sanitizedDesc + \"<br />*******<br />\" + s.currSpellBank + \":<br />\" + newSpells + \"<br />*******\"\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.ringOfSpellStoring.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst getUpdateRingData = async (charName, eligibleSpellsByChar, item, level, spellName) => {\r\n\tconst chr = eligibleSpellsByChar.find(chr => chr.origin == charName)\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tconst newSlotsUsed = await getNewSlotsUsed(item, level)\r\n\tconst chosenSpell = [chr.spells.find(spell => spell.name == spellName && spell.level == level)]\t\t\r\n\tconst newSpellData = [...spellData, ...chosenSpell]\t\r\n\treturn [chosenSpell, newSlotsUsed, newSpellData]\r\n}\r\nconst main = async ({args, item}) => {\r\n\tconst initChoice = await getDialogueButtonType(s.initChoices, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\r\n\tif (initChoice.value == s.initChoices[0]) {\r\n\t\taddSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[1]) {\r\n\t\tcastSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[2]) {\r\n\t\tresetSpells(liveItem, tokenActor)\r\n\t}\r\n}\r\nconst resetSpells = async (item, tokenActor) => {\r\n\tsetResetSpellsDesc(item)\r\n\tconst tempItems = tokenActor.items.filter(item => item.flags?.charname?.ringOfSpellStoring?.ringUuid ?? false)\r\n\ttempItems.map(item => item.delete())\r\n}\r\nconst setAddSpellNotification = async (item) => {\r\n\tif (item.flags.charname.ringOfSpellStoring.slotsUsed == 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\t\r\n}\r\nconst setAddSpellUpdates = async (item, updates, tokenActor) => {\r\n\tconst [choices, eligibleSpellsByChar] = updates\r\n\tconst [spellData] = await updateRingItem(item, choices, eligibleSpellsByChar)\t\r\n\tif (spellData.activation == \"reaction\") setReactionUpdates(spellData, tokenActor, item)\t\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst liveItem = await fromUuid(tempItem.flags.charname.ringOfSpellStoring.ringUuid)\r\n\tconst updates = await getDeleteItemFlagUpdates(liveItem, tempItem)\r\n\tupdateDeleteItemFlags(liveItem, updates)\r\n}\r\nconst setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst setPreUseItemHooks = async (item, spellData) => {\r\n\tHooks.once(\"dnd5e.preUseItem\", (useItem, config) => {\r\n\t\tif (item.uuid != useItem.uuid) return false\t\r\n\t\tconfig.consumeResource = false\r\n\t\tconfig.consumeSpellSlot = false\r\n\t\tconfig.consumeUsage = false\r\n\t\tconfig.slotLevel = spellData.level\t\r\n\t\tconfig.system.prof._baseProficiency = spellData.prof\t\t\t\r\n\t})\t\t\r\n}\r\nconst setReactionHook = async ({item}) => {\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spellData ?? false\r\n\tif (!spellData) return false\r\n\tsetPreUseItemHooks(item, spellData)\r\n}\r\nconst setReactionUpdates = async (spellData, tokenActor, liveItem) => {\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, liveItem)\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n}\r\nconst setResetSpellsDesc = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\t\r\n\tconst updatedStr = \"<br />*******<br />\" + s.currSpellBank + \":<br /><br />*******\"\r\n\tconst updatedDesc = desc.replace(spellBankStr, updatedStr)\t\r\n\titem.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": [],\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": 0,\r\n\t\t\"system.description.value\": updatedDesc\r\n\t})\t\t\r\n}\r\nconst setRingUpdates = async (chosenSpell, item, newSlotsUsed, newSpellData) => {\r\n\tconst flagUpdate = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpellData,\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed\r\n\t})\t\r\n\tconst updatedDescription = await getUpdatedDescription(item)\t\r\n\tconst descUpdate = await item.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\r\n}\r\nconst setRingUpdatesNotification = async (item, level) => {\r\n\tconst slots = await getNewSlotsUsed(item, level)\r\n\tif (slots > 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\r\n\treturn false\r\n}\r\nconst updateDeleteItemFlags = async (item, updates) => {\r\n\tconst [newSlotsUsed, newSpells] = updates\r\n\tconst flaggedItem = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed,\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpells\r\n\t})\r\n\tconst updatedDescription = await getUpdatedDescription(flaggedItem)\t\r\n\tawait flaggedItem.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst updateRingItem = async (item, choices, eligibleSpellsByChar) => {\t\r\n\tconst [charName, level, spellName] = choices\r\n\tconst notification = await setRingUpdatesNotification(item, level)\r\n\tif (notification) return false\r\n\tconst [chosenSpell, newSlotsUsed, newSpellData] = await getUpdateRingData(charName, eligibleSpellsByChar, item, level, spellName)\r\n\tsetRingUpdates(chosenSpell, item, newSlotsUsed, newSpellData)\r\n\treturn chosenSpell\r\n}\r\n\r\nexport const ringOfSpellStoring = {\r\n\t\"main\": main,\r\n\t\"deleteTempItem\": deleteTempItem,\r\n\t\"setReactionHook\": setReactionHook\r\n}","import {getDialogueButtonType, setActiveEffects} from \"../../helper-functions.js\"\r\n\r\nconst getCommandItemData = async (originActor, type) => {\r\n\tconst sourceItem = type.value == \"Command: Flee\" ? await fromUuid(\"Item.TLqebf57ZF6HUkml\") : await fromUuid(\"Item.9iKDqMbCAERS9psP\")\r\n\tconsole.log(sourceItem)\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\t\t//name: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getFearItemData = async (originActor) => {\r\n\tconst sourceItem = await fromUuid(\"Item.DG5FfgOrf5IhvITt\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Fear\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-monster-purple-blue.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Flee\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-shadow-monster-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Prone\":\r\n\t\t\treturn \"icons/magic/control/silhouette-fall-slip-prone.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst onUse = async ({args, item, actor, token}) => {\r\n\tconst buttonOptions = item.system.uses.value > 1 ? [\"Fear\", \"Command: Flee\", \"Command: Prone\"] : [\"Command: Flee\", \"Command: Prone\"]\r\n\tconst type = await getDialogueButtonType(buttonOptions, {width: 400, height: 150}, \"What do you want to cast?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Fear\") {\r\n\t\tsetFearEffects(actor, item)\r\n\t} else {\r\n\t\tsetCommandEffects(actor, item, token, type)\r\n\t}\r\n}\r\nconst setCommandEffects = async (actor, item, token, type) => {\r\n\tconst commandItem = await getCommandItemData(actor, type)\r\n\tconst target = game.user.targets?.first() ?? false\r\n\tif (!target) return false\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [target.document.uuid]}\r\n\tconst commandWorkflow = await MidiQOL.completeItemUse(commandItem, {}, options)\t\r\n\tsetCommandEffectsSequencer(target)\r\n\tsetItemUsesUpdate(item.uuid, 1)\t\r\n}\r\nconst setCommandEffectsSequencer = async (token) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.enchantment.complete.dark_purple`)\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t\t.attachTo(token)\r\n\t\t\t.belowTokens()\r\n\t\t.play()\t\t\t\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token, template) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.detect_magic.cone.purple`)\r\n\t\t\t.scale(4.4)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\r\n\t\t\t.spriteOffset({x: 600, y:0}, {local: true})\r\n\t\t\t.rotate(-template.direction)\r\n\t\t.play()\t\t\t\r\n}\r\nconst setFearEffects = async (actor, item) => {\r\n\tconst fearItem = await getFearItemData(actor)\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false}\r\n\tconst fearWorkflow = await MidiQOL.completeItemUse(fearItem, {}, options)\t\r\n\tconst liveTemplate = await fromUuid(fearWorkflow.templateUuid)\r\n\tsetEffectsSequencer(0, 0, 1, false, liveTemplate)\r\n\tsetItemUsesUpdate(item.uuid, 2)\t\r\n}\r\nconst setItemUsesUpdate = async (itemUuid, usesUsed) => {\r\n\tconst liveItem = await fromUuid(itemUuid)\r\n\tliveItem.update({\"system.uses.value\": liveItem.system.uses.value - usesUsed})\r\n}\r\n\r\nexport const wandOfFear = {\r\n\tonUse\r\n}","import {auraOfPurity} from \"./macros/spells/aura-of-purity.js\"\r\nimport {blight} from \"./macros/spells/blight.js\"\r\nimport {clairvoyance} from \"./macros/spells/clairvoyance.js\"\r\nimport {daylight} from \"./macros/spells/daylight.js\"\r\nimport {dispelMagic} from \"./macros/spells/dispel-magic.js\"\r\nimport {feyAncestry} from \"./macros/features/fey-ancestry.js\"\r\nimport {hordePassive} from \"./macros/features/horde-passive.js\"\r\nimport {instrumentOfTheBards} from \"./macros/items/instrument-of-the-bards.js\"\r\nimport {protectionFromPoison} from \"./macros/spells/protection-from-poison.js\"\r\nimport {ringOfSpellStoring} from \"./macros/items/ring-of-spell-storing.js\"\r\nimport {songOfRest} from \"./macros/features/class/bard/song-of-rest.js\"\r\nimport {wandOfFear} from \"./macros/items/wand-of-fear.js\"\r\n\r\nexport const macros = {\r\n\tauraOfPurity,\r\n\tblight,\r\n\tclairvoyance,\r\n\tdaylight,\r\n\tdispelMagic,\r\n\tfeyAncestry,\r\n\thordePassive,\r\n\tinstrumentOfTheBards,\r\n\tprotectionFromPoison,\r\n\tringOfSpellStoring,\r\n\tsongOfRest,\r\n\twandOfFear\r\n}","const getBlightEffectData = async (origin) => {\r\n\treturn {\r\n\t\tname: `Blight Saving Throw Disadvantage`, \r\n\t\ticon: \"icons/magic/movement/chevrons-down-yellow.webp\", \r\n\t\torigin: origin,\r\n\t\tchanges: [{key: \"flags.midi-qol.disadvantage.ability.save.all\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [\"1\"], \"priority\": 20}],\r\n\t\t\"flags.dae.stackable\": \"noneName\",\r\n\t\t\"flags.times-up.isPassive\": true,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\", \"combatEnd\", \"isSave\"],\r\n\t\t\"flags.dae.showIcon\": false,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst setBlightHook = async (castLevel) => {\r\n\tconst blightPreDamageRollHookId = Hooks.once(\"dnd5e.preRollDamage\", (rolledItem, rollConfig) => {\r\n\t\tconst maxDamageRoll = 8 * castLevel + 32\r\n\t\tconst maxDamageString = String(maxDamageRoll) + \"[necrotic]\" \r\n\t\trollConfig.parts = [maxDamageString]\r\n\t})\t\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].hitTargets[0].actor.system.details.type.value == \"plant\") {\r\n\t\tconst effectData = await getBlightEffectData(args[0].item.uuid)\r\n\t\tawait MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: args[0].hitTargets[0].actor.uuid, effects: [effectData] })\r\n\t\tawait setBlightHook(args[0].castData.castLevel)\r\n\t}\t\r\n}\r\n\r\nexport const blight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {conditionLabels} from \"../../constants.js\"\r\n\r\nconst main = async ({item, workflow, args}) => {\r\n\tconst hasCharm = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"charmed\"].includes(change.value.toLowerCase())))\r\n\tif (hasCharm) {\r\n\t\tworkflow.saveDetails.advantage = true\r\n\t}\r\n}\r\n\r\nexport const feyAncestry = {\r\n\tmain\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const protectionFromPoison = {\r\n\tinitHeader: \t\t\"What do you want to cast?\"\r\n}","const getItemData = (originActor, songLevel) => {\r\n\tconst sourceItem = fromUuidSync(\"Item.GvIIDEPRp3unaRVe\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Song of Rest\",\r\n\t\tsystem: { \r\n\t\t\tdamage: {\r\n\t\t\t\tparts: [[`1d${songLevel}`, \"healing\"]]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getOriginBardScale = (effectOriginUuid) => {\r\n\tconst effectOrigin = fromUuidSync(effectOriginUuid)\r\n\tconst originActor = fromUuidSync(effectOrigin.parent.uuid)\r\n\treturn originActor.system.scale.bard[\"song-of-rest\"].faces\r\n}\r\nconst main = (actor, data) => {\r\n\tconst songEffects = actor.effects.filter(effect => effect.name == \"Song of Rest\")\r\n\tif (data.dhd < 0 && songEffects.length > 0) {\r\n\t\tsongEffects.map(effect => {\r\n\t\t\tconst originBardScale = getOriginBardScale(effect.origin)\r\n\t\t\tconst item = getItemData(actor, originBardScale)\r\n\t\t\tconst token = MidiQOL.tokenForActor(actor.uuid)\r\n\t\t\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [token.document.uuid] }\r\n\t\t\tMidiQOL.completeItemUse(item, {}, options)\t\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const songOfRest = {\r\n\tmain\r\n}","export const setAmbientLightCreate = async (params) => {\r\n\treturn await canvas.scene.createEmbeddedDocuments(\"AmbientLight\", [params])\r\n}\r\nexport const setAmbientLightDelete = async (ambientLightId) => {\r\n\tconst ambientLight = await canvas.scene.deleteEmbeddedDocuments(\"AmbientLight\", [ambientLightId])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn ambientLight\r\n}\r\nexport const setMeasuredTemplateDelete = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid) ?? false\r\n\tif (!template) return false\r\n\tconst deletedMeasuredTemplate = await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [template._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn deletedMeasuredTemplate\r\n}\r\nexport const setActiveEffectDelete = async (ownerActor, effectId) => {\t\r\n\tconst [deleteEffect] = ownerActor.effects.filter(effect => effect._id == effectId)\t\r\n\treturn await ownerActor.deleteEmbeddedDocuments(\"ActiveEffect\", [deleteEffect._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n}\r\nexport const setDeleteSummonConcentrationHook = async (actor, spawnedTokenUuid) => {\r\n\tconst preDeleteSummonConcentrationHookId = Hooks.on(\"preDeleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", preDeleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\t\r\n}","import {setConfig} from './config.js';\r\nimport {macros} from \"./macros.js\"\r\nimport * as sf from \"./socket-functions.js\"\r\n\r\nexport let socket\r\n\r\nHooks.once(\"socketlib.ready\", () => {\r\n\tsocket = socketlib.registerModule(\"charnames-bag-of-macros\")\r\n\tsocket.register(\"setActiveEffectDelete\", sf.setActiveEffectDelete)\r\n\tsocket.register(\"setAmbientLightCreate\", sf.setAmbientLightCreate)\t\r\n\tsocket.register(\"setAmbientLightDelete\", sf.setAmbientLightDelete)\r\n\tsocket.register(\"setDeleteSummonConcentrationHook\", sf.setDeleteSummonConcentrationHook)\r\n\tsocket.register(\"setMeasuredTemplateDelete\", sf.setMeasuredTemplateDelete)\r\n})\r\n\r\nHooks.on(\"dnd5e.restCompleted\", (actor, data) => {\r\n\tmacros.instrumentOfTheBards.onNewDay(actor, data)\r\n\tmacros.songOfRest.main(actor, data)\r\n})\r\n\r\nglobalThis['CHARNAME'] = {\r\n    macros\r\n}\r\n//test 2"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","conditionLabels","blinded","charmed","concentrating","dead","deafened","exhaustion1","exhaustion2","exhaustion3","exhaustion4","exhaustion5","frightened","grappled","incapacitated","invisible","paralyzed","petrified","poisoned","prone","restrained","stunned","unconscious","wounded","cloudSpellNames","getDialogueButtonType","async","choices","dialogueOptions","title","getIconPathsFunc","buttonWidth","buttonHeight","iconData","Promise","resolve","buttons","getIconPaths","width","height","reduce","choice","i","icon","label","callback","value","getDialogueButtons","Dialog","render","getSelfEffects","item","effects","filter","effect","selfTarget","flags","dae","selfTargetAlways","getTemplatesInRange","templates","gridSize","gridScale","range","x1","y1","template","a","b","x","y","Math","sqrt","pow","distance","itemRangeModified","setActiveEffects","tokenActorUuids","effectData","all","map","tokenActorUuid","MidiQOL","socket","executeAsGM","actorUuid","createEffect","setSpawnedTokenId","tokenUuid","itemRange","actor","originToken","spawn","token","name","location","spawnIconPath","size","interval","target","fromUuid","canvas","scene","grid","warpgate","crosshairs","show","lockSize","lockPosition","tag","drawIcon","rememberControlled","tokens","activate","setCrosshairConfigs","distanceAvailable","crosshairsDistance","inFlight","wait","ray","Ray","center","measureDistances","gridSpaces","draw","cancelled","getSpawnLocation","spawnedTokenId","spawnAt","originActorSenses","originTokenSight","updates","CONST","TOKEN_DISPLAY_MODES","HOVER","getSpawnUpdates","mergeObject","getWarpgateUpdates","system","attributes","senses","document","sight","pre","update","originTokenUuid","color","Sequence","file","scale","opacity","atLocation","belowTokens","waitUntilFinished","fadeIn","play","setEffectsSequencer","post","animation","on","setPostEffectsSequencer","getWarpgateCallbacks","controllingActor","getWarpgateOptions","buttonName","setAreaChoiceEffects","templateUuid","templateEffect","itemUuid","positions","setTemplateEffects","lightParams","sanitizedLight","originUuid","lightId","origin","changes","mode","disabled","getEffectOriginData","_id","ineligibleEffectNames","minSpellLevel","originTemplateActiveEffect","itemTemplatePositions","setAreaEffectDeleteHookId","Hooks","templateData","originFlag","dnd5e","templateSpellLevel","spellLevel","fromUuidSync","includes","gridTemplateId","id","gridTemplatePositions","highlightLayers","intersection","setTimeout","uuid","setAreaEffectDeleteHookOffId","config","off","setAreaEffectDeleteHookOff","setAreaEffectDeleteHook","attachTo","templatePositions","potentialTemplates","originName","templatesWithOverlap","eligibleTemplates","Set","getTemplatesWithOverlap","setTemplateDispels","delete","casterUuid","dispelAbility","dispelLevel","type","casterToken","game","user","targets","first","effectsLTE2DispelLevel","effectsGTDispelLevel","castData","baseLevel","getTokenEffects","effectsIdsToDelete","abilities","mod","abilityRoll","arr","effectCastLevel","length","castLevel","rollAbilityTest","total","push","concat","getEffectsToDelete","deleteEffectsOnToken","selectedTemplate","inRangeEligibleTemplates","originItem","originItems","items","sortedTemplates","sort","aOrig","bOrig","localeCompare","templateSelections","itemOwnerName","find","parent","menu","inputs","args","console","log","ui","notifications","info","options","indexOf","getTemplateSelection","getSelectedTemplate","templateCastLevel","getTemplatesToDelete","deleteTemplate","getAoeOverlapPerc","creatureCoords","getCreatureCoords","templateCoords","getTemplateCoords","templateId","tokenDoc","set","position","j","toString","add","templateIdStr","setLiveTokenDocUpdates","texture","hordeItem","hordeItemUsesMax","multiplier","liveTokenDoc","shouldReduce","tokenSizeNum","setSequencer","traits","keys","CONFIG","DND5E","actorSizes","setPostDamageUpdates","newHpDamage","newHealthPercentage","hp","max","hordePassive","img1","img2","img3","sequencerPath","ringOfSpellStoring","addSpellErr","castSpellErr","castSpellHeader","charHeader","currSpellBank","descLevel","charnamesExceptions","initChoices","initHeader","levelHeader","levelLabels","spellHeader","instrumentOfTheBards","anstruthHarp","canaithMandolin","cliLyre","dossLute","fochlucanBandore","generic","macFuirmidhCittern","ollamhHarp","createTempItem","spell","instrument","tokenActor","chosenIndex","sourceMacroNames","getSourceMacroNames","updatedMacroNames","getUpdatedMacroNames","activation","itemData","getTempSpellItem","createEmbeddedDocuments","onUseMacroName","getSpellIconPaths","spells","toLowerCase","img","level","damage","parts","getCureWoundsData","duplicate","toObject","overwrite","inlace","insertKeys","insertValues","macroNames","setDeleteItemFlags","tempItem","charname","originInstrumentUuid","index","spellIndex","updateDeleteItemFlags","isCharged","updateDeleteUuidEffects","isConcentration","components","concentration","midiProperties","isReactionItem","getConcentrationEffect","getDeleteUuidEffects","deletionChange","ACTIVE_EFFECT_MODES","ADD","updatedChanges","deleteTempItem","data","workflow","originTokenDoc","getDeleteItemData","logic","concEffect","hasTemplate","hasSelfEffects","hasSelfTarget","hasEffects","isSelfTargetItem","originTargetingSelf","hitTargetUuids","checkSelfTarget","getDeleteItemLogic","setDeleteUuids","tempItemEffect","setDeleteItemLogic","onUse","liveItem","spellData","spellNames","filteredSpellNames","getSpellsToCast","completeItemUse","createCastWorkflow","callMacro","asGM","setCastSpellUpdates","castSpell","onNewDay","newDay","instruments","forEach","refreshInstruments","getInitIconPaths","sourceItem","getTempItem","getAddSpellChoices","eligibleSpellsByChar","charChoice","charChoices","character","toSorted","getCharIconPaths","getAddCharChoice","levelChoice","levelChoices","getLevelChoices","getLevelIconPaths","getAddLevelChoice","spellChoice","spellChoices","spellIcons","getSpellChoices","getSpellChoice","getAddSpellChoice","getEligibleSpells","actors","actorSpells","eligibleLevelSpells","highestSpellLevel","getHighestSpellLevel","preparation","getSpellData","pact","getEligibleLevelSpells","prototypeToken","src","slotsRemaining","slotsUsed","eligibleLevels","spellLevels","Array","from","getLiveActors","users","getNewSlotsUsed","sortedChoices","radioSelections","levelChoiceInt","dc","spelldc","ability","spellcasting","attackBonus","isRangedAttack","actionType","isMeleeAttack","parseInt","bonuses","rsak","attack","msak","getAttackBonus","prof","getSpellToCast","uniqueSpells","spellsArr","chosenSpell","getUpdatedDescription","desc","description","newSpells","descs","spellBankStr","substring","lastIndexOf","replace","setPreUseItemHooks","once","useItem","consumeResource","consumeSpellSlot","consumeUsage","slotLevel","_baseProficiency","setReactionUpdates","setResetSpellsDesc","updatedStr","updatedDesc","newSlotsUsed","flaggedItem","updatedDescription","updateRingItem","charName","spellName","notification","setRingUpdatesNotification","newSpellData","chr","getUpdateRingData","setRingUpdates","setCommandEffectsSequencer","setItemUsesUpdate","usesUsed","uses","macros","auraOfPurity","preTargetSave","some","change","saveDetails","advantage","tokenAttacher","attachElementToToken","tokenDocs","collections","values","eligibleTokenDocs","tokenDocuments","originX","originY","tokenDocsInRange","tokenTopLeftCenterX","tokenTopLeftCenterY","tokenGridBorderCoords","xArr","coord","yArr","maxX","maxY","coords","x2","y2","getTokensInRange","templateNonEffectedTokens","itemEffectName","statuses","has","getNonTemplateEffectedTokenDocs","getEligibleTokenDocuments","tokenEffectUuids","casterDisposition","effected","disposition","dfreds","effectInterface","addEffect","effectName","setTokenEffects","blight","speaker","scope","hitTargets","details","CUSTOM","getBlightEffectData","rolledItem","rollConfig","maxDamageString","String","setBlightHook","clairvoyance","macroPass","setActorConcDeletion","spawnedTokenUuid","getTokenSpawnIds","originTokenActorUuid","fromUuidActor","originActor","originActorConcentrationRemoveUuids","removeUuids","setActorConcRemoveUuids","userId","isTheGM","deleteSummonConcentrationHookId","setHookMacros","setPostSpawnEffects","daylight","duration","rounds","getEffectTokenData","setInitChoice","lastArg","efData","dispelMagic","feyAncestry","main","isSaveFailure","hasAreaTarget","preTargetDamageApplication","hordeItemUses","hpDamage","damageItem","aoeOverlapPerc","hordeCount","floor","getNewDamage","setHpUpdateEffects","protectionFromPoison","poisonEffects","hasPoisonedName","hasPoisonedConditions","chosenEffect","acc","nameAlreadyUsed","getChoices","buttonNames","initChoice","getChosenEffect","effectUuid","removeEffect","setAddSpellNotification","getAddSpellUpdates","setAddSpellUpdates","addSpell","tempItems","ringUuid","resetSpells","deleteIndex","usedSpellLevel","usedSpell","getDeleteItemFlagData","getDeleteItemFlagUpdates","songOfRest","songEffects","dhd","originBardScale","effectOriginUuid","effectOrigin","bard","faces","getOriginBardScale","songLevel","Item","documentClass","getItemData","showFullCard","createWorkflow","versatile","configureDialog","targetUuids","tokenForActor","wandOfFear","buttonOptions","fearItem","getFearItemData","fearWorkflow","spriteOffset","local","rotate","direction","setFearEffects","commandItem","getCommandItemData","setCommandEffects","setAmbientLightCreate","params","setAmbientLightDelete","ambientLightId","ambientLight","deleteEmbeddedDocuments","setMeasuredTemplateDelete","deletedMeasuredTemplate","setActiveEffectDelete","ownerActor","effectId","deleteEffect","setDeleteSummonConcentrationHook","preDeleteSummonConcentrationHookId","socketlib","registerModule","register","globalThis"],"sourceRoot":""}