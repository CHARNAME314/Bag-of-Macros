{"version":3,"file":"main.js","mappings":"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","sources":["webpack://CHARNAME's Bag of Macros/./src/scripts/constants.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helper-functions.js","webpack://CHARNAME's Bag of Macros/./src/scripts/helpers/summons.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/aura-of-purity.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/blight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/clairvoyance.js","webpack://CHARNAME's Bag of Macros/./src/scripts/hooks.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/daylight.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/dispel-magic.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/fey-ancestry.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/spells.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/giant-insect.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/horde-passive.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/features.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/misc/insect-cloud.js","webpack://CHARNAME's Bag of Macros/./src/scripts/strings/items.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/instrument-of-the-bards.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/spells/protection-from-poison.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/ring-of-spell-storing.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/staff-of-swarming-insects.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/items/wand-of-fear.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros.js","webpack://CHARNAME's Bag of Macros/./src/scripts/macros/features/class/bard/song-of-rest.js","webpack://CHARNAME's Bag of Macros/./src/scripts/index.js","webpack://CHARNAME's Bag of Macros/./src/scripts/socket-functions.js","webpack://CHARNAME's Bag of Macros/webpack/bootstrap","webpack://CHARNAME's Bag of Macros/webpack/runtime/define property getters","webpack://CHARNAME's Bag of Macros/webpack/runtime/hasOwnProperty shorthand","webpack://CHARNAME's Bag of Macros/webpack/startup"],"sourcesContent":["export const conditionLabels = {\r\n\tblinded: [\"blinded\", \"convenient effect: blinded\"],\r\n\tcharmed: [\"charmed\", \"convenient effect: charmed\"],\r\n\tconcentrating: [\"concentrating\", \"convenient effect: concentrating\"],\r\n\tdead: [\"dead\", \"convenient effect: dead\"],\r\n\tdeafened: [\"deafened\", \"convenient effect: deafened\"],\r\n\texhaustion1: [\"exhaustion 1\", \"convenient effect: exhaustion 1\"],\r\n\texhaustion2: [\"exhaustion 2\", \"convenient effect: exhaustion 2\"],\r\n\texhaustion3: [\"exhaustion 3\", \"convenient effect: exhaustion 3\"],\r\n\texhaustion4: [\"exhaustion 4\", \"convenient effect: exhaustion 4\"],\r\n\texhaustion5: [\"exhaustion 5\", \"convenient effect: exhaustion 5\"],\r\n\tfrightened: [\"frightened\", \"convenient effect: frightened\"],\r\n\tgrappled: [\"grappled\", \"convenient effect: grappled\"],\r\n\tincapacitated: [\"incapacitated\", \"convenient effect: incapacitated\"],\r\n\tinvisible: [\"invisible\", \"convenient effect: invisible\"],\r\n\tparalyzed: [\"paralyzed\", \"convenient effect: paralyzed\"],\r\n\tpetrified: [\"petrified\", \"convenient effect: petrified\"],\r\n\tpoisoned: [\"poisoned\", \"convenient effect: poisoned\"],\r\n\tprone: [\"prone\", \"convenient effect: prone\"],\r\n\trestrained: [\"restrained\", \"convenient effect: restrained\"],\r\n\tstunned: [\"stunned\", \"convenient effect: stunned\"],\r\n\tunconscious: [\"unconscious\", \"convenient effect: unconscious\"],\r\n\twounded: [\"wounded\", \"convenient effect: wounded\"]\r\n}\r\n\r\nexport const cloudSpellNames = [\r\n\t\"Cloudkill\",\r\n\t\"Incendiary Cloud\",\r\n\t\"Insect Plague\",\r\n\t\"Moonbeam\",\r\n\t\"Spirit Guardians\"\r\n]","import {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nexport const deleteTempItem = async ({args, item, workflow}, setDeleteItemFlags) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tif (setDeleteItemFlags) await setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nexport const deleteAuraEffectsWhenMoved = async (effectName, newTokenActorUuids, oldTokenActorUuids, originUuid) => {\r\n\tconst removalUuids = oldTokenActorUuids.filter(uuid => !newTokenActorUuids.includes(uuid))\r\n\tawait removalUuids.forEach(actorUuid => {\r\n\t\tconst actor = fromUuidSync(actorUuid)\t\r\n\t\tconst tokenEffect = actor.effects.find(effect => \r\n\t\t\teffect.name == effectName\r\n\t\t && effect.origin == originUuid\r\n\t\t)\r\n\t\tif (!tokenEffect) return false\r\n\t\tremoveEffect(tokenEffect.uuid)\r\n\t})\t\r\n}\r\nexport const getAuraParamsWhenMoved = async (dispositions, getEffectData, template, flagName) => {\r\n\tconst effectData = await getEffectData(template.flags[\"midi-qol\"].actorUuid, template.uuid)\r\n\tconst newTokenIds = game.modules.get(\"templatemacro\").api.findContained(template)\r\n\tconst newTokens = newTokenIds.map(id => \r\n\t\tcanvas.scene.collections.tokens.get(id)\r\n\t).filter(tokenDoc => \r\n\t\ttokenDoc.id != template.flags[\"midi-qol\"].tokenId\r\n\t && dispositions.includes(tokenDoc.disposition)\r\n\t)\r\n\tconst newTokenActorUuids = newTokens.map(token => token.actor.uuid)\r\n\tconst oldTokenActorUuids = template.flags.charname[flagName].tokenActorsEffected\r\n\treturn [effectData, newTokenActorUuids, oldTokenActorUuids]\r\n}\r\nexport const getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nexport const getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nexport const getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst hasSysConc = item.system.components?.concentration ?? false\r\n\tconst hasMidiConc = item.flags?.midiProperties?.concentration ?? false\r\n\tconst isConcentration = hasSysConc || hasMidiConc\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nexport const getDialogueButtons = (resolve, choices, getIconPaths, width, height, iconData) => {\t\r\n\treturn choices.reduce((buttons, choice, i) => {\r\n\t\tconst icon = getIconPaths(choice, iconData)\r\n\t\tconst newButton = {[choice]: {\r\n\t\t\tlabel: `<img src=${icon} width=${width} height=${height} style=\"border:0px\"><br>${choice}`,\r\n\t\t\tcallback: () => {\r\n\t\t\t\tresolve({value: `${choice}`})\r\n\t\t\t}\r\n\t\t}}\r\n\t\treturn {...buttons, ...newButton}\r\n\t}, {})\r\n}\r\nexport const getDialogueButtonType = async (choices, dialogueOptions, title, getIconPathsFunc, buttonWidth, buttonHeight, iconData) => { \r\n\treturn await (new Promise( (resolve) => {\t\r\n\t\tconst buttons = getDialogueButtons(resolve, choices, getIconPathsFunc, buttonWidth, buttonHeight, iconData)\t\t\r\n\t\tnew Dialog({\r\n\t\t\ttitle: title,\r\n\t\t\tbuttons: buttons\r\n\t\t}, dialogueOptions).render(true)\r\n}))}\r\nexport const getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nexport const getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nexport const getSpawnLocation = async (spawnIconPath, size, interval, tokenUuid, itemRange, originToken) => {\r\n\tawait setCrosshairConfigs(tokenUuid, itemRange, size)\r\n\tconst distanceAvailable = itemRange\r\n\tlet crosshairsDistance = 0\r\n\tconst checkDistance = async (crosshairs) => {\r\n\t\twhile (crosshairs.inFlight) {\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t\tconst ray = new Ray(originToken.center, crosshairs)\r\n\t\t\tconst distance = Math.ceil(canvas.grid.measureDistances([{ ray }], { gridSpaces: false })[0] / 5) * 5\r\n\t\t\tif (crosshairsDistance !== distance) {\r\n\t\t\t\tcrosshairsDistance = distance;\r\n\t\t\t\tif (distance > distanceAvailable) {\r\n\t\t\t\t\tcrosshairs.icon = 'icons/svg/hazard.svg';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcrosshairs.icon = spawnIconPath\r\n\t\t\t\t}\r\n\t\t\t\tcrosshairs.draw();\r\n\t\t\t\tcrosshairs.label = `${distance} ft`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst location = await warpgate.crosshairs.show(\r\n\t\t{\r\n\t\t\tsize: size,\r\n\t\t\tinterval: interval,\r\n\t\t\ticon: spawnIconPath,\r\n\t\t\tlabel: '0 ft.',\r\n\t\t},\r\n\t\t{\r\n\t\t\tshow: checkDistance\r\n\t\t},\r\n\t)\r\n\tif (location.cancelled || crosshairsDistance > distanceAvailable) {\r\n\t\treturn\r\n\t} else {\r\n\t\treturn location\r\n\t}\r\n}\r\nexport const getTemplatesInRange = (templates, gridSize, gridScale, range, x1, y1) => {\r\n\t//gets templates where center of template within range of a cast template\r\n\treturn templates.filter(template => {\r\n\t\tconst [a, b] = [x1 - template.x, y1 - template.y]\r\n\t\tconst c  = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\tconst templateCentersDistance = c / gridSize\t\r\n\t\tconst templateRangeModified = template.distance / gridScale\t\r\n\t\tconst itemRangeModified = range / gridScale\t\t\r\n\t\treturn templateCentersDistance < templateRangeModified + itemRangeModified\r\n\t})\r\n}\r\nexport const getTemplatesWithOverlap = (eligibleTemplates, itemTemplatePositions) => {\r\n\treturn eligibleTemplates.filter(template => {\r\n\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\tconst templatePositions = canvas.grid.highlightLayers[gridTemplateId]?.positions ?? new Set(\"-1\")\r\n\t\treturn itemTemplatePositions.intersection(templatePositions).size > 0\r\n\t})\r\n}\r\nexport const getTokensInRange = async (tokens, gridSize, gridScale, itemRange, x1, y1) => {\r\n\treturn tokens.filter(token => {\r\n\t\tconst tokenTopLeftCenterX = token.x + gridSize / 2\r\n\t\tconst tokenTopLeftCenterY = token.y + gridSize / 2\r\n\t\tlet tokenGridBorderCoords = []\r\n\t\t\r\n\t\tfor (let i = 0; i <= token.width * 2 - 1; i++) {\r\n\t\t\tfor (let j = 0; j <= token.width * 2  - 1; j++) {\r\n\t\t\t\ttokenGridBorderCoords.push({x: tokenTopLeftCenterX + gridSize / 2 * i, y: tokenTopLeftCenterY + gridSize / 2 * j})\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst xArr = tokenGridBorderCoords.map(coord => coord.x)\r\n\t\tconst yArr = tokenGridBorderCoords.map(coord => coord.y)\r\n\t\tconst maxX = Math.max(...xArr)\r\n\t\tconst maxY = Math.max(...yArr)\r\n\t\tconst tokenGridCoords = tokenGridBorderCoords.filter(coords => coords.x != maxX && coords.y != maxY)\r\n\t\t\r\n\t\tconst tokenGridCoordsInRange = tokenGridCoords.filter(coord => {\r\n\t\t\tconst [x2, y2] = [coord.x, coord.y]\r\n\t\t\tconst a = x1 - x2\r\n\t\t\tconst b = y1 - y2\r\n\t\t\tconst c = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) \r\n\t\t\treturn c / gridSize <= itemRange / gridScale\r\n\t\t})\r\n\t\t\r\n\t\treturn tokenGridCoordsInRange.length > 0\r\n\t})\r\n}\r\nexport const getUpdatedMacroNames = async (macroNames, flagName, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + `,[postRollFinished]function.CHARNAME.macros.${flagName}.deleteTempItem` \r\n\t\t\t: `[postRollFinished]function.CHARNAME.macros.${flagName}.deleteTempItem`\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + `,[postActiveEffects]function.CHARNAME.macros.${flagName}.setReactionHook`\r\n\t} \r\n\treturn update\r\n}\r\nexport const removeEffect = async (effectUuid) => {\r\n\treturn await MidiQOL.socket().executeAsGM(\"removeEffect\", {effectUuid: effectUuid})\r\n}\r\nexport const removeEffects = async (effectUuids) => {\r\n\treturn await MidiQOL.socket().executeAsGM(\"removeEffects\", effectUuids\r\n)}\r\nexport const setActiveEffects = async (tokenActorUuids, effectData) => {\r\n\tconst createEffect = async (tokenActorUuid, effectData) => {return await MidiQOL.socket().executeAsGM(\"createEffects\", {actorUuid: tokenActorUuid, effects: [effectData]})}\r\n\tconst [effects] = await Promise.all(tokenActorUuids.map(tokenActorUuid => createEffect(tokenActorUuid, effectData)))\r\n\treturn effects\r\n}\r\nexport const setActorConcDeletion = async (actor) => {\r\n\tif (actor.effects.find(effect => effect.name == \"Concentrating\")) actor.effects.find(effect => effect.name == \"Concentrating\").delete()\r\n} \r\nexport const setActorConcRemoveUuids = async (originActor, uuid) => {\r\n\tlet originActorConcentrationRemoveUuids = originActor.flags[\"midi-qol\"][\"concentration-data\"]?.removeUuids || []\r\n\toriginActorConcentrationRemoveUuids.push(uuid)\t\r\n\tawait originActor.update({\"flags.midi-qol\": {\"concentration-data\": {removeUuids: originActorConcentrationRemoveUuids}}})\r\n\tconst concEffect = originActor.effects.find(effect => effect.name == \"Concentrating\")\r\n\tawait concEffect.update({\r\n\t\t\"flags.dae\": {\"specialDuration\": [\"shortRest\", \"longRest\"]}\r\n\t})\r\n}\r\nexport const setActorReagentCost = async (actorUuid, itemUuid) => {\r\n\tconst actor = await fromUuid(actorUuid)\r\n\tconst item = await fromUuid(itemUuid)\t\r\n\tif (settings.reagentsConsume = \"money\")  {\r\n\t\t//set this to pull from the lower denominations first\r\n\t\tconst newMoney = actor.system.currency.gp - item.system.materials.cost\r\n\t\tif (newMoney < 0) return false\r\n\t\tactor.update({\"system.currency.gp\": newMoney})\r\n\t} else if (settings.reagentsConsume = \"supply\") {\r\n\t\tconst newSupply = item.system.materials.supply - 1\r\n\t\tif (newSupply < 0) return false\r\n\t\titem.update({\"system.materials.supply\": newSupply})\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n\treturn true\r\n}\r\nexport const setAuraEffectUpdatesWhenDeleted = async (effectName, flagName, template) => {\r\n\tconst tokenActorsEffected = template.flags?.charname[flagName]?.tokenActorsEffected ?? []\r\n\tconst effectUuids = await tokenActorsEffected.forEach(actorUuid => {\r\n\t\tconst actor = fromUuidSync(actorUuid)\t\t\t\r\n\t\tconst effect = actor.effects.find(effect => effect.name == effectName)\t\r\n\t\tif (!effect) return false\r\n\t\tremoveEffect(effect.uuid)\r\n\t})\t\r\n}\r\nexport const setAuraEffectsWhenEntered = async (effectName, flagName, getEffectData, template, token) => {\r\n\tconst tokenEffect = token.actor?.effects.find(effect => effect.name == effectName) ?? false\r\n\tif (!tokenEffect) {\r\n\t\tconst effectData = await getEffectData(template.flags[\"midi-qol\"].actorUuid, template.uuid)\r\n\t\tsetActiveEffects([token.actor.uuid], effectData)\r\n\t\tconst newActorUuids = [\r\n\t\t\t...template.flags.charname.insectCloud.tokenActorsEffected, \r\n\t\t\ttoken.actor.uuid\r\n\t\t]\r\n\t\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\t\tconst updatedTemplate = await template.update({\r\n\t\t\t[flag]: newActorUuids\r\n\t\t})\t\t\t\r\n\t}\t\r\n}\r\nexport const setAuraEffectsWhenLeft = async (effectName, flagName, template, token) => {\r\n\tconst tokenEffect = token.actor?.effects.find(effect => effect.name == effectName) ?? false\r\n\tif (tokenEffect) {\r\n\t\tremoveEffect(tokenEffect.uuid)\r\n\t\tconst newActorUuids = template.flags.charname[flagName].tokenActorsEffected.filter(actorUuid => \r\n\t\t\tactorUuid != token.actor.uuid\r\n\t\t)\r\n\t\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\t\tconst updatedTemplate = await template.update({\r\n\t\t\t[flag]: newActorUuids\r\n\t\t})\t\t\t\r\n\t}\t\r\n}\r\nexport const setAuraEffectsWhenMoved = async (effectData, flagName, newTokenActorUuids, oldTokenActorUuids, template) => {\r\n\tconst newUuidsToEffect = newTokenActorUuids.filter(uuid => \r\n\t\t!oldTokenActorUuids.includes(uuid)\r\n\t)\r\n\tsetActiveEffects(newUuidsToEffect, effectData)\t\r\n\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\ttemplate.update({\r\n\t\t[flag]: newTokenActorUuids\r\n\t})\t\t\r\n}\r\nexport const setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nexport const setCrosshairConfigs = async (tokenUuid, itemRange, size) => {\r\n\tconst target = await fromUuid(tokenUuid)\r\n\tconst {distance} = canvas.scene.grid\r\n\tconst adjustment = size > 0 \r\n\t\t? (canvas.grid.size * .5 * size) \r\n\t\t: (canvas.grid.size * .5)\r\n\twarpgate.crosshairs.show({\r\n\t\tlockSize:true,\r\n\t\tlockPosition: true,\r\n\t\tsize: 2 * itemRange / distance,\r\n\t\ttag: 'range',\r\n\t\tdrawIcon:false,\r\n\t\tlabel: 'Valid Area',\r\n\t\tx: target.x + adjustment,\r\n\t\ty: target.y + adjustment,\r\n\t\trememberControlled: true\r\n\t})\t\r\n\tcanvas.tokens.activate()\r\n}\r\nexport const setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nexport const setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nexport const setTemplateDispels = async (x, y, name, itemTemplatePositions) => {\r\n\tconst dnd5eFlaggedTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e)\r\n\tconst potentialTemplates = dnd5eFlaggedTemplates.filter(template => {\r\n\t\tconst originName = fromUuidSync(template.flags.dnd5e.origin).name\r\n\t\tif (!name) {\r\n\t\t\treturn template.flags.dnd5e.spellLevel\r\n\t\t} else {\r\n\t\t\treturn template.flags.dnd5e.spellLevel && originName == name\t\r\n\t\t}\r\n\t})\r\n\tconst templatesInRange = getTemplatesInRange(potentialTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 60, x, y)\r\n\tconst templatesWithOverlap = getTemplatesWithOverlap(templatesInRange, itemTemplatePositions)\r\n\ttemplatesWithOverlap.map(template => {socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)})\r\n}\r\nexport const updateAuraEffectsOnUse = async (actor, args, effectName, getEffectData, tokenActorUuids) => {\r\n\tconst effectData = await getEffectData(actor.uuid, args[0].templateUuid)\r\n\tconst [appliedEffect] = await setActiveEffects(tokenActorUuids, effectData)\r\n\tconst liveActor = await fromUuid(actor.uuid)\r\n\tconst templateEffect = liveActor.effects.find(effect => effect.name == effectName)\r\n\tconst updatedChanges = [...templateEffect.changes, ...appliedEffect.changes]\r\n\ttemplateEffect.update({\"changes\": updatedChanges})\r\n}\r\nexport const updateAuraFlags = async (flagName, template, tokenActorUuids) => {\r\n\tconst flag = `flags.charname.${flagName}.tokenActorsEffected`\r\n\tconst updatedTemplate = await template.update({\r\n\t\t[flag]: tokenActorUuids\r\n\t})\t\t\r\n}\r\nexport const updateAuraWhenMoved = async (dispositions, effectName, flagName, getEffectData, template) => {\r\n\tconst [\r\n\t\teffectData, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids\r\n\t] = await getAuraParamsWhenMoved(dispositions, getEffectData, template, flagName)\r\n\tdeleteAuraEffectsWhenMoved(\r\n\t\teffectName, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids,\t\t\r\n\t\ttemplate.flags[\"midi-qol\"].actorUuid\r\n\t)\r\n\tsetAuraEffectsWhenMoved(\r\n\t\teffectData, \r\n\t\tflagName, \r\n\t\tnewTokenActorUuids, \r\n\t\toldTokenActorUuids, \r\n\t\ttemplate\r\n\t)\t\r\n}\r\nexport const updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}","import {conditionLabels as c} from \"../constants.js\"\r\nimport {getSpawnLocation} from \"../helper-functions.js\"\r\nimport {setSpawnedTokensInitiative}  from \"../socket-functions.js\"\r\n\r\n//review for later:\r\n//think about adding sounds to the sequencers?\r\n//see if you can fix the buggy useTokenDeleteSequencer Math.random thing\r\n//add the linear fade in thing for the sequencers\r\n\r\n//leaving as example of how override data is more or less laid out \r\n//don't forget to toString() your functions before passing them!\r\n//spellLevel = workflow.castData.castLevel,\r\n//spelldc = actor.system.attributes.spelldc\r\n//overrides: {\r\n//\tgeneral: {\r\n//\t\tamountToSpawnByIndex: [10, 3, 5, 1]\r\n//\t}\r\n//\tsequencer: {\r\n//\t\tpre: usePreEffectSequencer.toString(),\r\n//\t\tpost: usePostEffectSequencer.toString(),\r\n//\t\tdelete: useTokenDeleteSequencer.toString(),\r\n//\t\toptions: {\r\n//\t\t\tcircleNum: \"02\",\r\n//\t\t\tcolor: \"green\",\r\n//\t\t\tscale: .15,\r\n//\t\t\tschool: \"conjuration\"\r\n//\t}},\r\n//\tmutations: {\r\n//\t  token: {},\r\n//\t\tactor: {\r\n//\t\t\t//\r\n//\t\t}\r\n//\t}\r\n//}\r\n\r\nconst checkCombatActivity = async (token) => {\r\n\tconst combatIsActive = game.combat?.active ?? false\r\n\tif (!combatIsActive) return false\r\n\tconst sourceCombatDoc = game.combat.turns.find(doc => doc.tokenId == token.id)\t\r\n\tif (!sourceCombatDoc) return false\t\r\n\treturn sourceCombatDoc\r\n}\r\nconst createSpawn = async (actor, choice, item, overrides, strings, token) => {\r\n\tconst concEffect = await getConcEffect(token)\r\n\tconst spawnUuids = await createSpawnTokens(actor, choice, concEffect, item, overrides, strings, token)\r\n\tif (!concEffect) return false\r\n\tupdateInitiatives(spawnUuids, token)\r\n\tupdateConcEffect(concEffect, spawnUuids, token)\r\n}\r\nconst createSpawnTokens = async (actor, choice, concEffect, item, overrides, strings, token) => {\r\n\tconst params = await getSpawnParams(\r\n\t\tactor, \r\n\t\tchoice, \r\n\t\tconcEffect, \r\n\t\titem, \r\n\t\toverrides,\r\n\t\tstrings,\r\n\t\ttoken\r\n\t)\t\r\n\tconst spawnIds = await setWarpGateSpawn(params, item, overrides, token)\t\t\r\n\treturn spawnIds.map(id => {\t\t\r\n\t\tconst token = canvas.scene.tokens.find(tokenDoc => tokenDoc.id == id)\t\r\n\t\treturn token.uuid\r\n\t})\t\r\n}\r\nconst getCallbacks = async (i, overrides, size, spawnName, originToken) => {\r\n\treturn {\r\n\t\tpre: async (loc) => {\r\n\t\t\tusePreEffectSequencer(i, loc, originToken, size, overrides)\r\n\t\t\tawait warpgate.wait(200)\r\n\t\t},\r\n\t\tpost: async (loc, spawnToken) => {\r\n\t\t\tusePostEffectSequencer(loc, spawnToken, overrides)\r\n\t\t\tawait warpgate.wait(100)\r\n\t\t}\r\n\t}\r\n}\r\nconst getConcEffect = async (token) => {\r\n\tconst liveActor = await fromUuid(token.actor.uuid)\r\n\treturn liveActor.effects.find(effect => \r\n\t\tc.concentrating.includes(effect.name.toLowerCase())\r\n\t)\t\t\r\n}\r\nconst getPreDeleteParams = async (tokenDoc) => {\r\n\tconst amountSpawned = tokenDoc.actor?.flags?.charname?.summoning?.amountSpawned ?? 1\t\r\n\tconst deleteOverrides = tokenDoc.actor?.flags?.charname?.summoning?.overrides?.sequencer?.delete ?? false\t\r\n\tconst effectUuid = tokenDoc.actor?.flags?.charname?.summoning?.concEffect ?? false\r\n\tconst optionOverrides = tokenDoc.actor?.flags?.charname?.summoning?.overrides?.sequencer?.options ?? {}\t\r\n\treturn [amountSpawned, deleteOverrides, effectUuid, optionOverrides]\r\n}\r\nconst getPreEffectsSequencerParams = async (originToken, overrides, spawnSize) => {\r\n\tconst circleNum = overrides?.sequencer?.options?.circleNum ?? \"02\"\r\n\tconst color = overrides?.sequencer?.options?.color ?? \"green\"\r\n\tconst school = overrides?.sequencer?.options?.school ?? \"conjuration\"\r\n\tconst scale = overrides?.sequencer?.options?.scale ?? .15\r\n\tconst originScale = Math.max(originToken.document.height, originToken.document.width) * scale\r\n\tconst spawnScale = spawnSize * scale\t\r\n\treturn [circleNum, color, school, originScale, spawnScale]\r\n}\r\nconst getSpawnDetails = async (actorName) => {\r\n\tconst actor = game.actors.find(actor => actor.name == actorName)\r\n\tconst iconPath = actor.prototypeToken.texture.src\r\n\tconst size = Math.max(actor.prototypeToken.height, actor.prototypeToken.height)\r\n\treturn [iconPath, size]\r\n}\r\nconst getSpawnParams = async (actor, choice, concEffect, item, overrides, strings, token) => {\r\n\tconst options = {controllingActor: actor}\r\n\tconst spawnName = strings.spawnNames[strings.choices.indexOf(choice)]\r\n\tconst [iconPath, size] = await getSpawnDetails(spawnName)\r\n\tconst amountToSpawn = await getAmountToSpawn(choice, overrides, strings)\r\n\tconst updates = await getSpawnUpdates(amountToSpawn, concEffect, overrides)\r\n\tconst interval = size % 2 == 1 ? -1 : 1\r\n\treturn {amountToSpawn, iconPath, interval, options, size, spawnName, updates}\r\n}\r\nconst getAmountToSpawn = async (choice, overrides, strings) => {\r\n\tconst overrideAmountToSpawn = overrides?.general?.amountToSpawnByIndex ?? 1\r\n\tif (typeof overrideAmountToSpawn == \"number\") return overrideAmountToSpawn\r\n\treturn overrideAmountToSpawn[strings.choices.indexOf(choice)]\t\r\n}\r\nconst getSpawnUpdates = async (amountToSpawn, concEffect, overrides) => {\r\n\tconst concEffectUuid = !concEffect ? null : concEffect.uuid\r\n\tconst defaultMutations = {\r\n\t\ttoken: {\"alpha\": 0}, \r\n\t\tactor: \r\n\t\t{\r\n\t\t\t\"flags.charname.summoning.amountSpawned\": amountToSpawn,\r\n\t\t\t\"flags.charname.summoning.concEffect\": concEffectUuid,\r\n\t\t\t\"flags.charname.summoning.overrides\": overrides\r\n\t\t}\r\n\t}\t\r\n\tconst combinedMutations = {...defaultMutations, ...overrides.mutations}\r\n\treturn combinedMutations\r\n}\r\nconst onPreDeleteToken = async (tokenDoc, config, user) => {\r\n\tconst theGmUser = game.users.find(user => user.isTheGM)\r\n\tif (game.users.get(user).id != theGmUser.id) return false\t\r\n\tconst [\r\n\t\tamountSpawned, \r\n\t\tdeleteOverrides, \r\n\t\teffectUuid, \r\n\t\toptionOverrides\r\n\t] = await getPreDeleteParams(tokenDoc)\r\n\tif (!deleteOverrides) {\r\n\t\tuseTokenDeleteSequencer(tokenDoc)\r\n\t} else {\r\n\t\teval(overrides.delete)(tokenDoc, optionOverrides)\r\n\t}\r\n\tif (effectUuid) {\r\n\t\tlet concEffect = await fromUuid(effectUuid)\t\t\t\r\n\t\tlet created = concEffect.flags.charname.summoning.totalSpawnCreated\r\n\t\tlet deleted = concEffect.flags.charname.summoning.totalSpawnDeleted\t\t\r\n\t\t//adding random delay to account for multiple things trying to update all at once\r\n\t\t//refactor this later to see if you can get it to work by using a set or something\r\n\t\tconst delay = Math.floor(Math.random() * 800 * (created - deleted))\r\n\t\tawait warpgate.wait(delay)\t\t\t\r\n\t\tconcEffect = await fromUuid(effectUuid)\t\t\r\n\t\tcreated = concEffect.flags.charname.summoning.totalSpawnCreated\r\n\t\tdeleted = concEffect.flags.charname.summoning.totalSpawnDeleted\r\n\t\tconst newDeleted = deleted + 1\r\n\t\tif (created == newDeleted) {\r\n\t\t\tconcEffect.delete()\r\n\t\t\treturn false\r\n\t\t}\t\r\n\t\tconst updatedConc = await concEffect.update({\"flags\": {\"charname.summoning.totalSpawnDeleted\": newDeleted}})\r\n\t}\r\n}\r\nconst setSpawnedTokensToActive = async (spawnUuids, token) => {\r\n\treturn canvas.scene.tokens.filter(\r\n\t\ttoken => spawnUuids.includes(token.uuid)\r\n\t).map(tokenDoc => {\r\n\t\tconst combatToken = canvas.tokens.placeables.find(token => token.id == tokenDoc.id)\r\n\t\tcombatToken.toggleCombat()\r\n\t\treturn tokenDoc.id\r\n\t})\t\r\n}\r\nconst setWarpGateSpawn = async (params, item, overrides, token) => {\r\n\tconst {\r\n\t\tamountToSpawn, \r\n\t\ticonPath, \r\n\t\tinterval, \r\n\t\toptions, \r\n\t\tsize, \r\n\t\tspawnName, \r\n\t\tupdates\r\n\t} = params\r\n\tlet loc = {}\r\n\tlet spawnIds = []\r\n\tlet callbacks\r\n\tfor (let i = 0; i < amountToSpawn; i++) {\r\n\t\tloc = await getSpawnLocation(\r\n\t\t\ticonPath, \r\n\t\t\tsize, \r\n\t\t\tinterval, \r\n\t\t\ttoken.document.uuid, \r\n\t\t\titem.system.range.value, \r\n\t\t\ttoken\r\n\t\t)\r\n\t\tcallbacks = await getCallbacks(i, overrides, size, spawnName, token) \r\n\t\tspawnIds.push(await warpgate.spawnAt(\r\n\t\t\t{x: loc.x, y: loc.y}, \r\n\t\t\tspawnName, \r\n\t\t\tupdates, \r\n\t\t\tcallbacks, \r\n\t\t\toptions\r\n\t\t))\r\n\t}\r\n\treturn spawnIds\r\n}\r\nconst updateCombatDocs = async (activeTokenIds, init) => {\r\n\t//literally takes a moment to add token to combat\t\r\n\tawait warpgate.wait(1000) \t\r\n\tconst combatDocs = game.combat.turns.filter(doc => activeTokenIds.includes(doc.tokenId))\r\n\tsetSpawnedTokensInitiative(combatDocs, init)\t\r\n}\r\nconst updateConcEffect = async (concEffect, spawnUuids, token) => {\r\n\tconst deleteUuidChanges = spawnUuids.map(uuid => {\r\n\t\treturn {\r\n\t\t\t\"key\": \"flags.dae.deleteUuid\",\r\n\t\t\t\"mode\": 2,\r\n\t\t\t\"priority\": 20,\r\n\t\t\t\"value\": uuid\r\n\t\t}\r\n\t})\r\n\tconst changes = [...concEffect.changes, ...deleteUuidChanges]\r\n\tconst spawnFlags = {\r\n\t\t\"charname.summoning.totalSpawnCreated\": spawnUuids.length,\r\n\t\t\"charname.summoning.totalSpawnDeleted\": 0,\r\n\t\t\"charname.summoning.concEffect\": concEffect.uuid\r\n\t}\r\n\tconcEffect.update({\"changes\": changes, \"flags\": spawnFlags})\t\r\n}\r\nconst updateInitiatives = async (spawnUuids, token) => {\r\n\tconst sourceCombatDoc = await checkCombatActivity(token)\r\n\tif (!sourceCombatDoc) return false\r\n\tconst activeTokenIds = await setSpawnedTokensToActive(spawnUuids, token)\r\n\tconst init = sourceCombatDoc?.initiative ?? false\r\n\tif (!init) return false \r\n\tupdateCombatDocs(activeTokenIds, init)\r\n}\r\nconst usePostEffectSequencer = async (loc, token, overrides) => {\r\n\tconst sequencer = overrides?.sequencer?.post ?? \"\"\r\n\tif (sequencer.length > 0) {\r\n\t\teval(overrides.sequencer.post)(loc, token)\r\n\t\treturn false\r\n\t}\t\r\n\tawait warpgate.wait(2100)\r\n\tconst sequencerPath = \"jb2a.impact.003.green\" \r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t\t.fadeIn(700)\r\n\t\t\t\t.opacity(1)\r\n\t\t.play()\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation(token)\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.opacity(1.0)\r\n\t\t.play()\t\t\r\n}\r\nconst usePreEffectSequencer = async (i, loc, originToken, spawnSize, overrides) => {\r\n\tconst sequencer = overrides?.sequencer?.pre ?? \"\"\r\n\tif (sequencer.length > 0) {\r\n\t\teval(overrides.sequencer.pre)(loc, token)\r\n\t\treturn false\r\n\t}\t\r\n\tconst [\r\n\t\tcircleNum, \r\n\t\tcolor, \r\n\t\tschool, \r\n\t\toriginScale, \r\n\t\tspawnScale\r\n\t] = await getPreEffectsSequencerParams(originToken, overrides, spawnSize)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.intro.${color}`)\r\n\t\t\t.scale(spawnScale)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(loc)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.loop.${color}`)\r\n\t\t\t.scale(spawnScale)\r\n\t\t\t.atLocation(loc)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.outro.${color}`)\r\n\t\t\t.scale(spawnScale)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(loc)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\r\n\tif (i == 0) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.intro.${color}`)\r\n\t\t\t\t.scale(originScale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation(originToken)\r\n\t\t\t\t.belowTokens() \r\n\t\t\t\t.waitUntilFinished(-1150)\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.loop.${color}`)\r\n\t\t\t\t.scale(originScale)\r\n\t\t\t\t.atLocation(originToken)\r\n\t\t\t\t.belowTokens() \r\n\t\t\t\t.fadeIn(200)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.waitUntilFinished(-1150)\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.magic_signs.circle.${circleNum}.${school}.outro.${color}`)\r\n\t\t\t\t.scale(originScale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation(originToken)\r\n\t\t\t\t.belowTokens() \r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst useTokenDeleteSequencer = async (token, overrides) => {\r\n\tconst sequencer = overrides?.sequencer?.delete ?? \"\"\r\n\tif (sequencer.length > 0) {\r\n\t\teval(overrides.sequencer.delete)(loc, token)\r\n\t\treturn false\r\n\t}\t\r\n\tconst color = overrides?.sequencer?.options?.color ?? \"green\"\r\n\tconst impactNum = overrides?.sequencer?.options?.impactNum ?? \"003\"\r\n\tconst sequencerPath = `jb2a.impact.${impactNum}.${color}`\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t\t.fadeIn(700)\r\n\t\t\t\t.opacity(1)\r\n\t\t.play()\t\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation(token)\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.opacity(1.0)\r\n\t\t.play()\t\t\r\n}\r\n\r\nexport const summoning = {\r\n\tcreateSpawn,\r\n\tonPreDeleteToken\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {getTokensInRange} from \"../../helper-functions.js\"\r\n\r\nasync function getEligibleTokenDocuments(tokenDocuments, scene, itemRange, originX, originY) {\r\n\tconst tokenDocsInRange = await getTokensInRange(tokenDocuments, scene.grid.size, scene.grid.distance, itemRange, originX, originY)\r\n\tif (!tokenDocsInRange) return false\r\n\tconst templateNonEffectedTokens = await getNonTemplateEffectedTokenDocs(tokenDocsInRange)\r\n\tif (!templateNonEffectedTokens) return false\r\n\treturn templateNonEffectedTokens\r\n}\r\nasync function getNonTemplateEffectedTokenDocs(tokenDocuments, itemEffectName) {\r\n\treturn tokenDocuments.filter(token => {\r\n\t\tconst effects = token.actor.statuses\r\n\t\treturn effects.has(itemEffectName) == false\r\n\t})\r\n}\r\nconst onUse = async ({args, workflow, item, actor, token}) => {\r\n\tconst itemEffectName = \"Convenient Effect: Aura of Purity\"\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\tconst scene = await fromUuid(template.parent.uuid)\r\n\tconst itemRange = args[0].item.system.target.value\r\n\tconst tokenDocs = Array.from(scene.collections.tokens.values())\r\n\t\r\n\tconst eligibleTokenDocs = await getEligibleTokenDocuments(tokenDocs, scene, itemRange, template.x, template.y)\r\n\tif (!eligibleTokenDocs) return false\r\n\r\n\tconst tokenEffectUuids = await setTokenEffects(eligibleTokenDocs, token.document.disposition)\r\n\tawait template.update({\r\n\t\t\"flags.castData.auraOfPurity.tokensEffected\": tokenEffectUuids\r\n\t})\r\n}\r\nconst preTargetSave = async ({args, workflow, item, actor}) => {\r\n\tconst itemHasEffect = item.effects.some(effect => effect.changes.some(change => {\r\n\t\treturn conditionLabels[\"blinded\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"charmed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"deafened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"frightened\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"paralyzed\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())\r\n\t\t\t|| conditionLabels[\"stunned\"].includes(change.value.toLowerCase())\r\n\t}))\r\n\tif (itemHasEffect) workflow.saveDetails.advantage = true\r\n}\r\nasync function setTokenEffects(tokenDocs, casterDisposition) {\r\n\tlet effected = []\r\n\tlet uuid = \"\"\r\n\tfor (let i=0; i < tokenDocs.length; i++) {\r\n\t\tconsole.log(\"tokenDocs[i]\")\r\n\t\tconsole.log(tokenDocs[i])\r\n\t\tuuid = tokenDocs[i].actor.uuid\r\n\t\tif ((casterDisposition == 1 && tokenDocs[i].disposition != -1)\r\n\t\t\t|| (casterDisposition == -1  && tokenDocs[i].disposition != 1)) {\r\n\t\t\tgame.dfreds.effectInterface.addEffect( {effectName: 'Aura of Purity', uuid} )\r\n\t\t\teffected.push(uuid)\r\n\t\t}\r\n\t}\r\n\treturn effected\r\n}\r\n\r\nexport const auraOfPurity = {\r\n\tpreTargetSave,\r\n\tonUse\r\n}","const getBlightEffectData = async (origin) => {\r\n\treturn {\r\n\t\tname: `Blight Saving Throw Disadvantage`, \r\n\t\ticon: \"icons/magic/movement/chevrons-down-yellow.webp\", \r\n\t\torigin: origin,\r\n\t\tchanges: [{key: \"flags.midi-qol.disadvantage.ability.save.all\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [\"1\"], \"priority\": 20}],\r\n\t\t\"flags.dae.stackable\": \"noneName\",\r\n\t\t\"flags.times-up.isPassive\": true,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\", \"combatEnd\", \"isSave\"],\r\n\t\t\"flags.dae.showIcon\": false,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst setBlightHook = async (castLevel) => {\r\n\tconst blightPreDamageRollHookId = Hooks.once(\"dnd5e.preRollDamage\", (rolledItem, rollConfig) => {\r\n\t\tconst maxDamageRoll = 8 * castLevel + 32\r\n\t\tconst maxDamageString = String(maxDamageRoll) + \"[necrotic]\" \r\n\t\trollConfig.parts = [maxDamageString]\r\n\t})\t\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].hitTargets[0].actor.system.details.type.value == \"plant\") {\r\n\t\tconst effectData = await getBlightEffectData(args[0].item.uuid)\r\n\t\tawait MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: args[0].hitTargets[0].actor.uuid, effects: [effectData] })\r\n\t\tawait setBlightHook(args[0].castData.castLevel)\r\n\t}\t\r\n}\r\n\r\nexport const blight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getSpawnLocation, setActorConcDeletion, setActorConcRemoveUuids} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getSpawnUpdates = async (originActorSenses, originTokenSight) => {\r\n\treturn {\r\n\t\ttoken: {\r\n\t\t\t\"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\r\n\t\t\t\"alpha\": 0,\r\n\t\t\t\"sight\": originTokenSight\r\n\t\t},\r\n\t\tactor: {\r\n\t\t\t\"system.attributes.senses\": originActorSenses\r\n\t\t}\r\n\t}\r\n}\r\nconst getTokenSpawnIds = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawnedTokenId = await setSpawnedTokenId(tokenUuid, itemRange, actor, originToken)\r\n\tconst spawnedToken = canvas.scene.collections.tokens.get(spawnedTokenId)\r\n\treturn spawnedToken.uuid\r\n}\r\nconst getWarpgateCallbacks = async (tokenUuid) => {\r\n\treturn {\r\n\t\tpre: async (template,update,token) => {\r\n\t\t\tsetEffectsSequencer(template, update, token, tokenUuid)\r\n\t\t\tawait warpgate.wait(2650)\r\n\t\t},\r\n\t\tpost: async (template, token) => {\r\n\t\t\tsetPostEffectsSequencer(template,token)\r\n\t\t}\r\n\t}\r\n}\r\nconst getWarpgateOptions = async (actor) => {\r\n\treturn {controllingActor: actor}\r\n}\r\nconst getWarpgateUpdates = async (spawn, originActorSenses, originTokenSight) => {\r\n\tconst updates = await getSpawnUpdates(originActorSenses, originTokenSight)\r\n\treturn mergeObject(updates, spawn)\r\n}\r\nconst setEffectsSequencer = async (template, update, token, originTokenUuid) => {\r\n\tconst color = \"blue\"\r\n\tconst originToken = await fromUuid(originTokenUuid)\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.intro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.loop.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t\t.fadeIn(200)\r\n\t\t\t.opacity(1)\r\n\t\t\t.waitUntilFinished(-1150)\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.divination.outro.${color}`)\r\n\t\t\t.scale(.15)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation(originToken)\r\n\t\t\t.belowTokens() \r\n\t\t.play()\t\r\n}\r\nconst setHookMacros = async (actor, spawnedTokenUuid) => {\r\n\tconst userIsGM = game.users.find(user => user.id == game.userId).isTheGM\r\n\tif (!userIsGM) {\r\n\t\tawait socket.executeAsGM(\"setDeleteSummonConcentrationHook\", actor, spawnedTokenUuid)\r\n\t}\r\n\tconst deleteSummonConcentrationHookId = Hooks.on(\"deleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", deleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\r\n}\r\nconst setPostEffectsSequencer = async (template, token) => {\r\n\tconst sequencerPath = \"jb2a.impact.009.blue\"\r\n\tnew Sequence()\r\n\t\t.animation()\r\n\t\t\t.on(token)\r\n\t\t\t.fadeIn(250)\t\r\n\t\t.effect()\r\n\t\t\t.file(sequencerPath)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\t\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t.play()\r\n\t\r\n}\r\nconst setPostSpawnEffects = async (spawnedTokenUuid, originTokenActorUuid) => {\r\n\tconst fromUuidActor = await fromUuid(originTokenActorUuid)\r\n\tawait setActorConcRemoveUuids(fromUuidActor, spawnedTokenUuid)\r\n\tawait setHookMacros(fromUuidActor, spawnedTokenUuid)\t\r\n}\r\nconst setSpawnedTokenId = async (tokenUuid, itemRange, actor, originToken) => {\r\n\tconst spawn = {\r\n\t\ttoken: { name:\"Clairvoyance\"},\r\n\t\tactor: { name:\"Clairvoyance\"}\r\n\t}\r\n\tconst location = await getSpawnLocation(\"modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_Grey_Sphere_400x400.webm\", 1, 4, tokenUuid, itemRange, originToken)\r\n\tconst spawnedTokenId = await warpgate.spawnAt({x: location.x, y: location.y}, spawn.token.name, await getWarpgateUpdates(spawn, actor.system.attributes.senses, originToken.document.sight), await getWarpgateCallbacks(tokenUuid), await getWarpgateOptions(actor))\r\n\treturn spawnedTokenId[0]\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tawait setActorConcDeletion(actor)\r\n\t} else {\t\r\n\t\tconst spawnedTokenUuid = await getTokenSpawnIds(args[0].tokenUuid, 5280, actor, token)\t\t\r\n\t\tawait setPostSpawnEffects(spawnedTokenUuid, token.document.actor.uuid)\t\r\n\t}\r\n}\r\n\r\nexport const clairvoyance = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getTemplatesInRange, getTemplatesWithOverlap} from \"./helper-functions.js\"\r\nimport {settings} from \"./settings.js\"\r\nimport {socket} from \"./index.js\"\r\n\r\nexport const setAreaEffectDeleteHook = async (range, x, y, ineligibleEffectNames, minSpellLevel, originTemplateActiveEffect, itemTemplatePositions) => {\r\n\tconst setAreaEffectDeleteHookId = Hooks.on(\"refreshMeasuredTemplate\", (templateData) => {\r\n\t\tconst template = templateData.document\t\t\r\n\t\tconst originFlag = template.flags?.dnd5e?.origin ?? false\r\n\t\tconst templateSpellLevel = template.flags?.dnd5e?.spellLevel ?? 0\r\n\t\tif (!originFlag || templateSpellLevel > minSpellLevel) return false\t\t\r\n\t\tconst origin = fromUuidSync(template.flags.dnd5e.origin)\r\n\t\tif (ineligibleEffectNames.includes(origin.name) || ineligibleEffectNames == \"all\") {\t\r\n\t\t\tconst gridTemplateId = \"MeasuredTemplate.\" + template.id\r\n\t\t\tconst gridTemplatePositions = canvas.grid.highlightLayers[gridTemplateId].positions\t\r\n\t\t\tconst templatesOverlap = itemTemplatePositions.intersection(gridTemplatePositions).size > 0 \r\n\t\t\tif (!templatesOverlap) return false\r\n\t\t\t//waiting for potential concentration effects to cycle through\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsocket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid)\r\n\t\t\t}, 200)\t\t\t\t\r\n\t\t}\r\n\t})\r\n\tawait setAreaEffectDeleteHookOff(originTemplateActiveEffect, setAreaEffectDeleteHookId)\r\n}\r\nexport const setAreaEffectDeleteHookOff = async (templateEffect, setAreaEffectDeleteHookId) => {\r\n\tconst setAreaEffectDeleteHookOffId = Hooks.on(\"deleteActiveEffect\", (effect, config) => {\t\t\t\r\n\t\tif (effect.uuid == templateEffect.uuid) {\r\n\t\t\tHooks.off(\"createMeasuredTemplate\", setAreaEffectDeleteHookId)\r\n\t\t\tHooks.off(\"deleteActiveEffect\", setAreaEffectDeleteHookOffId)\r\n\t\t}\r\n\t})\r\n}","import {getDialogueButtonType, setActiveEffects, setTemplateDispels} from \"../../helper-functions.js\"\r\nimport {setAreaEffectDeleteHook} from \"../../hooks.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst getEffectOriginData = async (originUuid, lightId) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\torigin: originUuid,\r\n\t\tchanges: [{key: \"macro.execute\", mode: 0, value: \"function.CHARNAME.macros.daylight.setSpellEffects\"}],\r\n\t\t\"flags.castData.daylight.lightId\": lightId,\r\n\t\t\"flags.dae.showIcon\": false,\t\t\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": true,\t\t\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectTokenData = async (originUuid) => {\r\n\treturn {\r\n\t\tname: `Daylight`, \r\n\t\ticon: \"icons/magic/air/weather-sunlight-sky.webp\", \r\n\t\tduration: {rounds: 600},\r\n\t\torigin: originUuid,\r\n\t\tchanges: [\r\n\t\t\t{key: `ATL.light.dim`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [120]},\r\n\t\t\t{key: `ATL.light.bright`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [60]},\r\n\t\t\t{key: `ATL.light.attenuation`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: [.35]}\r\n\t\t],\r\n\t\t\"flags.dae.stackable\": \"multi\",\r\n\t\t\"flags.times-up.isPassive\": false,\r\n\t\t\"flags.dae.specialDuration\": [\"shortRest\", \"longRest\"],\r\n\t\t\"flags.dae.showIcon\": true,\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area of Effect\":\r\n\t\t\treturn \"icons/magic/air/weather-clouds-sunlight.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/air/weather-sunlight-sky.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst setAreaChoiceEffects = async (templateUuid, templateEffect, tokenActorUuid, itemUuid, positions) => {\r\n\tconst [x, y] = await setTemplateEffects(templateUuid, templateEffect, positions)\r\n\tconst lightParams = {\"x\": x, \"y\": y, \"config\": {\"bright\": 60, \"dim\": 120, \"attenuation\": .4}}\r\n\tconst [sanitizedLight] = await socket.executeAsGM(\"setAmbientLightCreate\", lightParams)\r\n\tconst [effect] = await setActiveEffects([tokenActorUuid], await getEffectOriginData(itemUuid, sanitizedLight._id))\t\r\n\tawait setAreaEffectDeleteHook(60, x, y, [\"Darkness\"], 9, effect, positions)\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token) => {\r\n\tif (!token) {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.atLocation({\"x\": x, \"y\": y})\r\n\t\t\t.play()\t\t\t\t\r\n\t} else {\r\n\t\tnew Sequence()\r\n\t\t\t.effect()\r\n\t\t\t\t.file(`jb2a.markers.light.complete.yellow`)\r\n\t\t\t\t.scale(scale)\r\n\t\t\t\t.opacity(1)\r\n\t\t\t\t.attachTo(token)\r\n\t\t\t.play()\t\t\t\r\n\t}\r\n}\r\nconst setInitChoice = async (itemUuid)  => {\r\n\tconst type = await getDialogueButtonType([\"Area of Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Daylight?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tconst target = game.user.targets.first()\r\n\t\tawait setActiveEffects([target.document.actor.uuid], await getEffectTokenData(itemUuid))\r\n\t\tawait setEffectsSequencer(0, 0, target.document.width, target)\r\n\t\treturn false\t\t\t\r\n\t}\t\r\n\treturn true\r\n}\r\nconst setSpellEffects = async ({speaker, actor, token, character, item, args, scope, workflow}) => {\r\n\tif (args[0].tag == \"OnUse\" && args[0].macroPass == \"preItemRoll\") {\r\n\t\tconst isAreaChoice = await setInitChoice(item.uuid)\r\n\t\tif (!isAreaChoice) return false\r\n\t} else if (args[0].tag == \"OnUse\" && args[0].macroPass == \"postActiveEffects\") {\r\n\t\tconst templateId = \"MeasuredTemplate.\" + args[0].templateId \r\n\t\tconst templatePositions = canvas.grid.highlightLayers[templateId].positions\r\n\t\tconst templateEffect = actor.effects.find(effect => effect.name == \"Daylight Template\")\r\n\t\tawait setAreaChoiceEffects(args[0].templateUuid, templateEffect, token.document.actor.uuid, item.uuid, templatePositions)\r\n\t} else if (args[0] == \"off\")  {\r\n\t\tconst lastArg = args[args.length - 1]\r\n\t\tawait socket.executeAsGM(\"setAmbientLightDelete\", lastArg.efData.flags.castData.daylight.lightId)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setTemplateEffects = async (templateUuid, templateEffect, templatePositions) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tawait setEffectsSequencer(template.x, template.y, 7, false)\r\n\tawait setTemplateDispels(template.x, template.y, \"Darkness\", templatePositions)\r\n\ttemplateEffect.delete()\r\n\treturn [template.x, template.y]\r\n}\r\n\r\nexport const daylight = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {getDialogueButtonType, getTemplatesInRange} from \"../../helper-functions.js\"\r\nimport {socket} from \"../../index.js\"\r\n\r\nconst deleteEffectsOnToken = async (casterToken, dispelAbility, dispelLevel) => {\r\n\tconst target = game.user.targets.first()\t\r\n\tconst [effectsLTE2DispelLevel, effectsGTDispelLevel] = await getTokenEffects(target, dispelLevel)\r\n\tconst effectsIdsToDelete = await getEffectsToDelete(casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel)\r\n\teffectsIdsToDelete.map(socket.executeAsGM(\"setActiveEffectDelete\", target.actor, effectsIdsToDelete[i]))\r\n}\r\nconst deleteTemplate = async (casterToken, dispelAbility, dispelLevel, selectedTemplate) => {\r\n\tconst spellLevel = selectedTemplate.flags.dnd5e.spellLevel\r\n\tconst templatesToDelete = dispelLevel < spellLevel ? await getTemplatesToDelete(casterToken, dispelAbility, [selectedTemplate]) : [selectedTemplate]\r\n\ttemplatesToDelete.map(template => socket.executeAsGM(\"setMeasuredTemplateDelete\", template.uuid))\r\n}\r\nconst getEffectsToDelete = async (casterToken, dispelAbility, effectsLTE2DispelLevel, effectsGTDispelLevel) => {\r\n\tconst casterAbilityMod = casterToken.actor.system.abilities[dispelAbility].mod\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet effectCastLevel = 0\r\n\tfor (let i = 0; i < effectsGTDispelLevel.length; i++) {\r\n\t\teffectCastLevel = effectsGTDispelLevel[i].flags[\"midi-qol\"].castData.castLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > effectCastLevel + 10) arr.push(effectsGTDispelLevel[i])\t\t\r\n\t}\r\n\treturn effectsLTE2DispelLevel.concat(arr).map(effect => effect.id)\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Area Effect\":\r\n\t\t\treturn \"icons/magic/air/air-burst-spiral-blue-gray.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Selected Target\":\r\n\t\t\treturn \"icons/magic/nature/plant-sprout-hand-blue.webp\"\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelectedTemplate = async (casterToken) => {\r\n\tconst eligibleTemplates = canvas.scene.templates.filter(template => template.flags.dnd5e.spellLevel > 0)\r\n\tconst inRangeEligibleTemplates = getTemplatesInRange(eligibleTemplates, canvas.scene.grid.size, canvas.scene.grid.distance, 120, casterToken.x, casterToken.y)\t\r\n\tlet originItem\r\n\tlet originItems = []\r\n\tfor (let i = 0; i < inRangeEligibleTemplates.length; i++) {\r\n\t\toriginItem = await fromUuid(inRangeEligibleTemplates[i].flags.dnd5e.origin)\r\n\t\toriginItems.push(originItem)\r\n\t}\r\n\treturn await getTemplateSelection(originItems, inRangeEligibleTemplates)\r\n}\r\nconst getTemplateSelection = async (items, inRangeEligibleTemplates) => {\r\n\tconst sortedTemplates = inRangeEligibleTemplates.sort((a, b) => {\r\n\t\tconst aOrig = fromUuidSync(a.flags.dnd5e.origin)\t\r\n\t\tconst bOrig = fromUuidSync(b.flags.dnd5e.origin)\r\n\t\treturn aOrig.name.localeCompare(bOrig.name)\r\n\t})\r\n\tconst templateSelections = items.map((item, i) => {\r\n\t\tconst itemOwnerName = canvas.scene.tokens?.find(token => token.actor.uuid == item.parent.uuid)?.name ?? \"unknown\"\r\n\t\tconst itemLabel = item.name + \" from \" + itemOwnerName\t\r\n\t\treturn {type: 'radio', label: itemLabel}\r\n\t}).sort((a, b) => a.label.localeCompare(b.label))\t\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: templateSelections\r\n\t\t},{\r\n\t\t\ttitle: \"Which template to dispel?\",\r\n\t\t\trender: (...args) => { console.log(...args); ui.notifications.info(\"render!\")},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100px\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn sortedTemplates[choices.inputs.indexOf(true)]\r\n}\r\nconst getTemplatesToDelete = async (casterToken, dispelAbility, potentialTemplates) => {\r\n\tlet arr = []\r\n\tlet abilityRoll\r\n\tlet templateCastLevel = 0\r\n\tfor (let i = 0; i < potentialTemplates.length; i++) {\r\n\t\ttemplateCastLevel = potentialTemplates[i].flags.dnd5e.spellLevel\r\n\t\tabilityRoll = await casterToken.actor.rollAbilityTest(dispelAbility)\t\r\n\t\tif (abilityRoll.total > potentialTemplates[i].flags.dnd5e.spellLevel + 10) arr.push(potentialTemplates[i])\t\t\r\n\t}\t\r\n\treturn arr\r\n}\r\nconst getTokenEffects = async (token, dispelLevel) => {\r\n\t//get two groups, 1: effects w/ spell levels lesser than or equal to the casted spell level of dispel magic; and 2: the same with greater than that level\r\n\tconst effectsLTE2DispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > 0 && effect.flags[\"midi-qol\"].castData.baseLevel <= dispelLevel)\r\n\tconst effectsGTDispelLevel = token.document.actor.effects.filter(effect => effect.flags[\"midi-qol\"].castData.baseLevel > dispelLevel)\r\n\treturn [effectsLTE2DispelLevel, effectsGTDispelLevel]\r\n} \r\nconst setInitChoice = async (casterUuid, dispelAbility, dispelLevel)  => {\r\n\tconst type = await getDialogueButtonType([\"Area Effect\", \"Selected Target\"], {width: 400, height: 150}, \"Where will you cast Dispel Magic?\", getIconPaths, 60, 60)\r\n\tconst casterToken = await fromUuid(casterUuid)\t\r\n\tif (type.value == \"Selected Target\") {\r\n\t\tdeleteEffectsOnToken(casterToken, dispelAbility, dispelLevel)\t\r\n\t} else if (type.value == \"Area Effect\") {\r\n\t\tconst selectedTemplate = await getSelectedTemplate(casterToken)\r\n\t\tdeleteTemplate(casterToken, dispelAbility, dispelLevel, selectedTemplate)\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\nconst setSpellEffects = async ({args, item, workflow}) => {\r\n\tconst casterUuid = args[0].tokenUuid\r\n\tconst dispelAbility = args[0].actor.system.attributes.spellcasting\r\n\tconst dispelLevel = args[0].spellLevel < 3 ? 3 : args[0].spellLevel\r\n\tsetInitChoice(casterUuid, dispelAbility, dispelLevel)\r\n}\r\n\r\nexport const dispelMagic = {\r\n\t\"setSpellEffects\": setSpellEffects\r\n}","import {conditionLabels} from \"../../constants.js\"\r\n\r\nconst main = async ({item, workflow, args}) => {\r\n\tconst hasCharm = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"charmed\"].includes(change.value.toLowerCase())))\r\n\tif (hasCharm) {\r\n\t\tworkflow.saveDetails.advantage = true\r\n\t}\r\n}\r\n\r\nexport const feyAncestry = {\r\n\tmain\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const protectionFromPoison = {\r\n\tinitHeader: \t\t\"What do you want to cast?\"\r\n}\r\n\r\nexport const giantInsect = {\r\n\tchoices:\t\t\t[\"Ten Giant Centipedes\", \"Three Giant Spiders\", \"Five Giant Wasps\", \"One Giant Scorpion\"],\r\n\tdefaultIcons:\t\t\t\t[\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantCentipede.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantSpider.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantWasp.webp\",\r\n\t\t\t\t\t\t\t\"systems/dnd5e/tokens/beast/GiantScorpion.webp\"\r\n\t\t\t\t\t\t],\r\n\tinitHeader:\t\t\t\"What do you want to create?\",\r\n\tpreEffectSeqPath:\t\"modules/jb2a_patreon/Library/2nd_Level/Misty_Step/MistyStep_01_Regular_Orange_400x400.webm\",\r\n\tspawnNames:\t\t\t[\"Giant Centipede\", \"Giant Spider\", \"Giant Wasp\", \"Giant Scorpion\"]\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {giantInsect as s} from \"../../strings/spells.js\"\r\nimport {summoning} from \"../../helpers/summons.js\"\r\n\r\nconst getOverrides = async () => {\r\n\treturn {\r\n\t\tgeneral: {\r\n\t\t\tamountToSpawnByIndex: [10, 3, 5, 1]\r\n\t\t}\r\n\t}\r\n}\r\nconst getSpellIconPaths = (choice) => {\r\n\tconst index = s.choices.indexOf(choice)\r\n\tconst actor = game.actors.find(actor => actor.name == s.spawnNames[index])\r\n\tconst icon = actor?.img ?? false\t\r\n\tif (!icon) return s.defaultIcons[index]\r\n\treturn icon\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst choice = await getDialogueButtonType(\r\n\t\ts.choices, \r\n\t\t{width: s.choices.length * 150, height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetSpellIconPaths, \r\n\t\t60, \r\n\t\t60, \r\n\t\t[]\r\n\t)\r\n\tconst overrides = await getOverrides(actor, workflow)\r\n\tsummoning.createSpawn(actor, choice.value, item, overrides, s, token) \r\n}\r\n\r\nexport const giantInsect = {\r\n\tonUse\r\n}","import {cloudSpellNames} from \"../../constants.js\"\r\n\r\nconst getAoeOverlapPerc = async (args) => {\r\n\tconst creatureCoords = await getCreatureCoords(args[0].actor.token)\r\n\tconst templateCoords = await getTemplateCoords(args[0].templateId) ?? false\r\n\tif (!templateCoords) return 0\r\n\tconst overlap = creatureCoords.intersection(templateCoords)\r\n\treturn overlap.size / creatureCoords.size\r\n}\r\nconst getCreatureCoords = async (tokenDoc) => {\r\n\tconst gridSize = canvas.scene.grid.size\r\n\tlet set = new Set()\r\n\tlet position = \"\"\r\n\tfor (let i = 0; i < tokenDoc.height; i++) {\r\n\t\tfor (let j = 0; j < tokenDoc.width; j++) {\r\n\t\t\tposition = (tokenDoc.x + gridSize*i).toString() + \".\" + (tokenDoc.y + gridSize*j).toString() \r\n\t\t\tset.add(position)\r\n\t\t}\r\n\t}\r\n\treturn set\r\n}\r\nconst getNewDamage = async(hpDamage, hordeCount, multiplier, hasAreaTarget) => {\r\n\treturn hasAreaTarget ? Math.floor(hpDamage * hordeCount * multiplier) : hpDamage\r\n}\r\nconst getTemplateCoords = async (templateId) => {\r\n\tconst templateIdStr = \"MeasuredTemplate.\" + templateId\r\n\treturn canvas.grid.highlightLayers[templateIdStr].positions\r\n}\r\nconst isSaveFailure = async ({args, item}) => {\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tconsole.log(await getAoeOverlapPerc(args))\r\n\tif (!item.system.hasAreaTarget || await getAoeOverlapPerc(args) <= .666) {\r\n\t\tHooks.once(\"createActiveEffect\", (effect) => {\t\t\t\r\n\t\t\teffect.delete()\r\n\t\t})\r\n\t}\t\r\n}\r\nconst preTargetDamageApplication = async ({actor, args, item, workflow, token}) => {\r\n\tif (workflow.hitTargets.size < 1) return false\r\n\tconst hordeItem = await fromUuid(actor.items.find(item => item.name == \"Horde\").uuid)\r\n\tconst hordeItemUses = hordeItem.system.uses.value\r\n\tconst hordeItemUsesMax = hordeItem.system.uses.max\r\n\tconst liveTokenDoc = await fromUuid(token.document.uuid)\r\n\tconst hpDamage = workflow.damageItem.hpDamage\r\n\tconst hasAreaTarget = item.system.hasAreaTarget || cloudSpellNames.includes(item.name)\r\n\tif (hpDamage > 0) setHpUpdateEffects(actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args)\r\n}\r\nconst setHpUpdateEffects = async (actor, hpDamage, hordeItem, hordeItemUses, hordeItemUsesMax, hasAreaTarget, workflow, liveTokenDoc, args) => {\r\n\tconst aoeOverlapPerc = await getAoeOverlapPerc(args)\r\n\tconst newHpDamage = await getNewDamage(hpDamage, hordeItemUses, aoeOverlapPerc, hasAreaTarget)\r\n\tworkflow.damageItem.hpDamage = newHpDamage\r\n\tsetPostDamageUpdates(actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax)\r\n}\r\nconst setLiveTokenDocUpdates = async (texture, hordeItem, hordeItemUsesMax, multiplier, liveTokenDoc, shouldReduce, tokenSizeNum) => {\r\n\t\thordeItem.update({\"system.uses.value\": hordeItemUsesMax * multiplier})\r\n\t\tif (tokenSizeNum > 2 && shouldReduce) {\r\n\t\t\tawait warpgate.wait(4000)\t\r\n\t\t\tsetSequencer(liveTokenDoc)\r\n\t\t\tawait warpgate.wait(200)\t\r\n\t\t\tif (liveTokenDoc.actor.system.traits.size != \"grg\" && liveTokenDoc.width <= 4 && liveTokenDoc.width <= 4) {\r\n\t\t\t\tliveTokenDoc.actor.update({\"system.traits.size\": Object.keys(CONFIG.DND5E.actorSizes)[tokenSizeNum - 1]})\r\n\t\t\t}\r\n\t\t\tliveTokenDoc.update({\"width\": liveTokenDoc.width - 1, \"height\": liveTokenDoc.width - 1})\t\r\n\t\t}\r\n\t\tliveTokenDoc.update({\"texture.src\": texture})\r\n}\r\nconst setPostDamageUpdates = async (actor, newHpDamage, liveTokenDoc, hordeItem, hordeItemUsesMax) => {\r\n\tconst newHealthPercentage = ((actor.system.attributes.hp.value - newHpDamage) / actor.system.attributes.hp.max) * 100\r\n\tconst tokenSizeNum = Object.keys(CONFIG.DND5E.actorSizes).indexOf(liveTokenDoc.actor.system.traits.size)\r\n\tlet shouldReduce = false\r\n\tif (75 >= newHealthPercentage && newHealthPercentage > 50) {\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img1, hordeItem, hordeItemUsesMax, .75, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (50 >= newHealthPercentage && newHealthPercentage > 25) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img2, hordeItem, hordeItemUsesMax, .50, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} else if (25 >= newHealthPercentage && newHealthPercentage >= 0) {\r\n\t\tshouldReduce = tokenSizeNum > 3\r\n\t\tsetLiveTokenDocUpdates(actor.flags[\"midi-qol\"].hordePassive.img3, hordeItem, hordeItemUsesMax, .25, liveTokenDoc, shouldReduce, tokenSizeNum)\r\n\t} \r\n}\r\nconst setSequencer = async (liveTokenDoc) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(liveTokenDoc.actor.flags[\"midi-qol\"].hordePassive.sequencerPath)\r\n\t\t\t.atLocation(liveTokenDoc)\r\n\t\t.play()\r\n}\r\n\r\nexport const hordePassive = {\r\n\tisSaveFailure,\r\n\tpreTargetDamageApplication\r\n}","export const insectCloud = {\r\n\tflagName:\t\t\t\t\"insectCloud\",\r\n\teffectName:\t\t\t\t\"Insect Cloud\",\r\n\ttemplateEffectName:\t\t\"Insect Cloud Template\"\r\n}","import {\r\n\tsetActiveEffects,\r\n\tsetAuraEffectUpdatesWhenDeleted,\r\n\tsetAuraEffectsWhenEntered,\r\n\tsetAuraEffectUpdatesWhenMoved,\r\n\tsetAuraEffectsWhenLeft,\r\n\tupdateAuraEffectsOnUse,\r\n\tupdateAuraFlags,\r\n\tupdateAuraWhenMoved\r\n} from \"../../../helper-functions.js\"\r\nimport {insectCloud as s} from \"../../../strings/features.js\"\r\n\r\nconst checkAttackerVision = (workflow) => {\r\n\tif (workflow.targets.first() == workflow.attackingToken) return false\r\n\tconst [target, bsRange, tsRange, units] = getCheckAttackerVisionParams(workflow)\r\n\tif (![\"ft\", \"m\", null].includes(units) && (bsRange > 0 || tsRange > 0)) return false \r\n\tconst attackerIsDefenderEffectOrigin = checkEffectOrigin(target, workflow.attackingToken)\r\n\tif (attackerIsDefenderEffectOrigin) return false\r\n\tconst inBsOrTsRange = getIfInBsOrTsRange(bsRange, tsRange, target, workflow)\r\n\tconst defenderIsOwnEffectOrigin = checkEffectOrigin(target, target)\r\n\tif (!inBsOrTsRange && defenderIsOwnEffectOrigin) return true\r\n\tconst attackerIsOwnEffectOrigin = checkEffectOrigin(workflow.attackingToken, workflow.attackingToken)\r\n\tif (!inBsOrTsRange && !attackerIsOwnEffectOrigin) return true\r\n\treturn false\r\n}\r\nconst checkDefenderVision = (workflow) => {\r\n\tif (workflow.targets.first() == workflow.attackingToken) return false\r\n\tconst [target, bsRange, tsRange, units] = getCheckDefenderVisionParams(workflow)\r\n\tif (![\"ft\", \"m\", null].includes(units) && (bsRange > 0 || tsRange > 0)) return false\r\n\tconst defenderIsAttackerEffectOrigin = checkEffectOrigin(workflow.attackingToken, target)\r\n\tif (defenderIsAttackerEffectOrigin) return false\r\n\tconst inBsOrTsRange = getIfInBsOrTsRange(bsRange, tsRange, target, workflow)\r\n\tconst defenderIsOwnEffectOrigin = checkEffectOrigin(target, target)\r\n\tif (inBsOrTsRange || defenderIsOwnEffectOrigin) return false\r\n\treturn true\r\n}\r\nconst checkEffectOrigin = (effectedToken, candidateToken) => {\r\n\tconst effect = effectedToken.actor.effects.find(effect => \r\n\t\ts.insectCloudEffectNames.includes(effect.name)\r\n\t)\r\n\tconst origin = effect?.origin ?? {}\r\n\treturn origin == candidateToken.actor.uuid\r\n}\r\nconst getCheckAttackerVisionParams = (workflow) => {\r\n\tconst target = workflow.targets.first()\r\n\tconst bsRange = workflow.actor.attributes.senses.blindsight\r\n\tconst tsRange = workflow.actor.attributes.senses.tremorsense\r\n\tconst units = workflow.actor.attributes.senses.units\t\r\n\treturn [target, bsRange, tsRange, units] \r\n}\r\nconst getCheckDefenderVisionParams = (workflow) => {\r\n\tconst target = workflow.targets.first()\r\n\tconst bsRange = target.actor.system.attributes.senses.blindsight\r\n\tconst tsRange = target.actor.system.attributes.senses.tremorsense\r\n\tconst units = target.actor.system.attributes.senses.units\t\r\n\treturn [target, bsRange, tsRange, units] \r\n}\r\nconst getEffectData = async (originUuid, templateUuid) => {\r\n\tconst duration = await getEffectDuration(templateUuid)\r\n\treturn {\r\n\t\tname: \"Insect Cloud\", \r\n\t\ticon: \"icons/creatures/invertebrates/wasp-swarm-movement.webp\", \r\n\t\torigin: originUuid,\r\n\t\tduration,\r\n\t\tchanges: [{\r\n\t\t\t\tkey: \"flags.midi-qol.grants.disadvantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkAttackerVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.advantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkDefenderVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.grants.advantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkDefenderVision(workflow)`]\r\n\t\t\t},{\r\n\t\t\t\tkey: \"flags.midi-qol.disadvantage.attack.all\", \r\n\t\t\t\tmode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, \r\n\t\t\t\tvalue: [`CHARNAME.macros.insectPlague.checkAttackerVision(workflow)`]\r\n\t\t}],\r\n\t\tdisabled: false\r\n\t}\r\n}\r\nconst getEffectDuration = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid)\r\n\tconst sourceActor = await fromUuid(template.flags[\"midi-qol\"].actorUuid)\r\n\tconst templateEffect = sourceActor.effects.find(effect => effect.name == s.templateEffectName)\r\n\treturn templateEffect.duration\r\n}\r\nconst getIfInBsOrTsRange = (bsRange, tsRange, target, workflow) => {\r\n\tconst maxBsOrTsRange = Math.max(bsRange, tsRange)\r\n\treturn MidiQOL.findNearby(\"all\", \r\n\t\ttarget, \r\n\t\tmaxBsOrTsRange, \r\n\t\t{canSee: true}\r\n\t).filter(token => \r\n\t\ttoken.actor.uuid == workflow.attackingToken.actor.uuid\r\n\t).length > 0 \t\r\n}\r\nconst getTokenActorUuids = async (template, token) => {\r\n\tconst tokenIds = game.modules.get(\"templatemacro\").api.findContained(template)\r\n\tconst elligibleTokens = tokenIds.map(id => \r\n\t\tcanvas.scene.collections.tokens.get(id)\r\n\t).filter(tokenDoc => token.document.uuid != tokenDoc.uuid)\r\n\tif (elligibleTokens.length < 1) return false\r\n\treturn elligibleTokens.filter(tokenDoc => {\r\n\t\tconst effects = tokenDoc.actor?.effects ?? []\r\n\t\treturn effects.filter(effect => \r\n\t\t\teffect.name != s.effectName\r\n\t\t).length > 0\r\n\t}).map(tokenDoc => tokenDoc.actor.uuid)\t\r\n}\r\nconst onUse = async ({actor, args, token}) => {\r\n\tconst template = await setTemplateAttachment(args, token)\r\n\tconst tokenActorUuids = await getTokenActorUuids(template, token)\r\n\tif (!tokenActorUuids) return false\r\n\tupdateAuraEffectsOnUse(actor, \r\n\t\targs, \r\n\t\ts.templateEffectName, \r\n\t\tgetEffectData, \r\n\t\ttokenActorUuids\r\n\t)\r\n\tupdateAuraFlags(s.flagName, template, tokenActorUuids)\r\n}\r\nconst setTemplateAttachment = async (args, token) => {\r\n\tconst template = await fromUuid(args[0].templateUuid)\r\n\tawait tokenAttacher.attachElementToToken(template, token, true)\r\n\treturn template\r\n}\r\nconst whenDeleted = async (template) => {\r\n\tsetAuraEffectUpdatesWhenDeleted(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\ttemplate\r\n\t)\r\n}\r\nconst whenEntered = async (template, token) => {\r\n\tsetAuraEffectsWhenEntered(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\tgetEffectData, \r\n\t\ttemplate, \r\n\t\ttoken\r\n\t)\r\n}\r\nconst whenLeft = async (template, token) => {\r\n\tsetAuraEffectsWhenLeft(\r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\ttemplate, \r\n\t\ttoken\r\n\t)\r\n}\r\nconst whenMoved = async (template) => {\r\n\tconst dispositions = [-1, 0, 1]\r\n\tupdateAuraWhenMoved(\r\n\t\tdispositions, \r\n\t\ts.effectName, \r\n\t\ts.flagName, \r\n\t\tgetEffectData, \r\n\t\ttemplate\r\n\t)\r\n}\r\n\r\nexport const insectCloud = {\r\n\tcheckAttackerVision,\r\n\tcheckDefenderVision,\r\n\tonUse,\r\n\twhenDeleted,\r\n\twhenEntered,\r\n\twhenLeft,\r\n\twhenMoved\t\r\n}","//refactor the exceptions to be pulled from a custom exceptions file\r\nexport const ringOfSpellStoring = {\r\n\taddSpellErr:\t\t\"Your Ring of Spell Storing doesn't have enough room left for a spell!\",\r\n\tcastSpellErr:\t\t\"Your Ring of Spell Storing doesn't have any spells on it!\",\t\r\n\tcastSpellHeader:\t\"Which spell do you wan to cast?\",\r\n\tcharHeader: \t\t\"Who is casting onto the ring?\",\r\n\tcurrSpellBank:\t\t\"Current Spell Bank\",\r\n\tdescLevel: \t\t\t\", Level \",\r\n\tcharnamesExceptions:[\"Shadowfell Vine Strike\", \"Necrotic Blast\", \"Summon Shadow Clone\", \"Animate Shadow Servant\", \"Mud\", \"Taunt\"],\r\n\tinitChoices:\t\t[\"Add Spells\", \"Cast Spell\", \"Empty Spells\"],\r\n\tinitHeader: \t\t\"What do you want to cast?\",\r\n\tlevelHeader:\t\t\"What level spell do you want to add?\",\r\n\tlevelLabels:\t\t[\"One\", \"Two\", \"Three\", \"Four\", \"Five\"],\r\n\tspellHeader:\t\t\"Which spell is being cast onto the ring?\",\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tinstrumentSpellNames: {\r\n\t\tanstruthHarp: \t\t[\"Control Weather\", \"Cure Wounds\", \"Wall of Thorns\"],\r\n\t\tcanaithMandolin: \t[\"Cure Wounds\", \"Dispel Magic\", \"Protection from Energy (Lightning)\"],\r\n\t\tcliLyre: \t\t\t[\"Stone Shape\", \"Wall of Fire\", \"Wind Wall\"],\r\n\t\tdossLute: \t\t\t[\"Animal Friendship\", \"Protection from Energy (Fire)\", \"Protection from Poison\"],\r\n\t\tfochlucanBandore: \t[\"Entangle\", \"Faerie Fire\", \"Shillelagh\", \"Speak with Animals\"],\r\n\t\tgeneric: \t\t\t[\"Fly\", \"Invisibility\", \"Levitate\", \"Protection from Evil and Good\"],\r\n\t\tmacFuirmidhCittern: [\"Barkskin\", \"Cure Wounds\", \"Fog Cloud\"],\r\n\t\tollamhHarp: \t\t[\"Confusion\", \"Control Weather\", \"Fire Storm\"]\r\n\t},\r\n\tinitHeader: \t\t\t\"Choose a spell to cast!\"\r\n}\r\n\r\nexport const staffOfSwarmingInsects = {\r\n\tallChoices: \t\t\t[\"Giant Insect\", \"Insect Cloud\", \"Insect Plague\", \"Melee (1h)\", \"Melee (2h)\"],\r\n\tdamageWeaponName:\t\t\"Staff of Swarming Insects - Damage\",\r\n\tflagName:\t\t\t\t\"staffOfSwarmingInsects\",\r\n\tinitHeader: \t\t\t\"What do you want to do?\",\r\n\tmeleeChoices: \t\t\t[\"Melee (1h)\", \"Melee (2h)\"],\r\n\tspellNames: \t\t\t[\"Giant Insect\", \"Insect Cloud\", \"Insect Plague\"],\r\n}","import {deleteTempItem as deleteItem, getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {instrumentOfTheBards as s} from \"../../strings/items.js\"\r\n\r\nconst castSpell = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst updates = await createCastWorkflow(spell, instrument, tokenActor, chosenIndex)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst [tempItem] = await createTempItem(spell, instrument, tokenActor, chosenIndex)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, instrument, tokenActor, chosenIndex) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spell.activation)\r\n\tconst itemData = await getTempSpellItem(spell, instrument, updatedMacroNames, chosenIndex)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data, setDeleteItemFlags)\r\n}\r\nconst getCureWoundsData = async (spell, instrument) => {\r\n\tif (instrument.type == \"anstruthHarp\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [5, [\"5d8 + @mod\", \"healing\"]]\r\n\t} else if (instrument.type == \"canaithMandolin\" && spell.name == \"Cure Wounds\") {\r\n\t\treturn [3, [\"3d8 + @mod\", \"healing\"]]\r\n\t} else {\r\n\t\treturn [spell.system.level, spell.system.damage.parts]\r\n\t}\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getInstrumentSpells = async (instrument) => {\r\n\t//keeping this for reference\r\n\tswitch(instrument) {\r\n\t\tcase \"anstruthHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Control Weather\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Wall of Thorns\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"canaithMandolin\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Cure Wounds\", \r\n\t\t\t\t\"Dispel Magic\",\r\n\t\t\t\t\"Protection from Energy (Lightning)\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"cliLyre\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Stone Shape\", \r\n\t\t\t\t\"Wall of Fire\",\r\n\t\t\t\t\"Wind Wall\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"dossLute\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Animal Friendship\", \r\n\t\t\t\t\"Protection from Energy (Fire)\",\r\n\t\t\t\t\"Protection from Poison\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"fochlucanBandore\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Entangle\", \r\n\t\t\t\t\"Faerie Fire\",\r\n\t\t\t\t\"Shillelagh\",\r\n\t\t\t\t\"Speak with Animals\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"macFuirmidhCittern\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Barkskin\", \r\n\t\t\t\t\"Cure Wounds\",\r\n\t\t\t\t\"Fog Cloud\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t\tcase \"ollamhHarp\": \r\n\t\t\treturn [\r\n\t\t\t\t\"Confusion\", \r\n\t\t\t\t\"Control Weather\",\r\n\t\t\t\t\"Fire Storm\"\r\n\t\t\t]\r\n\t\t\tbreak\r\n\t}\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\treturn spell.img\r\n}\r\nconst getSpellsToCast = async (item, type) => {\r\n\tconst spellNames = [...s.instrumentSpellNames[\"generic\"], ...s.instrumentSpellNames[type]].sort()\r\n\tconst spellData = spellNames.map((name, i) => {\r\n\t\treturn {\"name\": name, id: i}\r\n\t}).filter(spell => item.flags.charname.instrumentOfTheBards.spells[spell.id].isCharged)\r\n\tconst spells = spellData.map(spell => game.items.find(item => item.name.toLowerCase() == spell.name.toLowerCase()))\t\r\n\tconst filteredSpellNames = spells.map(spell => spell.name)\r\n\treturn [spellData, spellNames, filteredSpellNames, spells]\r\n}\r\nconst getTempSpellItem = async (spell, instrument, updatedMacroNames, chosenIndex) => {\r\n\tconst [level, damage] = await getCureWoundsData(spell, instrument)\r\n\treturn mergeObject(duplicate(spell.toObject(false)), {\r\n\t\t\"flags.charname.instrumentOfTheBards.originInstrumentUuid\": instrument.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.originName\": spell.name,\r\n\t\t\"flags.charname.instrumentOfTheBards.originUuid\": spell.uuid,\r\n\t\t\"flags.charname.instrumentOfTheBards.type\": \"spell\",\r\n\t\t\"flags.charname.instrumentOfTheBards.spellIndex\": chosenIndex,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.damage.parts\": damage,\r\n\t\t\"system.level\": level,\t\t\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.instrumentOfTheBards.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.instrumentOfTheBards.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst main = async ({actor, args, token}) => {\r\n\t//\r\n}\r\nconst removeSpells = async (actor, instrument) => {\r\n\t//this erased everything on Nora lol\r\n\t\r\n\treturn Promise.all(actor.items.filter(item => {\r\n\t\tconst originName = item.flags?.charname?.instrumentOfTheBards?.originName ?? null\r\n\t\treturn instrument.spells.filter(spell => spell.name == originName).length > 0\r\n\t}).map(item => item.delete()))\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst instrument = await fromUuid(tempItem.flags.charname.instrumentOfTheBards.originInstrumentUuid)\r\n\tconst index = tempItem.flags.charname.instrumentOfTheBards.spellIndex\r\n\tupdateDeleteItemFlags(instrument, index)\r\n}\r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst updateDeleteItemFlags = async (instrument, index) => {\r\n\tconst updates = instrument.flags.charname.instrumentOfTheBards.spells.map((spell, i) => {\r\n\t\tif (i == index) {\r\n\t\t\treturn {name: spell.name, isCharged: false}\r\n\t\t} else {\r\n\t\t\treturn spell\r\n\t\t}\r\n\t})\r\n\tconst flaggedItem = await instrument.update({\r\n\t\t\"flags.charname.instrumentOfTheBards.spells\": updates\r\n\t})\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\tif (type == \"spell\") return false\t\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\t\t\r\n\tconst [spellData, spellNames, filteredSpellNames, spells] = await getSpellsToCast(liveItem, type)\r\n\tconst choice = await getDialogueButtonType(filteredSpellNames, {width: filteredSpellNames.length * 150, height: \"100%\"}, s.initHeader, getSpellIconPaths, 60, 60, spells)\r\n\tconst spell = spells.find(spell => spell.name == choice.value)\r\n\tconst chosenIndex = spellNames.indexOf(choice.value)\r\n\tcastSpell(spell, liveItem, tokenActor, chosenIndex)\t\r\n}\r\nconst onNewDay = async (actor, data) => {\r\n\tif (!data.newDay) return false\r\n\tconst instruments = actor.items.filter(item => {\r\n\t\tconst type = item.flags?.charname?.instrumentOfTheBards?.type ?? \"spell\"\r\n\t\treturn type != \"spell\"\r\n\t}) \r\n\trefreshInstruments(instruments)\r\n}\r\nconst refreshInstruments = async (instruments) => {\r\n\tinstruments.forEach(instrument => {\r\n\t\tconst spells = instrument.flags.charname.instrumentOfTheBards.spells\r\n\t\tconst update = spells.map(spell => {\r\n\t\t\tspell.isCharged = true\r\n\t\t\treturn spell\r\n\t\t})\r\n\t\tinstrument.update({\"flags.charname.instrumentOfTheBards.spells\": update})\r\n\t})\r\n}\r\n\r\nexport const instrumentOfTheBards = {\r\n\tdeleteTempItem,\r\n\tonUse,\r\n\tonNewDay\r\n}","import {conditionLabels} from \"../../constants.js\"\r\nimport {protectionFromPoison as s} from \"../../strings/spells.js\"\r\nimport {getDialogueButtonType, removeEffect} from \"../../helper-functions.js\"\r\n\r\nconst getChoices = async (effects) => {\r\n\treturn effects.reduce((acc, effect, i) => {\r\n\t\t\tconst nameAlreadyUsed = acc.find(choice => choice.name == effect.name)\r\n\t\t\tconst name = nameAlreadyUsed ? effect.name + \"-\" + i : effect.name\r\n\t\t\tconst choice = {name: name, icon: effect.icon, uuid: effect.uuid}\r\n\t\t\treturn [...acc, choice]\r\n\t}, [])\r\n}\r\nconst getChosenEffect = async (effects) => {\r\n\tconst choices = await getChoices(effects)\t\t\r\n\tconst buttonNames = choices.map(choice => choice.name)\t\t\r\n\tconst initChoice = await getDialogueButtonType(buttonNames, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60, choices)\r\n\treturn choices.find(effect => effect.name == initChoice.value)\t\r\n}\r\nconst getInitIconPaths = (choice, effects) => {\r\n\tconst chosenEffect = effects.find(effect => effect.name == choice)\r\n\treturn chosenEffect.icon\r\n}\r\nconst getPoisonEffects = () => {\r\n\tconst target = game.user.targets.first()\r\n\treturn target.actor.effects.filter(effect => {\r\n\t\tconst hasPoisonedName = conditionLabels[\"poisoned\"].includes(effect.name.toLowerCase())\r\n\t\tconst hasPoisonedConditions = effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase()))\r\n\t\treturn hasPoisonedName || hasPoisonedConditions\r\n\t})\t\r\n}\r\nconst onUse = async ({item, workflow, args, token}) => {\r\n\tconst poisonEffects = await getPoisonEffects()\r\n\tif (poisonEffects.length > 0) {\r\n\t\tconst chosenEffect = await getChosenEffect(poisonEffects)\r\n\t\tawait removeEffect(chosenEffect.uuid)\t\r\n\t}\r\n}\r\nconst preTargetSave = async ({item, workflow, args}) => {\r\n\tconst hasPoison = item.effects.find(effect => effect.changes.find(change => conditionLabels[\"poisoned\"].includes(change.value.toLowerCase())))\r\n\tif (hasPoison) workflow.saveDetails.advantage = true\r\n}\r\n\r\nexport const protectionFromPoison = {\r\n\tonUse,\r\n\tpreTargetSave\r\n}","import {getDialogueButtonType} from \"../../helper-functions.js\"\r\nimport {ringOfSpellStoring as s} from \"../../strings/items.js\"\r\n\r\nconst addSpell = async (item, tokenActor) => {\r\n\tconst notification = await setAddSpellNotification(item)\r\n\tif (notification) return false\r\n\tconst updates = await getAddSpellUpdates(item, tokenActor)\r\n\tsetAddSpellUpdates(item, updates, tokenActor)\r\n}\r\nconst castSpell = async (item, tokenActor) => {\r\n\tconst updates = await createCastWorkflow(item, tokenActor)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst checkSelfTarget = async (args, item, originTokenDoc) => {\r\n\tconst hasEffects = item.effects.size > 0\r\n\tconst isSelfTargetItem = item.target?.type == \"self\"\r\n\tconst originTargetingSelf = args[0].hitTargetUuids.filter(uuid => uuid == originTokenDoc.uuid).length > 0\r\n\treturn hasEffects && (isSelfTargetItem || originTargetingSelf)\r\n}\r\nconst createCastWorkflow = async (item, tokenActor) => {\r\n\tconst spellData = await getSpellToCast(item)\t\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, item)\r\n\tawait setPreUseItemHooks(tempItem, spellData)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, item)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spellData, tokenActor, liveItem) => {\r\n\tconst sourceItem = await fromUuid(spellData.uuid)\t\r\n\tconst sourceMacroNames = await getSourceMacroNames(sourceItem)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, spellData.activation)\r\n\tconst itemData = await getTempItem(liveItem, sourceItem, spellData, updatedMacroNames)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async ({args, item, workflow}) => {\r\n\tconst [tempItem, originTokenDoc, tokenActor] = await getDeleteItemData(args, item)\r\n\tawait setDeleteItemFlags(tempItem)\r\n\tconst logic = await getDeleteItemLogic(args, item, originTokenDoc, tempItem, tokenActor, workflow)\r\n\tsetDeleteItemLogic(logic, tempItem, tokenActor)\r\n}\r\nconst getAddCharChoice = async (eligibleSpellsByChar) => {\r\n\tconst charChoices = eligibleSpellsByChar.map(character => character.origin).toSorted()\t\r\n\treturn await getDialogueButtonType(charChoices, {width: 400, height: 150}, s.charHeader, getCharIconPaths, 60, 60, eligibleSpellsByChar)\r\n}\r\nconst getAddLevelChoice = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst levelChoices = await getLevelChoices(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst levelChoice = await getDialogueButtonType(levelChoices, {width: 400, height: 150}, s.levelHeader, getLevelIconPaths, 60, 60)\r\n\t//return value as int\r\n\treturn {value: s.levelLabels.indexOf(levelChoice.value) + 1}\r\n}\r\nconst getAddSpellChoice = async (charChoice, eligibleSpellsByChar, levelChoice) => {\r\n\tconst [spellChoices, spellIcons] = await getSpellChoices(charChoice, eligibleSpellsByChar, levelChoice)\r\n\treturn await getSpellChoice(spellChoices, s.spellHeader, getSpellIconPaths, spellIcons)\t\r\n}\r\nconst getAddSpellChoices = async (eligibleSpellsByChar, item, tokenActor) => {\r\n\tconst charChoice = await getAddCharChoice(eligibleSpellsByChar)\r\n\tconst levelChoice = await getAddLevelChoice(charChoice, tokenActor, eligibleSpellsByChar, item)\r\n\tconst spellChoice = await getAddSpellChoice(charChoice, eligibleSpellsByChar, levelChoice.value)\r\n\treturn [charChoice.value, levelChoice.value, spellChoice.value]\r\n}\r\nconst getAddSpellUpdates = async (item, tokenActor) => {\r\n\tconst actors = await getLiveActors()\r\n\tconst eligibleSpellsByChar = await getEligibleSpells(actors)\t\r\n\tconst choices = await getAddSpellChoices(eligibleSpellsByChar, item, tokenActor)\t\r\n\treturn [choices, eligibleSpellsByChar]\r\n}\r\nconst getAttackBonus = (actor, item, ability) => {\r\n\tconst isRangedAttack = item.system.actionType == \"rsak\"\r\n\tconst isMeleeAttack = item.system.actionType == \"msak\"\r\n\tif (!isRangedAttack && !isMeleeAttack) {\r\n\t\treturn 0\r\n\t} else if (isRangedAttack) {\t\t\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.rsak.attack)\r\n\t} else if (isMeleeAttack) {\r\n\t\treturn parseInt(actor.system.abilities[ability].mod) + parseInt(actor.system.bonuses.msak.attack)\r\n\t}\r\n}\r\nconst getCharIconPaths = (choice, iconData) => {\t\r\n\tconst match = iconData.find(item => item.origin == choice)\r\n\treturn match.icon\r\n}\r\nconst getDeleteItemFlagData = async (liveItem, tempItem) => {\r\n\tconst spellData = tempItem.flags.charname.ringOfSpellStoring.spellData\r\n\tconst spells = liveItem.flags.charname.ringOfSpellStoring.spells\t\r\n\tconst slotsUsed = liveItem.flags.charname.ringOfSpellStoring.slotsUsed\r\n\tconst usedSpell = spells.find(spell => {\r\n\t\treturn spell.level == spellData.level\r\n\t\t\t&& spell.name == spellData.name \r\n\t\t\t&& spell.dc == spellData.dc \r\n\t\t\t&& spell.ability == spellData.ability\r\n\t})\t\r\n\tconst deleteIndex = spells.indexOf(usedSpell)\r\n\treturn [deleteIndex, slotsUsed, spells, usedSpell.level]\r\n}\r\nconst getDeleteItemFlagUpdates = async (liveItem, tempItem) => {\r\n\tconst [deleteIndex, slotsUsed, spells, usedSpellLevel] = await getDeleteItemFlagData(liveItem, tempItem)\r\n\tconst newSlotsUsed = slotsUsed - usedSpellLevel\r\n\tconst newSpells = spells.filter((spell, i) => i != deleteIndex)\t\r\n\treturn [newSlotsUsed, newSpells]\r\n}\r\nconst getDeleteItemLogic = async (args, item, originTokenDoc, tempItem, tokenActor, workflow) => {\r\n\tconst concEffect = await MidiQOL.getConcentrationEffect(tokenActor) ?? false\t\r\n\tconst hasTemplate = await fromUuid(workflow.templateUuid) ?? false\r\n\tconst selfEffects = await getSelfEffects(tempItem)\r\n\tconst hasSelfEffects = selfEffects.length > 0\r\n\tconst hasSelfTarget = await checkSelfTarget(args, item, originTokenDoc)\t\t\r\n\treturn [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget]\r\n}\r\nconst getDeleteItemData = async (args, item) => {\r\n\tconst tempItem = await fromUuid(item.uuid)\r\n\tconst originTokenDoc = await fromUuid(args[0].tokenUuid)\r\n\tconst tokenActor = originTokenDoc.actor\t\r\n\treturn [tempItem, originTokenDoc, tokenActor]\r\n}\r\nconst getDeleteUuidEffects = async (actor, item) => {\t\r\n\tconst isConcentration = item.system.components.concentration || item.flags.midiProperties.concentration\r\n\tconst isReactionItem = item.system.activation.type == \"reaction\"\r\n\tif (isConcentration && !isReactionItem) {\r\n\t\treturn [await MidiQOL.getConcentrationEffect(actor)]\r\n\t}\r\n\treturn await getSelfEffects(item) ?? []\r\n}\r\nconst getEligibleLevelSpells = (actor, item) => {\r\n\tconst highestSpellLevel = getHighestSpellLevel(actor.system.spells)\r\n\tconst mode = item.system.preparation.mode\r\n\tlet eligibleLevelSpells = []\r\n\tlet spellData = {}\r\n\tfor (let i = item.system.level; i <= 5; i ++) {\r\n\t\tif (mode == \"atwill\" || mode == \"innate\") {\t\t\t\t\r\n\t\t\tif (i == item.system.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, item.system.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else if (mode == \"pact\") {\r\n\t\t\tif (i == actor.system.spells.pact.level) {\r\n\t\t\t\tspellData = getSpellData(actor, item, actor.system.spells.pact.level)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (i <= highestSpellLevel) {\r\n\t\t\t\tspellData = getSpellData(actor, item, i)\r\n\t\t\t\teligibleLevelSpells.push(spellData)\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\t\t\r\n\treturn eligibleLevelSpells\r\n}\r\nconst getEligibleSpells = async (actors) => {\r\n\treturn actors.map(actor => {\r\n\r\n\t\tconst eligibleSpells = actor.items.filter(item => item.type == \"spell\" && item.system.level > 0 && item.system.level <= 5)\t\r\n\t\tconst actorSpells = eligibleSpells.reduce((spells, spell) => {\r\n\t\t\tconst eligibleLevelSpells = getEligibleLevelSpells(actor, spell)\r\n\t\t\treturn [...spells, ...eligibleLevelSpells]\r\n\t\t}, [])\r\n\t\treturn {origin: actor.prototypeToken.name, icon: actor.prototypeToken.texture.src, spells: actorSpells}\r\n\t})\r\n}\r\nconst getHighestSpellLevel = (spells) => {\r\n\tlet arr = []\r\n\tlet label\r\n\tfor (let i = 1; i <= 9; i++) {\r\n\t\tlabel = \"spell\" + i\r\n\t\tif (spells[label].max > 0) arr.push(i)\r\n\t}\r\n\treturn Math.max(...arr)\r\n}\r\nconst getInitIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.initChoices[0]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-diamond-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[1]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-flaming-pentagon-teal-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.initChoices[2]:\r\n\t\t\treturn \"icons/magic/defensive/shield-barrier-glowing-triangle-teal-purple.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst getLevelChoices = async (charChoice, tokenActor, eligibleSpellsByChar, item) => {\r\n\tconst slotsRemaining = 5 - item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\r\n\tconst eligibleLevels = character.spells.map(spell => spell.level).filter(level => level <= slotsRemaining)\r\n\tconst spellLevels = new Set(eligibleLevels)\t\t\t\r\n\treturn Array.from(spellLevels).toSorted().map(level => s.levelLabels[level - 1])\r\n}\r\nconst getLevelIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase s.levelLabels[0]:\r\n\t\t\treturn \"icons/skills/ranged/target-bullseye-archer-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[1]:\r\n\t\t\treturn \"icons/skills/melee/weapons-crossed-daggers-orange.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[2]:\r\n\t\t\treturn \"icons/skills/ranged/arrows-triple-yellow-red.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[3]:\r\n\t\t\treturn \"icons/skills/ranged/shuriken-thrown-yellow.webp\"\r\n\t\t\tbreak\r\n\t\tcase s.levelLabels[4]:\r\n\t\t\treturn \"icons/skills/ranged/daggers-thrown-salvo-orange.webp\"\r\n\t\t\tbreak\t\t\t\t\r\n\t}\t\r\n}\r\nconst getLiveActors = async () => {\r\n\treturn game.users.filter(user => user.character).filter(user => {\r\n\t\treturn canvas.scene.tokens.find(token => token.actor.uuid == user.character.uuid)\r\n\t}).map(user => user.character)\r\n}\r\nconst getNewSlotsUsed = async(item, level) => {\r\n\tconst slots = item.flags?.charname?.ringOfSpellStoring?.slotsUsed ?? 0\r\n\treturn slots + level\r\n}\r\nconst getSelfEffects = async (item) => {\t\r\n\tconst itemEffects = item.effects ?? []\r\n\treturn itemEffects.filter(effect => {\r\n\t\tconst selfTarget = effect.flags?.dae?.selfTarget ?? false\r\n\t\tconst selfTargetAlways = effect.flags?.dae?.selfTargetAlways ?? false\r\n\t\tif ((selfTarget || selfTargetAlways)) return true \r\n\t\treturn false\r\n\t}) ?? []\r\n}\r\nconst getSourceMacroNames = async (item) => {\r\n\tconst hasFlags = item?.flags ?? false\r\n\tif (!hasFlags) return \"\"\r\n\tconst hasMidi = item.flags[\"midi-qol\"] ?? false\r\n\tif (!hasMidi) return \"\"\r\n\tconst hasMacros = item.flags[\"midi-qol\"].onUseMacroName ?? false\r\n\tif (!hasMacros) return \"\"\r\n\treturn item.flags[\"midi-qol\"].onUseMacroName\r\n}\r\nconst getSpellChoice = async (spellChoices, spellHeader, getSpellIconPaths, spellIcons) => {\r\n\tconst sortedChoices = spellChoices.toSorted()\r\n\tconst radioSelections = sortedChoices.map(choice => {\r\n\t\tconst data = spellIcons.find(spell => spell.name == choice)\r\n\t\tconst icon = data.icon\r\n\t\tconst label = `<img align=left src=${icon} width=\"15\" height=\"15\" style=\"border:0px\">${choice}`\r\n\t\treturn {type: \"radio\", label}\r\n\t})\r\n\tlet choices = await warpgate.menu(\r\n\t\t{\r\n\t\t\tinputs: radioSelections\r\n\t\t},{\r\n\t\t\ttitle: spellHeader,\r\n\t\t\trender: (...args) => {},\r\n\t\t\toptions: {\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}\r\n\t\t}\r\n\t)\t\r\n\treturn {value: sortedChoices[choices.inputs.indexOf(true)]}\r\n}\r\nconst getSpellChoices = async (charChoice, eligibleSpellsByChar, levelChoiceInt) => {\t\r\n\tconst character = eligibleSpellsByChar.find(character => character.origin == charChoice.value)\t\r\n\tconst spells = character.spells.filter(spell => spell.level == levelChoiceInt && !s.charnamesExceptions.includes(spell.name))\r\n\tconst names = spells.map(spell => spell.name)\r\n\tconst icons = spells.map(spell => { return {name: spell.name, icon: spell.icon} })\r\n\treturn [names, icons]\r\n}\r\nconst getSpellData = (actor, item, i) => {\r\n\tconst name = item.name\r\n\tconst level = i\r\n\tconst dc = actor.system.attributes.spelldc\r\n\tconst ability = actor.system.attributes.spellcasting\r\n\tconst attackBonus = getAttackBonus(actor, item, ability)\r\n\tconst prof = actor.system.attributes.prof\t\r\n\tconst icon = item.img\r\n\tconst uuid = item.uuid\r\n\tconst activation = item.system.activation.type\r\n\tconst originUuid = actor.uuid\r\n\treturn {name, level, dc, ability, attackBonus, prof, icon, uuid, activation, originUuid}\r\n}\r\nconst getSpellIconPaths = (choice, iconData) => {\r\n\tconst match = iconData.find(item => item.name == choice)\r\n\treturn match.icon\t\r\n}\r\nconst getSpellToCast = async (item) => {\r\n\tconst spells = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tif (spells.length < 1) {\r\n\t\tui.notifications.info(s.castSpellErr)\r\n\t\treturn false\t\t\r\n\t}\t\r\n\tconst uniqueSpells = new Set(spells)\r\n\tconst spellsArr = Array.from(uniqueSpells)\r\n\tconst spellNames = spellsArr.map(spell => spell.name).toSorted()\r\n\tconst chosenSpell = await getDialogueButtonType(spellNames, {width: 400, height: \"100%\"}, s.castSpellHeader, getSpellIconPaths, 60, 60, spellsArr)\r\n\treturn spellsArr.find(spell => spell.name == chosenSpell.value)\r\n}\r\nconst getTempItem = async (liveItem, sourceItem, spellData, updatedMacroNames) => {\r\n\treturn mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\timg: liveItem.img,\r\n\t\t\"flags.charname.ringOfSpellStoring.ringUuid\": liveItem.uuid,\r\n\t\t\"flags.charname.ringOfSpellStoring.spellData\": spellData,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.ability\": \"none\",\r\n\t\t\"system.attackBonus\": spellData.attackBonus,\r\n\t\t\"system.preparation.mode\": \"innate\",\r\n\t\t\"system.save.dc\": spellData.dc,\r\n\t\t\"system.save.scaling\": \"flat\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getUpdatedDescription = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spells = item.flags.charname.ringOfSpellStoring.spells.reduce((spells, spell) => {\r\n\t\tconst newSpell = [\"<br />\" + spell.name + s.descLevel + spell.level]\r\n\t\treturn [...spells, ...newSpell]\r\n\t}, []).toSorted()\t\t\r\n\tconst newSpells = spells.reduce((descs, desc) => {\r\n\t\treturn descs + desc\r\n\t}, \"\")\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\r\n\tconst sanitizedDesc = desc.replace(spellBankStr, \"\")\t\r\n\treturn sanitizedDesc + \"<br />*******<br />\" + s.currSpellBank + \":<br />\" + newSpells + \"<br />*******\"\r\n}\r\nconst getUpdatedMacroNames = async (macroNames, activation) => {\t\r\n\tconst update = macroNames.length > 0 \r\n\t\t\t? macroNames + \",[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\" \r\n\t\t\t: \"[postRollFinished]function.CHARNAME.macros.ringOfSpellStoring.deleteTempItem\"\r\n\tif (activation == \"reaction\") {\r\n\t\treturn update + \",[postActiveEffects]function.CHARNAME.macros.ringOfSpellStoring.setReactionHook\"\r\n\t} \r\n\treturn update\r\n}\r\nconst getUpdateRingData = async (charName, eligibleSpellsByChar, item, level, spellName) => {\r\n\tconst chr = eligibleSpellsByChar.find(chr => chr.origin == charName)\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spells ?? []\r\n\tconst newSlotsUsed = await getNewSlotsUsed(item, level)\r\n\tconst chosenSpell = [chr.spells.find(spell => spell.name == spellName && spell.level == level)]\t\t\r\n\tconst newSpellData = [...spellData, ...chosenSpell]\t\r\n\treturn [chosenSpell, newSlotsUsed, newSpellData]\r\n}\r\nconst main = async ({args, item}) => {\r\n\tconst initChoice = await getDialogueButtonType(s.initChoices, {width: 400, height: \"100%\"}, s.initHeader, getInitIconPaths, 60, 60)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tconst liveItem = await fromUuid(item.uuid)\r\n\tif (initChoice.value == s.initChoices[0]) {\r\n\t\taddSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[1]) {\r\n\t\tcastSpell(liveItem, tokenActor)\r\n\t} else if (initChoice.value == s.initChoices[2]) {\r\n\t\tresetSpells(liveItem, tokenActor)\r\n\t}\r\n}\r\nconst resetSpells = async (item, tokenActor) => {\r\n\tsetResetSpellsDesc(item)\r\n\tconst tempItems = tokenActor.items.filter(item => item.flags?.charname?.ringOfSpellStoring?.ringUuid ?? false)\r\n\ttempItems.map(item => item.delete())\r\n}\r\nconst setAddSpellNotification = async (item) => {\r\n\tif (item.flags.charname.ringOfSpellStoring.slotsUsed == 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\t\r\n}\r\nconst setAddSpellUpdates = async (item, updates, tokenActor) => {\r\n\tconst [choices, eligibleSpellsByChar] = updates\r\n\tconst [spellData] = await updateRingItem(item, choices, eligibleSpellsByChar)\t\r\n\tif (spellData.activation == \"reaction\") setReactionUpdates(spellData, tokenActor, item)\t\r\n}\r\nconst setCastSpellUpdates = async (updates, tokenActor) => {\r\n\tconst [tempItem, workflow] = updates\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n\tconst template = await fromUuid(workflow.templateUuid) ?? false\r\n\tif (template) template.callMacro(\"whenCreated\", {asGM: true})\r\n}\r\nconst setDeleteItemFlags = async (tempItem) => {\r\n\tconst liveItem = await fromUuid(tempItem.flags.charname.ringOfSpellStoring.ringUuid)\r\n\tconst updates = await getDeleteItemFlagUpdates(liveItem, tempItem)\r\n\tupdateDeleteItemFlags(liveItem, updates)\r\n}\r\nconst setDeleteItemLogic = async (logic, tempItem, tokenActor) => {\r\n\tconst [concEffect, hasTemplate, hasSelfEffects, hasSelfTarget] = logic\r\n\tif (concEffect) {\r\n\t\tsetDeleteUuids(tempItem, concEffect)\r\n\t} else if (!concEffect && hasTemplate && !hasSelfEffects) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\t\t\t\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && (hasSelfEffects || hasSelfTarget)) {\r\n\t\tconst tempItemEffect = tokenActor.effects.find(effect => effect.origin == tempItem.uuid)\r\n\t\tsetDeleteUuids(tempItem, tempItemEffect)\r\n\t} else if (!concEffect && !hasTemplate && !hasSelfEffects && !hasSelfTarget) {\r\n\t\ttempItem.delete()\r\n\t}\t\r\n}  \r\nconst setDeleteUuids = async (tempItem, effect) => {\r\n\tconst deletionChange = {key: \"flags.dae.deleteUuid\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: [tempItem.uuid]}\r\n\tconst updatedChanges = [...effect.changes, deletionChange]\r\n\teffect.update({\"changes\": updatedChanges})\t\t\r\n}\r\nconst setPreUseItemHooks = async (item, spellData) => {\r\n\tHooks.once(\"dnd5e.preUseItem\", (useItem, config) => {\r\n\t\tif (item.uuid != useItem.uuid) return false\t\r\n\t\tconfig.consumeResource = false\r\n\t\tconfig.consumeSpellSlot = false\r\n\t\tconfig.consumeUsage = false\r\n\t\tconfig.slotLevel = spellData.level\t\r\n\t\tconfig.system.prof._baseProficiency = spellData.prof\t\t\t\r\n\t})\t\t\r\n}\r\nconst setReactionHook = async ({item}) => {\r\n\tconst spellData = item.flags?.charname?.ringOfSpellStoring?.spellData ?? false\r\n\tif (!spellData) return false\r\n\tsetPreUseItemHooks(item, spellData)\r\n}\r\nconst setReactionUpdates = async (spellData, tokenActor, liveItem) => {\r\n\tconst [tempItem] = await createTempItem(spellData, tokenActor, liveItem)\r\n\tupdateDeleteUuidEffects(tokenActor, tempItem)\r\n}\r\nconst setResetSpellsDesc = async (item) => {\r\n\tconst desc = item.system.description.value\r\n\tconst spellBankStr = desc.substring(\r\n\t\tdesc.indexOf(\"*******\") - 6, \r\n\t\tdesc.lastIndexOf(\"*******\")\t+ 7\r\n\t) ?? \"\"\t\r\n\tconst updatedStr = \"<br />*******<br />\" + s.currSpellBank + \":<br /><br />*******\"\r\n\tconst updatedDesc = desc.replace(spellBankStr, updatedStr)\t\r\n\titem.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": [],\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": 0,\r\n\t\t\"system.description.value\": updatedDesc\r\n\t})\t\t\r\n}\r\nconst setRingUpdates = async (chosenSpell, item, newSlotsUsed, newSpellData) => {\r\n\tconst flagUpdate = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpellData,\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed\r\n\t})\t\r\n\tconst updatedDescription = await getUpdatedDescription(item)\t\r\n\tconst descUpdate = await item.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\r\n}\r\nconst setRingUpdatesNotification = async (item, level) => {\r\n\tconst slots = await getNewSlotsUsed(item, level)\r\n\tif (slots > 5) {\r\n\t\tui.notifications.info(s.addSpellErr)\r\n\t\treturn true\r\n\t}\t\r\n\treturn false\r\n}\r\nconst updateDeleteItemFlags = async (item, updates) => {\r\n\tconst [newSlotsUsed, newSpells] = updates\r\n\tconst flaggedItem = await item.update({\r\n\t\t\"flags.charname.ringOfSpellStoring.slotsUsed\": newSlotsUsed,\r\n\t\t\"flags.charname.ringOfSpellStoring.spells\": newSpells\r\n\t})\r\n\tconst updatedDescription = await getUpdatedDescription(flaggedItem)\t\r\n\tawait flaggedItem.update({\r\n\t\t\"system.description.value\": updatedDescription\r\n\t})\t\t\r\n}\r\nconst updateDeleteUuidEffects = async (actor, item) => {\r\n\tconst effects = await getDeleteUuidEffects(actor, item)\r\n\tif (effects.length > 0) effects.map(effect => setDeleteUuids(item, effect))\t\r\n}\r\nconst updateRingItem = async (item, choices, eligibleSpellsByChar) => {\t\r\n\tconst [charName, level, spellName] = choices\r\n\tconst notification = await setRingUpdatesNotification(item, level)\r\n\tif (notification) return false\r\n\tconst [chosenSpell, newSlotsUsed, newSpellData] = await getUpdateRingData(charName, eligibleSpellsByChar, item, level, spellName)\r\n\tsetRingUpdates(chosenSpell, item, newSlotsUsed, newSpellData)\r\n\treturn chosenSpell\r\n}\r\n\r\nexport const ringOfSpellStoring = {\r\n\t\"main\": main,\r\n\t\"deleteTempItem\": deleteTempItem,\r\n\t\"setReactionHook\": setReactionHook\r\n}","import {\r\n\tdeleteTempItem as deleteItem, \r\n\tgetDialogueButtonType, \r\n\tgetSourceMacroNames, \r\n\tgetUpdatedMacroNames, \r\n\tsetCastSpellUpdates,\r\n} from \"../../helper-functions.js\"\r\nimport {staffOfSwarmingInsects as s} from \"../../strings/items.js\"\r\n\r\nconst castSpell = async (spell, staff, tokenActor, choice) => {\r\n\tconst updates = await createCastWorkflow(spell, staff, tokenActor, choice)\r\n\tsetCastSpellUpdates(updates, tokenActor)\r\n}\r\nconst createCastWorkflow = async (spell, staff, tokenActor, choice) => {\r\n\tconst [tempItem] = await createTempItem(spell, staff, tokenActor, choice)\r\n\tconst workflow = await MidiQOL.completeItemUse(tempItem, spell)\t\r\n\treturn [tempItem, workflow]\r\n}\r\nconst createTempItem = async (spell, staff, tokenActor, choice) => {\r\n\tconst sourceMacroNames = await getSourceMacroNames(spell)\r\n\tconst updatedMacroNames = await getUpdatedMacroNames(sourceMacroNames, \"staffOfSwarmingInsects\", spell.activation)\r\n\tconst itemData = await getTempSpellItem(spell, staff, updatedMacroNames, choice)\r\n\treturn await tokenActor.createEmbeddedDocuments(\"Item\", [itemData])\r\n}\r\nconst deleteTempItem = async (data) => {\r\n\tdeleteItem(data)\r\n}\r\nconst getChosenItem = async (choice, spells) => {\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn game.items.find(item => item.name == s.damageWeaponName)\r\n\t} else {\r\n\t\treturn spells.find(spell => spell.name == choice)\t\t\r\n\t}\t\r\n}\r\nconst getConsumptionAmount = async (choice) => {\r\n\tif (choice == s.allChoices[0]) {\r\n\t\treturn 4\r\n\t} else if (choice == s.allChoices[1]) {\r\n\t\treturn 1\r\n\t} else if (choice == s.allChoices[2]) {\r\n\t\treturn 5\r\n\t} else {\r\n\t\treturn 0\r\n\t}\r\n}\r\nconst getDamage = async (spell, choice) => {\r\n\tconst weapon = game.items.find(item => item.name == s.damageWeaponName)\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn choice == s.allChoices[4] \r\n\t\t\t? [\"1d8 + @mod\", \"bludgeoning\"] \r\n\t\t\t: [\"1d6 + @mod\", \"bludgeoning\"]\r\n\t} else {\r\n\t\treturn spell.system.damage.parts\r\n\t}\r\n}\r\nconst getSpellIconPaths = (choice, spells) => {\r\n\tif (choice == s.allChoices[3] || choice == s.allChoices[4]) {\r\n\t\treturn \"icons/weapons/staves/staff-simple-spiral-green.webp\"\r\n\t} else {\r\n\t\tconst spell = spells.find(spell => spell.name.toLowerCase() == choice.toLowerCase())\r\n\t\treturn spell.img\t\t\r\n\t}\r\n}\r\nconst getSpellsToCast = async (staff) => {\r\n\tconst spells = s.spellNames.map(spell => game.items.find(item => {\r\n\t\tif (!item.name) return false\r\n\t\treturn item.name.toLowerCase() == spell.toLowerCase()\r\n\t}))\t\r\n\tconst filteredSpellNames = s.spellNames.filter((spell, i, arr) => {\r\n\t\treturn ((spell == arr[0] && staff.system.uses.value >= 4)\r\n\t\t\t||  (spell == arr[1] && staff.system.uses.value >= 1)\r\n\t\t\t||  (spell == arr[2] && staff.system.uses.value >= 5))\r\n\t})\r\n\tconst choices = staff.system.attunement == 2 ? \r\n\t\t[...s.meleeChoices, ...filteredSpellNames].sort() : \r\n\t\ts.meleeChoices.sort()\r\n\treturn [choices, spells]\r\n}\r\nconst getTempSpellItem = async (spell, staff, updatedMacroNames, choice) => {\r\n\tconst [amount, damage, item, name, prep, type] = await getTempSpellItemMods(spell, staff, choice)\r\n\treturn mergeObject(duplicate(item.toObject(false)), {\r\n\t\tname: name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originItemName\": staff.name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originItemUuid\": staff.uuid,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originName\": item.name,\r\n\t\t\"flags.charname.staffOfSwarmingInsects.originUuid\": item.uuid,\r\n\t\t\"flags.midi-qol.onUseMacroName\": updatedMacroNames,\r\n\t\t\"system.consume.amount\": amount,\r\n\t\t\"system.consume.target\": staff.id,\r\n\t\t\"system.consume.type\": type,\r\n\t\t\"system.damage.parts\": damage,\t\r\n\t\t\"system.preparation.mode\": prep,\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\t\r\n}\r\nconst getTempSpellItemMods = async (spell, staff, choice) => {\r\n\tconst amount = await getConsumptionAmount(choice)\r\n\tconst damage = await getDamage(spell, choice)\r\n\tconst item = choice == s.allChoices[3] || choice == s.allChoices[4] ? weapon : spell\r\n\tconst name = item.name == s.damageWeaponName ? staff.name : spell.name\r\n\tconst prep = choice == s.allChoices[3] || choice == s.allChoices[4] ? null : \"innate\"\r\n\tconst type = choice == s.allChoices[3] || choice == s.allChoices[4] ? null : \"charges\"\r\n\treturn [amount, damage, item, name, prep, type]\r\n}\r\nconst onUse = async ({actor, args, item, token, workflow}) => {\r\n\tconst staff = await fromUuid(item.uuid)\r\n\tif (!staff.system.equipped) return false\r\n\tconst [choices, spells] = await getSpellsToCast(staff)\r\n\tconst choice = await getDialogueButtonType(\r\n\t\tchoices, \r\n\t\t{width: choices.length * 150, height: \"100%\"}, \r\n\t\ts.initHeader, \r\n\t\tgetSpellIconPaths, \r\n\t\t60, \r\n\t\t60, \r\n\t\tspells\r\n\t)\r\n\tconst chosenItem = await getChosenItem(choice.value, spells)\r\n\tconst tokenActor = (await fromUuid(args[0].tokenUuid)).actor\r\n\tcastSpell(chosenItem, staff, tokenActor, choice.value)\t\r\n}\r\n\r\nexport const staffOfSwarmingInsects = {\r\n\tdeleteTempItem,\r\n\tonUse\t\r\n}","import {getDialogueButtonType, setActiveEffects} from \"../../helper-functions.js\"\r\n\r\nconst getCommandItemData = async (originActor, type) => {\r\n\tconst sourceItem = type.value == \"Command: Flee\" ? await fromUuid(\"Item.TLqebf57ZF6HUkml\") : await fromUuid(\"Item.9iKDqMbCAERS9psP\")\r\n\tconsole.log(sourceItem)\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\t\t//name: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getFearItemData = async (originActor) => {\r\n\tconst sourceItem = await fromUuid(\"Item.DG5FfgOrf5IhvITt\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Wand of Fear\"\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getIconPaths = (buttonName) => {\r\n\tswitch (buttonName) {\r\n\t\tcase \"Fear\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-monster-purple-blue.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Flee\":\r\n\t\t\treturn \"icons/magic/control/fear-fright-shadow-monster-purple.webp\"\r\n\t\t\tbreak\r\n\t\tcase \"Command: Prone\":\r\n\t\t\treturn \"icons/magic/control/silhouette-fall-slip-prone.webp\"\r\n\t\t\tbreak\t\t\t\r\n\t}\r\n}\r\nconst onUse = async ({args, item, actor, token}) => {\r\n\tconst buttonOptions = item.system.uses.value > 1 ? [\"Fear\", \"Command: Flee\", \"Command: Prone\"] : [\"Command: Flee\", \"Command: Prone\"]\r\n\tconst type = await getDialogueButtonType(buttonOptions, {width: 400, height: 150}, \"What do you want to cast?\", getIconPaths, 60, 60)\r\n\tif (type.value == \"Fear\") {\r\n\t\tsetFearEffects(actor, item)\r\n\t} else {\r\n\t\tsetCommandEffects(actor, item, token, type)\r\n\t}\r\n}\r\nconst setCommandEffects = async (actor, item, token, type) => {\r\n\tconst commandItem = await getCommandItemData(actor, type)\r\n\tconst target = game.user.targets?.first() ?? false\r\n\tif (!target) return false\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [target.document.uuid]}\r\n\tconst commandWorkflow = await MidiQOL.completeItemUse(commandItem, {}, options)\t\r\n\tsetCommandEffectsSequencer(target)\r\n\tsetItemUsesUpdate(item.uuid, 1)\t\r\n}\r\nconst setCommandEffectsSequencer = async (token) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.magic_signs.circle.02.enchantment.complete.dark_purple`)\r\n\t\t\t.scale(.25)\r\n\t\t\t.opacity(1)\r\n\t\t\t.attachTo(token)\r\n\t\t\t.belowTokens()\r\n\t\t.play()\t\t\t\r\n}\r\nconst setEffectsSequencer = async (x, y, scale, token, template) => {\r\n\tnew Sequence()\r\n\t\t.effect()\r\n\t\t\t.file(`jb2a.detect_magic.cone.purple`)\r\n\t\t\t.scale(4.4)\r\n\t\t\t.opacity(1)\r\n\t\t\t.atLocation({x: template.x, y: template.y})\r\n\t\t\t.spriteOffset({x: 600, y:0}, {local: true})\r\n\t\t\t.rotate(-template.direction)\r\n\t\t.play()\t\t\t\r\n}\r\nconst setFearEffects = async (actor, item) => {\r\n\tconst fearItem = await getFearItemData(actor)\r\n\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false}\r\n\tconst fearWorkflow = await MidiQOL.completeItemUse(fearItem, {}, options)\t\r\n\tconst liveTemplate = await fromUuid(fearWorkflow.templateUuid)\r\n\tsetEffectsSequencer(0, 0, 1, false, liveTemplate)\r\n\tsetItemUsesUpdate(item.uuid, 2)\t\r\n}\r\nconst setItemUsesUpdate = async (itemUuid, usesUsed) => {\r\n\tconst liveItem = await fromUuid(itemUuid)\r\n\tliveItem.update({\"system.uses.value\": liveItem.system.uses.value - usesUsed})\r\n}\r\n\r\nexport const wandOfFear = {\r\n\tonUse\r\n}","import {auraOfPurity} from \"./macros/spells/aura-of-purity.js\"\r\nimport {blight} from \"./macros/spells/blight.js\"\r\nimport {clairvoyance} from \"./macros/spells/clairvoyance.js\"\r\nimport {daylight} from \"./macros/spells/daylight.js\"\r\nimport {dispelMagic} from \"./macros/spells/dispel-magic.js\"\r\nimport {feyAncestry} from \"./macros/features/fey-ancestry.js\"\r\nimport {giantInsect} from \"./macros/spells/giant-insect.js\"\r\nimport {hordePassive} from \"./macros/features/horde-passive.js\"\r\nimport {insectCloud} from \"./macros/features/misc/insect-cloud.js\"\r\nimport {instrumentOfTheBards} from \"./macros/items/instrument-of-the-bards.js\"\r\nimport {protectionFromPoison} from \"./macros/spells/protection-from-poison.js\"\r\nimport {ringOfSpellStoring} from \"./macros/items/ring-of-spell-storing.js\"\r\nimport {songOfRest} from \"./macros/features/class/bard/song-of-rest.js\"\r\nimport {summoning} from \"./helpers/summons.js\"\r\nimport {staffOfSwarmingInsects} from \"./macros/items/staff-of-swarming-insects.js\"\r\nimport {wandOfFear} from \"./macros/items/wand-of-fear.js\"\r\n\r\nexport const macros = {\r\n\tauraOfPurity,\r\n\tblight,\r\n\tclairvoyance,\r\n\tdaylight,\r\n\tdispelMagic,\r\n\tfeyAncestry,\r\n\tgiantInsect,\r\n\thordePassive,\r\n\tinsectCloud,\r\n\tinstrumentOfTheBards,\r\n\tprotectionFromPoison,\r\n\tringOfSpellStoring,\r\n\tsongOfRest,\r\n\tsummoning,\r\n\tstaffOfSwarmingInsects,\r\n\twandOfFear\r\n}","const getItemData = (originActor, songLevel) => {\r\n\tconst sourceItem = fromUuidSync(\"Item.GvIIDEPRp3unaRVe\")\r\n\tconst itemData = mergeObject(duplicate(sourceItem.toObject(false)), {\r\n\t\tname: \"Song of Rest\",\r\n\t\tsystem: { \r\n\t\t\tdamage: {\r\n\t\t\t\tparts: [[`1d${songLevel}`, \"healing\"]]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {overwrite: true, inlace: true, insertKeys: true, insertValues: true})\r\n\treturn new CONFIG.Item.documentClass(itemData, { parent: originActor })\r\n}\r\nconst getOriginBardScale = (effectOriginUuid) => {\r\n\tconst effectOrigin = fromUuidSync(effectOriginUuid)\r\n\tconst originActor = fromUuidSync(effectOrigin.parent.uuid)\r\n\treturn originActor.system.scale.bard[\"song-of-rest\"].faces\r\n}\r\nconst main = (actor, data) => {\r\n\tconst songEffects = actor.effects.filter(effect => effect.name == \"Song of Rest\")\r\n\tif (data.dhd < 0 && songEffects.length > 0) {\r\n\t\tsongEffects.map(effect => {\r\n\t\t\tconst originBardScale = getOriginBardScale(effect.origin)\r\n\t\t\tconst item = getItemData(actor, originBardScale)\r\n\t\t\tconst token = MidiQOL.tokenForActor(actor.uuid)\r\n\t\t\tconst options = { showFullCard: false, createWorkflow: true, versatile: false, configureDialog: false, targetUuids: [token.document.uuid] }\r\n\t\t\tMidiQOL.completeItemUse(item, {}, options)\t\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const songOfRest = {\r\n\tmain\r\n}","import {setConfig} from './config.js';\r\nimport {macros} from \"./macros.js\"\r\nimport * as sf from \"./socket-functions.js\"\r\n\r\nexport let socket\r\n\r\nHooks.once(\"socketlib.ready\", () => {\r\n\tsocket = socketlib.registerModule(\"charnames-bag-of-macros\")\r\n\tsocket.register(\"setActiveEffectDelete\", sf.setActiveEffectDelete)\r\n\tsocket.register(\"setAmbientLightCreate\", sf.setAmbientLightCreate)\t\r\n\tsocket.register(\"setAmbientLightDelete\", sf.setAmbientLightDelete)\r\n\tsocket.register(\"setDeleteSummonConcentrationHook\", sf.setDeleteSummonConcentrationHook)\r\n\tsocket.register(\"setMeasuredTemplateDelete\", sf.setMeasuredTemplateDelete)\r\n\tsocket.register(\"setSpawnedTokensInitiative\", sf.setSpawnedTokensInitiative)\r\n})\r\n\r\nHooks.on(\"dnd5e.restCompleted\", (actor, data) => {\r\n\tmacros.instrumentOfTheBards.onNewDay(actor, data)\r\n\tmacros.songOfRest.main(actor, data)\r\n})\r\n\r\nHooks.on(\"preDeleteToken\", (tokenDoc, config, user) => {\r\n\tmacros.summoning.onPreDeleteToken(tokenDoc, config, user)\r\n})\r\n\r\nglobalThis['CHARNAME'] = {\r\n    macros\r\n}","export const setAmbientLightCreate = async (params) => {\r\n\treturn await canvas.scene.createEmbeddedDocuments(\"AmbientLight\", [params])\r\n}\r\nexport const setAmbientLightDelete = async (ambientLightId) => {\r\n\tconst ambientLight = await canvas.scene.deleteEmbeddedDocuments(\"AmbientLight\", [ambientLightId])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn ambientLight\r\n}\r\nexport const setActiveEffectDelete = async (ownerActor, effectId) => {\t\r\n\tconst [deleteEffect] = ownerActor.effects.filter(effect => effect._id == effectId)\t\r\n\treturn await ownerActor.deleteEmbeddedDocuments(\"ActiveEffect\", [deleteEffect._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n}\r\nexport const setDeleteSummonConcentrationHook = async (actor, spawnedTokenUuid) => {\r\n\tconst preDeleteSummonConcentrationHookId = Hooks.on(\"preDeleteToken\", (tokenDoc, config, options) => {\r\n\t\tif (tokenDoc.uuid == spawnedTokenUuid) {\t\t\r\n\t\t\tHooks.off(\"preDeleteToken\", preDeleteSummonConcentrationHookId)\r\n\t\t\tconst concEffect =  actor.effects.find(effect => effect.name == \"Concentrating\")\t\t\t\t\r\n\t\t\tif (!concEffect) return false\r\n\t\t\tconcEffect.delete()\t\t\t\t\r\n\t\t}\r\n\t})\t\t\t\r\n}\r\nexport const setMeasuredTemplateDelete = async (templateUuid) => {\r\n\tconst template = await fromUuid(templateUuid) ?? false\r\n\tif (!template) return false\r\n\tconst deletedMeasuredTemplate = await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [template._id])\r\n\t//can probably be improved to go back to whatever layer you had selected before, even if not token\r\n\tcanvas.tokens.activate()\r\n\treturn deletedMeasuredTemplate\r\n}\r\nexport const setSpawnedTokensInitiative = async (combatDocs, init) => {\r\n\tcombatDocs.forEach(doc => doc.update({\"initiative\": init}))\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(349);\n"],"names":["conditionLabels","blinded","charmed","concentrating","dead","deafened","exhaustion1","exhaustion2","exhaustion3","exhaustion4","exhaustion5","frightened","grappled","incapacitated","invisible","paralyzed","petrified","poisoned","prone","restrained","stunned","unconscious","wounded","cloudSpellNames","deleteTempItem","async","args","item","workflow","setDeleteItemFlags","tempItem","originTokenDoc","tokenActor","getDeleteItemData","logic","getDeleteItemLogic","setDeleteItemLogic","fromUuid","uuid","tokenUuid","actor","concEffect","MidiQOL","getConcentrationEffect","hasTemplate","templateUuid","hasSelfEffects","getSelfEffects","length","hasSelfTarget","hasEffects","effects","size","isSelfTargetItem","target","type","originTargetingSelf","hitTargetUuids","filter","checkSelfTarget","getDialogueButtonType","choices","dialogueOptions","title","getIconPathsFunc","buttonWidth","buttonHeight","iconData","Promise","resolve","buttons","getIconPaths","width","height","reduce","choice","i","icon","label","callback","value","getDialogueButtons","Dialog","render","effect","selfTarget","flags","dae","selfTargetAlways","getSourceMacroNames","onUseMacroName","getSpawnLocation","spawnIconPath","interval","itemRange","originToken","setCrosshairConfigs","distanceAvailable","crosshairsDistance","location","warpgate","crosshairs","show","inFlight","wait","ray","Ray","center","distance","Math","ceil","canvas","grid","measureDistances","gridSpaces","draw","cancelled","getTemplatesInRange","templates","gridSize","gridScale","range","x1","y1","template","a","b","x","y","sqrt","pow","itemRangeModified","getTokensInRange","tokens","token","tokenTopLeftCenterX","tokenTopLeftCenterY","tokenGridBorderCoords","j","push","xArr","map","coord","yArr","maxX","max","maxY","coords","x2","y2","getUpdatedMacroNames","macroNames","flagName","activation","update","removeEffect","effectUuid","socket","executeAsGM","setActiveEffects","tokenActorUuids","effectData","all","tokenActorUuid","actorUuid","createEffect","setActorConcDeletion","find","name","delete","setActorConcRemoveUuids","originActor","originActorConcentrationRemoveUuids","removeUuids","setAuraEffectUpdatesWhenDeleted","effectName","tokenActorsEffected","charname","forEach","fromUuidSync","setAuraEffectsWhenEntered","getEffectData","newActorUuids","insectCloud","flag","setAuraEffectsWhenLeft","tokenEffect","setCastSpellUpdates","updates","updateDeleteUuidEffects","callMacro","asGM","scene","adjustment","lockSize","lockPosition","tag","drawIcon","rememberControlled","activate","setDeleteUuids","tempItemEffect","origin","deletionChange","key","mode","CONST","ACTIVE_EFFECT_MODES","ADD","updatedChanges","changes","setTemplateDispels","itemTemplatePositions","potentialTemplates","dnd5e","originName","spellLevel","templatesWithOverlap","eligibleTemplates","gridTemplateId","id","templatePositions","highlightLayers","positions","Set","intersection","getTemplatesWithOverlap","updateAuraEffectsOnUse","appliedEffect","templateEffect","updateAuraFlags","updateAuraWhenMoved","dispositions","newTokenActorUuids","oldTokenActorUuids","game","modules","get","api","findContained","collections","tokenDoc","tokenId","includes","disposition","getAuraParamsWhenMoved","originUuid","removalUuids","deleteAuraEffectsWhenMoved","newUuidsToEffect","setAuraEffectsWhenMoved","hasSysConc","system","components","concentration","hasMidiConc","midiProperties","isConcentration","isReactionItem","getDeleteUuidEffects","checkCombatActivity","combat","active","turns","doc","sourceCombatDoc","createSpawn","overrides","strings","getConcEffect","spawnUuids","createSpawnTokens","updateInitiatives","updateConcEffect","params","getSpawnParams","setWarpGateSpawn","getCallbacks","spawnName","pre","loc","usePreEffectSequencer","post","spawnToken","usePostEffectSequencer","toLowerCase","getPreDeleteParams","summoning","amountSpawned","sequencer","options","getPreEffectsSequencerParams","spawnSize","circleNum","color","school","scale","document","getSpawnDetails","actorName","actors","prototypeToken","texture","src","controllingActor","spawnNames","indexOf","iconPath","amountToSpawn","getAmountToSpawn","getSpawnUpdates","overrideAmountToSpawn","general","amountToSpawnByIndex","mutations","onPreDeleteToken","config","user","theGmUser","users","isTheGM","deleteOverrides","optionOverrides","eval","useTokenDeleteSequencer","created","totalSpawnCreated","deleted","totalSpawnDeleted","delay","floor","random","newDeleted","updatedConc","setSpawnedTokensToActive","combatToken","placeables","toggleCombat","callbacks","spawnIds","spawnAt","updateCombatDocs","activeTokenIds","init","combatDocs","deleteUuidChanges","spawnFlags","initiative","sequencerPath","Sequence","animation","on","fadeIn","opacity","play","file","atLocation","originScale","spawnScale","belowTokens","waitUntilFinished","impactNum","auraOfPurity","preTargetSave","some","change","saveDetails","advantage","onUse","tokenAttacher","attachElementToToken","parent","tokenDocs","Array","from","values","eligibleTokenDocs","tokenDocuments","originX","originY","tokenDocsInRange","templateNonEffectedTokens","itemEffectName","statuses","has","getNonTemplateEffectedTokenDocs","getEligibleTokenDocuments","tokenEffectUuids","casterDisposition","effected","console","log","dfreds","effectInterface","addEffect","setTokenEffects","blight","speaker","character","scope","hitTargets","details","CUSTOM","disabled","getBlightEffectData","castLevel","Hooks","once","rolledItem","rollConfig","maxDamageString","String","parts","setBlightHook","castData","setSpawnedTokenId","spawn","spawnedTokenId","originActorSenses","originTokenSight","TOKEN_DISPLAY_MODES","HOVER","mergeObject","getWarpgateUpdates","attributes","senses","sight","originTokenUuid","setEffectsSequencer","setPostEffectsSequencer","getWarpgateCallbacks","getWarpgateOptions","clairvoyance","macroPass","spawnedTokenUuid","getTokenSpawnIds","originTokenActorUuid","fromUuidActor","userId","deleteSummonConcentrationHookId","off","setHookMacros","setPostSpawnEffects","buttonName","setAreaChoiceEffects","itemUuid","setTemplateEffects","lightParams","sanitizedLight","lightId","getEffectOriginData","_id","ineligibleEffectNames","minSpellLevel","originTemplateActiveEffect","setAreaEffectDeleteHookId","templateData","originFlag","templateSpellLevel","gridTemplatePositions","setTimeout","setAreaEffectDeleteHookOffId","setAreaEffectDeleteHookOff","setAreaEffectDeleteHook","attachTo","daylight","targets","first","duration","rounds","getEffectTokenData","setInitChoice","templateId","lastArg","efData","casterUuid","dispelAbility","dispelLevel","casterToken","effectsLTE2DispelLevel","effectsGTDispelLevel","baseLevel","getTokenEffects","effectsIdsToDelete","abilities","mod","abilityRoll","arr","effectCastLevel","rollAbilityTest","total","concat","getEffectsToDelete","deleteEffectsOnToken","selectedTemplate","inRangeEligibleTemplates","originItem","originItems","items","sortedTemplates","sort","aOrig","bOrig","localeCompare","templateSelections","itemOwnerName","menu","inputs","ui","notifications","info","getTemplateSelection","getSelectedTemplate","templateCastLevel","getTemplatesToDelete","deleteTemplate","dispelMagic","spellcasting","feyAncestry","main","giantInsect","defaultIcons","initHeader","preEffectSeqPath","getSpellIconPaths","index","img","getAoeOverlapPerc","creatureCoords","getCreatureCoords","templateCoords","getTemplateCoords","set","position","toString","add","templateIdStr","setLiveTokenDocUpdates","hordeItem","hordeItemUsesMax","multiplier","liveTokenDoc","shouldReduce","tokenSizeNum","setSequencer","traits","Object","keys","CONFIG","DND5E","actorSizes","setPostDamageUpdates","newHpDamage","newHealthPercentage","hp","hordePassive","img1","img2","img3","templateEffectName","checkEffectOrigin","effectedToken","candidateToken","insectCloudEffectNames","getEffectDuration","getIfInBsOrTsRange","bsRange","tsRange","maxBsOrTsRange","findNearby","canSee","attackingToken","ringOfSpellStoring","addSpellErr","castSpellErr","castSpellHeader","charHeader","currSpellBank","descLevel","charnamesExceptions","initChoices","levelHeader","levelLabels","spellHeader","instrumentOfTheBards","anstruthHarp","canaithMandolin","cliLyre","dossLute","fochlucanBandore","generic","macFuirmidhCittern","ollamhHarp","staffOfSwarmingInsects","allChoices","damageWeaponName","meleeChoices","spellNames","createTempItem","spell","instrument","chosenIndex","sourceMacroNames","updatedMacroNames","itemData","getTempSpellItem","createEmbeddedDocuments","spells","level","damage","getCureWoundsData","duplicate","toObject","overwrite","inlace","insertKeys","insertValues","originInstrumentUuid","spellIndex","updateDeleteItemFlags","isCharged","getInitIconPaths","spellData","liveItem","sourceItem","getTempItem","getAddSpellChoices","eligibleSpellsByChar","charChoice","charChoices","toSorted","getCharIconPaths","getAddCharChoice","levelChoice","levelChoices","getLevelChoices","getLevelIconPaths","getAddLevelChoice","spellChoice","spellChoices","spellIcons","getSpellChoices","getSpellChoice","getAddSpellChoice","getEligibleSpells","actorSpells","eligibleLevelSpells","highestSpellLevel","getHighestSpellLevel","preparation","getSpellData","pact","getEligibleLevelSpells","slotsRemaining","slotsUsed","eligibleLevels","spellLevels","getLiveActors","getNewSlotsUsed","sortedChoices","radioSelections","levelChoiceInt","dc","spelldc","ability","attackBonus","isRangedAttack","actionType","isMeleeAttack","parseInt","bonuses","rsak","attack","msak","getAttackBonus","prof","getSpellToCast","uniqueSpells","spellsArr","chosenSpell","getUpdatedDescription","desc","description","newSpells","descs","spellBankStr","substring","lastIndexOf","replace","setPreUseItemHooks","useItem","consumeResource","consumeSpellSlot","consumeUsage","slotLevel","_baseProficiency","setReactionUpdates","setResetSpellsDesc","updatedStr","updatedDesc","newSlotsUsed","flaggedItem","updatedDescription","updateRingItem","charName","spellName","notification","setRingUpdatesNotification","newSpellData","chr","getUpdateRingData","setRingUpdates","staff","amount","prep","getTempSpellItemMods","getConsumptionAmount","getDamage","weapon","data","equipped","filteredSpellNames","uses","attunement","chosenItem","getChosenItem","completeItemUse","setCommandEffectsSequencer","setItemUsesUpdate","usesUsed","wandOfFear","buttonOptions","fearItem","Item","documentClass","getFearItemData","fearWorkflow","showFullCard","createWorkflow","versatile","configureDialog","spriteOffset","local","rotate","direction","setFearEffects","commandItem","getCommandItemData","targetUuids","setCommandEffects","macros","getOverrides","isSaveFailure","hasAreaTarget","preTargetDamageApplication","hordeItemUses","hpDamage","damageItem","aoeOverlapPerc","hordeCount","getNewDamage","setHpUpdateEffects","checkAttackerVision","units","blindsight","tremorsense","getCheckAttackerVisionParams","inBsOrTsRange","defenderIsOwnEffectOrigin","attackerIsOwnEffectOrigin","checkDefenderVision","getCheckDefenderVisionParams","setTemplateAttachment","elligibleTokens","getTokenActorUuids","whenDeleted","whenEntered","whenLeft","whenMoved","getSpellsToCast","createCastWorkflow","castSpell","onNewDay","newDay","instruments","refreshInstruments","protectionFromPoison","poisonEffects","hasPoisonedName","hasPoisonedConditions","chosenEffect","acc","nameAlreadyUsed","getChoices","buttonNames","initChoice","getChosenEffect","setAddSpellNotification","getAddSpellUpdates","setAddSpellUpdates","addSpell","tempItems","ringUuid","resetSpells","deleteIndex","usedSpellLevel","usedSpell","getDeleteItemFlagData","getDeleteItemFlagUpdates","songOfRest","songEffects","dhd","originBardScale","effectOriginUuid","effectOrigin","bard","faces","getOriginBardScale","songLevel","getItemData","tokenForActor","socketlib","registerModule","register","globalThis","setAmbientLightCreate","setAmbientLightDelete","ambientLightId","ambientLight","deleteEmbeddedDocuments","setActiveEffectDelete","ownerActor","effectId","deleteEffect","setDeleteSummonConcentrationHook","preDeleteSummonConcentrationHookId","setMeasuredTemplateDelete","deletedMeasuredTemplate","setSpawnedTokensInitiative","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__"],"sourceRoot":""}